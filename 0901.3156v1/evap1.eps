%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 124 463 245 648 
%%Creator: CorelDRAW 8
%%Title: C:\Documents and Settings\Sabine\Desktop\evap1.eps
%%CreationDate: Sat Dec 20 10:00:19 2008
%%DocumentProcessColors: Cyan Magenta Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generic CMYK printer profile - None
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-97 Corel Corporation
% All rights reserved.     v8.0 r0.7
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if systemdict/CorelLexDict known{1 systemdict/CorelLexDict get exec}if}bd
/@EndSysCorelDict{systemdict/Corel30Dict known{end}if/EndCorelLexDict where
{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/SetCmyk_5/setcmykcolor ld}{/SetCmyk_5{
cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk/currentcmykcolor
ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{
/$op xd}bd}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/@trp{exch pop 5 1 roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0
4 $ink_5 sub index exch pop 5 1 roll pop pop pop pop SepsColor true eq{$ink_5 3
gt{1 sub neg SetGry}{0 0 0 4 $ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}
ifelse}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array
astore}bd}ifelse/setcustomcolor where{pop}{/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}
ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type
/booleantype eq{setoverprint}{1 eq setoverprint}ifelse dup _ eq{pop
setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse SepMode_5
0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd pop/dataaq xd{dataaq
ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index
get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}bd
}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE systemdict
/image get def/image{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}
{dup type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent
get 8 eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray
eq and{CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5
(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}
ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft
{$tllx $pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt
{$phei add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{
cvx exec}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if
$phei sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add
$llx le{/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg
0 rl 0 $phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1
roll 3 index sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop
}ifelse @rs}bd/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid
sub}{exit}ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3
copy 3 -1 roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup
$pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}
ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm
0 def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse
}bd/@pf{@gs $ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform
/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx
$tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox
@rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury
$tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o
@scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8
0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt
and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd
$wid $pwid div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx
0 eq{@tv}{@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0
ne or $ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm
setmatrix 72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch
itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch
itransform floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec
}{1 SetGry wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp
@ss}if $fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5
{wfill}{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}
bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if
$T $C $M $Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub scale $wid
$hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/@cc load false $ncl
ColorImage $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 267 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
126.74013 467.19326 243.70923 632.81480 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00013 2.00013 0.00000 @w
/$fm 0 def
126.74013 632.81480 m
126.90482 467.19326 L
243.70923 584.72787 L
S

@rax %Note: Object
127.13471 563.31609 195.62683 632.14951 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.26772 2.26772 0.00000 @w
/$fm 0 def
127.13471 563.31609 m
162.55644 598.23694 160.20482 596.72750 195.62683 632.14951 C
S

@rax %Note: Object
127.23392 467.25591 171.08504 630.88724 @E
0 J 0 j [1 1 ] 0 d 0 R 0 @G
1.00 1.00 0.00 0.00 K
0 1.00063 1.00063 0.00000 @w
/$fm 0 def
127.96894 467.25591 m
183.28904 527.80252 173.95710 565.06620 162.04847 591.19739 c
155.41795 605.74677 145.61433 618.69827 127.23392 630.88724 C
S

@rax 187.77940 516.39959 199.76315 525.66746 @E
[0.00028346 0.00000000 0.00000000 0.00028346 187.77939471 516.49991811] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CommercialScriptBT 51745.00000 z
%CHAR: 0 0 (I) @t
20948 9625 m
18827 9823 17119 10599 15825 11936 c
14523 13273 13876 14937 13876 16929 c
13876 19689 15282 22293 18094 24734 c
20905 27175 24769 29124 29667 30573 c
31504 31125 33479 31564 35609 31875 c
37731 32185 39732 32341 41620 32341 c
41784 32341 41939 32306 42077 32237 c
42207 32168 42276 32108 42276 32039 c
42276 31884 42198 31771 42051 31711 c
41896 31642 41646 31608 41293 31608 c
38093 31608 33919 25191 28779 12358 c
28253 11065 L
29865 11375 31245 12031 32392 13048 c
33539 14075 34281 15299 34617 16731 c
34773 17352 34876 18085 34945 18930 c
35014 19767 35169 20189 35402 20189 c
35557 20172 35661 20103 35721 19991 c
35782 19870 35808 19654 35808 19353 c
35808 16696 35092 14549 33660 12928 c
32229 11298 30193 10297 27546 9926 C
26062 6813 23811 4321 20784 2449 c
17757 578 14471 -354 10918 -354 c
8495 -354 6503 190 4959 1276 c
3407 2363 2630 3734 2630 5381 c
2630 6710 3079 7839 3967 8754 c
4864 9676 5959 10133 7253 10133 c
8064 10133 8702 9892 9176 9400 c
9650 8909 9883 8245 9883 7408 c
9883 6735 9702 6209 9340 5856 c
8978 5494 8331 5218 7408 5028 c
7270 4993 7098 4959 6899 4907 c
5614 4614 4976 4157 4976 3519 c
4976 2794 5511 2113 6580 1466 c
7650 828 8892 509 10306 509 c
12565 509 14618 1294 16464 2872 c
18309 4441 19801 6692 20948 9625 C
@c
21483 10513 m
24027 16377 26588 20922 29158 24165 c
31737 27408 34609 29753 37782 31202 C
35609 31021 33548 30624 31599 30029 c
29659 29426 27882 28632 26286 27640 c
23466 25873 21181 23777 19422 21362 c
17662 18947 16783 16757 16783 14808 c
16783 13514 17197 12479 18025 11729 c
18844 10970 19999 10565 21483 10513 C
@c
F
T
@rax 219.33213 614.70283 231.31587 623.97071 @E
[0.00028346 0.00000000 0.00000000 0.00028346 219.33211796 614.80315861] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CommercialScriptBT 51745.00000 z
%CHAR: 0 0 (I) @t
20948 9625 m
18827 9823 17119 10599 15825 11936 c
14523 13273 13876 14937 13876 16929 c
13876 19689 15282 22293 18094 24734 c
20905 27175 24769 29124 29667 30573 c
31504 31125 33479 31564 35609 31875 c
37731 32185 39732 32341 41620 32341 c
41784 32341 41939 32306 42077 32237 c
42207 32168 42276 32108 42276 32039 c
42276 31884 42198 31771 42051 31711 c
41896 31642 41646 31608 41293 31608 c
38093 31608 33919 25191 28779 12358 c
28253 11065 L
29865 11375 31245 12031 32392 13048 c
33539 14075 34281 15299 34617 16731 c
34773 17352 34876 18085 34945 18930 c
35014 19767 35169 20189 35402 20189 c
35557 20172 35661 20103 35721 19991 c
35782 19870 35808 19654 35808 19353 c
35808 16696 35092 14549 33660 12928 c
32229 11298 30193 10297 27546 9926 C
26062 6813 23811 4321 20784 2449 c
17757 578 14471 -354 10918 -354 c
8495 -354 6503 190 4959 1276 c
3407 2363 2630 3734 2630 5381 c
2630 6710 3079 7839 3967 8754 c
4864 9676 5959 10133 7253 10133 c
8064 10133 8702 9892 9176 9400 c
9650 8909 9883 8245 9883 7408 c
9883 6735 9702 6209 9340 5856 c
8978 5494 8331 5218 7408 5028 c
7270 4993 7098 4959 6899 4907 c
5614 4614 4976 4157 4976 3519 c
4976 2794 5511 2113 6580 1466 c
7650 828 8892 509 10306 509 c
12565 509 14618 1294 16464 2872 c
18309 4441 19801 6692 20948 9625 C
@c
21483 10513 m
24027 16377 26588 20922 29158 24165 c
31737 27408 34609 29753 37782 31202 C
35609 31021 33548 30624 31599 30029 c
29659 29426 27882 28632 26286 27640 c
23466 25873 21181 23777 19422 21362 c
17662 18947 16783 16757 16783 14808 c
16783 13514 17197 12479 18025 11729 c
18844 10970 19999 10565 21483 10513 C
@c
F
T
@rax 232.64731 620.20828 239.50290 624.03902 @E
[0.00045218 0.00000000 0.00000000 0.00028346 232.64729858 620.20826078] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 51745.00000 z
%CHAR: 0 0 (-) @t
2096 13514 m
15161 13514 L
15161 9702 L
2096 9702 L
2096 13514 L
@c
F
T
@rax 235.98312 619.69606 239.85694 626.53408 @E
[-0.00000285 0.00045217 -0.00028346 -0.00000179 239.85693611 619.69604032] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 51745.00000 z
%CHAR: 0 0 (-) @t
2096 13514 m
15161 13514 L
15161 9702 L
2096 9702 L
2096 13514 L
@c
F
T
@rax 200.96277 521.90504 207.81836 525.73578 @E
[0.00045218 0.00000000 0.00000000 0.00028346 200.96276430 521.90502028] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 51745.00000 z
%CHAR: 0 0 (-) @t
2096 13514 m
15161 13514 L
15161 9702 L
2096 9702 L
2096 13514 L
@c
F
T
@rax 156.18501 539.70576 162.81751 544.13065 @E
[0.00020044 -0.00020044 0.00020044 0.00020044 156.18500216 541.09557076] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 38808.00000 z
%CHAR: 0 0 (v) @t
837 15975 m
6312 17151 L
6700 16213 7020 15262 7258 14292 c
7601 12861 7876 11169 8095 9211 c
8196 8223 8333 6138 8507 2955 C
10089 4702 11031 5781 11329 6197 c
13003 8457 13959 9787 14210 10176 c
14631 10844 14919 11434 15084 11937 c
15225 12317 15294 12678 15294 13016 c
15294 13346 14997 13725 14411 14155 c
13826 14585 13529 15065 13529 15596 c
13533 16003 13689 16360 14013 16675 c
14338 16991 14718 17151 15157 17151 c
15687 17151 16158 16936 16561 16497 c
16968 16062 17169 15523 17169 14873 c
17169 14233 17069 13611 16867 13016 c
16538 12056 15925 10885 15029 9504 c
14132 8123 12687 6266 10688 3938 c
10437 3650 9033 2182 6481 -453 C
5781 -457 L
5475 7542 4848 12532 3888 14517 c
3572 15161 3046 15486 2310 15482 c
1999 15482 1550 15427 970 15312 C
837 15975 L
@c
F
T
@rax 156.53197 535.06063 160.84545 538.63002 @E
[0.00020044 -0.00020044 0.00020044 0.00020044 156.53196278 536.49522447] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 21560.00000 z
%CHAR: 0 0 (0) @t
778 7053 m
780 8682 1024 10085 1517 11259 c
2007 12435 2660 13312 3473 13886 c
4106 14341 4759 14572 5432 14569 c
6527 14572 7508 14013 8380 12897 c
9467 11515 10011 9640 10014 7275 c
10014 5618 9775 4210 9297 3052 c
8819 1893 8210 1054 7470 534 c
6728 10 6014 -252 5328 -252 c
3966 -252 2833 551 1926 2160 c
1161 3514 780 5145 778 7053 c
@c
2843 6792 m
2843 4825 3085 3222 3570 1979 c
3969 935 4566 409 5359 409 c
5737 412 6131 582 6538 922 c
6944 1263 7254 1832 7465 2632 c
7788 3839 7950 5542 7948 7739 c
7948 9366 7780 10722 7442 11813 c
7191 12618 6865 13192 6464 13528 c
6177 13759 5829 13878 5422 13878 c
4945 13878 4520 13662 4149 13235 c
3641 12651 3298 11734 3118 10486 c
2935 9236 2843 8006 2843 6792 c
@c
F
T
@rax 135.62277 637.57191 182.62006 647.58444 @E
[0.00028346 0.00000000 0.00000000 0.00028346 135.62276669 639.94618131] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 38808.00000 z
%CHAR: 0 0 (s) @t
12431 17871 m
12431 11959 L
11804 11959 L
11325 13816 10711 15077 9961 15750 c
9204 16416 8247 16752 7089 16752 c
6203 16752 5491 16519 4948 16047 c
4405 15581 4133 15064 4133 14495 c
4133 13790 4334 13182 4735 12677 c
5129 12160 5925 11610 7128 11028 c
9890 9683 l
12457 8434 13738 6785 13738 4735 c
13738 3156 13143 1889 11946 918 c
10756 -45 9417 -530 7943 -530 c
6875 -530 5666 -343 4301 39 c
3887 162 3544 226 3279 226 c
2988 226 2762 65 2594 -265 C
1973 -265 L
1973 5931 L
2594 5931 L
2949 4165 3629 2833 4625 1934 c
5621 1035 6740 589 7975 589 c
8848 589 9560 841 10109 1352 c
10659 1869 10931 2484 10931 3202 c
10931 4075 10627 4806 10012 5401 c
9404 5996 8182 6746 6345 7658 c
4515 8564 3318 9385 2749 10116 c
2180 10840 1895 11746 1895 12845 c
1895 14275 2387 15471 3363 16429 c
4340 17386 5608 17871 7160 17871 c
7846 17871 8674 17722 9644 17431 c
10291 17244 10717 17147 10931 17147 c
11138 17147 11293 17192 11410 17282 c
11520 17373 11655 17567 11804 17871 C
12431 17871 L
@c
F
%CHAR: 15096 0 (i) @t
20723 26946 m
21254 26946 21706 26758 22081 26389 c
22450 26014 22638 25562 22638 25031 c
22638 24501 22450 24048 22081 23666 c
21706 23291 21254 23097 20723 23097 c
20193 23097 19740 23291 19358 23666 c
18983 24048 18789 24501 18789 25031 c
18789 25562 18977 26014 19352 26389 c
19721 26758 20180 26946 20723 26946 c
@c
22295 17871 m
22295 3920 l
22295 2833 22373 2115 22534 1753 c
22689 1391 22922 1125 23233 944 c
23543 770 24112 679 24934 679 C
24934 0 L
16500 0 L
16500 679 L
17347 679 17916 763 18201 931 c
18492 1093 18725 1365 18893 1746 c
19067 2122 19151 2846 19151 3920 c
19151 10614 l
19151 12496 19093 13712 18983 14268 c
18893 14676 18750 14954 18563 15109 c
18375 15271 18117 15349 17787 15349 c
17431 15349 17004 15252 16500 15064 C
16234 15750 L
21461 17871 L
22295 17871 L
@c
F
%CHAR: 25885 0 (n) @t
32159 14191 m
34190 16642 36130 17871 37974 17871 c
38924 17871 39739 17632 40419 17160 c
41104 16687 41648 15905 42049 14818 c
42327 14061 42462 12897 42462 11332 c
42462 3920 l
42462 2827 42553 2076 42734 1688 c
42870 1371 43096 1125 43407 944 c
43711 770 44286 679 45121 679 C
45121 0 L
36531 0 L
36531 679 L
36894 679 l
37702 679 38271 809 38588 1054 c
38912 1300 39138 1662 39261 2141 c
39313 2328 39338 2924 39338 3920 c
39338 11028 l
39338 12606 39131 13751 38724 14469 c
38310 15180 37618 15536 36648 15536 c
35147 15536 33647 14715 32159 13072 C
32159 3920 l
32159 2749 32224 2024 32366 1746 c
32541 1378 32786 1106 33097 938 c
33407 770 34035 679 34979 679 C
34979 0 L
26396 0 L
26396 679 L
26778 679 l
27657 679 28259 906 28569 1352 c
28873 1805 29028 2658 29028 3920 c
29028 10368 l
29028 12451 28983 13719 28886 14171 c
28796 14631 28647 14941 28453 15103 c
28259 15264 27994 15349 27664 15349 c
27314 15349 26888 15252 26396 15064 C
26111 15750 L
31344 17871 L
32159 17871 L
32159 14191 L
@c
F
%CHAR: 45289 0 (g) @t
51143 6332 m
50082 6850 49267 7568 48698 8499 c
48128 9430 47850 10452 47850 11578 c
47850 13298 48497 14773 49791 16015 c
51084 17250 52740 17871 54765 17871 c
56420 17871 57850 17464 59066 16655 C
62740 16655 l
63283 16655 63600 16642 63690 16610 c
63775 16577 63839 16526 63878 16448 c
63956 16332 63994 16131 63994 15840 c
63994 15510 63962 15284 63897 15161 c
63859 15096 63794 15045 63697 15006 c
63606 14967 63283 14954 62740 14954 c
60489 14954 L
61194 14042 61550 12878 61550 11461 c
61550 9844 60929 8467 59693 7315 c
58451 6164 56789 5588 54706 5588 c
53846 5588 52973 5718 52074 5970 C
51518 5491 51143 5071 50949 4709 c
50748 4346 50651 4043 50651 3790 c
50651 3577 50754 3370 50961 3163 c
51175 2962 51582 2820 52184 2729 c
52540 2678 53426 2632 54842 2594 c
57442 2535 59131 2445 59900 2328 c
61071 2167 62009 1733 62714 1022 c
63412 317 63762 -556 63762 -1591 c
63762 -3021 63095 -4359 61757 -5608 c
59784 -7451 57216 -8376 54047 -8376 c
51608 -8376 49545 -7826 47863 -6727 c
46919 -6093 46447 -5440 46447 -4754 c
46447 -4450 46511 -4152 46654 -3848 c
46867 -3376 47313 -2729 47980 -1895 c
48070 -1779 48711 -1100 49914 149 C
49254 543 48795 893 48523 1203 c
48251 1514 48116 1863 48116 2257 c
48116 2697 48290 3215 48652 3810 c
49015 4405 49842 5246 51143 6332 C
@c
54441 16959 m
53510 16959 52721 16584 52093 15840 c
51459 15096 51143 13951 51143 12412 c
51143 10413 51576 8868 52436 7768 c
53089 6934 53924 6520 54933 6520 c
55897 6520 56686 6875 57300 7600 c
57921 8318 58231 9450 58231 10989 c
58231 13001 57798 14572 56925 15711 c
56278 16545 55450 16959 54441 16959 c
@c
50955 0 m
50360 -647 49914 -1242 49610 -1798 c
49306 -2354 49157 -2865 49157 -3337 c
49157 -3939 49519 -4469 50256 -4929 c
51518 -5711 53342 -6099 55728 -6099 c
58005 -6099 59680 -5698 60760 -4896 c
61841 -4094 62384 -3240 62384 -2328 c
62384 -1675 62061 -1210 61414 -931 c
60760 -653 59454 -485 57514 -433 c
54668 -362 52481 -213 50955 0 C
@c
F
%CHAR: 64693 0 (u) @t
81122 17360 m
81122 6843 l
81122 4832 81167 3603 81264 3156 c
81361 2704 81510 2393 81717 2219 c
81930 2037 82170 1953 82448 1953 c
82842 1953 83282 2057 83774 2277 C
84039 1611 L
78845 -530 L
77998 -530 L
77998 3143 L
76504 1526 75365 511 74583 97 c
73800 -323 72972 -530 72105 -530 c
71129 -530 70288 -252 69570 310 c
68858 873 68360 1598 68082 2484 c
67804 3370 67668 4618 67668 6235 c
67668 13984 l
67668 14805 67578 15374 67403 15691 c
67228 16008 66963 16248 66614 16422 c
66271 16590 65637 16668 64732 16655 C
64732 17360 L
70812 17360 L
70812 5744 l
70812 4127 71096 3066 71659 2561 c
72222 2050 72901 1798 73696 1798 c
74240 1798 74854 1973 75540 2309 c
76232 2652 77047 3305 77998 4262 C
77998 14100 l
77998 15083 77817 15750 77454 16099 c
77092 16442 76348 16629 75210 16655 C
75210 17360 L
81122 17360 L
@c
F
%CHAR: 84097 0 (l) @t
91276 26946 m
91276 3920 l
91276 2833 91361 2115 91516 1759 c
91671 1410 91917 1138 92247 957 c
92577 776 93185 679 94084 679 C
94084 0 L
85578 0 L
85578 679 L
86374 679 86917 763 87202 931 c
87493 1093 87726 1365 87887 1746 c
88049 2122 88133 2846 88133 3920 c
88133 19689 l
88133 21648 88088 22851 88004 23298 c
87913 23744 87771 24054 87577 24216 c
87376 24384 87130 24462 86826 24462 c
86497 24462 86083 24365 85578 24158 C
85255 24824 L
90429 26946 L
91276 26946 L
@c
F
%CHAR: 94886 0 (a) @t
105933 2503 m
104155 1125 103036 330 102576 116 c
101897 -201 101173 -362 100403 -362 c
99200 -362 98211 52 97434 873 c
96658 1695 96270 2775 96270 4114 c
96270 4961 96458 5692 96839 6313 c
97357 7167 98256 7975 99536 8738 c
100817 9495 102952 10413 105933 11500 C
105933 12186 l
105933 13913 105662 15103 105112 15750 c
104562 16390 103760 16713 102712 16713 c
101917 16713 101283 16500 100817 16067 c
100339 15640 100099 15148 100099 14592 c
100138 13492 l
100138 12910 99989 12464 99692 12147 c
99394 11830 99006 11675 98527 11675 c
98055 11675 97674 11836 97376 12166 c
97079 12496 96930 12942 96930 13512 c
96930 14598 97486 15594 98599 16506 c
99711 17412 101270 17871 103281 17871 c
104821 17871 106082 17612 107072 17095 c
107816 16700 108365 16086 108721 15252 c
108947 14708 109057 13602 109057 11921 c
109057 6028 l
109057 4372 109090 3357 109154 2982 c
109219 2613 109323 2361 109465 2238 c
109614 2109 109782 2044 109969 2044 c
110170 2044 110351 2089 110500 2180 c
110765 2341 111276 2807 112033 3564 C
112033 2503 L
110623 608 109271 -343 107977 -343 c
107363 -343 106871 -129 106503 304 c
106134 731 105946 1468 105933 2503 C
@c
105933 3732 m
105933 10349 L
104025 9586 102796 9049 102240 8738 c
101238 8182 100526 7600 100099 6992 c
99666 6384 99452 5724 99452 5000 c
99452 4094 99724 3337 100267 2736 c
100811 2141 101438 1837 102143 1837 c
103107 1837 104368 2471 105933 3732 C
@c
F
%CHAR: 112117 0 (r) @t
118410 17871 m
118410 13964 L
119859 16571 121353 17871 122880 17871 c
123572 17871 124147 17658 124607 17237 c
125059 16810 125286 16319 125286 15769 c
125286 15271 125124 14857 124794 14514 c
124464 14171 124076 14003 123617 14003 c
123177 14003 122679 14223 122129 14656 c
121580 15090 121172 15310 120907 15310 c
120681 15310 120435 15187 120170 14935 c
119600 14417 119012 13563 118410 12373 C
118410 4055 l
118410 3098 118527 2367 118766 1876 c
118934 1533 119225 1248 119639 1022 c
120060 796 120655 679 121437 679 C
121437 0 L
112550 0 L
112550 679 L
113436 679 114096 821 114523 1100 c
114840 1300 115060 1623 115189 2063 c
115248 2283 115280 2891 115280 3907 c
115280 10633 l
115280 12651 115241 13854 115157 14243 c
115079 14624 114924 14909 114704 15083 c
114484 15258 114206 15349 113876 15349 c
113488 15349 113048 15252 112550 15064 C
112363 15750 L
117615 17871 L
118410 17871 L
@c
F
%CHAR: 125040 0 (i) @t
130667 26946 m
131198 26946 131650 26758 132025 26389 c
132394 26014 132582 25562 132582 25031 c
132582 24501 132394 24048 132025 23666 c
131650 23291 131198 23097 130667 23097 c
130137 23097 129684 23291 129302 23666 c
128927 24048 128733 24501 128733 25031 c
128733 25562 128921 26014 129296 26389 c
129665 26758 130124 26946 130667 26946 c
@c
132239 17871 m
132239 3920 l
132239 2833 132317 2115 132478 1753 c
132633 1391 132866 1125 133177 944 c
133487 770 134056 679 134878 679 C
134878 0 L
126444 0 L
126444 679 L
127291 679 127860 763 128145 931 c
128436 1093 128669 1365 128837 1746 c
129011 2122 129095 2846 129095 3920 c
129095 10614 l
129095 12496 129037 13712 128927 14268 c
128837 14676 128694 14954 128507 15109 c
128319 15271 128061 15349 127731 15349 c
127375 15349 126948 15252 126444 15064 C
126178 15750 L
131405 17871 L
132239 17871 L
@c
F
%CHAR: 135829 0 (t) @t
142084 23058 m
142084 17360 L
146139 17360 L
146139 16034 L
142084 16034 L
142084 4773 l
142084 3648 142245 2891 142569 2503 c
142886 2109 143300 1915 143804 1915 c
144224 1915 144625 2044 145020 2303 c
145408 2561 145712 2943 145932 3447 C
146669 3447 L
146223 2212 145602 1281 144794 653 c
143985 26 143151 -285 142291 -285 c
141708 -285 141139 -123 140583 201 c
140027 524 139619 983 139354 1585 c
139089 2180 138953 3105 138953 4359 c
138953 16034 L
136211 16034 L
136211 16655 L
136903 16933 137614 17405 138339 18065 c
139063 18731 139716 19520 140279 20426 c
140570 20905 140978 21784 141495 23058 C
142084 23058 L
@c
F
%CHAR: 146618 0 (y) @t
146844 17360 m
154936 17360 L
154936 16655 L
154541 16655 l
153972 16655 153545 16532 153261 16286 c
152976 16041 152834 15737 152834 15368 c
152834 14876 153041 14191 153461 13324 c
157685 4566 L
161572 14152 l
161785 14676 161889 15187 161889 15691 c
161889 15918 161844 16086 161760 16202 c
161656 16338 161501 16448 161287 16532 c
161068 16616 160692 16655 160149 16655 C
160149 17360 L
165796 17360 L
165796 16655 L
165330 16603 164968 16506 164715 16351 c
164463 16202 164185 15918 163881 15497 c
163765 15323 163551 14838 163234 14042 c
156171 -3279 l
155486 -4961 154593 -6229 153487 -7089 c
152381 -7949 151320 -8376 150292 -8376 c
149548 -8376 148934 -8163 148455 -7729 c
147976 -7302 147737 -6811 147737 -6255 c
147737 -5724 147912 -5297 148254 -4974 c
148604 -4650 149082 -4489 149690 -4489 c
150104 -4489 150673 -4631 151391 -4909 c
151896 -5097 152213 -5194 152342 -5194 c
152717 -5194 153131 -4993 153584 -4605 c
154030 -4211 154483 -3454 154936 -2328 c
156171 679 L
149936 13777 l
149742 14165 149445 14656 149024 15232 c
148707 15678 148448 15976 148248 16125 c
147957 16325 147491 16506 146844 16655 C
146844 17360 L
@c
F
T
@rax 173.13420 561.93902 189.74750 571.92945 @E
[0.00028346 0.00000000 0.00000000 0.00028346 173.38733224 564.29119196] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_TimesNewRoman 38808.00000 z
%CHAR: 0 0 (R) @t
16125 0 m
12011 12490 L
11054 12477 10071 12567 9055 12774 C
6843 5000 l
6552 3991 6403 3137 6403 2445 c
6403 1915 6591 1494 6953 1197 c
7231 964 7988 802 9230 699 C
9055 0 L
-893 0 L
-679 699 L
252 737 886 834 1216 983 c
1733 1203 2109 1488 2348 1856 c
2755 2451 3176 3499 3622 5000 c
8111 20523 l
8415 21558 8564 22360 8564 22929 c
8564 23511 8331 24003 7852 24404 c
7380 24811 6701 25005 5815 24992 C
6048 25697 L
14424 25697 l
17224 25697 19249 25167 20484 24106 c
21720 23045 22340 21648 22340 19915 c
22340 18259 21707 16746 20439 15374 c
19165 14010 17425 13137 15219 12774 C
17716 5252 l
18324 3402 18932 2206 19540 1649 c
20141 1093 21124 776 22476 699 C
22263 0 L
16125 0 L
@c
9379 13854 m
10187 13738 10912 13680 11539 13680 c
13712 13680 15433 14281 16694 15491 c
17955 16700 18589 18194 18589 19993 c
18589 21396 18194 22470 17405 23214 c
16616 23957 15433 24333 13854 24333 c
13447 24333 12968 24281 12412 24177 C
9379 13854 L
@c
F
%CHAR: 23712 0 (\050) @t
31008 -7994 m
30361 -8298 L
28861 -5433 27780 -2898 27121 -699 c
26616 1015 26364 2749 26364 4489 c
26364 8557 27308 12205 29190 15426 c
31499 19365 35244 23207 40425 26946 C
40878 26279 L
38543 24553 36635 22612 35160 20465 c
33311 17787 31803 14553 30626 10763 c
29456 6973 28867 3525 28867 414 c
28867 -1960 29578 -4760 31008 -7994 C
@c
F
%CHAR: 36635 0 (t) @t
46719 21849 m
45237 16694 L
48213 16694 L
47889 15497 L
44933 15497 L
41674 4321 l
41324 3118 41143 2341 41143 1992 c
41143 1772 41195 1611 41298 1494 c
41395 1384 41518 1326 41654 1326 c
41971 1326 42392 1546 42909 1992 c
43213 2244 43886 3021 44933 4321 C
45561 3848 L
44397 2154 43297 957 42262 265 c
41557 -213 40839 -453 40121 -453 c
39565 -453 39112 -278 38757 65 c
38401 414 38226 860 38226 1404 c
38226 2083 38427 3124 38834 4528 c
41997 15497 L
39138 15497 L
39326 16241 L
40716 16616 41874 17185 42793 17936 c
43717 18686 44746 19993 45884 21849 C
46719 21849 L
@c
F
%CHAR: 47424 0 (\051) @t
53071 26583 m
53717 26946 L
55218 24093 56292 21564 56938 19365 c
57456 17651 57715 15918 57715 14171 c
57715 10097 56770 6449 54888 3240 c
52566 -711 48821 -4560 43653 -8298 C
43200 -7710 L
45535 -5970 47443 -4030 48918 -1895 c
50768 783 52275 4023 53452 7820 c
54623 11610 55211 15064 55211 18175 c
55211 20549 54500 23349 53071 26583 C
@c
F
T
@rax %Note: Object
127.48819 516.08863 174.82989 563.50346 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.70866 0.70866 0.00000 @w
/$fm 0 def
127.48819 563.50346 m
174.82989 516.08863 L
S

@rax %Note: Object
127.41789 629.21707 195.62769 634.04164 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 0.90 K
0 2.26772 2.26772 0.00000 @w
/$fm 0 def
127.41789 631.73197 m
128.76888 632.56592 129.71480 634.08274 133.32416 634.04164 c
138.41093 633.98381 136.45984 629.26016 142.38227 629.25987 c
148.30498 629.25959 147.32447 633.97247 152.93197 634.03370 c
158.53918 634.09493 156.65698 629.19184 162.39288 629.21707 c
168.12850 629.24258 165.38060 633.83386 171.17263 633.82876 c
176.96466 633.82337 174.08976 629.26668 180.09921 629.26668 c
186.10866 629.26668 184.41694 633.68447 190.02359 633.66265 c
194.07855 633.64649 194.72173 632.10161 195.62769 631.71269 C
S

@rax %Note: Object
195.01569 584.36362 242.64794 631.88589 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.00126 2.00126 0.00000 @w
/$fm 0 def
195.01569 631.88589 m
242.64794 584.36362 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF

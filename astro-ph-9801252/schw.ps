%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (fig4.ps)
%%CreationDate: (10/09/97) (16:18)
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 125 247 446 602
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 288.5 360 288.5 360
%AI3_TileBox: 0 0 538 781
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 O
0.95 g
0 R
0 G
0 i 0 J 0 j 2 w 4 M []0 d
%AI3_Note:
0 D
261.5653 442.0001 m
229.9444 412.8116 212.4147 334.4868 210.2648 323.1989 C
317.7451 321.9989 L
315.6739 332.8722 297.1547 412.9262 265.9838 441.7001 C
261.5653 442.0001 L
b
u
0.7 g
1 w
290.6603 402.6055 m
290.6603 517.9945 L
235.3067 517.9945 L
235.3067 402.6055 L
290.6603 402.6055 L
b
262.9838 460.3003 m
B
U
0 g
290.9656 473.8004 m
283.5472 481.3005 l
B
[3 3 ]0 d
348.8662 390.0996 m
S
263.9654 475.9005 m
S
0 O
0 g
[]0 d
290.3656 501.4007 m
B
[3 3 ]0 d
348.2662 354.6992 m
S
0 O
0 g
[]0 d
290.3656 476.2005 m
B
u
316.6843 497.8007 m
319.9645 497.8007 322.6238 498.7499 322.6238 499.9217 c
322.6238 501.0935 319.9645 502.0433 316.6843 502.0433 c
313.4035 502.0433 310.7443 501.0935 310.7443 499.9217 c
310.7443 498.7499 313.4035 497.8007 316.6843 497.8007 c
s
316.6843 499.9217 m
S
U
u
288.184 500.3267 m
286.7776 500.3267 285.6382 500.7071 285.6382 501.1757 c
285.6382 501.6443 286.7776 502.0241 288.184 502.0241 c
289.5898 502.0241 290.7293 501.6443 290.7293 501.1757 c
290.7293 500.7071 289.5898 500.3267 288.184 500.3267 c
s
288.184 501.1757 m
S
U
u
277.3839 500.5007 m
276.2121 500.5007 275.2623 500.8811 275.2623 501.3497 c
275.2623 501.8183 276.2121 502.1981 277.3839 502.1981 c
278.5551 502.1981 279.5049 501.8183 279.5049 501.3497 c
279.5049 500.8811 278.5551 500.5007 277.3839 500.5007 c
s
277.3839 501.3497 m
S
U
322.6238 499.9217 m
316.3843 491.8216 l
310.7443 499.9217 l
S
279.5049 501.3497 m
280.309 496.2497 280.0839 496.5497 v
279.4473 497.3981 275.2623 501.3497 y
S
u
297.7841 383.7779 m
300.3612 383.7779 302.451 384.7277 302.451 385.8995 c
302.451 387.0708 300.3612 388.0206 297.7841 388.0206 c
295.2065 388.0206 293.1167 387.0708 293.1167 385.8995 c
293.1167 384.7277 295.2065 383.7779 297.7841 383.7779 c
s
297.7841 385.8995 m
S
U
u
305.5092 363.2277 m
308.3208 363.2277 310.6003 364.1775 310.6003 365.3493 c
310.6003 366.5205 308.3208 367.4703 305.5092 367.4703 c
302.697 367.4703 300.4176 366.5205 300.4176 365.3493 c
300.4176 364.1775 302.697 363.2277 305.5092 363.2277 c
s
305.5092 365.3493 m
S
U
u
314.0593 335.4282 m
317.5735 335.4282 320.423 336.5676 320.423 337.9741 c
320.423 339.3799 317.5735 340.5193 314.0593 340.5193 c
310.5445 340.5193 307.695 339.3799 307.695 337.9741 c
307.695 336.5676 310.5445 335.4282 314.0593 335.4282 c
s
314.0593 337.9741 m
S
U
u
286.684 411.4766 m
289.027 411.4766 290.9267 412.0466 290.9267 412.7498 c
290.9267 413.4524 289.027 414.0224 286.684 414.0224 c
284.3404 414.0224 282.4408 413.4524 282.4408 412.7498 c
282.4408 412.0466 284.3404 411.4766 286.684 411.4766 c
s
286.684 412.7498 m
S
U
282.4408 412.7498 m
282.784 412.4498 291.0341 404.0497 y
S
u
274.6839 430.801 m
277.0269 430.801 278.9265 431.1814 278.9265 431.65 c
278.9265 432.1186 277.0269 432.4984 274.6839 432.4984 c
272.3403 432.4984 270.4407 432.1186 270.4407 431.65 c
270.4407 431.1814 272.3403 430.801 274.6839 430.801 c
s
274.6839 431.65 m
S
U
278.9265 431.65 m
280.234 423.0999 l
270.4407 431.65 l
S
u
199.0831 441.6785 m
202.5974 441.6785 205.4468 442.6283 205.4468 443.8001 c
205.4468 444.9713 202.5974 445.9212 199.0831 445.9212 c
195.5683 445.9212 192.7189 444.9713 192.7189 443.8001 c
192.7189 442.6283 195.5683 441.6785 199.0831 441.6785 c
s
199.0831 443.8001 m
S
U
u
213.4833 455.0028 m
210.554 455.0028 208.1798 455.7625 208.1798 456.7003 c
208.1798 457.6375 210.554 458.3971 213.4833 458.3971 c
216.4119 458.3971 218.7861 457.6375 218.7861 456.7003 c
218.7861 455.7625 216.4119 455.0028 213.4833 455.0028 c
s
213.4833 456.7003 m
S
U
u
229.1956 470.2022 m
226.852 470.2022 224.9524 470.7722 224.9524 471.4754 c
224.9524 472.178 226.852 472.748 229.1956 472.748 c
231.5386 472.748 233.4383 472.178 233.4383 471.4754 c
233.4383 470.7722 231.5386 470.2022 229.1956 470.2022 c
s
229.1956 471.4754 m
S
U
[3 3 ]0 d
178.6829 390.3996 m
S
263.5838 476.2005 m
S
u
[]0 d
200.2081 406.1281 m
203.7224 406.1281 206.5718 407.078 206.5718 408.2498 c
206.5718 409.421 203.7224 410.3708 200.2081 410.3708 c
196.6933 410.3708 193.8439 409.421 193.8439 408.2498 c
193.8439 407.078 196.6933 406.1281 200.2081 406.1281 c
s
200.2081 408.2498 m
S
U
u
214.0833 419.6025 m
211.154 419.6025 208.7798 420.3621 208.7798 421.2999 c
208.7798 422.2371 211.154 422.9967 214.0833 422.9967 c
217.0119 422.9967 219.3861 422.2371 219.3861 421.2999 c
219.3861 420.3621 217.0119 419.6025 214.0833 419.6025 c
s
214.0833 421.2999 m
S
U
u
229.9834 434.7268 m
227.6398 434.7268 225.7402 435.2968 225.7402 436.0001 c
225.7402 436.7027 227.6398 437.2727 229.9834 437.2727 c
232.3265 437.2727 234.2261 436.7027 234.2261 436.0001 c
234.2261 435.2968 232.3265 434.7268 229.9834 434.7268 c
s
229.9834 436.0001 m
S
U
0 O
0 g
237.1835 501.7007 m
B
237.1835 438.7001 m
244.602 446.2002 l
B
[3 3 ]0 d
179.2829 354.9992 m
S
0 O
0 g
[]0 d
237.1835 476.5005 m
B
u
249.9337 499.7507 m
251.1049 499.7507 252.0547 500.1311 252.0547 500.5997 c
252.0547 501.0683 251.1049 501.4481 249.9337 501.4481 c
248.7618 501.4481 247.812 501.0683 247.812 500.5997 c
247.812 500.1311 248.7618 499.7507 249.9337 499.7507 c
s
249.9337 500.5997 m
S
U
u
u
192.7831 497.1791 m
189.5022 497.1791 186.843 498.1289 186.843 499.3007 c
186.843 500.4719 189.5022 501.4217 192.7831 501.4217 c
196.0633 501.4217 198.7225 500.4719 198.7225 499.3007 c
198.7225 498.1289 196.0633 497.1791 192.7831 497.1791 c
s
192.7831 499.3007 m
S
U
186.843 499.3007 m
193.0831 491.2006 l
198.7225 499.3007 l
S
U
247.812 500.5997 m
247.902 495.4997 247.9836 495.6497 v
248.49 496.5809 252.0547 500.5997 y
S
u
229.765 384.0779 m
227.1874 384.0779 225.0976 385.0277 225.0976 386.1996 c
225.0976 387.3708 227.1874 388.3206 229.765 388.3206 c
232.3421 388.3206 234.4319 387.3708 234.4319 386.1996 c
234.4319 385.0277 232.3421 384.0779 229.765 384.0779 c
s
229.765 386.1996 m
S
U
u
221.0649 363.3777 m
218.2527 363.3777 215.9733 364.3275 215.9733 365.4993 c
215.9733 366.6705 218.2527 367.6204 221.0649 367.6204 c
223.8766 367.6204 226.156 366.6705 226.156 365.4993 c
226.156 364.3275 223.8766 363.3777 221.0649 363.3777 c
s
221.0649 365.4993 m
S
U
u
213.2649 335.6532 m
209.75 335.6532 206.9006 336.7926 206.9006 338.1991 c
206.9006 339.6049 209.75 340.7443 213.2649 340.7443 c
216.7791 340.7443 219.6285 339.6049 219.6285 338.1991 c
219.6285 336.7926 216.7791 335.6532 213.2649 335.6532 c
s
213.2649 338.1991 m
S
U
206.9006 338.1991 m
211.4648 329.799 l
219.2649 337.2991 l
S
215.9733 365.4993 m
218.6649 357.0993 l
225.865 364.5993 l
S
225.0976 386.1996 m
225.865 378.0995 l
234.2585 385.5995 l
S
u
239.6651 411.7766 m
237.3215 411.7766 235.4225 412.3466 235.4225 413.0498 c
235.4225 413.7524 237.3215 414.3224 239.6651 414.3224 c
242.0082 414.3224 243.9078 413.7524 243.9078 413.0498 c
243.9078 412.3466 242.0082 411.7766 239.6651 411.7766 c
s
239.6651 413.0498 m
S
U
u
252.8653 431.101 m
250.5216 431.101 248.6226 431.4814 248.6226 431.95 c
248.6226 432.4186 250.5216 432.7984 252.8653 432.7984 c
255.2083 432.7984 257.1079 432.4186 257.1079 431.95 c
257.1079 431.4814 255.2083 431.101 252.8653 431.101 c
s
252.8653 431.95 m
S
U
248.6226 431.95 m
246.5652 422.9499 l
257.1079 431.95 l
S
0 O
0.8 g
262.9838 516.1009 m
B
[2 2 ]0 d
263.5838 401.4997 m
B
u
0.95 g
264.1838 303.6309 m
293.7071 303.6309 317.6413 311.989 317.6413 322.2989 c
317.6413 332.6082 293.7071 340.9663 264.1838 340.9663 c
234.6599 340.9663 210.7256 332.6082 210.7256 322.2989 c
210.7256 311.989 234.6599 303.6309 264.1838 303.6309 c
b
264.1838 322.2989 m
B
U
[]0 d
414.7853 309.6988 m
414.7853 559.3013 l
S
0 w
263.5838 401.4997 m
283.384 395.1996 l
277.3839 399.6997 l
S
283.384 395.1996 m
275.8839 395.3496 l
S
1 w [4 4 ]0 d
316.0843 329.499 m
342.004 384.3887 414.7853 423.0999 y
S
308.8092 356.4243 m
319.0093 421.2249 403.9852 480.1005 414.7853 483.1005 c
S
301.6842 377.7995 m
303.7842 418.2999 362.5848 509.5008 414.7853 550.3012 c
S
[]0 d
316.2871 423.6999 m
S
305.6808 423.6999 m
S
0 O
0.5 g
4 w
364.3848 399.9997 m
B
1 w
370.9849 393.3996 m
379.085 399.9997 l
S
402.1012 418.5999 m
408.1853 419.1999 l
405.7012 414.0998 l
S
401.8852 480.1005 m
406.6852 478.9005 l
405.7852 474.4004 l
S
401.5852 544.9012 m
407.5852 544.6012 l
406.3852 539.2011 l
S
341.5846 473.5004 m
347.2846 475.3005 l
346.9846 469.9004 l
S
368.2848 453.7002 m
373.9849 454.0002 l
372.4849 449.2002 l
S
336.4005 364.5993 m
341.5846 366.0993 l
340.3006 360.9993 l
S
315.1843 383.7995 m
318.9344 387.2496 l
319.3003 381.3995 l
S
304.0002 400.2997 m
307.9842 403.8247 l
309.1002 398.1997 l
S
316.0003 428.5 m
320.5844 431.5 l
320.8004 426.7 l
S
333.1005 414.0998 m
337.9845 415.8999 l
337.0005 410.7998 l
S
358.9008 387.0996 m
364.3848 387.9996 l
362.2008 382.5995 l
S
u
355.9847 496.0307 m
351.5327 496.0307 347.9236 497.3603 347.9236 499.0007 c
347.9236 500.6405 351.5327 501.9701 355.9847 501.9701 c
360.4362 501.9701 364.0458 500.6405 364.0458 499.0007 c
364.0458 497.3603 360.4362 496.0307 355.9847 496.0307 c
s
355.9847 499.0007 m
S
U
347.8096 498.7007 m
356.5847 488.8006 l
364.2348 498.6257 l
S
0 w
377.5849 379.8995 m
376.3849 384.0995 l
S
378.785 345.0991 m
381.785 343.8991 l
361.9848 337.8991 l
376.3849 384.0995 l
372.6349 381.3995 l
S
379.985 340.2991 m
381.785 343.8991 l
S
350.6507 429.25 m
356.2007 427 l
S
383.801 409.2998 m
384.251 404.4997 l
368.2008 428.65 l
350.0507 429.55 l
356.5007 430.9 l
S
380.201 407.1998 m
384.251 404.4997 l
S
u
1 w
216.1833 498.4217 m
219.4635 498.4217 222.1228 499.3715 222.1228 500.5433 c
222.1228 501.7145 219.4635 502.6643 216.1833 502.6643 c
212.9025 502.6643 210.2432 501.7145 210.2432 500.5433 c
210.2432 499.3715 212.9025 498.4217 216.1833 498.4217 c
s
216.1833 500.5433 m
S
U
222.1228 500.5433 m
215.8833 492.4432 l
210.2432 500.5433 l
S
u
0 O
0.7 g
[2 2 ]0 d
262.9838 390.8202 m
277.9797 390.8202 290.1365 396.1386 290.1365 402.6997 c
290.1365 409.2602 277.9797 414.5792 262.9838 414.5792 c
247.9872 414.5792 235.8305 409.2602 235.8305 402.6997 c
235.8305 396.1386 247.9872 390.8202 262.9838 390.8202 c
b
262.9838 402.6997 m
B
U
u
1 g
[]0 d
262.9838 505.4214 m
277.9797 505.4214 290.1365 510.7398 290.1365 517.3009 c
290.1365 523.8613 277.9797 529.1804 262.9838 529.1804 c
247.9872 529.1804 235.8305 523.8613 235.8305 517.3009 c
235.8305 510.7398 247.9872 505.4214 262.9838 505.4214 c
b
262.9838 517.3009 m
B
U
[4 4 ]0 d
392.8851 370.8994 m
263.9654 501.1007 l
S
387.185 340.5991 m
263.3654 465.7004 l
S
151.3826 389.4996 m
263.5838 501.4007 l
S
[]0 d
291.0341 404.0497 m
286.384 417.9999 256.3885 455.7925 264.7838 443.2001 c
S
243.9078 413.0498 m
235.8305 402.6997 l
242.5026 423.2859 264.6644 445.6134 263.8838 445.0001 c
S
215.5833 391.8996 m
S
[4 4 ]0 d
163.3828 364.2993 m
264.1838 466.0004 l
S
0 w []0 d
293.5841 512.8008 m
292.3841 509.5008 l
305.5842 519.1009 l
S
295.6841 509.5008 m
292.3841 509.5008 l
S
1 w
305.5842 423.0249 m
312.7843 415.8249 l
316.0843 423.0999 l
S
0 w
346.0846 437.0501 m
346.3846 432.7 l
373.3849 493.9006 l
S
349.9847 435.1 m
346.3846 432.7 l
S
363.6348 488.5006 m
359.5848 489.7006 l
S
330.4845 445.7501 m
329.2845 441.1001 l
373.3849 493.9006 l
359.5848 489.7006 l
362.7348 492.2506 l
S
333.3345 443.5001 m
329.2845 441.1001 l
S
0 O
0 g
414.4853 563.0513 m
411.0353 558.5513 l
417.4853 558.5513 l
414.4853 563.0513 l
b
267.0338 538.3011 m
265.3838 535.3011 l
278.4999 545.8012 l
S
268.9838 534.7011 m
265.3838 535.3011 l
S
1 w
310.6003 365.3493 m
308.8842 356.7993 l
300.4842 364.7493 l
S
320.648 337.8991 m
316.0843 329.499 l
308.2842 336.999 l
S
302.451 385.8995 m
301.6842 377.7995 l
293.4341 385.1495 l
S
331.9845 408.6998 m
326.9594 401.4997 l
320.6018 407.7998 l
S
364.3848 399.9997 m
370.9849 393.3996 l
S
u
325.9094 407.2532 m
322.3946 407.2532 319.5451 408.203 319.5451 409.3748 c
319.5451 410.546 322.3946 411.4958 325.9094 411.4958 c
329.4237 411.4958 332.2731 410.546 332.2731 409.3748 c
332.2731 408.203 329.4237 407.2532 325.9094 407.2532 c
s
325.9094 409.3748 m
S
U
u
371.5849 398.2789 m
376.0363 398.2789 379.646 399.4183 379.646 400.8247 c
379.646 402.2305 376.0363 403.3699 371.5849 403.3699 c
367.1328 403.3699 363.5238 402.2305 363.5238 400.8247 c
363.5238 399.4183 367.1328 398.2789 371.5849 398.2789 c
s
371.5849 400.8247 m
S
U
u
351.7847 381.2021 m
348.2698 381.2021 345.4204 381.9617 345.4204 382.8995 c
345.4204 383.8367 348.2698 384.5963 351.7847 384.5963 c
355.2989 384.5963 358.1483 383.8367 358.1483 382.8995 c
358.1483 381.9617 355.2989 381.2021 351.7847 381.2021 c
s
351.7847 382.8995 m
S
U
0.5 G
2 w
345.4204 382.8995 m
351.5597 376.5995 l
358.1483 382.8995 l
S
0 G
1 w
345.1096 383.2745 m
351.7097 376.6744 l
S
351.7097 376.6744 m
358.3097 382.9745 l
S
u
286.834 480.9015 m
288.9424 480.9015 290.6525 481.2819 290.6525 481.7505 c
290.6525 482.2191 288.9424 482.5989 286.834 482.5989 c
284.725 482.5989 283.0156 482.2191 283.0156 481.7505 c
283.0156 481.2819 284.725 480.9015 286.834 480.9015 c
s
286.834 481.7505 m
S
U
u
277.7655 489.1516 m
279.1713 489.1516 280.3107 489.532 280.3107 490.0006 c
280.3107 490.4692 279.1713 490.849 277.7655 490.849 c
276.3591 490.849 275.2197 490.4692 275.2197 490.0006 c
275.2197 489.532 276.3591 489.1516 277.7655 489.1516 c
s
277.7655 490.0006 m
S
U
u
266.0654 500.3141 m
266.885 500.3141 267.5498 500.5991 267.5498 500.9507 c
267.5498 501.3017 266.885 501.5867 266.0654 501.5867 c
265.2452 501.5867 264.5804 501.3017 264.5804 500.9507 c
264.5804 500.5991 265.2452 500.3141 266.0654 500.3141 c
s
266.0654 500.9507 m
S
U
280.3107 490.0006 m
280.1589 484.7505 l
275.2197 490.0006 l
S
u
286.7656 445.0511 m
288.874 445.0511 290.5841 445.4315 290.5841 445.9002 c
290.5841 446.3688 288.874 446.7486 286.7656 446.7486 c
284.6566 446.7486 282.9472 446.3688 282.9472 445.9002 c
282.9472 445.4315 284.6566 445.0511 286.7656 445.0511 c
s
286.7656 445.9002 m
S
U
u
277.1655 453.7512 m
278.5713 453.7512 279.7107 454.1316 279.7107 454.6002 c
279.7107 455.0688 278.5713 455.4486 277.1655 455.4486 c
275.7591 455.4486 274.6197 455.0688 274.6197 454.6002 c
274.6197 454.1316 275.7591 453.7512 277.1655 453.7512 c
s
277.1655 454.6002 m
S
U
u
267.8654 462.2137 m
268.685 462.2137 269.3498 462.4987 269.3498 462.8503 c
269.3498 463.2013 268.685 463.4863 267.8654 463.4863 c
267.0452 463.4863 266.3804 463.2013 266.3804 462.8503 c
266.3804 462.4987 267.0452 462.2137 267.8654 462.2137 c
s
267.8654 462.8503 m
S
U
269.3498 462.8503 m
270.8654 458.0503 l
266.3804 462.8503 l
S
279.7107 454.6002 m
280.0839 448.7874 l
274.7211 454.3374 l
S
u
239.0585 480.3015 m
236.9495 480.3015 235.2401 480.6819 235.2401 481.1505 c
235.2401 481.6191 236.9495 481.9989 239.0585 481.9989 c
241.167 481.9989 242.877 481.6191 242.877 481.1505 c
242.877 480.6819 241.167 480.3015 239.0585 480.3015 c
s
239.0585 481.1505 m
S
U
u
249.7836 489.4516 m
248.3772 489.4516 247.2378 489.832 247.2378 490.3006 c
247.2378 490.7692 248.3772 491.149 249.7836 491.149 c
251.1894 491.149 252.3289 490.7692 252.3289 490.3006 c
252.3289 489.832 251.1894 489.4516 249.7836 489.4516 c
s
249.7836 490.3006 m
S
U
u
261.0338 500.0141 m
260.2135 500.0141 259.5487 500.2991 259.5487 500.6507 c
259.5487 501.0017 260.2135 501.2867 261.0338 501.2867 c
261.8534 501.2867 262.5182 501.0017 262.5182 500.6507 c
262.5182 500.2991 261.8534 500.0141 261.0338 500.0141 c
s
261.0338 500.6507 m
S
U
247.2378 490.3006 m
246.4836 484.3005 l
252.3289 490.3006 l
S
0 O
0 g
235.4585 473.5754 m
242.877 481.0755 l
B
u
239.2835 444.1511 m
237.1745 444.1511 235.4651 444.5315 235.4651 445.0001 c
235.4651 445.4687 237.1745 445.8486 239.2835 445.8486 c
241.3919 445.8486 243.102 445.4687 243.102 445.0001 c
243.102 444.5315 241.3919 444.1511 239.2835 444.1511 c
s
239.2835 445.0001 m
S
U
u
250.3836 454.0512 m
248.9772 454.0512 247.8378 454.4316 247.8378 454.9002 c
247.8378 455.3688 248.9772 455.7487 250.3836 455.7487 c
251.7895 455.7487 252.9289 455.3688 252.9289 454.9002 c
252.9289 454.4316 251.7895 454.0512 250.3836 454.0512 c
s
250.3836 454.9002 m
S
U
u
259.6837 462.5137 m
258.8635 462.5137 258.1987 462.7987 258.1987 463.1503 c
258.1987 463.5013 258.8635 463.7863 259.6837 463.7863 c
260.5034 463.7863 261.1682 463.5013 261.1682 463.1503 c
261.1682 462.7987 260.5034 462.5137 259.6837 462.5137 c
s
259.6837 463.1503 m
S
U
258.1987 463.1503 m
256.6837 458.3503 l
261.1682 463.1503 l
S
247.8378 454.9002 m
247.0836 448.9002 l
252.9289 454.9002 l
S
u
237.9335 500.0507 m
239.3393 500.0507 240.4787 500.4311 240.4787 500.8997 c
240.4787 501.3683 239.3393 501.7481 237.9335 501.7481 c
236.5271 501.7481 235.3877 501.3683 235.3877 500.8997 c
235.3877 500.4311 236.5271 500.0507 237.9335 500.0507 c
s
237.9335 500.8997 m
S
U
235.4651 445.0001 m
235.3835 437.2001 l
243.102 445.0001 l
S
u
323.3594 445.1777 m
326.288 445.1777 328.6622 445.9374 328.6622 446.8752 c
328.6622 447.8124 326.288 448.572 323.3594 448.572 c
320.4302 448.572 318.0559 447.8124 318.0559 446.8752 c
318.0559 445.9374 320.4302 445.1777 323.3594 445.1777 c
s
323.3594 446.8752 m
S
U
283.1212 481.4505 m
290.6213 474.2504 l
S
0 O
0 g
290.3656 438.4001 m
282.9472 445.9002 l
B
0.5 g
4 w
264.1838 441.7001 m
262.9838 546.1012 l
B
1 w
224.9956 471.3254 m
227.0206 465.1004 l
233.2835 471.2126 l
S
370.9849 393.3996 m
379.085 399.9997 l
S
208.2704 456.2875 m
212.2455 450.2502 l
218.7483 456.3625 l
S
192.8953 443.2751 m
198.7831 436.9001 l
205.2332 443.3501 l
S
193.9081 407.8748 m
199.3831 400.5997 l
206.9468 408.0998 l
S
225.7402 436.0001 m
227.8834 429.7 l
234.2261 436.0001 l
S
208.7798 421.2999 m
213.4833 414.8498 l
219.3333 420.8499 l
S
290.5792 501.3257 m
290.4341 495.6257 l
285.4882 501.3257 l
S
267.6998 500.8007 m
269.2154 496.0007 l
264.7304 500.8007 l
S
259.5487 500.3507 m
258.0337 495.5507 l
262.5182 500.3507 l
S
235.5335 500.3507 m
235.6085 494.6506 l
240.4787 500.9507 l
S
347.9596 429.025 m
342.1846 421.9749 l
335.3595 429.175 l
S
328.6622 446.8752 m
324.7844 439.6001 l
318.4843 446.2002 l
S
u
341.6662 427.2784 m
338.1513 427.2784 335.3019 428.2282 335.3019 429.4 c
335.3019 430.5712 338.1513 431.521 341.6662 431.521 c
345.1804 431.521 348.0298 430.5712 348.0298 429.4 c
348.0298 428.2282 345.1804 427.2784 341.6662 427.2784 c
s
341.6662 429.4 m
S
U
u
310.7593 421.7775 m
313.6879 421.7775 316.0621 422.5371 316.0621 423.4749 c
316.0621 424.4121 313.6879 425.1717 310.7593 425.1717 c
307.83 425.1717 305.4558 424.4121 305.4558 423.4749 c
305.4558 422.5371 307.83 421.7775 310.7593 421.7775 c
s
310.7593 423.4749 m
S
U
313.3843 456.1003 m
307.3842 457.3003 l
309.1842 451.6002 l
S
356.8847 411.6998 m
350.8847 412.8998 l
352.6847 407.1998 l
S
342.4846 390.6996 m
336.4845 391.8996 l
338.2845 386.1996 l
S
302.8842 430.3 m
296.8841 431.5 l
298.6841 425.8 l
S
392.2851 376.2994 m
386.285 377.4995 l
388.085 371.7994 l
S
365.2848 367.5994 m
359.2848 368.7994 l
361.0848 363.0993 l
S
178.3829 411.6998 m
179.5829 417.6999 l
173.8829 415.8999 l
S
179.2829 375.9994 m
180.4829 381.9995 l
174.7829 380.1995 l
S
0 w
282.634 513.1008 m
285.484 510.7758 l
263.3588 517.8259 l
S
285.484 510.7758 m
281.734 510.5508 l
S
0 To
0.6 0 0 0.6 418.3014 545.2012 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Times-Roman 14 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
12 0 Tl
0 Tc
0 Tw
(R\r) Tx 
TO
0 To
0.6 0 0 0.6 419.5014 480.4005 0 Tp
TP
0 Tr
(R\r) Tx 
TO
0 To
0.6 0 0 0.6 418.3014 419.7999 0 Tp
TP
0 Tr
(R\r) Tx 
TO
0 To
0.6 0 0 0.6 291.0341 404.0497 0 Tp
TP
0 Tr
(E\r) Tx 
TO
0 To
0.6 0 0 0.6 303.1002 377.7995 0 Tp
TP
0 Tr
(E\r) Tx 
TO
0 To
0.6 0 0 0.6 310.9003 354.3992 0 Tp
TP
0 Tr
(E\r) Tx 
TO
0 To
0.6 0 0 0.6 319.3003 327.399 0 Tp
TP
0 Tr
(E\r) Tx 
TO
0 To
0.6 0 0 0.6 424.3014 417.3999 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(1\r) Tx 
TO
0 To
0.6 0 0 0.6 325.3004 324.9989 0 Tp
TP
0 Tr
(1\r) Tx 
TO
0 To
0.6 0 0 0.6 316.9003 351.9992 0 Tp
TP
0 Tr
(2\r) Tx 
TO
0 To
0.6 0 0 0.6 425.5014 478.0005 0 Tp
TP
0 Tr
(2\r) Tx 
TO
0 To
0.6 0 0 0.6 309.1002 375.9994 0 Tp
TP
0 Tr
(3\r) Tx 
TO
0 To
0.6 0 0 0.6 424.3014 542.8011 0 Tp
TP
0 Tr
(3\r) Tx 
TO
0 To
0.6 0 0 0.6 297.1001 401.7997 0 Tp
TP
0 Tr
(4\r) Tx 
TO
0 To
0.5634 -0.2052 0.2052 0.5634 265.5998 518.6509 0 Tp
TP
0 Tr
/_Times-Roman 10 Tf
(r = 2M\r) Tx 
TO
0 To
0.6 0 0 0.6 258.5497 547.7512 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(r = 0\r) Tx 
TO
0 To
0.6 0 0 0.6 281.5 547.0012 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
(singularity\r) Tx 
TO
0 To
0.6 0 0 0.6 308.5002 525.401 0 Tp
TP
0 Tr
14 0 Tl
( event\r) Tx 
T*
(horizon\r) Tx 
TO
0 To
0.6 0 0 0.6 386.301 575.0015 0 Tp
TP
0 Tr
(   distant\r) Tx 
T*
(astronomer\r) Tx 
TO
0 To
0.6 0 0 0.6 373.3009 495.4007 0 Tp
TP
0 Tr
(light\r) Tx 
T*
(cones\r) Tx 
TO
0 To
0.6 0 0 0.6 352.9007 329.199 0 Tp
TP
0 Tr
(ingoing\r) Tx 
T*
(  light\r) Tx 
T*
(  rays\r) Tx 
TO
0 To
0.6 0 0 0.6 368.5009 439.6001 0 Tp
TP
0 Tr
(outgoing\r) Tx 
T*
(  light\r) Tx 
T*
(  rays\r) Tx 
TO
0 To
0.5846 -0.1349 0.1349 0.5846 219.6993 299.7987 0 Tp
TP
0 Tr
/_Times-Roman 17.9991 Tf
13.9991 0 Tl
(surface\r) Tx 
TO
0 To
0.6 0 0 0.6 254.0997 293.1986 0 Tp
TP
0 Tr
/_Times-Roman 17.999 Tf
13.999 0 Tl
(of the\r) Tx 
TO
0 To
0.5909 0.1042 -0.1042 0.5909 282.6 293.4986 0 Tp
TP
0 Tr
/_Times-Roman 17.9981 Tf
13.9981 0 Tl
(star\r) Tx 
TO
1 To
0.6 0 0 0.6 129.6969 600.2029 0 Tp
0 R
0 G
439.3015 264.7983 m
439.3015 600.2017 L
129.6984 600.2017 L
129.6984 264.7983 L
439.3015 264.7983 L
s
TP
0.0025 -4.5 Td
2 Tr
0 O
0 g
/_Times-Italic 7 Tf
6 0 Tl
(\r) Tx 
TO
0 To
1 0 0 1 262.1714 248.5625 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
10 0 Tl
(Figure 4\r) Tx 
TO
u
0.95 g
0 R
0 G
210.7921 322.2503 m
210.7921 311.9404 234.7265 303.5823 264.2503 303.5823 c
293.7736 303.5823 317.7079 311.9404 317.7079 322.2503 c
B
U
0.7 g
235.8305 402.6997 m
235.8305 396.1386 247.9872 390.8202 262.9838 390.8202 c
277.9797 390.8202 290.1365 396.1386 290.1365 402.6997 c
B
u
155.2602 337.6814 m
155.2602 313.6814 l
S
0 O
0 g
2 w
157.2602 334.1814 m
155.2602 339.1814 l
153.2602 334.1814 l
F
0 R
0 G
1 w
174.7602 298.4314 m
155.2602 313.6814 l
S
178.2602 318.6814 m
155.2602 313.6814 l
S
0 O
0 g
174.5102 320.0564 m
179.1352 318.8064 l
175.1352 316.1814 l
F
174.2602 300.9314 m
175.7602 297.6814 l
171.6352 298.6814 l
F
U
0 To
0 0.5 -0.5 0 151.0102 326.1814 0 Tp
TP
0 Tr
/_Times-Italic 14 Tf
12 0 Tl
(Time\r) Tx 
TO
0 To
0.5 0 0 0.5 171.0102 308.1814 0 Tp
TP
0 Tr
(Space\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

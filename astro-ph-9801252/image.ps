%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (image.ps)
%%CreationDate: (12/09/97) (11:37)
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Times-Italic
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 162 320 483 453
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Times-Italic
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
164.0701 343.9844 m
478.5701 343.9844 L
478.5701 448.4844 L
164.0701 448.4844 L
164.0701 343.9844 L
s
321.3201 396.2344 m
S
U
u
352.0701 375.4844 m
472.5701 375.4844 L
472.5701 438.9844 L
352.0701 438.9844 L
352.0701 375.4844 L
s
412.3201 407.2344 m
S
U
3 w
339.5701 438.9844 m
348.5701 375.4844 l
S
u
0 O
0 g
1 w
231.9736 389.9844 m
231.9736 387.4464 234.0316 385.3884 236.5701 385.3884 c
239.1081 385.3884 241.1661 387.4464 241.1661 389.9844 c
241.1661 392.5229 239.1081 394.5809 236.5701 394.5809 c
234.0316 394.5809 231.9736 392.5229 231.9736 389.9844 c
b
236.5701 389.9844 m
B
U
0.7 g
225.0701 389.9844 m
226.0701 408.9844 321.4961 415.9309 342.5701 416.9844 C
340.3201 432.2344 L
321.5031 431.0794 210.0701 425.4844 177.5701 390.4844 C
225.0701 389.9844 L
b
0.92 g
231.8201 381.9844 m
235.8943 380.0856 241.4117 380.4844 243.0701 380.4844 c
255.0726 380.4844 277.8201 384.9844 285.8201 385.7344 c
293.8201 386.4844 336.1326 391.8594 345.8826 392.6094 C
347.1326 383.3594 L
334.3826 381.8594 294.8201 377.7344 290.3201 377.2344 c
285.8201 376.7344 258.8201 373.2344 250.0701 372.7344 c
241.3201 372.2344 227.5701 372.9844 222.3201 373.4844 c
217.0701 373.9844 203.0701 377.9844 201.0701 378.4844 c
199.0701 378.9844 180.5701 387.2344 177.8201 389.7344 c
225.0701 388.9844 l
226.3201 385.7344 229.1382 383.2343 231.8201 381.9844 c
B
0.7 g
298.1951 388.9844 m
B
249.3826 389.0469 m
253.6951 389.7034 328.6381 401.6084 344.6011 402.9844 C
345.6951 394.9844 L
341.4716 394.4454 297.7786 388.9829 298.5076 388.9534 c
296.9761 389.0159 249.3826 389.0469 y
B
0.3 G
3 w
225.0701 389.9844 m
S
412.5701 447.9844 m
S
0 O
0.7 g
0 G
1 w
470.5701 401.1719 m
470.5076 401.8594 469.8475 402.7927 469.4451 403.0469 c
468.8513 403.4219 466.5701 404.5469 465.4451 405.0469 c
464.3839 405.5185 461.5853 406.5181 459.8201 407.2969 c
457.6951 408.2344 454.3201 409.7344 453.5701 410.1094 c
451.2652 411.2618 447.0351 413.8067 445.6951 414.7344 c
444.0701 415.8594 441.5701 417.7344 439.1951 419.2344 c
435.9686 421.2721 432.1326 423.6719 431.3826 424.1719 c
430.7325 424.6052 424.9429 427.2287 423.4451 427.7969 c
422.5388 428.1406 417.2576 429.5469 416.4451 429.6094 c
415.687 429.6677 412.9461 429.8845 411.6951 429.9219 c
409.6013 429.9844 406.2888 429.2344 405.8201 429.1094 c
404.8463 428.8497 401.3899 427.7806 400.5701 427.4219 c
399.5701 426.9844 397.9325 426.1325 396.1951 425.1719 c
393.5388 423.7031 389.9138 421.5781 388.1951 420.5469 c
386.8486 419.739 383.6013 417.5781 382.1951 416.7969 c
381.0329 416.1512 378.4451 414.7031 377.3201 414.1719 c
376.4733 413.772 372.6013 411.8594 370.8201 411.1719 c
368.9519 410.4509 365.6113 409.0541 364.3201 408.5469 c
363.4451 408.2031 360.0701 407.0156 358.6951 406.4219 c
357.7328 406.0063 356.2446 405.041 355.9763 404.7344 c
355.7576 404.4844 355.3239 403.2349 355.3826 402.7656 c
355.4451 402.2656 356.1473 400.9022 356.4138 400.5469 c
356.6013 400.2969 358.2576 399.2969 358.6326 399.1094 c
359.1576 398.8468 361.5701 398.0156 363.1951 397.4219 c
365.8335 396.4578 364.3514 396.8421 368.1951 396.0469 c
369.1013 395.8594 373.6326 395.1094 375.3201 394.7969 c
377.4418 394.404 383.3826 393.3906 386.8201 393.2969 c
393.586 393.1123 388.9451 393.0469 396.9451 392.6719 c
404.9451 392.2969 396.5701 392.7969 405.9451 392.2969 c
415.3201 391.7969 410.9451 391.7969 418.6951 391.7969 c
426.4451 391.7969 425.6951 391.5469 430.8201 391.6719 c
435.9451 391.7969 434.5701 391.5469 439.4451 391.9219 c
444.3201 392.2969 443.6951 392.1719 446.8201 392.6719 c
449.9451 393.1719 447.2861 392.5635 451.6951 393.5469 c
456.0388 394.5156 454.8014 394.2823 457.8201 394.9531 c
460.0701 395.4531 460.8826 395.7656 462.3201 396.1719 c
464.8689 396.8922 465.9364 397.4134 466.3201 397.5469 c
467.0388 397.7969 468.7263 398.4844 469.1326 398.6719 c
469.5647 398.8713 470.0701 399.1719 470.2576 399.5469 c
470.5289 400.0896 470.4992 400.11 470.5386 400.5784 c
470.5701 400.9531 470.5701 401.1719 y
b
1 g
426.0076 409.2969 m
425.6951 409.7344 423.5701 412.1094 422.5701 412.8594 c
421.6399 413.5569 419.9451 414.3594 419.0701 414.5469 c
418.18 414.7379 415.3201 415.1094 414.3201 415.1094 c
413.1951 415.1094 410.1951 414.7344 409.6951 414.6094 c
409.1361 414.4696 407.5701 413.6094 406.5701 412.8594 c
405.5701 412.1094 403.7576 410.2344 402.9451 408.9219 c
402.352 407.9639 401.1326 405.1094 400.8201 403.9844 c
400.3083 402.142 400.0701 401.6094 400.0701 400.7344 c
400.0701 399.8594 401.4451 399.4844 y
402.4451 399.3594 404.0701 399.2344 v
405.6951 399.1094 406.3201 398.9844 409.4451 398.9844 c
412.5701 398.9844 411.5701 398.7344 415.5701 398.7344 c
419.5701 398.7344 417.5701 398.7344 421.1951 398.8594 c
424.8201 398.9844 425.4451 398.8594 426.8201 399.1094 c
428.1951 399.3594 429.4451 400.3594 y
429.2576 402.4844 l
428.8531 403.8852 428.6951 404.3594 v
428.5076 404.9219 427.7826 406.5693 427.4451 407.1094 c
427.1326 407.6094 426.0076 409.2969 y
b
0 g
405.8201 399.1094 m
408.5701 398.8594 l
411.3201 398.8594 l
413.4451 398.8594 l
415.6951 398.8594 l
417.9451 398.8594 l
420.0701 398.8594 l
422.1951 398.8594 l
423.8201 398.9844 l
425.6951 399.1094 l
425.9451 400.1094 l
425.5701 402.9844 l
424.5701 405.4844 l
422.7576 408.0469 l
420.6326 410.1094 l
417.4451 411.5469 l
413.5701 412.1094 l
411.0701 411.8594 l
408.1951 410.7344 l
405.6951 408.4844 l
404.3201 405.9844 l
403.6951 403.7344 l
403.4451 401.2344 l
403.5701 399.2344 L
405.8201 399.1094 L
b
0.92 g
427.9451 391.6094 m
427.3201 389.3594 l
426.1326 387.2344 l
424.3826 385.4219 l
422.5076 383.9844 l
420.3826 382.6094 l
417.6951 381.8594 l
414.4451 381.6094 l
411.3201 381.8594 l
408.8826 382.6719 l
406.0701 384.6094 l
404.0701 386.6094 l
402.6326 389.0469 l
401.5701 391.8594 l
401.8201 392.6094 l
404.8201 392.4844 l
408.6951 392.2344 l
411.6951 392.1094 l
414.5701 391.8594 l
417.8201 391.7344 l
420.1951 391.7344 l
423.0701 391.6094 l
425.1951 391.7344 l
426.9451 391.8594 l
427.9451 391.6094 l
b
0 w [2 3 ]0 d
340.3201 432.2344 m
411.6951 429.9844 l
S
342.5701 416.9844 m
414.3201 415.1094 l
S
344.7886 402.9534 m
403.5701 399.2344 l
S
345.9136 394.9534 m
401.5701 391.8594 l
S
347.6326 383.4219 m
349.2116 383.1589 414.4451 381.6094 y
S
3 w []0 d
177.8201 389.7344 m
225.0701 389.4099 l
S
298.1326 388.6409 m
249.4451 388.6719 l
S
0 w
443.5701 428.9844 m
429.8201 417.9844 l
433.0701 417.9844 l
S
429.8201 417.9844 m
430.3201 420.7344 l
S
424.1951 388.2344 m
421.8201 388.2344 l
430.1326 383.8594 l
S
423.3201 386.2344 m
421.8201 388.2344 l
S
343.6951 378.7344 m
346.3201 379.4844 l
338.3201 370.2344 l
S
346.0701 376.7344 m
346.3201 379.4844 l
S
0 O
0 g
336.8201 382.2344 m
332.8201 383.2344 l
333.3201 380.2344 l
336.8201 382.2344 l
b
336.1951 391.6094 m
332.1951 392.6094 l
332.6951 389.6094 l
B
334.6951 402.1094 m
330.6951 403.1094 l
331.1951 400.1094 l
B
333.1951 416.6094 m
329.1951 417.6094 l
329.6951 414.6094 l
B
330.9451 432.1094 m
326.9451 433.1094 l
327.4451 430.1094 l
B
274.6951 376.6094 m
275.1951 373.6094 l
278.6951 375.6094 l
B
273.4451 385.3594 m
273.9451 382.3594 l
277.4451 384.3594 l
B
272.6951 394.1094 m
273.1951 391.1094 l
276.6951 393.1094 l
B
270.6951 410.8594 m
271.1951 407.8594 l
274.6951 409.8594 l
B
0 To
1 0 0 1 429.0701 431.4844 0 Tp
TP
0 Tr
1 w
/_Helvetica 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
12 0 Tl
0 Tc
0 Tw
(upper side\r) Tx 
TO
0 To
1 0 0 1 444.0701 422.9844 0 Tp
TP
0 Tr
(of disc\r) Tx 
TO
0 To
1 0 0 1 431.0701 379.9844 0 Tp
TP
0 Tr
(lower side\r) Tx 
T*
(    of disc\r) Tx 
TO
0 To
1 0 0 1 334.0701 360.4844 0 Tp
TP
0 Tr
(photographic plate\r) Tx 
TO
0 To
0.9925 0.1219 -0.1219 0.9925 259.0701 428.4844 0 Tp
TP
0 Tr
/_Helvetica 9.0004 Tf
11.9991 0 Tl
(primary image\r) Tx 
TO
0 To
0.9925 0.1219 -0.1219 0.9925 265.5701 362.9844 0 Tp
TP
0 Tr
(secundary image\r) Tx 
TO
0 To
1 0 0 1 244.0701 393.4844 0 Tp
TP
0 Tr
/_Helvetica 9 Tf
12 0 Tl
(black\r) Tx 
T*
( hole\r) Tx 
TO
0 To
1 0 0 1 200.0701 392.9844 0 Tp
TP
0 Tr
(disc\r) Tx 
TO
0 To
1 0 0 1 229.5701 348.9844 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
(System\r) Tx 
TO
0 To
1 0 0 1 369.0701 347.9844 0 Tp
TP
0 Tr
(Image of the system\r) Tx 
TO
0 R
0 G
0 w
271.9451 425.6094 m
267.9451 426.6094 l
268.4451 423.6094 l
B
240.9451 373.1094 m
236.0701 374.4844 l
236.8201 370.9844 l
B
240.1951 380.8594 m
235.8201 382.4844 l
236.0701 378.7344 l
B
238.0701 400.7344 m
233.0701 400.9844 l
234.5701 397.2344 l
B
236.5701 418.2344 m
231.8201 418.9844 l
232.8201 415.2344 l
B
191.0701 382.7344 m
187.5701 386.2344 l
186.0701 382.9844 l
B
192.5701 401.4844 m
187.3201 400.7344 l
188.8201 397.9844 l
B
0 To
1 0 0 1 312.2129 321.2031 0 Tp
TP
0 Tr
1 w
14 0 Tl
(Figure 22\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (fig2/3.ps)
%%CreationDate: (10/09/97) (16:16)
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 99 344 421 502
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 223.5 315 223.5 315
%AI3_TileBox: 0 0 538 781
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 O
0.9 g
0 i 0 J 0 j 2 w 4 M []0 d
%AI3_Note:
0 D
251.8648 393.5886 m
251.7665 362.5321 l
101.9859 362.5321 l
101.9859 363.5149 L
101.9859 363.8097 L
191.8881 453.8844 l
251.8648 393.736 L
251.8648 393.5886 L
f
1 w
147.7845 497.7672 m
191.8147 453.9335 l
235.8451 497.7672 l
F
u
1 g
0 R
0 G
191.8147 449.1787 m
195.4991 449.1787 198.4861 448.1834 198.4861 446.9555 c
198.4861 445.7271 195.4991 444.7318 191.8147 444.7318 c
188.13 444.7318 185.1429 445.7271 185.1429 446.9555 c
185.1429 448.1834 188.13 449.1787 191.8147 449.1787 c
b
191.8147 446.9555 m
B
U
251.7665 362.5321 m
251.7665 499.7203 L
101.9859 499.7203 L
101.9859 362.5321 L
251.7665 362.5321 L
s
176.8762 430.3462 m
S
[3 3 ]0 d
102.7721 364.8908 m
235.6485 497.7672 l
S
147.9811 497.7672 m
251.57 394.3748 l
S
141.8877 431.329 m
210.095 362.9252 l
S
0 O
1 g
[]0 d
185.5248 460.2235 m
191.8147 454.0317 l
198.203 460.3709 l
B
u
191.8147 458.8842 m
195.4991 458.8842 198.4861 459.8795 198.4861 461.108 c
198.4861 462.3358 195.4991 463.3317 191.8147 463.3317 c
188.13 463.3317 185.1429 462.3358 185.1429 461.108 c
185.1429 459.8795 188.13 458.8842 191.8147 458.8842 c
b
191.8147 461.108 m
B
U
185.5248 447.6926 m
191.8147 454.0317 l
198.2521 447.5943 l
B
u
161.7409 446.5251 m
165.4252 446.5251 168.4123 445.5298 168.4123 444.302 c
168.4123 443.0735 165.4252 442.0782 161.7409 442.0782 c
158.0561 442.0782 155.0691 443.0735 155.0691 444.302 c
155.0691 445.5298 158.0561 446.5251 161.7409 446.5251 c
b
161.7409 444.302 m
B
U
155.451 457.5698 m
161.7409 451.3782 l
168.1292 457.7172 l
B
u
161.7409 456.2306 m
165.4252 456.2306 168.4123 457.2258 168.4123 458.4543 c
168.4123 459.6823 165.4252 460.6782 161.7409 460.6782 c
158.0561 460.6782 155.0691 459.6823 155.0691 458.4543 c
155.0691 457.2258 158.0561 456.2306 161.7409 456.2306 c
b
161.7409 458.4543 m
B
U
155.451 445.0391 m
161.7409 451.3782 l
168.1784 444.9408 l
B
u
155.451 412.7166 m
159.1352 412.7166 162.1224 411.7214 162.1224 410.4929 c
162.1224 409.2644 159.1352 408.2692 155.451 408.2692 c
151.7661 408.2692 148.7791 409.2644 148.7791 410.4929 c
148.7791 411.7214 151.7661 412.7166 155.451 412.7166 c
b
155.451 410.4929 m
B
U
149.1604 423.7607 m
155.451 417.5691 l
161.8393 423.9088 l
B
u
155.451 422.4215 m
159.1352 422.4215 162.1224 423.4174 162.1224 424.6459 c
162.1224 425.8738 159.1352 426.869 155.451 426.869 c
151.7661 426.869 148.7791 425.8738 148.7791 424.6459 c
148.7791 423.4174 151.7661 422.4215 155.451 422.4215 c
b
155.451 424.6459 m
B
U
149.1604 411.23 m
155.451 417.5691 l
161.8884 411.1317 l
B
u
0 g
155.451 417.1872 m
155.2394 417.1872 155.0684 417.3581 155.0684 417.5691 c
155.0684 417.7807 155.2394 417.9517 155.451 417.9517 c
155.662 417.9517 155.833 417.7807 155.833 417.5691 c
155.833 417.3581 155.662 417.1872 155.451 417.1872 c
f
155.451 417.5691 m
F
U
u
1 g
0 R
0 G
233.2898 437.6798 m
236.9739 437.6798 239.9611 436.6846 239.9611 435.4568 c
239.9611 434.2283 236.9739 433.2324 233.2898 433.2324 c
229.605 433.2324 226.6178 434.2283 226.6178 435.4568 c
226.6178 436.6846 229.605 437.6798 233.2898 437.6798 c
b
233.2898 435.4568 m
B
U
226.9999 448.7247 m
233.2898 442.533 l
239.678 448.8721 l
B
u
233.2898 447.3854 m
236.9739 447.3854 239.9611 448.3805 239.9611 449.6092 c
239.9611 450.837 236.9739 451.8329 233.2898 451.8329 c
229.605 451.8329 226.6178 450.837 226.6178 449.6092 c
226.6178 448.3805 229.605 447.3854 233.2898 447.3854 c
b
233.2898 449.6092 m
B
U
226.9999 436.1939 m
233.2898 442.533 l
239.7272 436.0956 l
B
u
0 g
233.2898 442.1503 m
233.0788 442.1503 232.9071 442.322 232.9071 442.533 c
232.9071 442.7439 233.0788 442.915 233.2898 442.915 c
233.5008 442.915 233.6717 442.7439 233.6717 442.533 c
233.6717 442.322 233.5008 442.1503 233.2898 442.1503 c
f
233.2898 442.533 m
F
U
u
161.7409 450.683 m
162.1243 450.683 162.4355 450.9943 162.4355 451.3782 c
162.4355 451.7622 162.1243 452.0728 161.7409 452.0728 c
161.3564 452.0728 161.0457 451.7622 161.0457 451.3782 c
161.0457 450.9943 161.3564 450.683 161.7409 450.683 c
f
161.7409 451.3782 m
F
U
u
191.8147 453.3366 m
192.1987 453.3366 192.5092 453.6478 192.5092 454.0317 c
192.5092 454.4157 192.1987 454.7262 191.8147 454.7262 c
191.4308 454.7262 191.1196 454.4157 191.1196 454.0317 c
191.1196 453.6478 191.4308 453.3366 191.8147 453.3366 c
f
191.8147 454.0317 m
F
U
u
233.2898 441.8378 m
233.6731 441.8378 233.9843 442.149 233.9843 442.533 c
233.9843 442.9163 233.6731 443.2275 233.2898 443.2275 c
232.9058 443.2275 232.5946 442.9163 232.5946 442.533 c
232.5946 442.149 232.9058 441.8378 233.2898 441.8378 c
f
233.2898 442.533 m
F
U
u
155.451 416.8746 m
155.8343 416.8746 156.1455 417.1852 156.1455 417.5691 c
156.1455 417.953 155.8343 418.2643 155.451 418.2643 c
155.0664 418.2643 154.7559 417.953 154.7559 417.5691 c
154.7559 417.1852 155.0664 416.8746 155.451 416.8746 c
f
155.451 417.5691 m
F
U
u
1 g
0 R
0 G
235.8451 405.2472 m
239.5293 405.2472 242.5164 404.2521 242.5164 403.0235 c
242.5164 401.7951 239.5293 400.7998 235.8451 400.7998 c
232.1602 400.7998 229.1732 401.7951 229.1732 403.0235 c
229.1732 404.2521 232.1602 405.2472 235.8451 405.2472 c
b
235.8451 403.0235 m
B
U
229.5551 416.2915 m
235.8451 410.0998 l
242.2333 416.4388 l
B
u
235.8451 414.9521 m
239.5293 414.9521 242.5164 415.9475 242.5164 417.176 c
242.5164 418.4045 239.5293 419.3997 235.8451 419.3997 c
232.1602 419.3997 229.1732 418.4045 229.1732 417.176 c
229.1732 415.9475 232.1602 414.9521 235.8451 414.9521 c
b
235.8451 417.176 m
B
U
229.5551 403.7606 m
235.8451 410.0998 l
242.2825 403.6624 l
B
u
0 g
235.8451 409.7171 m
235.6341 409.7171 235.4624 409.8888 235.4624 410.0998 c
235.4624 410.3108 235.6341 410.4817 235.8451 410.4817 c
236.056 410.4817 236.227 410.3108 236.227 410.0998 c
236.227 409.8888 236.056 409.7171 235.8451 409.7171 c
f
235.8451 410.0998 m
F
U
u
235.8451 409.4046 m
236.2283 409.4046 236.5396 409.7159 236.5396 410.0998 c
236.5396 410.4837 236.2283 410.7949 235.8451 410.7949 c
235.4611 410.7949 235.1498 410.4837 235.1498 410.0998 c
235.1498 409.7159 235.4611 409.4046 235.8451 409.4046 c
f
235.8451 410.0998 m
F
U
u
1 g
0 R
0 G
193.7804 398.1712 m
197.4647 398.1712 200.4517 397.1753 200.4517 395.9474 c
200.4517 394.7189 197.4647 393.7236 193.7804 393.7236 c
190.0955 393.7236 187.1085 394.7189 187.1085 395.9474 c
187.1085 397.1753 190.0955 398.1712 193.7804 398.1712 c
b
193.7804 395.9474 m
B
U
187.4904 409.2153 m
193.7804 403.0235 l
200.1686 409.3627 l
B
u
193.7804 407.876 m
197.4647 407.876 200.4517 408.8713 200.4517 410.0998 c
200.4517 411.3283 197.4647 412.3235 193.7804 412.3235 c
190.0955 412.3235 187.1085 411.3283 187.1085 410.0998 c
187.1085 408.8713 190.0955 407.876 193.7804 407.876 c
b
193.7804 410.0998 m
B
U
187.4904 396.6845 m
193.7804 403.0235 l
200.2178 396.5862 l
B
u
0 g
193.7804 402.6409 m
193.5693 402.6409 193.3978 402.8126 193.3978 403.0235 c
193.3978 403.2345 193.5693 403.4055 193.7804 403.4055 c
193.9913 403.4055 194.1623 403.2345 194.1623 403.0235 c
194.1623 402.8126 193.9913 402.6409 193.7804 402.6409 c
f
193.7804 403.0235 m
F
U
u
193.7804 402.3283 m
194.1643 402.3283 194.4749 402.6396 194.4749 403.0235 c
194.4749 403.4075 194.1643 403.7181 193.7804 403.7181 c
193.3964 403.7181 193.0852 403.4075 193.0852 403.0235 c
193.0852 402.6396 193.3964 402.3283 193.7804 402.3283 c
f
193.7804 403.0235 m
F
U
0 R
0 G
105.9819 433.3607 m
119.5288 445.0883 l
119.5288 463.9581 l
S
119.7746 445.0883 m
137.7599 445.0883 l
S
0 O
0 g
117.6342 461.643 m
119.578 465.0391 l
121.4017 461.5666 l
F
135.6851 446.89 m
138.7427 445.0883 l
135.1391 443.6359 l
F
0 R
0 G
161.7409 456.2306 m
161.9375 459.4373 161.3465 467.1037 160.7582 472.8033 c
S
160.9547 441.9433 m
160.5616 438.2087 158.2029 426.2185 157.0235 422.4831 c
S
154.2711 408.3307 m
153.2883 401.058 137.3668 363.5149 136.9736 362.5321 c
S
194.7633 393.7852 m
194.5949 389.0664 192.2079 371.1806 189.8491 362.5321 c
S
194.5667 408.1342 m
195.3529 412.8516 193.6329 442.877 193.3872 444.6951 c
S
191.2251 458.8474 m
190.832 462.189 187.687 475.1621 186.7042 478.7001 c
S
232.307 447.6435 m
231.5207 451.3782 230.7981 465.4657 231.9138 474.1792 c
S
236.0416 433.6222 m
236.3672 431.7227 237.0225 428.4468 237.1227 425.727 c
237.2159 423.1966 237.0225 418.9464 236.6641 415.0138 c
S
236.6314 400.8614 m
236.8278 394.9646 232.5035 369.6082 229.3586 362.5321 c
S
0 O
0 g
2 w
230.9412 472.8273 m
231.924 475.9067 l
232.9949 472.8033 l
F
186.3111 476.4397 m
186.3111 479.5847 l
188.375 477.0294 l
F
159.5788 470.3463 m
160.5616 473.6879 l
162.3307 470.7395 l
F
1 w
107.3906 436.9643 m
105.9819 433.3607 l
109.5856 433.8303 l
F
0 R
0 G
135.1385 416.3256 m
142.6733 428.4468 l
S
129.2415 402.5662 m
131.2073 395.0314 l
S
140.3801 427.464 m
143.3285 429.4296 l
143.0009 426.1536 l
S
131.8625 396.9971 m
131.5349 394.0487 l
129.5693 396.0142 l
S
0 To
1.092 0 0 1.092 199.0414 452.2964 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Roman 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9.9993 0 Tl
0 Tc
0 Tw
(E\r) Tx 
TO
0 To
1 0 0 1 154.1714 346.0625 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
10 0 Tl
(Figure 2\r) Tx 
TO
0 R
0 G
[2 2 ]0 d
297.5749 412.575 m
297.9649 416.67 300.1099 424.08 301.4749 427.005 c
304.6148 433.7337 304.5949 434.61 306.3499 437.34 c
309.6049 442.4033 314.3305 448.4674 316.6849 450.99 c
319.4149 453.915 323.8999 457.035 327.4586 459.4725 c
331.3859 462.1623 343.9295 469.6705 351.9799 473.0249 c
356.6598 474.9749 361.9248 476.9249 366.0198 478.2899 c
S
u
[]0 d
280.61 409.26 m
280.61 390.5401 l
S
0 O
0 g
2 w
282.17 406.53 m
280.61 410.43 l
279.05 406.53 l
F
0 R
0 G
1 w
295.8199 378.6451 m
280.61 390.5401 l
S
298.5499 394.4401 m
280.61 390.5401 l
S
0 O
0 g
295.625 395.5126 m
299.2324 394.5376 l
296.1124 392.4901 l
F
295.4299 380.5951 m
296.5999 378.0601 l
293.3824 378.8401 l
F
U
u
0.9 g
0 R
0 G
390.9131 453.7235 m
393.4567 456.1321 393.9902 459.6986 392.1053 461.6888 c
390.2201 463.6794 386.6301 463.3405 384.0865 460.9318 c
381.5434 458.5228 381.0095 454.9566 382.8947 452.9661 c
384.7796 450.9755 388.3699 451.3148 390.9131 453.7235 c
b
387.4998 457.3275 m
B
U
u
1 g
352.5138 421.7537 m
355.6646 423.8908 357.526 426.6458 356.6712 427.9059 c
355.8163 429.1664 352.5684 428.4554 349.4176 426.3182 c
346.2664 424.1806 344.4053 421.4261 345.2602 420.1656 c
346.115 418.9051 349.3626 419.6161 352.5138 421.7537 c
b
350.9655 424.0359 m
B
U
348.3517 439.6995 m
346.9099 430.71 l
337.3783 432.256 l
B
u
343.9751 434.3409 m
347.1263 436.4785 348.9878 439.233 348.1329 440.4935 c
347.2776 441.754 344.0301 441.043 340.8789 438.9054 c
337.7281 436.7679 335.8666 434.0133 336.7215 432.7528 c
337.5768 431.4927 340.8243 432.2037 343.9751 434.3409 c
b
342.4272 436.6232 m
B
U
348.2749 423.495 m
S
u
0 O
0.9 g
352.5138 421.7537 m
355.6646 423.8908 357.526 426.6458 356.6712 427.9059 c
355.8163 429.1664 352.5684 428.4554 349.4176 426.3182 c
346.2664 424.1806 344.4053 421.4261 345.2602 420.1656 c
346.115 418.9051 349.3626 419.6161 352.5138 421.7537 c
b
350.9655 424.0359 m
B
U
348.3517 439.6995 m
346.9099 430.71 l
337.3783 432.256 l
B
355.7956 428.7261 m
346.9099 430.71 l
B
u
332.8987 394.9311 m
334.4907 395.8729 335.1206 397.7539 334.3051 399.1318 c
333.49 400.5096 331.538 400.8633 329.9461 399.9211 c
328.3537 398.9793 327.7242 397.0983 328.5393 395.7204 c
329.3548 394.3422 331.3064 393.9888 332.8987 394.9311 c
b
331.4222 397.4259 m
B
U
326.4696 412.1226 m
327.4099 404.58 l
320.925 408.8419 l
B
333.5684 400.1251 m
327.4099 404.58 l
328.0237 396.8444 l
B
u
401.8791 434.9068 m
403.8619 438.1574 404.9917 441.0836 404.4028 441.4428 c
403.8139 441.8024 401.729 439.4581 399.7462 436.2074 c
397.7638 432.9568 396.634 430.0306 397.2229 429.6714 c
397.8118 429.3118 399.8963 431.6561 401.8791 434.9068 c
b
400.8128 435.5573 m
B
U
398.685 444.6209 m
397.9998 437.73 l
391.7805 433.3004 l
B
403.8127 441.4935 m
397.9998 437.73 l
397.2198 430.515 l
B
u
373.9552 443.7254 m
376.5077 445.1224 377.3696 447.4141 375.8798 448.8434 c
374.39 450.2727 371.1132 450.2993 368.5607 448.9019 c
366.0081 447.5049 365.1462 445.2133 366.636 443.7839 c
368.1258 442.3546 371.4026 442.3281 373.9552 443.7254 c
b
371.2579 446.3135 m
B
U
368.0521 455.2105 m
366.9948 450.405 l
360.4397 450.8745 l
B
373.6619 449.8274 m
366.9948 450.405 l
365.8248 445.707 l
B
u
333.7431 454.3958 m
329.3287 454.5401 325.7941 456.0147 325.8491 457.689 c
325.9037 459.3636 329.5268 460.6042 333.9412 460.4599 c
338.3556 460.3156 341.8902 458.841 341.8356 457.1668 c
341.7806 455.4921 338.1575 454.2515 333.7431 454.3958 c
b
333.8421 457.4281 m
B
U
327.748 467.9678 m
334.0399 463.47 l
340.8064 467.5411 l
B
327.468 459.3921 m
334.0399 463.47 l
340.526 458.9654 l
B
u
377.8637 389.3837 m
380.9658 391.423 382.7984 394.0516 381.9568 395.2544 c
381.1148 396.4571 377.9175 395.7785 374.8155 393.7388 c
371.7134 391.6995 369.8808 389.0709 370.7224 387.8682 c
371.5644 386.6658 374.7617 387.344 377.8637 389.3837 c
b
376.3396 391.5615 m
B
U
373.7664 406.5074 m
372.3468 397.9298 l
362.963 399.4048 l
B
381.2786 395.7563 m
372.3468 397.9298 l
370.5536 389.1263 l
B
u
407.3317 456.5159 m
409.4346 459.3172 409.4611 462.8487 407.3902 464.4028 c
405.3197 465.957 401.936 464.9461 399.8332 462.1447 c
397.7303 459.3434 397.7042 455.8119 399.7747 454.2578 c
401.8456 452.7032 405.2288 453.7145 407.3317 456.5159 c
b
403.5826 459.3301 m
B
U
u
311.7268 433.1077 m
308.4965 432.8406 305.6752 433.6923 305.4256 435.0101 c
305.1756 436.3279 307.5921 437.6126 310.8224 437.8797 c
314.0528 438.1465 316.874 437.2947 317.124 435.9769 c
317.3736 434.6591 314.9572 433.3745 311.7268 433.1077 c
b
311.2748 435.4937 m
B
U
303.2834 447.5135 m
309.6649 442.215 l
314.5333 448.4433 l
B
305.458 436.0409 m
309.6649 442.215 l
316.7079 436.9707 l
B
u
395.9488 413.9045 m
394.576 411.1788 392.7176 409.5186 391.798 410.1956 c
390.8784 410.8727 391.2458 413.6311 392.6182 416.3565 c
393.991 419.0818 395.8493 420.7424 396.7689 420.0653 c
397.6886 419.3883 397.3212 416.6298 395.9488 413.9045 c
b
394.2835 415.1303 m
B
U
383.1802 416.8003 m
389.4331 418.3189 l
387.96 426.2917 l
B
391.1869 410.9051 m
389.4331 418.3189 l
395.9523 420.18 l
B
2 w
377.8637 389.3837 m
384.1037 382.7537 389.4198 379.6201 394.4898 376.5001 c
S
1 w
418.2798 362.0701 m
418.2798 500.1299 L
270.08 500.1299 L
270.08 362.0701 L
418.2798 362.0701 L
s
343.0099 431.49 m
S
0 O
0 g
2 w
333.6499 486.0899 m
330.9199 490.5749 l
328.7749 485.8949 l
F
0 R
0 G
1 w [2 2 ]0 d
362.5098 479.0699 m
362.7536 479.0212 367.1898 478.8749 y
364.4598 475.1699 l
B
u
1 g
[]0 d
309.2328 446.2675 m
306.0024 446.0003 303.1812 446.8521 302.9312 448.1699 c
302.6816 449.4877 305.098 450.7723 308.3284 451.0395 c
311.5588 451.3063 314.38 450.4545 314.6296 449.1367 c
314.8796 447.8189 312.4632 446.5342 309.2328 446.2675 c
b
308.7804 448.6535 m
B
U
u
324.7559 408.6926 m
326.3483 409.6348 326.9778 411.5154 326.1627 412.8937 c
325.3472 414.2715 323.3956 414.6249 321.8033 413.683 c
320.2113 412.7408 319.5814 410.8602 320.3969 409.4819 c
321.2124 408.1041 323.164 407.7507 324.7559 408.6926 c
b
323.2798 411.1878 m
B
U
u
343.9751 434.3409 m
347.1263 436.4785 348.9878 439.233 348.1329 440.4935 c
347.2776 441.754 344.0301 441.043 340.8789 438.9054 c
337.7281 436.7679 335.8666 434.0133 336.7215 432.7528 c
337.5768 431.4927 340.8243 432.2037 343.9751 434.3409 c
b
342.4272 436.6232 m
B
U
2 w
343.2049 434.025 m
337.1599 442.215 334.8199 456.645 335.4049 453.915 c
S
u
0 O
1 g
1 w
369.4577 401.3945 m
372.5597 403.4338 374.3923 406.0624 373.5507 407.2652 c
372.7091 408.468 369.5119 407.7893 366.4094 405.7496 c
363.3074 403.7103 361.4748 401.0818 362.3168 399.879 c
363.1584 398.6766 366.3556 399.3548 369.4577 401.3945 c
b
367.9336 403.5723 m
B
U
2 w
369.4577 401.3945 m
364.0698 408.09 350.0299 425.25 352.9549 420.96 c
S
u
0 O
1 g
1 w
385.7062 460.0723 m
388.2498 462.4809 388.7833 466.0471 386.8984 468.0376 c
385.0132 470.0282 381.4232 469.6893 378.8797 467.2806 c
376.3365 464.8716 375.8026 461.3054 377.6878 459.3149 c
379.5727 457.3243 383.163 457.6636 385.7062 460.0723 c
b
382.2929 463.6763 m
B
U
u
395.9975 438.494 m
397.9803 441.7446 399.1101 444.6712 398.5212 445.0304 c
397.9319 445.3896 395.8474 443.0457 393.8646 439.795 c
391.8819 436.5444 390.752 433.6178 391.3409 433.2586 c
391.9298 432.8995 394.0148 435.2437 395.9975 438.494 c
b
394.9309 439.1445 m
B
U
u
365.4286 451.9076 m
367.9811 453.3046 368.843 455.5962 367.3532 457.0256 c
365.8638 458.4553 362.5867 458.4815 360.0341 457.0845 c
357.4816 455.6871 356.6197 453.3959 358.1095 451.9661 c
359.5993 450.5368 362.876 450.5103 365.4286 451.9076 c
b
362.7313 454.4961 m
B
U
u
334.1381 466.4796 m
329.7238 466.6239 326.1892 468.0985 326.2438 469.7727 c
326.2988 471.4474 329.9219 472.688 334.3363 472.5437 c
338.7507 472.3994 342.2852 470.9248 342.2303 469.2505 c
342.1757 467.5759 338.5526 466.3353 334.1381 466.4796 c
b
334.2372 469.5118 m
B
U
u
403.5826 459.3301 m
405.6855 462.1318 405.7116 465.6629 403.6411 467.2171 c
401.5702 468.7716 398.187 467.7603 396.0841 464.959 c
393.9812 462.1576 393.9547 458.6266 396.0256 457.072 c
398.0961 455.5179 401.4797 456.5287 403.5826 459.3301 c
b
399.8332 462.1447 m
B
U
u
386.7643 420.6667 m
385.3919 417.941 383.5335 416.2808 382.6139 416.9578 c
381.6943 417.6349 382.0613 420.3934 383.4341 423.1186 c
384.8065 425.844 386.6648 427.5046 387.5845 426.8276 c
388.5041 426.1505 388.1371 423.3921 386.7643 420.6667 c
b
385.099 421.8925 m
B
U
2 w
333.6499 466.5899 m
332.226 477.9779 331.3099 481.7999 330.9199 489.5999 c
S
u
0 O
0 g
1 w
346.9099 429.6757 m
347.4808 429.6757 347.9437 430.1386 347.9437 430.71 c
347.9437 431.281 347.4808 431.7439 346.9099 431.7439 c
346.3385 431.7439 345.8756 431.281 345.8756 430.71 c
345.8756 430.1386 346.3385 429.6757 346.9099 429.6757 c
f
346.9099 430.71 m
F
U
u
382.9848 461.2657 m
383.5558 461.2657 384.0187 461.7286 384.0187 462.3 c
384.0187 462.8709 383.5558 463.3338 382.9848 463.3338 c
382.4134 463.3338 381.9505 462.8709 381.9505 462.3 c
381.9505 461.7286 382.4134 461.2657 382.9848 461.2657 c
f
382.9848 462.3 m
F
U
u
401.8998 459.3157 m
402.4707 459.3157 402.9337 459.7786 402.9337 460.35 c
402.9337 460.9209 402.4707 461.3838 401.8998 461.3838 c
401.3284 461.3838 400.8655 460.9209 400.8655 460.35 c
400.8655 459.7786 401.3284 459.3157 401.8998 459.3157 c
f
401.8998 460.35 m
F
U
0.9 g
0 R
0 G
355.7956 428.7261 m
346.9099 430.71 l
345.3499 421.935 l
B
0 To
0 0.5 -0.5 0 277.25 395.5 0 Tp
TP
0 Tr
0 g
/_Times-Italic 14 Tf
12 0 Tl
(Time\r) Tx 
TO
0 To
0.5 0 0 0.5 292.75 384.5 0 Tp
TP
0 Tr
(Space\r) Tx 
TO
0 To
0.5 0 0 0.5 319.75 492 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
(Particle\r) Tx 
TO
0 To
0.5 0 0 0.5 368.75 478 0 Tp
TP
0 Tr
16 0 Tl
( Light ray\r) Tx 
TO
u
334.0399 462.229 m
334.7251 462.229 335.2808 462.7843 335.2808 463.47 c
335.2808 464.1552 334.7251 464.7109 334.0399 464.7109 c
333.3543 464.7109 332.7989 464.1552 332.7989 463.47 c
332.7989 462.7843 333.3543 462.229 334.0399 462.229 c
f
334.0399 463.47 m
F
U
u
366.9948 449.164 m
367.68 449.164 368.2358 449.7193 368.2358 450.405 c
368.2358 451.0902 367.68 451.6459 366.9948 451.6459 c
366.3092 451.6459 365.7539 451.0902 365.7539 450.405 c
365.7539 449.7193 366.3092 449.164 366.9948 449.164 c
f
366.9948 450.405 m
F
U
u
346.9099 429.469 m
347.5951 429.469 348.1508 430.0244 348.1508 430.71 c
348.1508 431.3952 347.5951 431.951 346.9099 431.951 c
346.2242 431.951 345.6689 431.3952 345.6689 430.71 c
345.6689 430.0244 346.2242 429.469 346.9099 429.469 c
f
346.9099 430.71 m
F
U
u
327.4099 403.3391 m
328.0951 403.3391 328.6509 403.8944 328.6509 404.58 c
328.6509 405.2653 328.0951 405.821 327.4099 405.821 c
326.7243 405.821 326.1689 405.2653 326.1689 404.58 c
326.1689 403.8944 326.7243 403.3391 327.4099 403.3391 c
f
327.4099 404.58 m
F
U
u
372.3468 396.6888 m
373.032 396.6888 373.5878 397.2441 373.5878 397.9298 c
373.5878 398.615 373.032 399.1707 372.3468 399.1707 c
371.6612 399.1707 371.1058 398.615 371.1058 397.9298 c
371.1058 397.2441 371.6612 396.6888 372.3468 396.6888 c
f
372.3468 397.9298 m
F
U
u
389.4331 417.078 m
390.1183 417.078 390.674 417.6333 390.674 418.3189 c
390.674 419.0042 390.1183 419.5599 389.4331 419.5599 c
388.7474 419.5599 388.1921 419.0042 388.1921 418.3189 c
388.1921 417.6333 388.7474 417.078 389.4331 417.078 c
f
389.4331 418.3189 m
F
U
u
397.9998 436.489 m
398.685 436.489 399.2407 437.0444 399.2407 437.73 c
399.2407 438.4152 398.685 438.971 397.9998 438.971 c
397.3142 438.971 396.7588 438.4152 396.7588 437.73 c
396.7588 437.0444 397.3142 436.489 397.9998 436.489 c
f
397.9998 437.73 m
F
U
u
382.9848 461.059 m
383.67 461.059 384.2258 461.6143 384.2258 462.3 c
384.2258 462.9852 383.67 463.5409 382.9848 463.5409 c
382.2992 463.5409 381.7438 462.9852 381.7438 462.3 c
381.7438 461.6143 382.2992 461.059 382.9848 461.059 c
f
382.9848 462.3 m
F
U
u
401.8998 459.109 m
402.585 459.109 403.1407 459.6643 403.1407 460.35 c
403.1407 461.0352 402.585 461.5909 401.8998 461.5909 c
401.2142 461.5909 400.6588 461.0352 400.6588 460.35 c
400.6588 459.6643 401.2142 459.109 401.8998 459.109 c
f
401.8998 460.35 m
F
U
u
309.6649 440.974 m
310.3501 440.974 310.9059 441.5294 310.9059 442.215 c
310.9059 442.9002 310.3501 443.456 309.6649 443.456 c
308.9793 443.456 308.4239 442.9002 308.4239 442.215 c
308.4239 441.5294 308.9793 440.974 309.6649 440.974 c
f
309.6649 442.215 m
F
U
0 To
1 0 0 1 323.1714 347.0625 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
10 0 Tl
(Figure 3\r) Tx 
TO
0 To
0.5 0 0 0.5 110.256 413.5469 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
16 0 Tl
( Light \r) Tx 
T*
(  rays\r) Tx 
TO
0 To
0.5 0 0 0.5 223.2583 478.0469 0 Tp
TP
0 Tr
12 0 Tl
(Particle\r) Tx 
TO
0 To
0.5 0 0 0.5 136.2583 475.5469 0 Tp
TP
0 Tr
(Particle\r) Tx 
TO
0 To
1 0 0 1 189 489.5 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
13.9999 0 Tl
(Future \r) Tx 
T*
( of E\r) Tx 
TO
0 To
1 0 0 1 155.6714 384.5625 0 Tp
TP
0 Tr
(Past\r) Tx 
T*
( of E\r) Tx 
TO
0 To
0.5 0 0 0.5 116.1431 435.2031 0 Tp
TP
0 Tr
/_Times-Italic 14 Tf
12 0 Tl
(Space\r) Tx 
TO
0 To
0 0.5 -0.5 0 115.2969 449.5017 0 Tp
TP
0 Tr
(Time\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

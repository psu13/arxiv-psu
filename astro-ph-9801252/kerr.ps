%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (kerr.ps)
%%CreationDate: (12/09/97) (10:41)
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-BoldOblique
%%+ Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 186 207 459 570
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-BoldOblique
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
u
0 O
0.95 g
0 R
0 G
0 i 0 J 0 j 0 w 4 M [1 2 ]0 d
%AI3_Note:
0 D
345.2618 260.4295 m
316.8034 288.8879 l
288.3457 260.4295 l
296.5035 256.9295 L
294.4035 247.1296 L
304.3246 244.45 L
311.3246 237.45 L
320.3034 252.7296 l
330.8034 247.1296 l
330.1034 257.6295 l
338.5033 253.4296 l
345.2618 260.4295 l
b
U
u
288.5872 546.4868 m
317.0456 518.0284 l
345.5033 546.4868 l
337.3455 549.9868 L
339.4455 559.7867 L
329.5245 562.4656 L
322.5245 569.4656 L
313.5456 554.1867 l
303.0457 559.7867 l
303.7457 549.2868 l
295.3457 553.4868 l
288.5872 546.4868 l
b
U
u
[]0 d
345.5033 489.087 m
317.0456 517.5447 L
288.5872 489.087 L
317.0456 460.6287 L
345.5033 489.087 L
b
317.0456 489.087 m
B
U
u
345.8533 431.7951 m
317.3956 460.2535 L
288.9372 431.7951 L
317.3956 403.3374 L
345.8533 431.7951 L
b
317.3956 431.7951 m
B
U
u
345.5033 374.6375 m
317.0456 403.0952 L
288.5872 374.6375 L
317.0456 346.1791 L
345.5033 374.6375 L
b
317.0456 374.6375 m
B
U
u
345.1533 317.5878 m
316.6956 346.0455 L
288.2372 317.5878 L
316.6956 289.1294 L
345.1533 317.5878 L
b
316.6956 317.5878 m
B
U
u
317.1534 460.3872 m
288.6958 488.8448 L
260.2374 460.3872 L
288.6958 431.9288 L
317.1534 460.3872 L
s
288.6958 460.3872 m
S
U
u
374.3782 460.5622 m
345.9205 489.0198 L
317.4621 460.5622 L
345.9205 432.1038 L
374.3782 460.5622 L
s
345.9205 460.5622 m
S
U
u
316.8034 346.2877 m
288.3457 374.7453 L
259.8874 346.2877 L
288.3457 317.8293 L
316.8034 346.2877 L
s
288.3457 346.2877 m
S
U
u
373.8532 345.9376 m
345.3955 374.3953 L
316.9371 345.9376 L
345.3955 317.4793 L
373.8532 345.9376 L
s
345.3955 345.9376 m
S
U
u
u
0 O
0.7 g
317.1534 403.3374 m
288.6958 431.7951 L
260.2374 403.3374 L
288.6958 374.879 L
317.1534 403.3374 L
b
288.6958 403.3374 m
B
U
u
0.3 g
288.6958 431.7951 m
317.1534 403.3374 l
288.6958 374.879 l
B
288.2106 432.0373 m
288.2106 375.1205 l
B
U
3 w [2 3 ]0 d
288.5606 431.4451 m
288.5606 374.529 l
S
U
u
u
0 O
0.7 g
0 w []0 d
316.7201 288.8879 m
345.1785 260.4295 L
373.6369 288.8879 L
345.1785 317.3456 L
316.7201 288.8879 L
b
345.1785 288.8879 m
B
U
u
0.3 g
345.1785 260.4295 m
316.7201 288.8879 l
345.1785 317.3456 l
B
345.6636 260.188 m
345.6636 317.1041 l
B
U
3 w [2 3 ]0 d
345.3136 260.7795 m
345.3136 317.6956 l
S
U
u
u
0 O
0.7 g
0 w []0 d
317.2871 402.9874 m
345.7455 374.529 L
374.2032 402.9874 L
345.7455 431.4451 L
317.2871 402.9874 L
b
345.7455 402.9874 m
B
U
u
0.3 g
345.7455 374.529 m
317.2871 402.9874 l
345.7455 431.4451 l
B
346.2299 374.2875 m
346.2299 431.2036 l
B
U
3 w [2 3 ]0 d
345.8799 374.879 m
345.8799 431.7951 l
S
U
u
u
0 O
0.7 g
0 w []0 d
316.9371 517.7869 m
345.3955 489.3285 L
373.8532 517.7869 L
345.3955 546.2446 L
316.9371 517.7869 L
b
345.3955 517.7869 m
B
U
u
0.3 g
345.3955 489.3285 m
316.9371 517.7869 l
345.3955 546.2446 l
B
345.8799 489.087 m
345.8799 546.0031 l
B
U
3 w [2 3 ]0 d
345.5299 489.6785 m
345.5299 546.5946 l
S
U
u
u
0 O
0.7 g
0 w []0 d
317.5034 517.7869 m
289.0457 546.2446 L
260.5874 517.7869 L
289.0457 489.3285 L
317.5034 517.7869 L
b
289.0457 517.7869 m
B
U
u
0.3 g
289.0457 546.2446 m
317.5034 517.7869 l
289.0457 489.3285 l
B
288.5606 546.4868 m
288.5606 489.57 l
B
U
3 w [2 3 ]0 d
288.9106 545.8946 m
288.9106 488.9785 l
S
U
u
u
0 O
0.7 g
0 w []0 d
316.8034 288.8879 m
288.3457 317.3456 L
259.8874 288.8879 L
288.3457 260.4295 L
316.8034 288.8879 L
b
288.3457 288.8879 m
B
U
u
0.3 g
288.3457 317.3456 m
316.8034 288.8879 l
288.3457 260.4295 l
B
287.8607 317.5878 m
287.8607 260.671 l
B
U
3 w [2 3 ]0 d
288.2106 316.9956 m
288.2106 260.0795 l
S
U
1 w []0 d
284.1458 327.3877 m
288.1708 332.9877 290.4954 336.8153 291.8457 339.9877 c
293.5957 344.1002 294.2082 345.3252 295.4332 349.6126 c
296.4517 353.1777 296.9207 355.3001 297.4457 358.7126 c
297.8895 361.5987 297.7082 365.9751 297.4457 369.3876 c
297.1286 373.5021 296.3957 376.2125 295.3457 379.8875 c
294.5393 382.7078 293.6062 385.6877 291.1457 389.6875 c
289.7457 391.9625 287.1208 395.1124 284.8458 397.3874 c
280.2818 401.9507 281.3458 400.8874 279.2458 402.9874 c
S
284.1458 327.3877 m
289.7457 334.3877 288.0377 332.2527 289.7457 334.3877 c
291.1457 336.1377 293.2457 340.3377 295.3457 344.7127 c
297.1755 348.5248 297.0957 348.7376 298.6707 353.4626 c
299.811 356.8849 301.491 362.9077 302.3457 366.5876 c
303.4832 371.4875 304.1923 377.3563 304.4457 379.8875 c
304.7082 382.5125 304.4758 389.2318 304.1832 394.5 c
303.9207 399.2249 304.1797 396.0252 303.0457 406.4874 c
302.2582 413.7499 301.8235 414.5836 300.5957 420.8373 c
299.6332 425.7373 298.173 430.8704 296.9207 434.8373 c
295.8707 438.1623 292.8957 444.8122 290.4457 449.1872 c
S
284.1458 327.3877 m
287.4708 330.7127 288.8532 332.6167 293.2457 337.8877 c
297.6207 343.1377 299.2727 345.8369 302.3457 349.7876 c
304.7957 352.9376 308.1963 357.5422 309.6957 360.1126 c
310.9207 362.2126 312.8456 366.9376 314.4206 371.3125 c
315.6204 374.6459 316.6956 378.6625 317.7456 383.2125 c
318.4428 386.2337 319.6405 389.7316 321.2456 396.6874 c
322.2956 401.2374 324.0456 409.2874 y
325.4974 415.9262 325.9216 417.2702 326.8456 421.8873 c
327.3706 424.5123 328.107 428.8782 328.7706 431.8623 c
329.4706 435.0123 330.5206 439.5623 332.4456 445.6872 c
333.2765 448.3311 335.5955 455.8372 337.3455 458.9872 c
340.8455 465.2871 339.4455 462.8371 340.8455 465.2871 c
S
0 O
0 g
289.7457 445.3372 m
289.5708 450.5872 l
293.7707 448.1372 l
F
338.2205 464.7621 m
342.4205 467.9121 l
342.2455 462.6622 l
F
278.7208 400.3624 m
277.4958 404.9124 l
282.2208 403.1624 l
F
0 R
0 G
215.0922 301.1873 m
215.0922 252.1875 l
264.092 252.1875 l
S
0 O
0 g
210.1922 297.6873 m
215.0922 305.7373 l
219.2922 297.6873 l
F
259.892 256.3875 m
266.5419 252.1875 l
260.592 247.6375 l
F
248.7959 358.8876 m
277.6708 350.8376 l
F
0 R
0 G
0 w
245.9959 422.5873 m
277.6708 412.0874 l
S
247.3959 477.8871 m
277.6708 466.3371 l
S
248.7959 536.6868 m
277.6708 523.3869 l
S
360.0954 525.4869 m
385.9953 533.8868 l
S
357.2955 465.2871 m
386.6953 472.9871 l
S
359.3954 409.9874 m
387.3953 416.2873 l
S
357.9954 351.8876 m
388.0953 360.2876 l
S
360.7954 293.7879 m
390.1953 303.5878 l
S
0 O
0 g
1 w
275.0458 348.7376 m
280.6458 350.1376 l
276.7958 353.6376 l
F
273.9958 410.6874 m
279.2458 411.5624 l
276.0958 415.2373 l
F
274.6958 464.5871 m
280.6458 464.9371 l
276.7958 469.4871 l
F
274.5208 522.5119 m
279.9458 522.3369 l
277.1458 526.7119 l
F
361.8454 527.9369 m
357.6454 524.4369 l
362.5454 524.0869 l
F
358.6954 467.7371 m
354.4955 464.2371 l
359.3954 463.8871 l
F
360.7954 412.4374 m
356.5955 408.9374 l
361.4954 408.5874 l
F
360.0954 354.6876 m
355.8955 351.1876 l
360.7954 350.8376 l
F
362.5454 296.5879 m
358.3454 293.0879 l
363.2454 292.7379 l
F
0 To
0.7 0 0 0.7 278.1958 446.3872 0 Tp
TP
0 Tr
/_Helvetica-BoldOblique 18 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
12 0 Tl
0 Tc
0 Tw
(B\r) Tx 
TO
0 To
0.7 0 0 0.7 352.0455 542.6368 0 Tp
TP
0 Tr
(\r) Tx 
TO
0 To
0.7 0 0 0.7 339.0955 453.3872 0 Tp
TP
0 Tr
(C\r) Tx 
TO
0 To
0.7 0 0 0.7 268.0458 397.0374 0 Tp
TP
0 Tr
(A\r) Tx 
TO
0 To
0.7 0 0 0.7 289.7457 402.9874 0 Tp
TP
2 Tr
1 g
0 R
0 G
0 w
/_Times-Roman 18 Tf
(S\r) Tx 
TO
0 To
0.7 0 0 0.7 336.9955 401.9374 0 Tp
TP
2 Tr
(S\r) Tx 
TO
0 To
0.7 0 0 0.7 291.1457 516.3869 0 Tp
TP
2 Tr
(S\r) Tx 
TO
0 To
0.7 0 0 0.7 336.2955 516.0369 0 Tp
TP
2 Tr
(S\r) Tx 
TO
0 To
0.7 0 0 0.7 290.7957 286.7879 0 Tp
TP
2 Tr
(S\r) Tx 
TO
0 To
0.7 0 0 0.7 335.9455 285.3879 0 Tp
TP
2 Tr
(S\r) Tx 
TO
0 To
1 0 0 1 199.4421 425.9874 0 Tp
TP
0 Tr
0 g
1 w
/_Helvetica 10 Tf
16 0 Tl
(antigravity\r) Tx 
T*
(  Universe\r) Tx 
TO
0 To
1 0 0 1 397.4421 415.9874 0 Tp
TP
0 Tr
(antigravity \r) Tx 
T*
(  Universe\r) Tx 
TO
0 To
1 0 0 1 390.4421 536.9874 0 Tp
TP
0 Tr
14 0 Tl
(antigravity\r) Tx 
T*
( Universe\r) Tx 
TO
0 To
1 0 0 1 199.4421 542.9874 0 Tp
TP
0 Tr
16 0 Tl
(antigravity\r) Tx 
T*
(  Universe\r) Tx 
TO
0 To
1 0 0 1 204.4421 481.9874 0 Tp
TP
0 Tr
( another\r) Tx 
T*
(Universe\r) Tx 
TO
0 To
1 0 0 1 196.4421 363.9874 0 Tp
TP
0 Tr
(    OUR\r) Tx 
T*
(UNIVERSE\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 322.6456 328.7877 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
12 0 Tl
(EH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 302.3457 321.7878 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 304.0957 305.6878 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 324.0827 299.0253 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 311.7957 386.1875 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 332.0956 419.0873 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 304.7957 493.987 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 325.7956 383.3875 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 302.6957 420.4873 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 324.3956 500.987 0 Tp
TP
0 Tr
(IH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 305.8457 437.9873 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 322.9956 468.7871 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 317.7456 449.8872 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 0.4949 -0.4949 0.4949 327.1956 358.1876 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 308.2957 357.4876 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
0.4949 -0.4949 0.4949 0.4949 297.7957 482.0871 0 Tp
TP
0 Tr
(EH\r) Tx 
TO
0 To
1 0 0 1 391.4421 476.9874 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
16 0 Tl
( another\r) Tx 
T*
(Universe\r) Tx 
TO
0 To
1 0 0 1 395.4421 360.9874 0 Tp
TP
0 Tr
( another\r) Tx 
T*
(Universe\r) Tx 
TO
0 To
1 0 0 1 399.4421 304.9874 0 Tp
TP
0 Tr
(antigravity\r) Tx 
T*
( Universe\r) Tx 
TO
0 To
0 1 -1 0 207.9421 272.9874 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
(time\r) Tx 
TO
0 To
1 0 0 1 237.9421 238.9874 0 Tp
TP
0 Tr
(space\r) Tx 
TO
0 To
1 0 0 1 293.6108 209.1594 0 Tp
TP
0 Tr
(Figure 18\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

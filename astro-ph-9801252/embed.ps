%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (embed.ps)
%%CreationDate: (10/09/97) (20:14)
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Times-Italic
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 109 325 454 476
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 288.5 360 288.5 360
%AI3_TileBox: 0 0 538 781
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Times-Italic
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
344.8247 418.1607 m
368.0604 418.1607 386.8973 425.252 386.8973 433.9999 c
386.8973 442.7474 368.0604 449.8387 344.8247 449.8387 c
321.5886 449.8387 302.7517 442.7474 302.7517 433.9999 c
302.7517 425.252 321.5886 418.1607 344.8247 418.1607 c
s
344.8247 433.9999 m
S
U
u
344.8247 422.8202 m
363.4131 422.8202 378.4826 428.1392 378.4826 434.6999 c
378.4826 441.2603 363.4131 446.5792 344.8247 446.5792 c
326.2359 446.5792 311.1664 441.2603 311.1664 434.6999 c
311.1664 428.1392 326.2359 422.8202 344.8247 422.8202 c
s
344.8247 434.6999 m
S
U
u
344.8247 425.4403 m
359.3129 425.4403 371.0581 429.4293 371.0581 434.3499 c
371.0581 439.2702 359.3129 443.2591 344.8247 443.2591 c
330.3365 443.2591 318.5909 439.2702 318.5909 434.3499 c
318.5909 429.4293 330.3365 425.4403 344.8247 425.4403 c
s
344.8247 434.3499 m
S
U
u
344.8247 425.8152 m
355.759 425.8152 364.6234 428.696 364.6234 432.2499 c
364.6234 435.8034 355.759 438.6843 344.8247 438.6843 c
333.89 438.6843 325.0256 435.8034 325.0256 432.2499 c
325.0256 428.696 333.89 425.8152 344.8247 425.8152 c
s
344.8247 432.2499 m
S
U
334.099 426.7238 m
S
356.8597 427.0703 m
S
356.8597 427.0703 m
357.3063 427.3769 357.5489 427.7066 357.5489 428.0499 c
357.5489 429.69 352.0084 431.0197 345.1747 431.0197 c
338.3406 431.0197 332.8001 429.69 332.8001 428.0499 c
332.8001 427.5732 333.2677 427.1228 334.099 426.7238 c
S
344.8247 428.0499 m
S
334.4924 406.8656 m
316.0751 405.1786 302.7517 398.9276 302.7517 391.4751 c
302.7517 382.7272 321.5886 375.6359 344.8247 375.6359 c
368.0604 375.6359 386.8973 382.7272 386.8973 391.4751 c
386.8973 398.7145 374.3453 404.8198 356.7257 406.7095 c
S
344.8247 391.4751 m
S
333.8774 404.8433 m
321.4542 403.0817 312.8989 398.3099 312.8989 392.7001 c
312.8989 385.5927 327.1928 379.8306 344.8247 379.8306 c
362.4562 379.8306 376.7501 385.5927 376.7501 392.7001 c
376.7501 398.139 369.0792 402.7902 357.2472 404.6739 c
S
344.8247 392.7001 m
S
333.0864 403.0831 m
326.5677 401.6149 322.5508 398.9252 322.5508 395.8501 c
322.5508 391.2028 332.5233 387.4354 344.8247 387.4354 c
357.1257 387.4354 367.0982 391.2028 367.0982 395.8501 c
367.0982 398.7771 363.8411 401.3555 357.8376 402.863 c
S
344.8247 395.8501 m
S
344.6497 399.7001 m
S
292.3249 414.75 m
399.0744 414.75 l
383.1495 451.3248 l
308.4248 451.3248 L
292.3249 414.75 L
s
334.806 408.975 m
308.4248 408.975 L
292.3249 372.4002 L
399.0744 372.4002 l
383.1495 408.975 l
356.7684 408.975 L
S
335.3747 414.4 m
334.8497 399.7001 329.5997 391.6501 301.5999 392.0001 c
S
356.5496 414.225 m
356.7246 403.725 353.7496 392.0001 389.7995 392.3501 c
S
330.4236 398.6004 m
332.1586 396.8101 338.027 395.4927 344.9997 395.4927 c
353.337 395.4927 360.0962 397.3764 360.0962 399.7001 c
360.0962 400.5782 359.4805 401.3933 357.8292 402.0681 c
S
332.4151 402.0247 m
S
332.4151 402.0247 m
330.8279 401.3587 329.9028 400.5593 329.9028 399.7001 c
329.9028 399.3196 330.0841 398.9507 330.4236 398.6004 c
S
344.9997 399.7001 m
S
333.7997 404.075 m
334.4997 400.05 356.1121 400.05 357.0746 403.8125 c
S
335.0643 408.4322 m
S
2 w
334.8935 408.625 m
339.0539 406.2625 353.0104 406.1582 356.425 408.5715 c
S
356.5496 408.6688 m
S
1 w
335.6253 413.8477 m
S
335.6253 413.8477 m
340.1459 411.8586 352.1204 411.859 356.2266 413.8176 c
S
356.2266 413.8176 m
S
337.1247 414.4 m
336.5997 407.925 335.0247 398.8251 329.0747 393.5751 c
323.1248 388.3251 311.0498 379.2251 295.9999 379.2251 c
S
339.7497 414.4 m
339.7497 409.85 337.8247 397.9501 333.7997 391.8251 c
329.7747 385.7001 321.1998 378.3501 313.1498 372.7502 c
S
342.7247 414.75 m
342.3747 399.7001 339.3997 380.6251 334.6747 372.9252 c
S
349.7247 414.4 m
349.7247 401.45 354.4496 378.1752 357.9496 373.1002 c
S
353.2246 414.575 m
353.3996 406.175 354.9746 394.9751 361.2746 387.4501 c
366.9817 380.6332 375.2745 375.2002 379.9995 372.7502 c
S
355.1496 414.75 m
354.9746 409.325 354.4496 403.9 360.2246 396.0251 c
365.9996 388.1501 385.2495 381.6751 394.6995 381.5001 c
S
351.6497 425.9499 m
356.3746 422.975 357.5121 419.9125 360.6621 415.0125 c
S
339.3997 425.7749 m
336.2497 423.1499 333.2747 419.2125 330.8247 415.0125 c
S
358.2121 427.4374 m
366.0871 428.4874 387.1745 418.425 395.9244 414.925 c
S
360.0496 427.9624 m
364.7746 430.4124 379.2995 432.3374 393.1245 427.7874 c
S
359.9621 428.3124 m
364.6871 433.7374 376.4995 436.7124 389.6245 435.8374 c
S
357.9496 427.6999 m
359.5246 436.7999 374.3121 440.2999 386.562 442.5749 c
S
354.3621 426.9124 m
356.1121 436.3624 365.3871 448.3498 378.687 451.1498 c
S
348.8497 426.2999 m
349.5497 440.1249 352.3497 444.2374 357.9496 451.0623 c
S
342.3747 426.0374 m
342.3747 435.6624 338.2622 445.6374 333.5372 451.0623 c
S
337.2997 426.6499 m
333.7997 437.4999 331.1747 443.3624 309.9998 451.0623 c
S
334.9372 426.9124 m
329.8622 435.4874 317.7873 442.0499 304.8374 442.2249 c
S
331.8747 427.6999 m
325.0498 434.8749 317.0873 435.7499 301.6874 435.0499 c
S
330.9997 427.8749 m
320.8498 431.3749 312.9748 430.8499 297.9249 426.8249 c
S
330.8247 427.5249 m
319.7998 426.1249 309.2123 420.4375 297.6624 415.0125 c
S
0 O
0 g
318.5748 461.2998 m
325.0498 456.5748 335.8122 445.8124 337.9997 437.4999 C
338.6997 437.6749 339.5747 437.8499 y
339.3997 432.2499 l
335.2872 436.4499 l
336.5997 436.9749 L
333.5372 445.6374 326.9748 452.8998 316.9998 459.5498 C
318.5748 461.2998 L
f
372.4746 461.2998 m
365.9996 456.5748 355.2371 445.8124 353.0496 437.4999 C
352.3497 437.6749 351.4747 437.8499 y
351.6497 432.2499 l
355.7621 436.4499 l
354.4496 436.9749 L
357.5121 445.6374 364.0746 452.8998 374.0496 459.5498 C
372.4746 461.2998 L
f
323.8248 372.2252 m
319.0998 366.4502 315.4248 361.0252 312.4498 358.4002 C
311.8373 359.0127 311.2248 359.7127 y
308.2498 353.6753 l
315.0748 355.0753 l
313.8498 356.8252 L
317.5248 360.1502 324.3498 367.5002 327.6748 372.2252 c
F
365.1246 372.2252 m
369.8496 366.4502 373.5245 361.0252 376.4995 358.4002 C
377.112 359.0127 377.7245 359.7127 y
380.6995 353.6753 l
373.8746 355.0753 l
375.0995 356.8252 L
371.4246 360.1502 364.5996 367.5002 361.2746 372.2252 c
F
0 To
0.5 0 0 0.5 319 343.25 0 Tp
TP
0 Tr
/_Helvetica 18 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
14 0 Tl
0 Tc
0 Tw
(WHITE HOLE\r) Tx 
TO
0 To
0.5 0 0 0.5 321 468.25 0 Tp
TP
0 Tr
(BLACK HOLE\r) Tx 
TO
0 To
0.5 0 0 0.5 390 449.5 0 Tp
TP
0 Tr
18 0 Tl
("OUR"\r) Tx 
T*
(UNIVERSE\r) Tx 
TO
0 To
0.5 0 0 0.5 391.5 360.75 0 Tp
TP
0 Tr
("ANOTHER"\r) Tx 
T*
( UNIVERSE\r) Tx 
TO
0 To
0.5 0 0 0.5 389 403.5 0 Tp
TP
0 Tr
/_Helvetica 16 Tf
14 0 Tl
(  Schwarschild\r) Tx 
T*
(      throat\r) Tx 
TO
0 R
0 G
392.9245 404.075 m
352.3497 404.075 l
S
353.6621 405.0375 m
351.9122 404.075 l
353.5746 403.1125 l
S
195.2216 383.8519 m
S
261.6507 382.9419 m
259.1482 379.5295 246.6359 374.5245 238.446 373.3871 c
S
250.7308 398.1842 m
245.2473 401.9361 237.7635 404.0991 229.8011 405.0091 c
S
163.3721 405.0091 m
156.3196 403.6441 151.9972 403.4167 145.6273 400.2317 c
S
127.655 385.8994 m
127.4275 378.847 145.6273 375.4345 154.4997 373.1596 c
S
u
195.2216 376.5365 m
170.8785 376.5365 151.1446 382.1538 151.1446 389.0843 c
151.1446 396.0139 170.8785 401.6313 195.2216 401.6313 c
219.5637 401.6313 239.2978 396.0139 239.2978 389.0843 c
239.2978 382.1538 219.5637 376.5365 195.2216 376.5365 c
s
195.2216 389.0843 m
S
U
u
195.2216 379.0326 m
178.6962 379.0326 165.3003 382.9219 165.3003 387.7194 c
165.3003 392.5168 178.6962 396.4051 195.2216 396.4051 c
211.746 396.4051 225.142 392.5168 225.142 387.7194 c
225.142 382.9219 211.746 379.0326 195.2216 379.0326 c
s
195.2216 387.7194 m
S
U
u
0 O
0.8 g
195.2216 381.9436 m
186.5149 381.9436 179.4561 383.8164 179.4561 386.1269 c
179.4561 388.4364 186.5149 390.3092 195.2216 390.3092 c
203.9274 390.3092 210.9863 388.4364 210.9863 386.1269 c
210.9863 383.8164 203.9274 381.9436 195.2216 381.9436 c
b
195.2216 386.1269 m
B
U
227.2986 373.1596 m
225.7062 375.0933 215.4688 386.0131 206.3116 383.2258 c
S
170.9932 373.1596 m
172.3582 375.207 176.1118 382.4869 185.4392 382.7144 c
S
124.2426 373.1596 m
133.7975 377.2545 170.8794 387.4919 182.0268 383.8519 c
S
133.3425 390.4493 m
137.2099 391.018 167.467 394.5443 184.5292 383.1694 c
S
155.6372 405.0091 m
163.1445 401.3692 181.5718 391.473 185.8942 382.8282 c
S
185.8942 405.0091 m
192.2641 396.5917 192.4916 385.8994 192.7191 382.2594 c
S
216.3788 405.0091 m
210.6914 400.2317 202.274 387.7194 201.1365 382.4869 c
S
209.0989 384.3069 m
214.5588 391.1318 237.7635 400.6867 244.8159 404.7816 c
S
265.7456 377.027 m
273.0255 372.9321 225.0237 392.7243 207.9614 383.6244 c
S
0 O
0.8 g
181.7993 372.7046 m
182.9367 369.5196 186.8042 357.6898 196.1316 357.9173 c
205.4589 358.1448 211.3738 376.3445 210.2364 372.9321 c
B
186.3492 372.9321 m
187.4867 368.6096 189.5342 360.6472 194.3116 358.1448 c
B
195.9041 373.1596 m
195.9041 369.9746 195.9041 360.6472 196.1316 357.9173 c
B
205.4589 373.1596 m
204.0589 368.3999 201.4746 361.2355 198.4065 358.3723 c
B
206.1414 383.1121 m
206.8676 383.7272 206.4818 383.3896 206.4818 383.8519 c
206.4818 385.6282 201.4405 387.0687 195.2216 387.0687 c
189.0018 387.0687 183.9605 385.6282 183.9605 383.8519 c
183.9605 383.3832 184.0169 383.1694 184.1307 383.1121 c
S
111.2753 373.1596 m
268.7031 373.1596 l
245.9534 405.0091 L
151.3147 405.0091 L
111.2753 373.1596 l
S
198.7614 393.2188 m
205.9139 409.1041 l
S
0 O
0 g
197.5966 397.1446 m
197.5484 395.7068 198.0999 390.6495 y
202.8646 395.3851 l
F
0 R
0 G
2 w
206.6533 365.8797 m
202.1034 362.2397 188.9086 362.5809 185.0411 365.7659 c
S
1 w
209.0989 370.6571 m
203.184 368.8371 188.3967 367.6996 182.9367 370.4296 c
S
221.8956 362.5809 m
209.6108 364.8559 l
S
0 O
0 g
213.0233 365.9934 m
207.3358 365.3109 l
211.6582 361.6709 l
F
0 To
1 0 0 1 208.5 414 0 Tp
TP
0 Tr
/_Helvetica 9 Tf
7 0 Tl
(star\r) Tx 
TO
0 To
1 0 0 1 225.5 356 0 Tp
TP
0 Tr
(horizon\r) Tx 
TO
0 To
1 0 0 1 186 329.5 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
9 0 Tl
(Figure 13\r) Tx 
TO
0 To
1 0 0 1 329 326.5 0 Tp
TP
0 Tr
(Figure 14\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (quantum.ps)
%%CreationDate: (10/09/97) (16:26)
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 248 284 397 489
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 O
0.7 g
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
316.4364 448.1085 m
329.4037 431.9562 326.6738 418.7614 326.6738 305.013 C
307.1091 304.558 L
307.1091 416.0314 304.3791 432.4112 315.7539 448.336 c
B
351.016 337.0901 m
353.7459 346.6449 365.1208 357.1098 374.6756 357.5648 c
S
351.016 337.0901 m
360.8634 338.4196 372.8529 348.1737 374.6752 357.5643 c
S
343.5085 373.7171 m
349.8785 379.177 354.9526 383.7478 355.7934 400.5617 c
S
343.5085 373.7171 m
336.6837 379.177 329.8588 380.997 321.6688 400.5617 c
S
285.7244 320.9378 m
294.3693 325.9427 308.4741 335.9526 315.299 346.4174 c
S
312.114 359.6123 m
305.2891 355.0623 290.2743 332.3126 285.2694 320.9378 c
S
290.2743 376.902 m
297.5542 382.817 309.839 392.3718 313.479 407.3866 c
S
265.7047 406.0216 m
269.7996 397.3767 281.6295 381.9069 289.8193 376.447 c
S
u
0.5 G
2 w
361.3375 432.7852 m
361.1537 434.441 361.5309 434.7158 361.8203 435.0052 c
362.2548 435.4397 362.5441 435.3428 363.8955 435.3428 c
365.2468 435.3428 365.6813 435.1981 366.1154 435.6326 c
366.5017 436.0184 366.6619 436.6281 366.3565 437.8043 c
S
366.3565 437.8043 m
366.1727 439.46 366.5499 439.7348 366.8393 440.0242 c
367.2738 440.4587 367.5632 440.3618 368.9145 440.3618 c
370.2659 440.3618 370.7004 440.2171 371.1344 440.6516 c
371.5207 441.0374 371.6808 441.6472 371.3756 442.8233 c
S
351.2994 422.6507 m
351.1156 424.3065 351.4928 424.5808 351.7822 424.8706 c
352.2167 425.3047 352.506 425.2082 353.8574 425.2082 c
355.2087 425.2082 355.6433 425.0635 356.0773 425.4981 c
356.4636 425.8839 356.6238 426.4936 356.3185 427.6697 c
S
356.3185 427.6697 m
356.1347 429.3255 356.5118 429.5998 356.8012 429.8896 c
357.2357 430.3237 357.5251 430.2272 358.8764 430.2272 c
360.2278 430.2272 360.6623 430.0826 361.0963 430.5171 c
361.4827 430.903 361.6428 431.5127 361.3375 432.6888 c
S
341.2618 412.5162 m
341.0775 414.1719 341.4547 414.4462 341.7441 414.7361 c
342.1786 415.1702 342.468 415.0737 343.8193 415.0737 c
345.1706 415.0737 345.6052 414.929 346.0393 415.3635 c
346.4255 415.7494 346.5857 416.3586 346.2808 417.5352 c
S
346.2808 417.5352 m
346.0966 419.191 346.4737 419.4653 346.7631 419.7552 c
347.1977 420.1892 347.4871 420.0928 348.8384 420.0928 c
350.1897 420.0928 350.6242 419.9481 351.0583 420.3826 c
351.4446 420.7684 351.6047 421.3776 351.2999 422.5542 c
S
331.2238 402.3816 m
331.0394 404.0374 331.4167 404.3118 331.706 404.6016 c
332.1405 405.0356 332.4299 404.9392 333.7812 404.9392 c
335.1326 404.9392 335.5671 404.7945 336.0012 405.229 c
336.3875 405.6149 336.5476 406.2241 336.2428 407.4007 c
S
336.2428 407.4007 m
336.0585 409.0564 336.4357 409.3308 336.7251 409.6206 c
337.1596 410.0547 337.449 409.9582 338.8003 409.9582 c
340.1516 409.9582 340.5861 409.8135 341.0202 410.248 c
341.4065 410.6338 341.5667 411.2431 341.2618 412.4197 c
S
U
u
360.8825 442.3401 m
360.6986 443.9958 361.0759 444.2707 361.3653 444.56 c
361.7998 444.9945 362.0891 444.8976 363.4405 444.8976 c
364.7918 444.8976 365.2263 444.753 365.6604 445.1874 c
366.0467 445.5733 366.2069 446.183 365.9015 447.3591 c
S
365.9015 447.3591 m
365.7177 449.0149 366.0949 449.2897 366.3843 449.5791 c
366.8188 450.0136 367.1082 449.9167 368.4595 449.9167 c
369.8109 449.9167 370.2454 449.772 370.6794 450.2065 c
371.0657 450.5923 371.2259 451.202 370.9206 452.3782 c
S
350.8444 432.2056 m
350.6606 433.8613 351.0378 434.1357 351.3272 434.4255 c
351.7617 434.8596 352.0511 434.7631 353.4024 434.7631 c
354.7537 434.7631 355.1883 434.6184 355.6224 435.053 c
356.0086 435.4388 356.1688 436.0484 355.8635 437.2246 c
S
355.8635 437.2246 m
355.6797 438.8803 356.0568 439.1547 356.3462 439.4445 c
356.7808 439.8786 357.0701 439.7821 358.4214 439.7821 c
359.7728 439.7821 360.2073 439.6374 360.6414 440.0719 c
361.0277 440.4578 361.1878 441.0675 360.8825 442.2437 c
S
340.8069 422.071 m
340.6225 423.7268 340.9998 424.0011 341.2891 424.2909 c
341.7236 424.7251 342.013 424.6285 343.3643 424.6285 c
344.7157 424.6285 345.1502 424.4839 345.5843 424.9184 c
345.9705 425.3042 346.1307 425.9134 345.8258 427.0901 c
S
345.8258 427.0901 m
345.6416 428.7458 346.0187 429.0202 346.3081 429.31 c
346.7427 429.744 347.0321 429.6476 348.3834 429.6476 c
349.7347 429.6476 350.1692 429.5029 350.6033 429.9375 c
350.9896 430.3233 351.1497 430.9325 350.8449 432.1091 c
S
330.7687 411.9365 m
330.5844 413.5922 330.9617 413.8666 331.251 414.1564 c
331.6855 414.5905 331.9749 414.494 333.3263 414.494 c
334.6776 414.494 335.1121 414.3494 335.5462 414.7838 c
335.9325 415.1697 336.0926 415.779 335.7878 416.9555 c
S
335.7878 416.9555 m
335.6035 418.6113 335.9807 418.8856 336.2701 419.1755 c
336.7046 419.6096 336.994 419.5131 338.3453 419.5131 c
339.6967 419.5131 340.1311 419.3684 340.5652 419.8029 c
340.9515 420.1887 341.1117 420.798 340.8069 421.9746 c
S
U
u
359.9725 450.985 m
359.7887 452.6407 360.1659 452.9156 360.4553 453.2049 c
360.8898 453.6394 361.1791 453.5425 362.5305 453.5425 c
363.8818 453.5425 364.3164 453.3979 364.7504 453.8323 c
365.1367 454.2182 365.2969 454.8279 364.9915 456.004 c
S
364.9915 456.004 m
364.8077 457.6598 365.1849 457.9345 365.4743 458.224 c
365.9088 458.6585 366.1982 458.5615 367.5495 458.5615 c
368.9009 458.5615 369.3354 458.4168 369.7694 458.8514 c
370.1558 459.2372 370.3159 459.8469 370.0106 461.0231 c
S
349.9344 440.8505 m
349.7506 442.5062 350.1278 442.7806 350.4172 443.0704 c
350.8517 443.5044 351.1411 443.408 352.4924 443.408 c
353.8437 443.408 354.2783 443.2633 354.7124 443.6978 c
355.0986 444.0836 355.2588 444.6933 354.9535 445.8695 c
S
354.9535 445.8695 m
354.7697 447.5252 355.1468 447.7996 355.4362 448.0894 c
355.8708 448.5235 356.1602 448.427 357.5114 448.427 c
358.8628 448.427 359.2973 448.2823 359.7314 448.7168 c
360.1177 449.1027 360.2778 449.7124 359.9725 450.8885 c
S
339.8968 430.7159 m
339.7125 432.3716 340.0898 432.646 340.3791 432.9358 c
340.8136 433.3699 341.103 433.2734 342.4544 433.2734 c
343.8057 433.2734 344.2402 433.1287 344.6743 433.5633 c
345.0606 433.9491 345.2207 434.5583 344.9158 435.735 c
S
344.9158 435.735 m
344.7316 437.3907 345.1088 437.6651 345.3981 437.9549 c
345.8327 438.3889 346.1221 438.2925 347.4734 438.2925 c
348.8247 438.2925 349.2592 438.1478 349.6933 438.5823 c
350.0796 438.9682 350.2397 439.5774 349.9349 440.754 c
S
329.8588 420.5814 m
329.6744 422.2371 330.0517 422.5115 330.341 422.8013 c
330.7755 423.2354 331.0649 423.1389 332.4163 423.1389 c
333.7676 423.1389 334.2021 422.9943 334.6361 423.4287 c
335.0225 423.8146 335.1826 424.4239 334.8778 425.6004 c
S
334.8778 425.6004 m
334.6935 427.2562 335.0707 427.5305 335.3601 427.8204 c
335.7946 428.2545 336.084 428.158 337.4353 428.158 c
338.7866 428.158 339.2211 428.0133 339.6552 428.4478 c
340.0415 428.8336 340.2017 429.4428 339.8968 430.6195 c
S
U
u
359.0626 459.1748 m
358.8787 460.8306 359.2559 461.1054 359.5453 461.3948 c
359.9798 461.8293 360.2691 461.7324 361.6205 461.7324 c
362.9718 461.7324 363.4064 461.5877 363.8404 462.0222 c
364.2267 462.4081 364.3869 463.0178 364.0815 464.1939 c
S
364.0815 464.1939 m
363.8977 465.8496 364.2749 466.1244 364.5643 466.4138 c
364.9988 466.8484 365.2882 466.7514 366.6395 466.7514 c
367.9909 466.7514 368.4254 466.6067 368.8594 467.0413 c
369.2458 467.4271 369.4059 468.0368 369.1006 469.213 c
S
349.0245 449.0404 m
348.8406 450.6961 349.2178 450.9704 349.5072 451.2603 c
349.9417 451.6943 350.2311 451.5979 351.5825 451.5979 c
352.9337 451.5979 353.3683 451.4532 353.8023 451.8877 c
354.1886 452.2735 354.3488 452.8832 354.0435 454.0594 c
S
354.0435 454.0594 m
353.8597 455.7151 354.2368 455.9895 354.5262 456.2793 c
354.9608 456.7134 355.2502 456.6169 356.6014 456.6169 c
357.9528 456.6169 358.3873 456.4722 358.8214 456.9067 c
359.2077 457.2926 359.3678 457.9023 359.0626 459.0784 c
S
338.9868 438.9058 m
338.8025 440.5615 339.1798 440.8359 339.4691 441.1257 c
339.9036 441.5598 340.193 441.4633 341.5444 441.4633 c
342.8957 441.4633 343.3302 441.3186 343.7643 441.7532 c
344.1506 442.139 344.3108 442.7482 344.0059 443.9249 c
S
344.0059 443.9249 m
343.8216 445.5806 344.1988 445.855 344.4882 446.1448 c
344.9227 446.5788 345.2121 446.4824 346.5634 446.4824 c
347.9147 446.4824 348.3492 446.3377 348.7833 446.7722 c
349.1696 447.1581 349.3297 447.7673 349.0249 448.9439 c
S
328.9488 428.7713 m
328.7645 430.427 329.1417 430.7014 329.4311 430.9912 c
329.8656 431.4253 330.155 431.3288 331.5063 431.3288 c
332.8576 431.3288 333.2922 431.1842 333.7262 431.6186 c
334.1125 432.0045 334.2726 432.6137 333.9678 433.7903 c
S
333.9678 433.7903 m
333.7836 435.4461 334.1607 435.7204 334.4501 436.0102 c
334.8846 436.4443 335.174 436.3478 336.5253 436.3478 c
337.8767 436.3478 338.3111 436.2032 338.7452 436.6377 c
339.1315 437.0235 339.2917 437.6327 338.9868 438.8094 c
S
U
u
357.2426 466.9098 m
357.0587 468.5655 357.4359 468.8403 357.7253 469.1297 c
358.1598 469.5642 358.4492 469.4673 359.8005 469.4673 c
361.1518 469.4673 361.5864 469.3226 362.0205 469.7571 c
362.4067 470.143 362.5669 470.7527 362.2616 471.9288 c
S
362.2616 471.9288 m
362.0778 473.5845 362.455 473.8593 362.7443 474.1487 c
363.1789 474.5832 363.4683 474.4863 364.8195 474.4863 c
366.1709 474.4863 366.6054 474.3416 367.0395 474.7762 c
367.4258 475.162 367.5859 475.7717 367.2806 476.9478 c
S
347.2045 456.7753 m
347.0206 458.431 347.3979 458.7053 347.6873 458.9952 c
348.1217 459.4292 348.4111 459.3328 349.7625 459.3328 c
351.1138 459.3328 351.5483 459.1881 351.9824 459.6226 c
352.3687 460.0084 352.5289 460.6181 352.2235 461.7942 c
S
352.2235 461.7942 m
352.0397 463.45 352.4169 463.7243 352.7062 464.0142 c
353.1408 464.4483 353.4302 464.3518 354.7815 464.3518 c
356.1329 464.3518 356.5673 464.2071 357.0014 464.6416 c
357.3877 465.0275 357.5478 465.6372 357.2426 466.8133 c
S
337.1669 446.6407 m
336.9826 448.2964 337.3598 448.5708 337.6492 448.8606 c
338.0836 449.2947 338.373 449.1982 339.7244 449.1982 c
341.0757 449.1982 341.5102 449.0535 341.9443 449.4881 c
342.3306 449.8739 342.4907 450.4831 342.1859 451.6598 c
S
342.1859 451.6598 m
342.0016 453.3155 342.3788 453.5899 342.6682 453.8797 c
343.1027 454.3137 343.3921 454.2173 344.7434 454.2173 c
346.0948 454.2173 346.5292 454.0726 346.9633 454.5071 c
347.3496 454.8929 347.5098 455.5022 347.205 456.6788 c
S
327.1288 436.5061 m
326.9445 438.1619 327.3217 438.4363 327.611 438.7261 c
328.0456 439.1602 328.335 439.0637 329.6863 439.0637 c
331.0376 439.0637 331.4722 438.919 331.9062 439.3535 c
332.2925 439.7394 332.4527 440.3486 332.1478 441.5252 c
S
332.1478 441.5252 m
331.9636 443.181 332.3407 443.4553 332.6301 443.7451 c
333.0647 444.1792 333.354 444.0827 334.7053 444.0827 c
336.0567 444.0827 336.4912 443.938 336.9253 444.3726 c
337.3115 444.7584 337.4717 445.3676 337.1669 446.5442 c
S
U
u
354.0576 473.2797 m
353.8738 474.9354 354.251 475.2102 354.5404 475.4996 c
354.9748 475.9341 355.2642 475.8372 356.6156 475.8372 c
357.9669 475.8372 358.4014 475.6925 358.8355 476.127 c
359.2218 476.5129 359.382 477.1226 359.0766 478.2987 c
S
359.0766 478.2987 m
358.8928 479.9545 359.27 480.2292 359.5594 480.5187 c
359.9939 480.9532 360.2833 480.8562 361.6346 480.8562 c
362.986 480.8562 363.4205 480.7115 363.8545 481.1461 c
364.2408 481.5319 364.4009 482.1416 364.0957 483.3177 c
S
344.0196 463.1452 m
343.8357 464.8009 344.2129 465.0753 344.5023 465.3651 c
344.9368 465.7991 345.2261 465.7027 346.5775 465.7027 c
347.9288 465.7027 348.3634 465.558 348.7975 465.9925 c
349.1837 466.3783 349.3439 466.988 349.0386 468.1642 c
S
349.0386 468.1642 m
348.8548 469.8199 349.2319 470.0942 349.5213 470.3841 c
349.9558 470.8182 350.2452 470.7217 351.5965 470.7217 c
352.9479 470.7217 353.3824 470.577 353.8164 471.0115 c
354.2028 471.3974 354.3629 472.0071 354.0576 473.1832 c
S
333.9819 453.0106 m
333.7976 454.6663 334.1748 454.9407 334.4642 455.2305 c
334.8987 455.6646 335.1881 455.5681 336.5395 455.5681 c
337.8907 455.5681 338.3253 455.4234 338.7593 455.858 c
339.1456 456.2438 339.3058 456.853 339.0009 458.0297 c
S
339.0009 458.0297 m
338.8167 459.6854 339.1938 459.9598 339.4832 460.2496 c
339.9178 460.6836 340.2071 460.5872 341.5585 460.5872 c
342.9098 460.5872 343.3443 460.4425 343.7784 460.877 c
344.1647 461.2629 344.3248 461.8721 344.02 463.0487 c
S
323.9438 442.8761 m
323.7595 444.5318 324.1368 444.8062 324.4261 445.096 c
324.8606 445.5301 325.15 445.4336 326.5014 445.4336 c
327.8527 445.4336 328.2872 445.289 328.7213 445.7234 c
329.1076 446.1093 329.2677 446.7185 328.9629 447.8951 c
S
328.9629 447.8951 m
328.7786 449.5509 329.1558 449.8252 329.4452 450.1151 c
329.8797 450.5491 330.1691 450.4527 331.5204 450.4527 c
332.8717 450.4527 333.3062 450.308 333.7403 450.7425 c
334.1266 451.1283 334.2868 451.7375 333.9819 452.9141 c
S
U
u
272.1551 432.9504 m
270.4994 432.7666 270.225 433.1438 269.9352 433.4332 c
269.5011 433.8677 269.5976 434.157 269.5976 435.5084 c
269.5976 436.8597 269.7422 437.2942 269.3078 437.7283 c
268.9219 438.1146 268.3122 438.2748 267.136 437.9694 c
S
267.136 437.9694 m
265.4803 437.7856 265.206 438.1628 264.9161 438.4522 c
264.4821 438.8867 264.5785 439.1761 264.5785 440.5274 c
264.5785 441.8788 264.7232 442.3133 264.2887 442.7473 c
263.9029 443.1336 263.2932 443.2938 262.117 442.9885 c
S
282.2896 422.9123 m
280.6339 422.7285 280.3595 423.1057 280.0697 423.3951 c
279.6356 423.8296 279.7321 424.119 279.7321 425.4703 c
279.7321 426.8216 279.8768 427.2562 279.4422 427.6903 c
279.0564 428.0765 278.4472 428.2367 277.2706 427.9314 c
S
277.2706 427.9314 m
275.6149 427.7476 275.3405 428.1247 275.0507 428.4141 c
274.6166 428.8486 274.7131 429.138 274.7131 430.4893 c
274.7131 431.8407 274.8578 432.2752 274.4232 432.7092 c
274.0374 433.0956 273.4281 433.2557 272.2515 432.9504 c
S
292.4242 412.8748 m
290.7684 412.6904 290.4941 413.0676 290.2042 413.357 c
289.7701 413.7915 289.8666 414.0809 289.8666 415.4322 c
289.8666 416.7835 290.0113 417.2181 289.5768 417.6522 c
289.191 418.0384 288.5818 418.1986 287.4051 417.8937 c
S
287.4051 417.8937 m
285.7494 417.7095 285.475 418.0867 285.1852 418.376 c
284.7512 418.8106 284.8476 419.1 284.8476 420.4513 c
284.8476 421.8026 284.9922 422.2371 284.5578 422.6712 c
284.1719 423.0575 283.5627 423.2176 282.3861 422.9128 c
S
302.5592 402.8367 m
300.903 402.6523 300.6286 403.0296 300.3388 403.319 c
299.9047 403.7534 300.0012 404.0428 300.0012 405.3942 c
300.0012 406.7455 300.1458 407.18 299.7118 407.6141 c
299.3255 408.0004 298.7162 408.1605 297.5401 407.8557 c
S
297.5401 407.8557 m
295.8839 407.6714 295.6096 408.0486 295.3197 408.338 c
294.8856 408.7725 294.9821 409.0619 294.9821 410.4132 c
294.9821 411.7646 295.1268 412.199 294.6927 412.6331 c
294.3065 413.0194 293.6972 413.1796 292.5211 412.8748 c
S
U
u
271.7001 443.4153 m
270.0444 443.2314 269.77 443.6086 269.4802 443.898 c
269.0461 444.3325 269.1426 444.6219 269.1426 445.9733 c
269.1426 447.3245 269.2872 447.7591 268.8527 448.1932 c
268.4669 448.5794 267.8572 448.7396 266.6811 448.4343 c
S
266.6811 448.4343 m
265.0253 448.2505 264.751 448.6277 264.4611 448.917 c
264.027 449.3516 264.1235 449.641 264.1235 450.9922 c
264.1235 452.3436 264.2682 452.7781 263.8337 453.2122 c
263.4479 453.5985 262.8382 453.7586 261.662 453.4534 c
S
281.8346 433.3772 m
280.1789 433.1934 279.9045 433.5706 279.6147 433.86 c
279.1806 434.2944 279.2771 434.5838 279.2771 435.9352 c
279.2771 437.2865 279.4218 437.721 278.9872 438.1551 c
278.6014 438.5414 277.9922 438.7015 276.8156 438.3962 c
S
276.8156 438.3962 m
275.1599 438.2124 274.8855 438.5896 274.5957 438.879 c
274.1616 439.3135 274.2581 439.6029 274.2581 440.9542 c
274.2581 442.3056 274.4028 442.74 273.9682 443.1741 c
273.5824 443.5604 272.9732 443.7205 271.7965 443.4153 c
S
291.9692 423.3396 m
290.3134 423.1553 290.0391 423.5325 289.7492 423.8218 c
289.3151 424.2564 289.4116 424.5457 289.4116 425.8971 c
289.4116 427.2484 289.5563 427.683 289.1218 428.117 c
288.736 428.5033 288.1268 428.6635 286.9501 428.3586 c
S
286.9501 428.3586 m
285.2944 428.1743 285.02 428.5515 284.7302 428.8409 c
284.2962 429.2754 284.3926 429.5648 284.3926 430.9161 c
284.3926 432.2675 284.5373 432.702 284.1027 433.136 c
283.7169 433.5223 283.1077 433.6825 281.9311 433.3777 c
S
302.1042 413.3015 m
300.448 413.1172 300.1736 413.4944 299.8838 413.7838 c
299.4497 414.2183 299.5462 414.5077 299.5462 415.8591 c
299.5462 417.2103 299.6908 417.6449 299.2568 418.0789 c
298.8705 418.4652 298.2612 418.6254 297.0851 418.3205 c
S
297.0851 418.3205 m
295.4289 418.1363 295.1546 418.5134 294.8647 418.8028 c
294.4306 419.2374 294.5271 419.5267 294.5271 420.8781 c
294.5271 422.2294 294.6718 422.6639 294.2377 423.098 c
293.8515 423.4842 293.2423 423.6444 292.0661 423.3396 c
S
U
u
273.0651 451.6052 m
271.4094 451.4213 271.135 451.7985 270.8451 452.0879 c
270.4111 452.5224 270.5075 452.8118 270.5075 454.1631 c
270.5075 455.5144 270.6522 455.949 270.2177 456.3831 c
269.8319 456.7693 269.2222 456.9295 268.046 456.6242 c
S
268.046 456.6242 m
266.3903 456.4404 266.116 456.8175 265.8261 457.1069 c
265.392 457.5415 265.4885 457.8309 265.4885 459.1821 c
265.4885 460.5335 265.6332 460.968 265.1987 461.4021 c
264.8129 461.7884 264.2032 461.9485 263.027 461.6432 c
S
283.1996 441.5671 m
281.5438 441.3832 281.2695 441.7605 280.9797 442.0498 c
280.5457 442.4843 280.6421 442.7737 280.6421 444.1251 c
280.6421 445.4764 280.7868 445.9109 280.3522 446.345 c
279.9664 446.7313 279.3572 446.8914 278.1806 446.5861 c
S
278.1806 446.5861 m
276.5249 446.4023 276.2505 446.7795 275.9607 447.0688 c
275.5266 447.5034 275.6231 447.7928 275.6231 449.1441 c
275.6231 450.4954 275.7677 450.9299 275.3332 451.364 c
274.9474 451.7503 274.3381 451.9104 273.1615 451.6052 c
S
293.3341 431.5295 m
291.6784 431.3452 291.4041 431.7224 291.1142 432.0118 c
290.6801 432.4462 290.7766 432.7356 290.7766 434.087 c
290.7766 435.4383 290.9213 435.8728 290.4868 436.3069 c
290.1009 436.6932 289.4917 436.8533 288.3151 436.5485 c
S
288.3151 436.5485 m
286.6594 436.3642 286.385 436.7414 286.0951 437.0308 c
285.6611 437.4653 285.7576 437.7547 285.7576 439.106 c
285.7576 440.4574 285.9022 440.8918 285.4678 441.3259 c
285.0819 441.7122 284.4727 441.8724 283.2961 441.5675 c
S
303.4691 421.4914 m
301.813 421.3071 301.5386 421.6843 301.2487 421.9737 c
300.8147 422.4082 300.9111 422.6976 300.9111 424.0489 c
300.9111 425.4002 301.0558 425.8348 300.6218 426.2688 c
300.2355 426.6551 299.6262 426.8153 298.4501 426.5104 c
S
298.4501 426.5104 m
296.7939 426.3262 296.5196 426.7033 296.2297 426.9927 c
295.7956 427.4273 295.8921 427.7166 295.8921 429.0679 c
295.8921 430.4193 296.0368 430.8538 295.6027 431.2879 c
295.2165 431.6741 294.6072 431.8343 293.431 431.5295 c
S
U
u
273.975 458.8851 m
272.3193 458.7012 272.0449 459.0784 271.7552 459.3678 c
271.3211 459.8023 271.4175 460.0917 271.4175 461.443 c
271.4175 462.7943 271.5622 463.2289 271.1277 463.663 c
270.7418 464.0492 270.1322 464.2094 268.956 463.9041 c
S
268.956 463.9041 m
267.3003 463.7203 267.0259 464.0974 266.7361 464.3868 c
266.302 464.8214 266.3985 465.1108 266.3985 466.462 c
266.3985 467.8134 266.5432 468.2479 266.1086 468.682 c
265.7229 469.0683 265.1132 469.2284 263.937 468.9231 c
S
284.1096 448.847 m
282.4538 448.6631 282.1795 449.0404 281.8897 449.3297 c
281.4556 449.7642 281.5521 450.0536 281.5521 451.4049 c
281.5521 452.7563 281.6967 453.1908 281.2622 453.6249 c
280.8764 454.0112 280.2672 454.1713 279.0906 453.866 c
S
279.0906 453.866 m
277.4349 453.6822 277.1605 454.0594 276.8707 454.3487 c
276.4366 454.7833 276.5331 455.0727 276.5331 456.424 c
276.5331 457.7754 276.6777 458.2098 276.2432 458.6439 c
275.8573 459.0302 275.2481 459.1903 274.0715 458.8851 c
S
294.2441 438.8094 m
292.5884 438.6251 292.3141 439.0023 292.0242 439.2917 c
291.5901 439.7261 291.6866 440.0155 291.6866 441.3669 c
291.6866 442.7182 291.8313 443.1527 291.3968 443.5868 c
291.011 443.9731 290.4017 444.1333 289.225 443.8284 c
S
289.225 443.8284 m
287.5693 443.6441 287.295 444.0213 287.0051 444.3107 c
286.5711 444.7452 286.6675 445.0346 286.6675 446.3859 c
286.6675 447.7373 286.8122 448.1717 286.3777 448.6058 c
285.9919 448.9921 285.3827 449.1523 284.2061 448.8475 c
S
304.3791 428.7713 m
302.7229 428.587 302.4485 428.9642 302.1587 429.2536 c
301.7247 429.6881 301.8211 429.9775 301.8211 431.3288 c
301.8211 432.6801 301.9658 433.1147 301.5318 433.5487 c
301.1454 433.935 300.5362 434.0951 299.3601 433.7903 c
S
299.3601 433.7903 m
297.7039 433.6061 297.4295 433.9832 297.1397 434.2726 c
296.7056 434.7072 296.8021 434.9965 296.8021 436.3478 c
296.8021 437.6992 296.9468 438.1337 296.5127 438.5678 c
296.1265 438.9541 295.5172 439.1142 294.341 438.8094 c
S
U
u
274.8851 467.0749 m
273.2294 466.8911 272.955 467.2683 272.6652 467.5577 c
272.2311 467.9922 272.3275 468.2816 272.3275 469.6329 c
272.3275 470.9842 272.4722 471.4188 272.0377 471.8529 c
271.6518 472.2391 271.0421 472.3993 269.866 472.094 c
S
269.866 472.094 m
268.2103 471.9102 267.9359 472.2873 267.6461 472.5767 c
267.212 473.0113 267.3085 473.3006 267.3085 474.6519 c
267.3085 476.0033 267.4532 476.4378 267.0186 476.8719 c
266.6329 477.2582 266.0232 477.4183 264.847 477.113 c
S
285.0196 457.0369 m
283.3638 456.853 283.0895 457.2303 282.7996 457.5196 c
282.3656 457.9541 282.462 458.2435 282.462 459.5949 c
282.462 460.9462 282.6067 461.3807 282.1722 461.8148 c
281.7864 462.201 281.1772 462.3612 280.0006 462.0559 c
S
280.0006 462.0559 m
278.3448 461.8721 278.0704 462.2492 277.7807 462.5386 c
277.3466 462.9732 277.443 463.2626 277.443 464.6138 c
277.443 465.9652 277.5877 466.3997 277.1532 466.8338 c
276.7673 467.2201 276.1581 467.3802 274.9815 467.0749 c
S
295.1541 446.9992 m
293.4984 446.815 293.224 447.1922 292.9342 447.4815 c
292.5001 447.916 292.5966 448.2054 292.5966 449.5568 c
292.5966 450.9081 292.7413 451.3426 292.3068 451.7767 c
291.9209 452.163 291.3117 452.3231 290.135 452.0183 c
S
290.135 452.0183 m
288.4793 451.834 288.205 452.2112 287.9151 452.5006 c
287.4811 452.9351 287.5775 453.2245 287.5775 454.5758 c
287.5775 455.9272 287.7222 456.3616 287.2877 456.7957 c
286.9019 457.182 286.2926 457.3422 285.1161 457.0373 c
S
305.2891 436.9611 m
303.6329 436.7769 303.3585 437.1541 303.0688 437.4434 c
302.6347 437.878 302.7311 438.1674 302.7311 439.5187 c
302.7311 440.87 302.8758 441.3046 302.4418 441.7386 c
302.0554 442.1249 301.4462 442.285 300.27 441.9802 c
S
300.27 441.9802 m
298.6139 441.796 298.3395 442.1731 298.0497 442.4625 c
297.6156 442.897 297.7121 443.1864 297.7121 444.5377 c
297.7121 445.889 297.8568 446.3236 297.4227 446.7576 c
297.0364 447.1439 296.4272 447.3041 295.251 446.9992 c
S
U
u
277.16 473.8999 m
275.5043 473.716 275.2299 474.0932 274.9401 474.3826 c
274.506 474.8171 274.6025 475.1065 274.6025 476.4578 c
274.6025 477.8091 274.7472 478.2437 274.3127 478.6777 c
273.9268 479.064 273.3171 479.2242 272.141 478.9189 c
S
272.141 478.9189 m
270.4853 478.7351 270.2109 479.1122 269.9211 479.4016 c
269.487 479.8362 269.5835 480.1255 269.5835 481.4768 c
269.5835 482.8282 269.7282 483.2627 269.2936 483.6968 c
268.9078 484.083 268.2981 484.2432 267.1219 483.9379 c
S
287.2945 463.8618 m
285.6388 463.6779 285.3645 464.0552 285.0746 464.3445 c
284.6406 464.779 284.737 465.0684 284.737 466.4197 c
284.737 467.7711 284.8817 468.2056 284.4472 468.6397 c
284.0614 469.026 283.4521 469.1861 282.2755 468.8808 c
S
282.2755 468.8808 m
280.6198 468.697 280.3454 469.0742 280.0556 469.3635 c
279.6215 469.7981 279.718 470.0875 279.718 471.4388 c
279.718 472.7901 279.8627 473.2246 279.4282 473.6587 c
279.0423 474.045 278.4331 474.2051 277.2565 473.8999 c
S
297.4291 453.8242 m
295.7734 453.6399 295.499 454.0171 295.2092 454.3065 c
294.7751 454.7409 294.8716 455.0303 294.8716 456.3817 c
294.8716 457.733 295.0163 458.1675 294.5817 458.6016 c
294.1959 458.9879 293.5867 459.148 292.41 458.8432 c
S
292.41 458.8432 m
290.7543 458.6589 290.4799 459.0361 290.1901 459.3255 c
289.7561 459.76 289.8525 460.0494 289.8525 461.4007 c
289.8525 462.7521 289.9972 463.1865 289.5627 463.6206 c
289.1769 464.0069 288.5676 464.1671 287.391 463.8622 c
S
307.5641 443.7861 m
305.9079 443.6018 305.6335 443.979 305.3437 444.2684 c
304.9096 444.7029 305.0061 444.9923 305.0061 446.3436 c
305.0061 447.6949 305.1508 448.1295 304.7167 448.5635 c
304.3304 448.9498 303.7212 449.11 302.545 448.8051 c
S
302.545 448.8051 m
300.8889 448.6209 300.6145 448.998 300.3247 449.2874 c
299.8906 449.722 299.9871 450.0113 299.9871 451.3626 c
299.9871 452.714 300.1317 453.1485 299.6977 453.5826 c
299.3114 453.9688 298.7022 454.129 297.526 453.8242 c
S
U
u
0 G
1 w
385.368 487.0105 m
385.368 304.558 L
250.6899 304.558 L
250.6899 487.0105 L
385.368 487.0105 L
s
318.0289 395.7843 m
S
U
0 O
0 g
266.1597 401.2442 m
264.7947 407.3866 l
269.7996 403.7466 l
B
0.5 g
264.3397 465.6258 m
262.9747 471.7682 l
267.9796 468.1282 l
F
265.2497 473.3606 m
263.8847 479.5031 l
268.8896 475.8631 l
F
267.7521 479.7306 m
266.3872 485.873 l
271.3921 482.233 l
F
263.4297 459.0283 m
262.0647 465.1708 l
267.0697 461.5308 l
F
262.2922 450.3835 m
260.9272 456.5259 l
265.9322 452.886 l
F
262.0647 441.2836 m
260.6997 447.426 l
265.7047 443.7861 l
F
363.5283 478.3656 m
365.3437 484.3901 l
360.1864 481.1274 l
F
366.9407 473.1332 m
368.7562 479.1577 l
363.5988 475.895 l
F
368.3057 465.1708 m
370.1212 471.1954 l
364.9638 467.9326 l
F
369.6707 457.2084 m
371.4862 463.233 l
366.3288 459.9702 l
F
370.3573 447.9989 m
372.1731 454.0234 l
367.0158 450.7607 l
F
372.1731 439.2361 m
373.9886 445.2607 l
368.8312 441.998 l
F
0 g
0 R
0 G
310.749 404.2016 m
313.934 409.2066 l
313.934 403.7466 l
B
321.8964 396.4667 m
320.5314 402.6091 l
324.8538 398.0592 l
B
353.5184 396.2392 m
356.2484 401.4716 l
356.7033 395.7843 l
B
312.569 345.9625 m
317.119 348.9199 l
315.7539 343.6875 l
B
356.4759 349.6024 m
362.3908 352.1049 l
359.2058 346.6449 l
B
363.3008 344.825 m
368.7607 347.0999 l
365.8032 342.095 l
B
308.9291 359.1573 m
314.1615 361.2048 l
311.659 355.5173 l
B
0 To
0.455 0 0 0.455 344.646 338.4551 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
14 0 Tl
0 Tc
0 Tw
(I\r) Tx 
TO
0 To
0.455 0 0 0.455 338.0486 365.9822 0 Tp
TP
0 Tr
(II\r) Tx 
TO
0 To
0.455 0 0 0.455 282.0844 369.6221 0 Tp
TP
0 Tr
(III\r) Tx 
TO
0 To
0.455 0 0 0.455 277.9895 326.3977 0 Tp
TP
0 Tr
(IV\r) Tx 
TO
0 R
0 G
277.9895 307.288 m
253.8748 307.288 l
253.8748 330.4927 l
S
0 O
0 g
252.7373 326.9664 m
253.8748 332.3126 l
255.581 327.0802 l
B
274.6908 308.7666 m
279.3545 307.1742 l
274.5771 305.923 l
B
0 To
0.455 0 0 0.455 360.5708 336.6351 0 Tp
TP
0 Tr
/_Times-Italic 18 Tf
(+E\r) Tx 
TO
0 To
0.455 0 0 0.455 354.2009 403.5191 0 Tp
TP
0 Tr
(+E\r) Tx 
TO
0 To
0.455 0 0 0.455 309.6115 409.6616 0 Tp
TP
0 Tr
(+E\r) Tx 
TO
0 To
0.455 0 0 0.455 261.6097 408.7516 0 Tp
TP
0 Tr
(-E\r) Tx 
TO
0 To
0.455 0 0 0.455 312.3415 349.3749 0 Tp
TP
0 Tr
(+E\r) Tx 
TO
0 To
0.455 0 0 0.455 310.9765 362.5697 0 Tp
TP
0 Tr
(-E\r) Tx 
TO
0 To
0.455 0 0 0.455 352.3809 351.8774 0 Tp
TP
0 Tr
(-E\r) Tx 
TO
0 To
0.455 0 0 0.455 313.2515 389.4143 0 Tp
TP
0 Tr
(-E\r) Tx 
TO
0 To
0.455 0 0 0.455 297.3267 467.2182 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
(Evaporation\r) Tx 
TO
0 To
0 0.455 -0.455 0 334.1812 316.6154 0 Tp
TP
0 Tr
(horizon\r) Tx 
TO
0 To
0.455 0 0 0.455 262.2922 310.2454 0 Tp
TP
0 Tr
/_Times-Italic 14 Tf
(Space\r) Tx 
TO
0 To
0 0.455 -0.455 0 260.9272 317.0703 0 Tp
TP
0 Tr
(Time\r) Tx 
TO
0 To
0.455 0 0 0.455 353.6758 372.7546 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
(Quantum \r) Tx 
T*
(vacuum\r) Tx 
TO
0 R
0 G
385.1405 363.1297 m
366.4857 363.1297 l
S
0 O
0 g
367.3957 361.7647 m
362.7321 363.3572 l
367.5095 364.6083 l
B
0 To
1 0 0 1 300.8528 286.177 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
10 0 Tl
(Figure 12\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

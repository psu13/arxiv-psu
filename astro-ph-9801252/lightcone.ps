%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (coco) (cucu)
%%Title: (fig1.ps)
%%CreationDate: (10/09/97) (16:02)
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: 97 313 415 435
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 289.5 360 289.5 360
%AI3_TileBox: 0 0 538 781
%AI3_DocumentPreview: Macintosh_ColorPic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
u
0 O
0.9 g
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
164.3506 374.1246 m
168.2025 377.9766 168.2025 384.2221 164.3501 388.0745 c
160.4981 391.927 154.2526 391.927 150.4007 388.0745 c
146.5482 384.2221 146.5482 377.9766 150.4002 374.1246 c
154.2526 370.2722 160.4981 370.2722 164.3506 374.1246 c
b
157.3756 381.1 m
B
U
u
228.0251 363.5497 m
237.7176 373.2417 237.7176 388.957 228.0247 398.6495 c
218.3327 408.3419 202.6174 408.3419 192.9254 398.6495 c
183.2329 388.957 183.2329 373.2417 192.9249 363.5497 c
202.6174 353.8572 218.3327 353.8572 228.0251 363.5497 c
b
210.4753 381.1 m
B
U
u
356.7243 400.9129 m
380.975 400.9129 400.635 404.332 400.635 408.5498 c
400.635 412.7672 380.975 416.1863 356.7243 416.1863 c
332.473 416.1863 312.8131 412.7672 312.8131 408.5498 c
312.8131 404.332 332.473 400.9129 356.7243 400.9129 c
b
356.7243 408.5498 m
B
U
u
356.7243 384.295 m
370.0797 384.295 380.9071 386.2894 380.9071 388.75 c
380.9071 391.2101 370.0797 393.2045 356.7243 393.2045 c
343.3683 393.2045 332.541 391.2101 332.541 388.75 c
332.541 386.2894 343.3683 384.295 356.7243 384.295 c
b
356.7243 388.75 m
B
U
u
356.7243 370.9044 m
361.6445 370.9044 365.6337 372.0438 365.6337 373.4501 c
365.6337 374.8559 361.6445 375.9953 356.7243 375.9953 c
351.8035 375.9953 347.8148 374.8559 347.8148 373.4501 c
347.8148 372.0438 351.8035 370.9044 356.7243 370.9044 c
b
356.7243 373.4501 m
B
U
400.635 408.5498 m
357.1743 364.0001 l
313.0746 407.1999 l
S
285.1748 387.625 m
285.1748 369.1751 l
305.8746 369.1751 l
S
285.1748 369.1751 m
275.7248 359.2752 l
S
285.1748 378.625 m
S
0 O
0.6 g
0 w [2 2 2 2 2 2 ]0 d
283.1498 378.625 m
294.8497 378.625 l
B
295.2997 378.625 m
295.2997 366.9251 l
B
1 w []0 d
288.3247 372.3251 m
295.2997 378.625 l
B
0 w [2 2 2 2 2 2 ]0 d
288.0997 378.625 m
288.0997 367.3751 l
B
284.0498 371.8751 m
294.8497 371.8751 l
B
1 w []0 d
293.7247 375.0251 m
303.6246 379.075 l
S
290.5747 377.2751 m
293.2747 384.925 l
S
u
0 O
0 g
158.0506 380.4246 m
158.4232 380.7972 158.4232 381.402 158.0502 381.7746 c
157.6776 382.1472 157.0732 382.1472 156.7006 381.7746 c
156.3276 381.402 156.3276 380.7972 156.7002 380.4246 c
157.0732 380.0515 157.6776 380.0515 158.0506 380.4246 c
f
157.3756 381.1 m
F
U
u
211.1502 380.4246 m
211.5228 380.7972 211.5228 381.402 211.1498 381.7746 c
210.7772 382.1472 210.1728 382.1472 209.8003 381.7746 c
209.4272 381.402 209.4272 380.7972 209.7998 380.4246 c
210.1728 380.0515 210.7772 380.0515 211.1502 380.4246 c
f
210.4753 381.1 m
F
U
u
123.5205 381.2179 m
123.8931 381.5905 123.8931 382.1953 123.5201 382.5684 c
123.1475 382.941 122.5431 382.941 122.1705 382.5684 c
121.7975 382.1953 121.7975 381.5905 122.1701 381.2179 c
122.5431 380.8453 123.1475 380.8453 123.5205 381.2179 c
f
122.8455 381.8934 m
F
U
u
357.1743 363.0453 m
357.7012 363.0453 358.1287 363.4727 358.1287 364.0001 c
358.1287 364.5271 357.7012 364.9546 357.1743 364.9546 c
356.6468 364.9546 356.2194 364.5271 356.2194 364.0001 c
356.2194 363.4727 356.6468 363.0453 357.1743 363.0453 c
f
357.1743 364.0001 m
F
U
0 To
0.5 0 0 0.5 369 370 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
12 0 Tl
0 Tc
0 Tw
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 372.5 368.5 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(1\r) Tx 
TO
0 To
0.5 0 0 0.5 387 381.5 0 Tp
TP
0 Tr
(2\r) Tx 
TO
0 To
0.5 0 0 0.5 405.5 401 0 Tp
TP
0 Tr
(3\r) Tx 
TO
0 To
0.5 0 0 0.5 384 383.5 0 Tp
TP
0 Tr
/_Times-Roman 18 Tf
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 402.5 403 0 Tp
TP
0 Tr
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 116.3265 427.5 0 Tp
TP
0 Tr
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 155 427.5 0 Tp
TP
0 Tr
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 209.0865 427.5 0 Tp
TP
0 Tr
(t\r) Tx 
TO
0 To
0.5 0 0 0.5 159 425.5 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(2\r) Tx 
TO
0 To
0.5 0 0 0.5 212.5865 425.5 0 Tp
TP
0 Tr
(3\r) Tx 
TO
0 To
0.5 0 0 0.5 119.8265 426 0 Tp
TP
0 Tr
(1\r) Tx 
TO
0 To
0.5 0 0 0.5 284.5 362.75 0 Tp
TP
0 Tr
/_Times-Roman 10 Tf
(300000 km\r) Tx 
TO
0 To
0 0.5 -0.5 0 281.5 369.75 0 Tp
TP
0 Tr
(1 sec\r) Tx 
TO
167.478 372.3494 m
168.0351 370.5197 l
166.3643 371.0768 l
167.478 372.3494 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
164.495 374.0598 m
166.7621 371.7927 l
S
0 O
0 g
1 w []0 d
126.5243 379.4076 m
127.0814 377.5779 l
125.411 378.1345 l
126.5243 379.4076 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
123.5412 381.1176 m
125.8083 378.8505 l
S
0 O
0 g
1 w []0 d
231.1778 361.9086 m
231.7344 360.0789 l
230.0641 360.636 l
231.1778 361.9086 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
228.1948 363.619 m
230.4619 361.3519 l
S
0 O
0 g
1 w []0 d
189.6332 400.3509 m
189.0765 402.1801 l
190.7469 401.6235 l
189.6332 400.3509 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
192.6162 398.6405 m
190.3491 400.9075 l
S
0 O
0 g
1 w []0 d
147.3722 389.9893 m
146.8151 391.819 l
148.4859 391.2623 l
147.3722 389.9893 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
150.3552 388.2793 m
148.0881 390.5464 l
S
0 O
0 g
1 w []0 d
119.1664 384.2995 m
118.6093 386.1292 l
120.2801 385.5726 l
119.1664 384.2995 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
122.1494 382.5895 m
119.8823 384.8566 l
S
0 O
0 g
1 w []0 d
120.2999 378.234 m
118.4702 377.6773 l
119.0269 379.3477 l
120.2999 378.234 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
122.0099 381.217 m
119.7428 378.9499 l
S
0 O
0 g
1 w []0 d
148.3667 371.2955 m
146.537 370.7384 l
147.0936 372.4092 l
148.3667 371.2955 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
150.0767 374.2785 m
147.8096 372.0114 l
S
0 O
0 g
1 w []0 d
125.1522 385.6319 m
126.9819 386.189 l
126.4253 384.5187 l
125.1522 385.6319 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
123.4418 382.6489 m
125.8758 384.925 l
S
0 O
0 g
1 w []0 d
229.4278 401.9614 m
231.2575 402.5185 l
230.7004 400.8477 l
229.4278 401.9614 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
227.7173 398.9784 m
229.9844 401.2455 l
S
[]0 d
177.1399 420.8554 m
177.1399 345.031 l
S
0 O
0 g
1 w
191.8598 359.862 m
190.0301 359.3049 l
190.5872 360.9757 l
191.8598 359.862 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
193.5702 362.845 m
191.3031 360.5779 l
S
[]0 d
141.002 420.6651 m
141.002 345.7406 l
S
0 To
0.5 0 0 0.5 308.5 368 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Times-Italic 14 Tf
(Space\r) Tx 
TO
0 To
0.3535 0.3535 -0.3535 0.3535 269.25 346 0 Tp
TP
0 Tr
(Space\r) Tx 
TO
0 To
0 0.5 -0.5 0 285 390 0 Tp
TP
0 Tr
(Time\r) Tx 
TO
0 To
0.3535 0.3535 -0.3535 0.3535 298 380.25 0 Tp
TP
0 Tr
/_Times-Roman 12 Tf
(light\r) Tx 
TO
0 To
0.5 0 0 0.5 305.5 376 0 Tp
TP
0 Tr
(forbidden\r) Tx 
TO
0 To
0.211 0.453 -0.453 0.211 295.5 387 0 Tp
TP
0 Tr
(matter\r) Tx 
TO
u
0 R
0 G
0 w
411.6239 344.6503 m
411.6239 420.2498 L
261.3249 420.2498 L
261.3249 344.6503 L
411.6239 344.6503 L
s
336.4744 382.45 m
S
U
0 O
0 g
1 w
166.3269 391.2569 m
168.1566 391.814 l
167.6 390.1436 l
166.3269 391.2569 l
f
0 R
0 G
0 w [2 2 2 2 2 2 ]0 d
164.6165 388.2739 m
167.0505 390.55 l
S
0 To
0.5 0 0 0.5 134.25 334.5 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Times-Roman 18 Tf
(\(a\) Spatial representation\r) Tx 
TO
0 To
0.5 0 0 0.5 305.25 333.5 0 Tp
TP
0 Tr
(\(b\) The light cone\r) Tx 
TO
0 To
1 0 0 1 232.5 315 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
10 0 Tl
(Figure 1\r) Tx 
TO
u
0 R
0 G
0 w
248.5 345.1003 m
248.5 420.6998 L
98.201 420.6998 L
98.201 345.1003 L
248.5 345.1003 L
s
173.3505 382.9 m
S
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

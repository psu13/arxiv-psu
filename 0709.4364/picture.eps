%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: picture.dvi
%%CreationDate: Fri Apr 17 12:39:20 2009
%%BoundingBox: 71 606 411 721
%%DocumentFonts: CMR10 CMBX10 CMSY10 CMMI10 MarVoSym
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E picture.dvi -o picture.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2009.04.17:1239
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: MarVoSym
%!PS-AdobeFont-1.0: MarVoSym Freeware - http://www.marvosym.de
%%CreationDate: Mon May 1 15:10:17 2000
% Converted from TrueType font marvosym-25apr.ttf by ttf2pt1 program
% Some fixes by Thomas Henlich <thenlich@rcs.urz.tu-dresden.de>
%%EndComments
12 dict begin
/FontInfo 9 dict dup begin
/version (Version 2000.0226) readonly def
/Notice (Freeware - http://www.marvosym.de) readonly def
/FullName (Martin Vogel's Symbols) readonly def
/FamilyName (Martin Vogel's Symbols) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.000000 def
/isFixedPitch false def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /MarVoSym def
/PaintType 0 def
/StrokeWidth 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox {-572 -500 1531 1004} readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC1325EB8F274DD24A5D21C056364
13EFC099729365596A8A52075A624087116520034680FDBD3E86220CBF46C2E8
2BA32413E26C0AE960BB760BE98B2E1348D6A21CDB5429260899F7FF77617B00
E876499AFB997425D58673778E90672CE2F26C816F6EF6C1F6F0724D575749C5
5AE9D8CD0337709436E75CF2354AFBA7974814727450620BF79E10457E31E899
430F90AC9865F70FE6B6777C3B647DBF5479B987AFBD6DBAEA380CEC42950CA1
9398EFFA572C3D88ECEE6523DACCC701919B55E87CC55FA9748CC9B8B7437DCB
73F59A598B1DEE6D9B8B02B23ED8D2DA06C7559219209DE3E0F3221BA1FA0802
3C48B826FC1B77EB22B5B8A1ACF8F222FE92D6DB832E6B123D71C468C6D7D870
2E32BF42FA43668347363F369DFACEB2120261222CE1091D3E923A1C938268E2
E22702717BCCF7CE653CED8C9347838999316DCC9B602F693AB94FCD6DFC14C2
D9C8566D06D20FFF2458A63DEC7EFA73F221718C164CD8641FE7252AB203596D
1F6D5AE636A0CB1D726E76E7345FDB920B69420AE972DFD059ED1FA57FEEB0AA
1520468E4143EC31F1FC1F3954E0A1119C513CEA8C2D50F346333BBBB6355456
4A52723980BCD8A10E312D4D5B0F1E1919BDEE6B873C1A8EE9112DEAB1916896
732CA90384970776126ECE146C26145BB0A4495F535D72EA30882CA2431DAEFC
64647331C64BDBA3E5969750A696012837CA40EDBA2A68BB57633FC534751C24
EC1C8A00A5CBAB5071834CAA3637175A0F8F3DB985834F028AB83B9AEA0AAF7A
AED4A85C93979445E8D1CF5ADE80F4C8B587EB4BD02EBE9B0A04E4578B6F5EE0
C7131FC6325CE246D06607A0D78CE254ED972963F838DF8EEBB2FA2E6D21AF2F
89C2392BD75A54629BE1EF6C4EAE7B79B4696FAB252413F7C1D63CEB6E2D85B0
D5FB6810D03E91813588E7FAD9813430BFE87BB9B443E74D32FB0CEC13064CCC
74FEF3F5449C2169315824508717B6A35D470B3D408A038763A6556C7DA932EB
ED3770E7ADD9A871A8E74BE780E44FD678900C46F42419036AE5AC1A669D6AA5
90B4A89F7EEC53B12F891FC2788B1ED17C302309F4CAD848A1E15850423F1ED3
17F4EFAC83F7FD96E99E40E5742DE80A2E03DF694AF85422F8A03517FF6E23BF
DE927E66DA811EF03B7AB81E12323A93C596E5DE6A73DD6D1D73B0BD6705E8C9
89CF9D3B4D1A497516FB5D3048581B016D91F3912977A067A5191F5ECEEF945C
3D41547FABD52CB308C5E65ACE2C5626354F067AC23C115B14D350147DB85126
2E47E9C4EFB4C99BE5B69F4AB11450ACD7FE622161D1105B6EC97617226B0592
AB408F55F461A2D0A9CE1A9CF6AF1535DD3E623E8F01F2C5D4EC0BB9F1E9B1D0
2BF88FC57C3ADE12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC5DE357667FE1A3CC5424
5B83D8A9C8A175D7DB022CAC02C88B166FE4D0C886BAB4897F65A050AF2716D9
1FADD20C56F22E521CF55122C8AE71F243DF7F2320E08DEEE9E16B9D02B12A53
4D8783BB9B6E1F372A5CDB19E254F0D444A6571332F2980FAD7AD6EFFF367B14
66A099275534E2FCAF8EA6FB1EE2AF075AD119331C66CD308708013DC4930C4F
4D98878CEA9A7E77945719F7F16355C9907FF1460B052D97CD159F5B562ED72A
79481D16198464470FE151A0A434DDD3D5EF301900D4AEF4ED0AB5D4A941ED79
EF7BB174E02030A44CD1A8497F57E1F353C8135D3CF265F9019699E95A336D9B
2A68537F4DC70DEB235B3FD5D2E49506B1F9E3FFD3B850E26B2B249C66B982B6
E160DFDA492044A4141D006DAC8CA50B9FEABDFB101F31F01AA06E991CF28CD5
D63C07B59FD0D4221A52DD51C5F014F1CC3377B8313D9B0127
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8880DAE44E785E741414208917CD80A27B544D2C371AE1DD4C74B962FE0
6C9E4F78A1CF1524851A31E448D93E2686DC169605DB18F4593CD393A398E61A
13F97ABA55E344304848F8D935E41A93998A609E4F9E6C75E1A3EA0D3C6801D6
6B2603EF36B80F6943CAE6AF245983B0E5F4FA050A91FA24906398E60967B328
8E5CA68434DB65187AA67FA0ECE952313175ABC0D396A09CFC175E4056B6BE96
9F02193B0E9590548C7C94AD87690833E2AE03F13ABE6C7F549A51DD9AD10423
1FAD7F8462E337192FE0B293E4EDDD4C6103062C2F0EBDFFB88405E2DB1426E6
429A86BE3A9DE953A9ED53536E82CB516572D56DD0043E9FF77A0C5D3B399AF6
19DF9C98B9A2DE697D62DBB3498566BB68547E27A450335BC9A619C226567D17
C7BF4964E2C18D83E2C5CD7D222CAA751EBFE82A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 101 /e put
dup 116 /t put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6208BA8442C2FB5A
696E7E21859EBFBFA7CD4EB0C76171CA80918BB7B7101740C0BC82DB66852575
F0A73AFAC56EC980C4045BAFEBBA7B5939EDF6D38EB52A4B88828D97DCFDFF48
18C925FAFD5FC8CAE4AF1980E8F35CE170D31F2B1669F9839FA2646BDCC70E86
98B905B9CD7FE4F2F92D1127DB031F0A2F6E38A2A32415DA33C79E81684C7DDD
6E260679732A2D20D6BDE27B65F9176558D8B65362F61FD87D9D742336A93039
AF47F5F3FD6ED94DC2FD9C5DEB0FEC3581E275BC94ECEB7B517E88F6126B8A39
2F963B8186EE2454E318F5CC571A951409B0E69BB7A86971A05AF4F329B3BF19
7F1CE08A4D8635BC8BADD348D12AE567FF26A95D677617CAEE4CA4B282C8E1BC
D4D66958AA329DDE6CAB90B3FE38E49F75EC083CE8A49285A45B4BE4AAB05AF4
C971DE2097309D26995CDFC3B366F7A7F361F9470E8C548EDB3CA0CF7B4C1549
5B0944DAB553727A204C65A18A0AFA2C09BA5906BB5D4B098F3CC567E9DA9952
F5F95048B505DD5FA2650C07838E0D553E7E840AF3EA2B0E8D47E0252B74AC09
2A285AF9574D6391C93B9713965E2392693A338B3FC88BC2E1A043811D01AB47
5AD8FF6F8B61ADFEA7DB9D25F0BA34EA859BF991D0354BCAB97DA3AE30F5B38B
66F88795A54D463A07EAA36050E7E054635DF56106EE7EFA0BDED029D2273032
E1C8A5CD079AC68007642674E2484DD26EF8FD57ABE1C76066DBE4C55D5A1735
6BFF90E05A02F67ED69DA2E1D1953EA6D52EADEB8B77B8CA55DA0A2630410616
F557337F699747DE79A218F2B7E30705783F66E543312773DB20C8871D951DEF
EA21F3727FD4CD4EFA0FA655EA077372B37DB21C2ED02E8630126C4A68FAC09F
8171475F9DA7CA18F2AC43D606315663CD60F3F6139229FFED7CED5A540BB4F5
41CB7950F0DF2DFF3376A7B4CFFF23BF52172E971D0B9EC0D81C398642DA633A
244B68722D305211BC3EA16E534B75D0127C9057DD9240FC643102731B769E9F
F3D5D0323FE3AACF4FDA6B32B34766E41DEA19E8CA2B82CC7C6717B211750A5D
A2253B56F2761791F32580D3C482EDAB460A71693C0291FF659097726268615F
3A672EFAB145A51D460463C3D390C3EE8D87D5BA27B8599473C9186B2AF0DB5F
07CD4F63F5566C7D16CFF7CDE8A0AEF139EE758ECD95A2E9DA05378747456905
32E55331A2D740B1809BCB36E1F13B326311F7D03A2BAEE174CABE43E1EA14C8
7E147C35B1E01C6A580F112974DF70D658EF10E66C4DAFA081A537034F41B953
919A086B6328628B1386C3A45E88E35D4523C6B3C792979DF5F9E58401220229
131096C30E5F0AAED6BB6B3B79A9872EB72AEFC1C63C528DB88C3760C1940E6E
BFCA3F9B18106D8D9CE3BA5463BD0773AB4ED1D0F5C305FA3BA7C8AC315CE3F6
612BF84D385DED278222DDD3B375036D61A3425A338AE0B3B737D622C8BEEB63
447BA6D0BC34C0408039883BBDE159A1EFCDC0E6176F7B21EACF77939AA8800F
02C84DEDB0A726D0B1808830130D09C83A6D998DECF22C419B85BE4C9A6063AC
BEAE5E0EF0CFBCF055753E24F7D4BCD6189F400D718535C20FA2587156B2C1AA
2741821B6151FA817D2D8354F99F37787CD8AF189BE0E104C1EEF3EADA2803B2
652A06
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 45 /hyphen put
dup 67 /C put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F099107F
153E3FFC70BED6D04DB4820FDAC002428C6741B91D8206296D827D3171351E85
39BB0DF1C2457E876D3A2E7E499D9D4104762FD19BA0526D38D2BF751EC56EB5
C80EE2A7AAF2CA12D1EB4548266CE8C0D2F93158A6728EB552FA09202865142F
E8D1300D637E64C338DCAE28398846CB3752FA92F87103C231C0D072E20D0E00
0DBE4A0656BE7F021DB863F63DE612622FCCA2C5462EA92B205DD2FB6D547ED3
D559010FF2C4113755D38F0B959DD34D98A0D0401AD3156A3B3D6FBE90EA40D6
F8B539EDCB0A1EFE2AAAEC6B56780F9312CE3CF757F815AD506873D2884BFED0
EEBBC826E2C4F589833F5EA07CD65AA558F72555F8061BFAC39CF05FFEB8A713
A38A6FFBC9C160912580275C2798AC4914F4FE26402FF8E0DD5E05A2797D32CA
927B17A043D2C98CC8D7CE4361A530160D6800FA73D978E1796541AD1C5491FF
429219E5FE8E29DDD1C2F95BCF4DDE686FCDFA4FB85C35B69B35AE7C537FD5D2
5484B3B15DA02F10D3A742CA1EE36E9F066E8A511FD67EB16E0B5A8C31791343
BADA5C89355A821D24136570B4C3191D8A4E83102B81DC22CDD8965A3A06E594
5370133F24D4459BAE142E8D1127410CBF3FB55CA2103C2361873B9DCBFF350B
E438066C8B83FDBA9B760727B86AE21A3902C70D0E7B7752A71B49DE4E43BCB7
FFD152AF9EB2A58966AD8111A9B4017DF50D37642401D40DB27CF943A642D92B
7D79D8A60920DAD73421F9D738DBD7BB8F06EE909DE8C5040FE630E1FAFDB99D
FF29348A9EE2018FB282CFAA64F3E547A9376085B2F8B5D563D041081CD94D8C
B06C66C5A798A8B860789E87CB4A96F6CD4B491E60CAAD42FF14EB234DFCE82C
52546FD8789BE6E984EEB17413F681DD40538D5619ED3622E779267CE7A1661D
3B7FE5E41C5473D01E3F3839463DCBA4AF3C5BD0043E718C7ED19B1872797CD2
3E047D2059B27AC60845929A4E6A3577F575E46A165BD96699D4DBC7D564AE06
64580AEABAD8D74D966C7D728720BAA9EF51BE0E4963AB490AF088E7D8169554
72DC54EAACB6EBB53783FA8A744BC51B0195046A5EC1D97CBBAF751A818E3B4E
FD79629366A4D6A88AA5BDB0F970E4F35F304721F4E6DF0ADDA87193AEAC280B
BEA94B1442E15C9948E8568A3F043F33B168B273DF9C6878B51A68D597060BBD
74AF40EE99287DEA59A0F592AF561E0E3D610A4CB4C2A5B20CF86F82F64CFDF6
4F71A2BC27F87B02249ABE1484E41CED8F233A8D296A852682922306D1809A85
A8DF6184E89B98FA7B35390BE05028711B0669B3A96B65B069585F3CEFFF64F6
15520AFE75189CECADC9639F383941B180C6DDFB3995DC4341C0F6CB6429B179
7F2A7D8A045E8D3BCB7C52F8D538E47D0E806C974FF5BCD9D8B1028052D10D47
923DCFC03F6CA0325820B09C44A405C4EC8BFFE01D3F8D12114D37FED9E68B28
5A782C645ED88F4A94003A2263C7971FE2FC558DFE6815CDBC3B01911B6BFC3F
CBA6574B386BDF3FFE2DB2CB0A4A9978D9C55B86F02C5318500545EDB6ACCBE4
6D2047C2A22C2725D7A08C28371DE57B08472F80E0C132ADD6D4393DBC3396AE
3DC96B9F1640C97D6CE4D57AFDFCA92188301C2A02C58356CA1978962D816210
08E09BC3D5039A1BAA220FC9D7B804143D72C154C665EA5ADC79ABBD7F3C787D
F420264F3AF37EA359BF30ABC26DA540E43343F41D1327AE61BA6EDD87536B45
65ECFB9FB91C800DBBF4DEB9BE229259C21D2854968A5C0BB7FADF7ACA917570
BE723D1135D8C3ED61C46E2DE9D0C654EE6FD0B0629ED82A42541AAA7BCE5FC2
58FB3CB74202374A6717921AF0BD877A05E413BB5336CEE28468B5F2FCF168F4
1C7C369E1569AFDA953CB3B254448136FB5D51FB5F25982BDC53E343733424D8
26572E566DCE218435BE3AF6731352F421EC650A81FAF703BAA08D195FF11BFB
90E0AF110D4F45904BED2375D08E2711972449EF54C68A51A5F65E4A06503584
F55D1F3E4943D7B921A7B288ECF53F7A89279BDE37C09701FE716AF12D95DAEE
002551DDDFEEE93EBE7C5739A0D1A16FD17E0624256BE685AE244AEA17BF8A15
DDEE8FCFA3D8702BE4501E208E06AE38DCC9C41F048E1075FEAB530AE0AE16BF
E736BCF67DA7057F7396EEF73EBC7BDA23D95E54A29DEA2EE144526DE5D9E515
DCA784DA142EF5635E88A1FD31C7C9331447C8FCFBE554BD4E37D59ECA13416C
A2A3F2FE7F511EDDA9F7930523D13AF1F65182977D424E67C1AC5080C9C1A910
1E238EB0D7943E8C6BA580766E71B47CCFB960084C5E014E2ABE8A063B9A07F3
071C785072651EF21E70F4717F4B97914121ABADABB4A5B57D81A354926920F8
5F6D5E521E6C8858B59980DFB12C0DD0FDBCC70B1531A525655F0FBCCF2C17F7
0644EDDFDF41C8EB85CD7545656770F4DECB7B97EF0033AFA86FE2B25388CF4F
397A9E578F84FA9F8AE087F54C895754BB54D224AFC234EEA30FDD2520B9D39D
46E947E632E1B620F8D04A8A6F07B05E38C6B7AE86FA7A13344A6AC78CC3183D
CD3AEF8A34CF69557ABF7D8D519AC23DB3F62481C6DE7167669C4CAAE6FAEE8C
960B6A75BB18EBAA005EEA0FD2A89BD239FA4AF068393E46D0F6CC3C778827F4
A6EA2EF85B57ECF421317766B120824E1B64D380E6252D6FEE7C122E47187492
0129437607BF7C1DAFEB80A6A07DAB7EF97446C4CEFCAE582706C485A1AE1CF4
A15B07BD93CA2CCCA33C4FC230C493E76EAD54FDFC2B2961CFB590C2008D22E7
ABEDEA4034582F10A55A4253DE29AA6A3507B8CC92786214B5AD4F372BD422F9
621244547589051985CC31A9455EC68CB32E2B813483A4A3A48279DFE5CD48B9
438CC994EAF0FACACC9CE299D068210B9B12071F0D488B0527DE35BA53C426CE
13EF15515625F46B648F075BF3B626B1F8ABE2E960B681938883389F35064391
310AD927509EBEEBE20642B84938405D8139CE4E54FF05794F4BF96C04A1A679
B74BFA55ACD535A59E02427917B227C2C2AC28276C9EB7E6C7456370659BC056
C37B6E0F96591B9D82146A5D14B6D121DD8EFF10F5A7EB86978CA936026C041B
6C39E7C589813275655FA1C200A71C9C3D083F9FD73F7DFC60518741005B732F
A9AE551D2FBF9A47B4C7730CBB1EE542686EC1EBBB898BDBE22897B5A5EA3ADE
BA8C9862D56A2EDB0EEF2337FA5EFFF79585F0E45A06E084E1AD3123BCE937DF
FA9FA0B3245D215610CEA26F22FEB70B5C9CFD80C3E9B7E00D738915AF4F09AD
AAA57AAFD5A1C9C04F7FF9D0AF5657023B5137D613DBB489E6EC57D270500B85
F8382F16C0034DFACE457636FAE313CBC2E7D08114C693F8A8ED2E7A0B0B15D8
FEDAF7859F3324DDC975796E50624B71BF3592D2E8F4B831D03CA9255F116BC7
B0332EA6A8D2C41EDAFF9A3D1E3D99EBEA4B3586169FDBF43128F25494921066
B46FA8034249597343C02DB31363BEAE763BB1382639C9EDD65D164D6DA52BCF
225A614E486B2F0910B4D468B2733480D34C09A1D56D52E37173F9E83ADF998B
094E3BBEE22EA57020388CAD7E0DD9DD1728C41075983016EC9543B6D2B7E7BC
E3C0339F41639BA87A7C8B599B0943D64ED70245AC25FBC3E270EF8BF0E01E11
B0E7CAF20DEF042FD90F93ACB3869907D20F265A6054D54CFC66A9E058CBD084
1607D0FB36B9B7660D5E448FD5749DD4D0D65390A6343A2255359DF214F09E29
AC56D9A6A3923C4117189780F48CF5EC5CA49BDD0CF7EBAB0B725F5EA901601F
BB982F4C1CC4A7A1689FD22AE4DD576010C80726037EF909F185C93CF42B7457
5AA6A7D7FC3925DB34A0701A4957E7A2138515E768B414AB78E78624E98ED4DC
AAE23D8E5E67EBA07C2D64B478CDF91599DF5425DE9DD1D51A35865911796794
A20C959EE1D19A76E8EF47713C2F62975871240DFEC8C6FFFF9056C6D1079040
8994B0BDBC3AD39A5881C247958D29C62E2A3A8B32792B4713C067AD1156FBFA
D3A3E246290986695405FFC71278666B1327B45712E5C62B8F796D57812AC8C0
8A3B410BC1D9F276042368A400CE6153C4D00028205C951BEADF25EE5D240A07
5A984E2A38FEBD325CA68E3FFF1483D418885DB4BB7DE16676A6A5D5E881ED07
B9B9B2D55E601F8CB85EBA79DEE591EA92B1B3D45B751C65F895D4B53076ACEF
43CF3A734F4CB7BA74279928C67F38EFB1C137DE310BC369DFFED1AE8216378F
D58481230A948E04D4AC54417210C93AB69A1C101A4A7EC3895E09449E4B3203
354FB8910A55FD784F9DADEA9275133BA138868CA36887DC69B350C99FD03A9B
E6CA3EC2FB5C2370D8439A1ECAB22C399B99646695861C0826E6AB944C3E4129
F38632F738C62BA2B888BE8AE80BA0165A7A4432A892AD1C6CCCC484C0CF090D
A5C6FF6645002B4CC5E34B232DE30B54736F2381D5FEB4232E6B804124A50179
AEC02C371C8D6DB8CA6CB8DB3E6E4AC8CD6B88E7052E74EAA0BE0267AE6D3F24
A28AEFC660C2843D0132E3B51E26B003A96503584FB92AA11527C1B3730237D1
B89EB2BD09E65E9F9707774AD422C283C15426E495ABED77FDE69D5C1B0C21F2
D5214E52089BC3A9105E85E30FC8E419873425FF774FF936427AD07EFDE0452C
FF5EC9FB57B8FDEC7E9093D68BA0D61D5FEF9C9B28AAE4408C8FD8D6C4CE70A9
BCD0033E82A25ECBDAE9691C0503C8ADAD9F7EA40C66C961DF3E9FD9D8F385E5
0BA6DAC666C2E1F2D7B6055F3D014C5CE75DE8A9D5E0665D8C44733FD1182817
F8C880A419E3E11CC82F8C9E4E04004B474D60449AA265A615DAEE0A897BF323
AB15444617FAEC20C26385B69E161A280C656033A6313FAD95093386141B988E
942567589BB4A3DD96FA7169D84277D4FA1079F96A9BF050F1D0972F8E7FD306
43AF8DDAD98314ACA0621DF4A9F970400B9BF1970E53FA42C9626A3899D99A20
15406400A7421EC3DEF27CC4618306E0BA313A41EB5EF8FBC09D8A1F556827AA
C1FD032D677D0FEB3B689C7671FE6C542D91721528EB01B36997608581601783
8F442750F36AEF0B34EFC4E131B7FD9A456294A1DDA7F4DD0D6922025CB51E18
81CC663D455CF048984D39E44AE3E80497189502F9CEFB28456B461FEF5013FF
B9DC9216316689874E174F778F0F9BF0FAB71104AB39D55B11EF3AB38E0B431C
4F4E80D5AA8A23B420717C40DDE858B8099C7CDF36C30099CB9D9508C404DE8C
B1552B07DC2D99F8F1F9A2CDCF241EE6AAEE375E762E1AB9F173C148AAE0D596
852E30F436289806D189988150BF794A6525F79D388D2B05CA9AD31D492D5162
2C05671ACA4FDCCDC242AF02171010A85FDC06AF57015A2E0EC162EBC7CFE21B
D7003A40968DA47A90456A4D58AD5301C139B20A62DC67A0AA42946B6DFE4112
C9D3C7BCABD55ED44EAB421E34404EDAA8F015F6136312699538E580B889F48A
0520E2164E220C89FD95248EF489A330FA1DF4CAAC863C5EE96112607622DE35
BA53D555C807C9E5C752F99C7602F8CCA37BF79AB4CF6C49F0D3F281071CBE55
94BBF46A53B462145C55276E8EC3855F9E02A3FF32DDC74FFBC8209C81A6A419
215CF27DB78D08C6304CCEBB73BCBB4E55DFEE83B242F5DF345E5326A6935070
643EC40D7C402B814CB2B2BA3C3498B2EF9828D0EE1C98D68C5C974442389019
FC771820D012AC827CE527827D35FE757848C6865D7A91C14D2ACDB69B34B04F
E7043DEA42DC5664F870AAF089CAD8EE12067072E785B0B23E84B47B30A661EE
2AEA6C3320EDEB214A76AEBE1A8FA04D406A30A8CEF9607947218C550600DE06
51D8F22E5D9AFE01597908E1FE2174B41E29265816BB7395F2B5F40C28A5DD0E
2B27BE4DE59F08FD5397998AA67CEDD5E6C769744B50D998493EF42D9262900D
42ECAEDA2CADB0081D83D9457F1C2BA73AFFBAE384016E157125FD02E2B39F32
D7C6BC38D03D0303F73F8E42DFB693BC9F78463C40F02969B75877FA61AA1D00
110AF378F3A4264099F19395EB19ABB9644105BE9066149F6019AAD87B8EE627
D557EC9F2E273B363A2E9BD00838612E410C64DFDDB6FC85E290F166888FAAC6
9D58A19A824F12C7BD6E611803EAAE4F0696052DE56FDDA85729B3F237093AC1
28001738C3CF4503EB430083FEE3CF38010730FC507465FE55E9033AB36FE1AD
75577CDE886E163C6FB19783B13AA45B748E2843FD1AB437B9E44FE4E69ED3F2
8CEF5E63266F8A09B397976D4CB830D0D55120A8D02B49B4A7FDB5000CD95A28
A77F24C8A47E9F24D04CB4E8951D7EEEF5379EADCE0BC34E04E53EF7AF698135
2211F2DF46DC5ABD3E0C7080A336AFCEBE57F6429B0CD63E3C5A8F010EE8A962
D3D651CF49AAC230288D871238CBD1CB8881BD5B190F408887C9C96105DE434B
2AE5CA30F98D03E150CC4D2AF718E44FED0962F7084DEE42D07DCE46C8C69D68
EBED7B355644C67EB0C6A60F91A9A2C3C2B053D051
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (picture.dvi)
@start /Fa 135[57 120[{}1 119.552 /MarVoSym rf /Fb 190[62
65[{}1 83.022 /CMMI10 rf /Fc 171[45 84[{}1 83.022 /CMSY10
rf /Fd 139[37 14[44 17[53 83[{}3 83.022 /CMBX10 rf /Fe
134[44 2[44 46 32 33 33 1[46 42 46 69 23 2[23 46 42 1[37
46 37 46 42 29[60 21[28 2[42 32 32 40[{}24 83.022 /CMR10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 945 a
 tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip setmatrix end
 0 945 a 0 945 2816 945
v 2816 945 a
 currentpoint grestore moveto
 2816 945 a -2627 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.3 true 113.81097 0.0 227.62195 113.81097 .5 Frame  gsave .95  setgray fill grestore gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.3 true 128.03734 14.22636 213.39557 56.90549 .5 Frame  gsave .9  setgray fill grestore gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 0 139
a Fe(am)n(bien)n(t)27 b(top)r(os)g Fd(Set)189 945 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 110.96552 99.5846 65.44139 99.5846  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial 0 318 a Fe(C*-algebra)189 945
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 139.41826 78.24504 29.87546 78.24504  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial 0 552 a(top)r(os)g
Fc(T)21 b Fe(\()p Fb(A)p Fe(\))29 b(induced)f(b)n(y)f
Fb(A)189 945 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 139.41826 49.7923 91.04869 49.7923  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial
0 732 a Fe(in)n(ternal)g(C*-algebra)189 945 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 153.64464 28.45274 54.06003 28.45274  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial 2248 265 a(mathematician)2197
340 y(using)g(meta-logic)1696 281 y Fa(x)189 945 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 190.63329 85.35823 244.69376 85.35823  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial 2180 619 a Fe(in)n(ternal)g(observ)n(er)1814
635 y Fa(x)189 945 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW .5  setgray  /ArrowA { moveto } def /ArrowB { } def [ 204.85966 42.67911 236.15785 42.67911  /Lineto /lineto load def false Line  gsave 0.5 SLW .5  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def 142.26372 78.24504 Dot end
 @endspecial 1386 288 a Fb(A)189
945 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def 156.49008 28.45274 Dot end
 @endspecial 1504 681
a(A)p 1504 694 63 4 v eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

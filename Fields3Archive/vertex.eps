%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 121 1197 195 1251 
%%Title: vertex.eps
%%Creator: Canvas 
%%CreationDate: Friday, December 18, 1998
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def
/mo{dup dhOdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known 1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
F debug
0 id
1 fd
0 2448 translate
1 -1 scale
%%EndSetup
/DeviceCMYK scs
0.0000 0.0000 0.0000 1.0000 f4
0.1250 0.1250 sp
1 lc
T sa
%%DSIBeginObject: #1 - Ref:577 Group
%%DSIBeginObject: #2 - Ref:655 Line
0.0000 0.0000 0.0000 1.0000 f4
1.0000 1.0000 sp
0 lc
11.5 lm
0 lj
np
121.5151 1224.1229 mt
195.7651 1224.1229 li
ds
%%DSIEndObject
%%DSIBeginObject: #3 - Ref:565 Group
%%DSIBeginObject: #4 - Ref:566 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
136.2679 1223.6889 mt
136.2763 1223.3003 136.0949 1222.9913 135.7150 1222.7474 ct
135.3352 1222.5035 133.7631 1221.1795 133.5844 1220.8732 ct
133.4058 1220.5670 133.3101 1220.2526 133.3172 1220.0308 ct
133.3243 1219.8089 133.5505 1219.4182 133.8464 1219.2267 ct
134.1422 1219.0352 135.8283 1218.2702 136.2505 1218.1105 ct
136.6728 1217.9508 136.9293 1217.2432 136.8972 1217.2398 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
136.2679 1223.6889 mt
136.2763 1223.3003 136.0949 1222.9913 135.7150 1222.7474 ct
135.3352 1222.5035 133.7631 1221.1795 133.5844 1220.8732 ct
133.4058 1220.5670 133.3101 1220.2526 133.3172 1220.0308 ct
133.3243 1219.8089 133.5505 1219.4182 133.8464 1219.2267 ct
134.1422 1219.0352 135.8283 1218.2702 136.2505 1218.1105 ct
136.6728 1217.9508 136.9293 1217.2432 136.8972 1217.2398 ct
ds
%%DSIEndObject
%%DSIBeginObject: #5 - Ref:567 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
136.8622 1217.8482 mt
136.9758 1217.4764 136.8851 1217.1299 136.5858 1216.7919 ct
136.2865 1216.4540 135.1330 1214.7529 135.0442 1214.4097 ct
134.9554 1214.0664 134.9488 1213.7379 135.0158 1213.5263 ct
135.0829 1213.3147 135.4067 1213.0001 135.7434 1212.8962 ct
136.0801 1212.7922 137.9105 1212.5138 138.3603 1212.4748 ct
138.8100 1212.4358 139.2490 1211.8244 139.2191 1211.8124 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
136.8622 1217.8482 mt
136.9758 1217.4764 136.8851 1217.1299 136.5858 1216.7919 ct
136.2865 1216.4540 135.1330 1214.7529 135.0442 1214.4097 ct
134.9554 1214.0664 134.9488 1213.7379 135.0158 1213.5263 ct
135.0829 1213.3147 135.4067 1213.0001 135.7434 1212.8962 ct
136.0801 1212.7922 137.9105 1212.5138 138.3603 1212.4748 ct
138.8100 1212.4358 139.2490 1211.8244 139.2191 1211.8124 ct
ds
%%DSIEndObject
%%DSIBeginObject: #6 - Ref:568 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
138.9503 1212.3560 mt
139.1566 1212.0265 139.1591 1211.6683 138.9578 1211.2642 ct
138.7565 1210.8602 138.0844 1208.9178 138.0878 1208.5633 ct
138.0913 1208.2087 138.1702 1207.8897 138.2899 1207.7028 ct
138.4096 1207.5159 138.8040 1207.2962 139.1562 1207.2833 ct
139.5083 1207.2703 141.3483 1207.4769 141.7927 1207.5561 ct
142.2372 1207.6352 142.8200 1207.1588 142.7941 1207.1395 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
138.9503 1212.3560 mt
139.1566 1212.0265 139.1591 1211.6683 138.9578 1211.2642 ct
138.7565 1210.8602 138.0844 1208.9178 138.0878 1208.5633 ct
138.0913 1208.2087 138.1702 1207.8897 138.2899 1207.7028 ct
138.4096 1207.5159 138.8040 1207.2962 139.1562 1207.2833 ct
139.5083 1207.2703 141.3483 1207.4769 141.7927 1207.5561 ct
142.2372 1207.6352 142.8200 1207.1588 142.7941 1207.1395 ct
ds
%%DSIEndObject
%%DSIBeginObject: #7 - Ref:569 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
142.3952 1207.5840 mt
142.6760 1207.3151 142.7661 1206.9684 142.6700 1206.5273 ct
142.5740 1206.0863 142.3985 1204.0385 142.4887 1203.6956 ct
142.5790 1203.3527 142.7336 1203.0628 142.8955 1202.9109 ct
143.0574 1202.7591 143.4936 1202.6428 143.8382 1202.7165 ct
144.1828 1202.7903 145.9159 1203.4416 146.3274 1203.6273 ct
146.7389 1203.8129 147.4206 1203.4939 147.4004 1203.4689 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
142.3952 1207.5840 mt
142.6760 1207.3151 142.7661 1206.9684 142.6700 1206.5273 ct
142.5740 1206.0863 142.3985 1204.0385 142.4887 1203.6956 ct
142.5790 1203.3527 142.7336 1203.0628 142.8955 1202.9109 ct
143.0574 1202.7591 143.4936 1202.6428 143.8382 1202.7165 ct
144.1828 1202.7903 145.9159 1203.4416 146.3274 1203.6273 ct
146.7389 1203.8129 147.4206 1203.4939 147.4004 1203.4689 ct
ds
%%DSIEndObject
%%DSIBeginObject: #8 - Ref:570 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
146.9531 1203.8826 mt
147.2982 1203.7037 147.4824 1203.3965 147.5144 1202.9462 ct
147.5464 1202.4959 147.9548 1200.4816 148.1380 1200.1780 ct
148.3212 1199.8744 148.5512 1199.6398 148.7493 1199.5397 ct
148.9474 1199.4396 149.3987 1199.4508 149.7086 1199.6187 ct
150.0185 1199.7866 151.4980 1200.8996 151.8405 1201.1937 ct
152.1830 1201.4877 152.9270 1201.3737 152.9146 1201.3439 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
146.9531 1203.8826 mt
147.2982 1203.7037 147.4824 1203.3965 147.5144 1202.9462 ct
147.5464 1202.4959 147.9548 1200.4816 148.1380 1200.1780 ct
148.3212 1199.8744 148.5512 1199.6398 148.7493 1199.5397 ct
148.9474 1199.4396 149.3987 1199.4508 149.7086 1199.6187 ct
150.0185 1199.7866 151.4980 1200.8996 151.8405 1201.1937 ct
152.1830 1201.4877 152.9270 1201.3737 152.9146 1201.3439 ct
ds
%%DSIEndObject
%%DSIBeginObject: #9 - Ref:571 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
152.3255 1201.4911 mt
152.7052 1201.4075 152.9625 1201.1583 153.1099 1200.7316 ct
153.2573 1200.3049 154.1727 1198.4647 154.4282 1198.2188 ct
154.6836 1197.9729 154.9665 1197.8057 155.1838 1197.7603 ct
155.4010 1197.7148 155.8341 1197.8424 156.0900 1198.0846 ct
156.3459 1198.3269 157.4874 1199.7847 157.7422 1200.1573 ct
157.9970 1200.5300 158.7452 1200.6122 158.7409 1200.5802 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
152.3255 1201.4911 mt
152.7052 1201.4075 152.9625 1201.1583 153.1099 1200.7316 ct
153.2573 1200.3049 154.1727 1198.4647 154.4282 1198.2188 ct
154.6836 1197.9729 154.9665 1197.8057 155.1838 1197.7603 ct
155.4010 1197.7148 155.8341 1197.8424 156.0900 1198.0846 ct
156.3459 1198.3269 157.4874 1199.7847 157.7422 1200.1573 ct
157.9970 1200.5300 158.7452 1200.6122 158.7409 1200.5802 ct
ds
%%DSIEndObject
%%DSIBeginObject: #10 - Ref:572 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
158.1442 1200.6402 mt
158.5324 1200.6600 158.8465 1200.4878 159.1015 1200.1153 ct
159.3565 1199.7428 160.7262 1198.2103 161.0375 1198.0408 ct
161.3489 1197.8712 161.6660 1197.7848 161.8875 1197.7985 ct
162.1091 1197.8121 162.4930 1198.0497 162.6757 1198.3510 ct
162.8584 1198.6524 163.5734 1200.3602 163.7206 1200.7870 ct
163.8678 1201.2137 164.5676 1201.4910 164.5719 1201.4590 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
158.1442 1200.6402 mt
158.5324 1200.6600 158.8465 1200.4878 159.1015 1200.1153 ct
159.3565 1199.7428 160.7262 1198.2103 161.0375 1198.0408 ct
161.3489 1197.8712 161.6660 1197.7848 161.8875 1197.7985 ct
162.1091 1197.8121 162.4930 1198.0497 162.6757 1198.3510 ct
162.8584 1198.6524 163.5734 1200.3602 163.7206 1200.7870 ct
163.8678 1201.2137 164.5676 1201.4910 164.5719 1201.4590 ct
ds
%%DSIEndObject
%%DSIBeginObject: #11 - Ref:573 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
163.9837 1201.4135 mt
164.3538 1201.5323 164.7016 1201.4465 165.0438 1201.1520 ct
165.3859 1200.8575 167.1031 1199.7281 167.4476 1199.6442 ct
167.7921 1199.5603 168.1206 1199.5582 168.3313 1199.6283 ct
168.5419 1199.6983 168.8519 1200.0265 168.9511 1200.3647 ct
169.0503 1200.7029 169.3028 1202.5370 169.3355 1202.9873 ct
169.3681 1203.4375 169.9733 1203.8851 169.9856 1203.8554 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
163.9837 1201.4135 mt
164.3538 1201.5323 164.7016 1201.4465 165.0438 1201.1520 ct
165.3859 1200.8575 167.1031 1199.7281 167.4476 1199.6442 ct
167.7921 1199.5603 168.1206 1199.5582 168.3313 1199.6283 ct
168.5419 1199.6983 168.8519 1200.0265 168.9511 1200.3647 ct
169.0503 1200.7029 169.3028 1202.5370 169.3355 1202.9873 ct
169.3681 1203.4375 169.9733 1203.8851 169.9856 1203.8554 ct
ds
%%DSIEndObject
%%DSIBeginObject: #12 - Ref:574 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
169.3634 1203.6639 mt
169.6867 1203.8797 170.0447 1203.8926 170.4545 1203.7032 ct
170.8642 1203.5138 172.8253 1202.8986 173.1796 1202.9123 ct
173.5339 1202.9261 173.8505 1203.0142 174.0338 1203.1393 ct
174.2171 1203.2644 174.4253 1203.6651 174.4279 1204.0175 ct
174.4306 1204.3699 174.1705 1206.2030 174.0785 1206.6449 ct
173.9864 1207.0869 174.4456 1207.6833 174.4657 1207.6580 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
169.3634 1203.6639 mt
169.6867 1203.8797 170.0447 1203.8926 170.4545 1203.7032 ct
170.8642 1203.5138 172.8253 1202.8986 173.1796 1202.9123 ct
173.5339 1202.9261 173.8505 1203.0142 174.0338 1203.1393 ct
174.2171 1203.2644 174.4253 1203.6651 174.4279 1204.0175 ct
174.4306 1204.3699 174.1705 1206.2030 174.0785 1206.6449 ct
173.9864 1207.0869 174.4456 1207.6833 174.4657 1207.6580 ct
ds
%%DSIEndObject
%%DSIBeginObject: #13 - Ref:600 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
173.9782 1207.2171 mt
174.2338 1207.5099 174.5760 1207.6160 175.0211 1207.5403 ct
175.4661 1207.4646 177.5198 1207.3837 177.8582 1207.4896 ct
178.1966 1207.5956 178.4791 1207.7634 178.6233 1207.9321 ct
178.7675 1208.1008 178.8636 1208.5420 178.7740 1208.8828 ct
178.6844 1209.2236 177.9540 1210.9250 177.7496 1211.3274 ct
177.5452 1211.7299 177.8324 1212.4257 177.8584 1212.4065 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
173.9782 1207.2171 mt
174.2338 1207.5099 174.5760 1207.6160 175.0211 1207.5403 ct
175.4661 1207.4646 177.5198 1207.3837 177.8582 1207.4896 ct
178.1966 1207.5956 178.4791 1207.7634 178.6233 1207.9321 ct
178.7675 1208.1008 178.8636 1208.5420 178.7740 1208.8828 ct
178.6844 1209.2236 177.9540 1210.9250 177.7496 1211.3274 ct
177.5452 1211.7299 177.8324 1212.4257 177.8584 1212.4065 ct
ds
%%DSIEndObject
%%DSIBeginObject: #14 - Ref:602 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
177.5935 1211.8239 mt
177.7610 1212.1747 178.0620 1212.3688 178.5110 1212.4157 ct
178.9600 1212.4625 180.9599 1212.9369 181.2573 1213.1300 ct
181.5547 1213.3230 181.7816 1213.5607 181.8752 1213.7620 ct
181.9687 1213.9632 181.9426 1214.4140 181.7647 1214.7182 ct
181.5867 1215.0223 180.4256 1216.4645 180.1204 1216.7972 ct
179.8153 1217.1299 179.9048 1217.8772 179.9349 1217.8658 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
177.5935 1211.8239 mt
177.7610 1212.1747 178.0620 1212.3688 178.5110 1212.4157 ct
178.9600 1212.4625 180.9599 1212.9369 181.2573 1213.1300 ct
181.5547 1213.3230 181.7816 1213.5607 181.8752 1213.7620 ct
181.9687 1213.9632 181.9426 1214.4140 181.7647 1214.7182 ct
181.5867 1215.0223 180.4256 1216.4645 180.1204 1216.7972 ct
179.8153 1217.1299 179.9048 1217.8772 179.9349 1217.8658 ct
ds
%%DSIEndObject
%%DSIBeginObject: #15 - Ref:658 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
179.9920 1217.2594 mt
180.0646 1217.6412 180.3062 1217.9057 180.7285 1218.0654 ct
181.1507 1218.2250 182.9637 1219.1932 183.2022 1219.4556 ct
183.4406 1219.7181 183.5995 1220.0057 183.6387 1220.2242 ct
183.6779 1220.4426 183.5378 1220.8718 183.2883 1221.1207 ct
183.0387 1221.3695 181.5485 1222.4683 181.1687 1222.7123 ct
180.7889 1222.9562 180.6851 1223.7018 180.7171 1223.6984 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
179.9920 1217.2594 mt
180.0646 1217.6412 180.3062 1217.9057 180.7285 1218.0654 ct
181.1507 1218.2250 182.9637 1219.1932 183.2022 1219.4556 ct
183.4406 1219.7181 183.5995 1220.0057 183.6387 1220.2242 ct
183.6779 1220.4426 183.5378 1220.8718 183.2883 1221.1207 ct
183.0387 1221.3695 181.5485 1222.4683 181.1687 1222.7123 ct
180.7889 1222.9562 180.6851 1223.7018 180.7171 1223.6984 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIBeginObject: #16 - Ref:638 Group
%%DSIBeginObject: #17 - Ref:656 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
157.3900 1250.9149 mt
157.4145 1250.5919 157.5899 1250.3504 157.9247 1250.1788 ct
158.2595 1250.0073 159.6704 1249.0365 159.8434 1248.7969 ct
160.0163 1248.5574 160.1211 1248.3044 160.1332 1248.1198 ct
160.1453 1247.9353 159.9893 1247.5929 159.7594 1247.4102 ct
159.5295 1247.2274 158.1931 1246.4565 157.8559 1246.2899 ct
157.5186 1246.1233 157.3631 1245.5157 157.3900 1245.5155 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
157.3900 1250.9149 mt
157.4145 1250.5919 157.5899 1250.3504 157.9247 1250.1788 ct
158.2595 1250.0073 159.6704 1249.0365 159.8434 1248.7969 ct
160.0163 1248.5574 160.1211 1248.3044 160.1332 1248.1198 ct
160.1453 1247.9353 159.9893 1247.5929 159.7594 1247.4102 ct
159.5295 1247.2274 158.1931 1246.4565 157.8559 1246.2899 ct
157.5186 1246.1233 157.3631 1245.5157 157.3900 1245.5155 ct
ds
%%DSIEndObject
%%DSIBeginObject: #18 - Ref:662 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
157.3949 1245.5754 mt
157.4194 1245.2524 157.5948 1245.0109 157.9296 1244.8393 ct
158.2644 1244.6677 159.6753 1243.6969 159.8483 1243.4574 ct
160.0212 1243.2178 160.1260 1242.9648 160.1381 1242.7803 ct
160.1502 1242.5957 159.9942 1242.2534 159.7643 1242.0706 ct
159.5345 1241.8879 158.1980 1241.1169 157.8608 1240.9504 ct
157.5235 1240.7838 157.3680 1240.1761 157.3949 1240.1759 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
157.3949 1245.5754 mt
157.4194 1245.2524 157.5948 1245.0109 157.9296 1244.8393 ct
158.2644 1244.6677 159.6753 1243.6969 159.8483 1243.4574 ct
160.0212 1243.2178 160.1260 1242.9648 160.1381 1242.7803 ct
160.1502 1242.5957 159.9942 1242.2534 159.7643 1242.0706 ct
159.5345 1241.8879 158.1980 1241.1169 157.8608 1240.9504 ct
157.5235 1240.7838 157.3680 1240.1761 157.3949 1240.1759 ct
ds
%%DSIEndObject
%%DSIBeginObject: #19 - Ref:664 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
157.4045 1240.2313 mt
157.4290 1239.9083 157.6044 1239.6668 157.9392 1239.4952 ct
158.2739 1239.3237 159.6849 1238.3529 159.8579 1238.1133 ct
160.0308 1237.8738 160.1356 1237.6208 160.1477 1237.4362 ct
160.1597 1237.2517 160.0037 1236.9093 159.7739 1236.7266 ct
159.5440 1236.5438 158.2076 1235.7729 157.8703 1235.6063 ct
157.5331 1235.4397 157.3776 1234.8321 157.4045 1234.8319 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
157.4045 1240.2313 mt
157.4290 1239.9083 157.6044 1239.6668 157.9392 1239.4952 ct
158.2739 1239.3237 159.6849 1238.3529 159.8579 1238.1133 ct
160.0308 1237.8738 160.1356 1237.6208 160.1477 1237.4362 ct
160.1597 1237.2517 160.0037 1236.9093 159.7739 1236.7266 ct
159.5440 1236.5438 158.2076 1235.7729 157.8703 1235.6063 ct
157.5331 1235.4397 157.3776 1234.8321 157.4045 1234.8319 ct
ds
%%DSIEndObject
%%DSIBeginObject: #20 - Ref:665 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
157.4141 1234.8873 mt
157.4386 1234.5643 157.6140 1234.3227 157.9488 1234.1512 ct
158.2835 1233.9796 159.6945 1233.0088 159.8675 1232.7693 ct
160.0404 1232.5297 160.1452 1232.2767 160.1572 1232.0922 ct
160.1693 1231.9076 160.0133 1231.5653 159.7835 1231.3825 ct
159.5536 1231.1997 158.2172 1230.4288 157.8799 1230.2622 ct
157.5427 1230.0956 157.3872 1229.4880 157.4140 1229.4878 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
157.4141 1234.8873 mt
157.4386 1234.5643 157.6140 1234.3227 157.9488 1234.1512 ct
158.2835 1233.9796 159.6945 1233.0088 159.8675 1232.7693 ct
160.0404 1232.5297 160.1452 1232.2767 160.1572 1232.0922 ct
160.1693 1231.9076 160.0133 1231.5653 159.7835 1231.3825 ct
159.5536 1231.1997 158.2172 1230.4288 157.8799 1230.2622 ct
157.5427 1230.0956 157.3872 1229.4880 157.4140 1229.4878 ct
ds
%%DSIEndObject
%%DSIBeginObject: #21 - Ref:666 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
157.4237 1229.5432 mt
157.4481 1229.2202 157.6236 1228.9787 157.9583 1228.8071 ct
158.2931 1228.6355 159.7041 1227.6647 159.8770 1227.4252 ct
160.0500 1227.1856 160.1547 1226.9327 160.1668 1226.7481 ct
160.1789 1226.5635 160.0229 1226.2212 159.7930 1226.0384 ct
159.5632 1225.8557 158.2268 1225.0848 157.8895 1224.9182 ct
157.5522 1224.7516 157.3967 1224.1439 157.4236 1224.1437 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
157.4237 1229.5432 mt
157.4481 1229.2202 157.6236 1228.9787 157.9583 1228.8071 ct
158.2931 1228.6355 159.7041 1227.6647 159.8770 1227.4252 ct
160.0500 1227.1856 160.1547 1226.9327 160.1668 1226.7481 ct
160.1789 1226.5635 160.0229 1226.2212 159.7930 1226.0384 ct
159.5632 1225.8557 158.2268 1225.0848 157.8895 1224.9182 ct
157.5522 1224.7516 157.3967 1224.1439 157.4236 1224.1437 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIEndObject
terminate
showpage

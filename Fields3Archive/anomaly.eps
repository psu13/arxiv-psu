%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 24 1262 127 1331 
%%Title: anomaly.eps
%%Creator: Canvas 
%%CreationDate: Monday, January 11, 1999
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def
/mo{dup dhOdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known 1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
F debug
0 id
1 fd
0 2594 translate
1 -1 scale
%%EndSetup
/DeviceCMYK scs
0.0000 0.0000 0.0000 1.0000 f4
0.1250 0.1250 sp
1 lc
11.5 lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:582 Group
%%DSIBeginObject: #2 - Ref:581 Oval
0.0000 0.0000 0.0000 0.0000 f4
np
24.5000 24.5000 76.0719 1292.8346 ep
de
0.0000 0.0000 0.0000 1.0000 f4
1.0000 1.0000 sp
0 lc
np
24.5000 24.5000 76.0719 1292.8346 ep
ds
%%DSIEndObject
%%DSIBeginObject: #3 - Ref:794 Oval
0.0000 0.0000 0.0000 1.0000 f4
np
4.0625 4.0625 76.0284 1268.2008 ep
de
0.0000 0.0000 0.0000 1.0000 f4
np
4.0625 4.0625 76.0284 1268.2008 ep
ds
%%DSIEndObject
%%DSIBeginObject: #4 - Ref:816 Oval
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 63.9034 1326.4508 ep
de
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 63.9034 1326.4508 ep
ds
%%DSIEndObject
%%DSIBeginObject: #5 - Ref:818 Oval
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 76.0284 1329.5758 ep
de
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 76.0284 1329.5758 ep
ds
%%DSIEndObject
%%DSIBeginObject: #6 - Ref:819 Oval
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 86.7784 1326.4508 ep
de
0.0000 0.0000 0.0000 1.0000 f4
np
1.5625 1.5625 86.7784 1326.4508 ep
ds
%%DSIEndObject
%%DSIBeginObject: #7 - Ref:672 Group
%%DSIBeginObject: #8 - Ref:673 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
54.3018 1303.5216 mt
54.0098 1303.6619 53.7129 1303.6307 53.3970 1303.4265 ct
53.0810 1303.2224 51.5348 1302.4859 51.2409 1302.4558 ct
50.9469 1302.4258 50.6755 1302.4616 50.5096 1302.5434 ct
50.3437 1302.6252 50.1252 1302.9315 50.0819 1303.2219 ct
50.0385 1303.5124 50.0391 1305.0552 50.0634 1305.4306 ct
50.0878 1305.8060 49.6393 1306.2445 49.6257 1306.2213 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
54.3018 1303.5216 mt
54.0098 1303.6619 53.7129 1303.6307 53.3970 1303.4265 ct
53.0810 1303.2224 51.5348 1302.4859 51.2409 1302.4558 ct
50.9469 1302.4258 50.6755 1302.4616 50.5096 1302.5434 ct
50.3437 1302.6252 50.1252 1302.9315 50.0819 1303.2219 ct
50.0385 1303.5124 50.0391 1305.0552 50.0634 1305.4306 ct
50.0878 1305.8060 49.6393 1306.2445 49.6257 1306.2213 ct
ds
%%DSIEndObject
%%DSIBeginObject: #9 - Ref:674 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
49.6751 1306.1870 mt
49.3831 1306.3273 49.0863 1306.2961 48.7703 1306.0920 ct
48.4543 1305.8879 46.9081 1305.1513 46.6142 1305.1213 ct
46.3203 1305.0913 46.0488 1305.1270 45.8829 1305.2089 ct
45.7170 1305.2907 45.4985 1305.5969 45.4552 1305.8874 ct
45.4118 1306.1778 45.4124 1307.7207 45.4368 1308.0960 ct
45.4611 1308.4714 45.0126 1308.9099 44.9990 1308.8867 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
49.6751 1306.1870 mt
49.3831 1306.3273 49.0863 1306.2961 48.7703 1306.0920 ct
48.4543 1305.8879 46.9081 1305.1513 46.6142 1305.1213 ct
46.3203 1305.0913 46.0488 1305.1270 45.8829 1305.2089 ct
45.7170 1305.2907 45.4985 1305.5969 45.4552 1305.8874 ct
45.4118 1306.1778 45.4124 1307.7207 45.4368 1308.0960 ct
45.4611 1308.4714 45.0126 1308.9099 44.9990 1308.8867 ct
ds
%%DSIEndObject
%%DSIBeginObject: #10 - Ref:675 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
45.0422 1308.8507 mt
44.7502 1308.9910 44.4533 1308.9598 44.1374 1308.7557 ct
43.8214 1308.5515 42.2752 1307.8150 41.9813 1307.7850 ct
41.6873 1307.7549 41.4158 1307.7907 41.2500 1307.8725 ct
41.0841 1307.9543 40.8656 1308.2606 40.8223 1308.5511 ct
40.7789 1308.8415 40.7795 1310.3843 40.8038 1310.7597 ct
40.8282 1311.1351 40.3797 1311.5736 40.3661 1311.5504 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
45.0422 1308.8507 mt
44.7502 1308.9910 44.4533 1308.9598 44.1374 1308.7557 ct
43.8214 1308.5515 42.2752 1307.8150 41.9813 1307.7850 ct
41.6873 1307.7549 41.4158 1307.7907 41.2500 1307.8725 ct
41.0841 1307.9543 40.8656 1308.2606 40.8223 1308.5511 ct
40.7789 1308.8415 40.7795 1310.3843 40.8038 1310.7597 ct
40.8282 1311.1351 40.3797 1311.5736 40.3661 1311.5504 ct
ds
%%DSIEndObject
%%DSIBeginObject: #11 - Ref:676 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
40.4092 1311.5143 mt
40.1173 1311.6546 39.8204 1311.6235 39.5044 1311.4193 ct
39.1885 1311.2152 37.6423 1310.4786 37.3483 1310.4486 ct
37.0544 1310.4186 36.7829 1310.4544 36.6170 1310.5362 ct
36.4512 1310.6180 36.2327 1310.9243 36.1893 1311.2147 ct
36.1460 1311.5052 36.1465 1313.0480 36.1709 1313.4234 ct
36.1952 1313.7988 35.7467 1314.2372 35.7331 1314.2141 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
40.4092 1311.5143 mt
40.1173 1311.6546 39.8204 1311.6235 39.5044 1311.4193 ct
39.1885 1311.2152 37.6423 1310.4786 37.3483 1310.4486 ct
37.0544 1310.4186 36.7829 1310.4544 36.6170 1310.5362 ct
36.4512 1310.6180 36.2327 1310.9243 36.1893 1311.2147 ct
36.1460 1311.5052 36.1465 1313.0480 36.1709 1313.4234 ct
36.1952 1313.7988 35.7467 1314.2372 35.7331 1314.2141 ct
ds
%%DSIEndObject
%%DSIBeginObject: #12 - Ref:691 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
35.7763 1314.1780 mt
35.4843 1314.3183 35.1875 1314.2871 34.8715 1314.0830 ct
34.5555 1313.8789 33.0093 1313.1423 32.7154 1313.1123 ct
32.4215 1313.0823 32.1500 1313.1180 31.9841 1313.1999 ct
31.8182 1313.2817 31.5997 1313.5879 31.5564 1313.8784 ct
31.5131 1314.1688 31.5136 1315.7117 31.5380 1316.0870 ct
31.5623 1316.4624 31.1138 1316.9009 31.1002 1316.8777 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
35.7763 1314.1780 mt
35.4843 1314.3183 35.1875 1314.2871 34.8715 1314.0830 ct
34.5555 1313.8789 33.0093 1313.1423 32.7154 1313.1123 ct
32.4215 1313.0823 32.1500 1313.1180 31.9841 1313.1999 ct
31.8182 1313.2817 31.5997 1313.5879 31.5564 1313.8784 ct
31.5131 1314.1688 31.5136 1315.7117 31.5380 1316.0870 ct
31.5623 1316.4624 31.1138 1316.9009 31.1002 1316.8777 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIBeginObject: #13 - Ref:693 Group
%%DSIBeginObject: #14 - Ref:694 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
120.8059 1317.5421 mt
120.5384 1317.3594 120.4170 1317.0867 120.4358 1316.7110 ct
120.4546 1316.3353 120.3193 1314.6279 120.1984 1314.3584 ct
120.0774 1314.0888 119.9107 1313.8716 119.7569 1313.7688 ct
119.6031 1313.6661 119.2286 1313.6300 118.9554 1313.7377 ct
118.6822 1313.8454 117.3463 1314.6173 117.0334 1314.8261 ct
116.7205 1315.0349 116.1165 1314.8657 116.1298 1314.8423 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
120.8059 1317.5421 mt
120.5384 1317.3594 120.4170 1317.0867 120.4358 1316.7110 ct
120.4546 1316.3353 120.3193 1314.6279 120.1984 1314.3584 ct
120.0774 1314.0888 119.9107 1313.8716 119.7569 1313.7688 ct
119.6031 1313.6661 119.2286 1313.6300 118.9554 1313.7377 ct
118.6822 1313.8454 117.3463 1314.6173 117.0334 1314.8261 ct
116.7205 1315.0349 116.1165 1314.8657 116.1298 1314.8423 ct
ds
%%DSIEndObject
%%DSIBeginObject: #15 - Ref:695 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
116.1841 1314.8680 mt
115.9167 1314.6853 115.7952 1314.4126 115.8140 1314.0369 ct
115.8328 1313.6612 115.6976 1311.9539 115.5766 1311.6843 ct
115.4556 1311.4147 115.2889 1311.1975 115.1351 1311.0948 ct
114.9813 1310.9920 114.6068 1310.9559 114.3336 1311.0636 ct
114.0604 1311.1713 112.7245 1311.9432 112.4116 1312.1520 ct
112.0987 1312.3608 111.4947 1312.1916 111.5080 1312.1683 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
116.1841 1314.8680 mt
115.9167 1314.6853 115.7952 1314.4126 115.8140 1314.0369 ct
115.8328 1313.6612 115.6976 1311.9539 115.5766 1311.6843 ct
115.4556 1311.4147 115.2889 1311.1975 115.1351 1311.0948 ct
114.9813 1310.9920 114.6068 1310.9559 114.3336 1311.0636 ct
114.0604 1311.1713 112.7245 1311.9432 112.4116 1312.1520 ct
112.0987 1312.3608 111.4947 1312.1916 111.5080 1312.1683 ct
ds
%%DSIEndObject
%%DSIBeginObject: #16 - Ref:696 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
111.5608 1312.1876 mt
111.2933 1312.0049 111.1719 1311.7322 111.1907 1311.3565 ct
111.2094 1310.9808 111.0742 1309.2735 110.9532 1309.0039 ct
110.8323 1308.7343 110.6655 1308.5171 110.5117 1308.4144 ct
110.3580 1308.3116 109.9835 1308.2755 109.7103 1308.3832 ct
109.4371 1308.4909 108.1012 1309.2628 107.7883 1309.4716 ct
107.4754 1309.6804 106.8714 1309.5112 106.8846 1309.4879 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
111.5608 1312.1876 mt
111.2933 1312.0049 111.1719 1311.7322 111.1907 1311.3565 ct
111.2094 1310.9808 111.0742 1309.2735 110.9532 1309.0039 ct
110.8323 1308.7343 110.6655 1308.5171 110.5117 1308.4144 ct
110.3580 1308.3116 109.9835 1308.2755 109.7103 1308.3832 ct
109.4371 1308.4909 108.1012 1309.2628 107.7883 1309.4716 ct
107.4754 1309.6804 106.8714 1309.5112 106.8846 1309.4879 ct
ds
%%DSIEndObject
%%DSIBeginObject: #17 - Ref:697 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
106.9374 1309.5072 mt
106.6699 1309.3245 106.5485 1309.0518 106.5673 1308.6761 ct
106.5861 1308.3004 106.4509 1306.5931 106.3299 1306.3235 ct
106.2089 1306.0539 106.0422 1305.8367 105.8884 1305.7340 ct
105.7346 1305.6312 105.3601 1305.5951 105.0869 1305.7028 ct
104.8137 1305.8105 103.4778 1306.5824 103.1649 1306.7912 ct
102.8520 1307.0000 102.2480 1306.8308 102.2613 1306.8075 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
106.9374 1309.5072 mt
106.6699 1309.3245 106.5485 1309.0518 106.5673 1308.6761 ct
106.5861 1308.3004 106.4509 1306.5931 106.3299 1306.3235 ct
106.2089 1306.0539 106.0422 1305.8367 105.8884 1305.7340 ct
105.7346 1305.6312 105.3601 1305.5951 105.0869 1305.7028 ct
104.8137 1305.8105 103.4778 1306.5824 103.1649 1306.7912 ct
102.8520 1307.0000 102.2480 1306.8308 102.2613 1306.8075 ct
ds
%%DSIEndObject
%%DSIBeginObject: #18 - Ref:698 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
102.3141 1306.8268 mt
102.0466 1306.6441 101.9251 1306.3714 101.9439 1305.9957 ct
101.9627 1305.6200 101.8275 1303.9127 101.7065 1303.6431 ct
101.5855 1303.3735 101.4188 1303.1563 101.2650 1303.0536 ct
101.1112 1302.9508 100.7368 1302.9147 100.4635 1303.0224 ct
100.1903 1303.1301 98.8545 1303.9020 98.5416 1304.1108 ct
98.2286 1304.3196 97.6247 1304.1504 97.6379 1304.1271 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
102.3141 1306.8268 mt
102.0466 1306.6441 101.9251 1306.3714 101.9439 1305.9957 ct
101.9627 1305.6200 101.8275 1303.9127 101.7065 1303.6431 ct
101.5855 1303.3735 101.4188 1303.1563 101.2650 1303.0536 ct
101.1112 1302.9508 100.7368 1302.9147 100.4635 1303.0224 ct
100.1903 1303.1301 98.8545 1303.9020 98.5416 1304.1108 ct
98.2286 1304.3196 97.6247 1304.1504 97.6379 1304.1271 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIBeginObject: #19 - Ref:699 Group
%%DSIBeginObject: #20 - Ref:717 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
51.1699 1291.6497 mt
50.8469 1291.6252 50.6054 1291.4498 50.4338 1291.1150 ct
50.2623 1290.7803 49.2915 1289.3693 49.0519 1289.1964 ct
48.8124 1289.0234 48.5594 1288.9186 48.3748 1288.9066 ct
48.1903 1288.8945 47.8479 1289.0505 47.6652 1289.2803 ct
47.4824 1289.5102 46.7115 1290.8466 46.5449 1291.1839 ct
46.3783 1291.5212 45.7707 1291.6766 45.7705 1291.6498 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
51.1699 1291.6497 mt
50.8469 1291.6252 50.6054 1291.4498 50.4338 1291.1150 ct
50.2623 1290.7803 49.2915 1289.3693 49.0519 1289.1964 ct
48.8124 1289.0234 48.5594 1288.9186 48.3748 1288.9066 ct
48.1903 1288.8945 47.8479 1289.0505 47.6652 1289.2803 ct
47.4824 1289.5102 46.7115 1290.8466 46.5449 1291.1839 ct
46.3783 1291.5212 45.7707 1291.6766 45.7705 1291.6498 ct
ds
%%DSIEndObject
%%DSIBeginObject: #21 - Ref:718 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
45.8304 1291.6448 mt
45.5074 1291.6203 45.2659 1291.4449 45.0943 1291.1101 ct
44.9227 1290.7754 43.9519 1289.3644 43.7124 1289.1915 ct
43.4728 1289.0185 43.2199 1288.9137 43.0353 1288.9017 ct
42.8507 1288.8896 42.5084 1289.0456 42.3256 1289.2754 ct
42.1429 1289.5053 41.3720 1290.8417 41.2054 1291.1790 ct
41.0388 1291.5162 40.4311 1291.6717 40.4309 1291.6449 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
45.8304 1291.6448 mt
45.5074 1291.6203 45.2659 1291.4449 45.0943 1291.1101 ct
44.9227 1290.7754 43.9519 1289.3644 43.7124 1289.1915 ct
43.4728 1289.0185 43.2199 1288.9137 43.0353 1288.9017 ct
42.8507 1288.8896 42.5084 1289.0456 42.3256 1289.2754 ct
42.1429 1289.5053 41.3720 1290.8417 41.2054 1291.1790 ct
41.0388 1291.5162 40.4311 1291.6717 40.4309 1291.6449 ct
ds
%%DSIEndObject
%%DSIBeginObject: #22 - Ref:734 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
40.4863 1291.6352 mt
40.1633 1291.6108 39.9218 1291.4353 39.7502 1291.1006 ct
39.5787 1290.7658 38.6079 1289.3548 38.3683 1289.1819 ct
38.1288 1289.0089 37.8758 1288.9042 37.6912 1288.8921 ct
37.5067 1288.8800 37.1643 1289.0360 36.9816 1289.2659 ct
36.7988 1289.4957 36.0279 1290.8321 35.8613 1291.1694 ct
35.6947 1291.5067 35.0871 1291.6622 35.0869 1291.6353 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
40.4863 1291.6352 mt
40.1633 1291.6108 39.9218 1291.4353 39.7502 1291.1006 ct
39.5787 1290.7658 38.6079 1289.3548 38.3683 1289.1819 ct
38.1288 1289.0089 37.8758 1288.9042 37.6912 1288.8921 ct
37.5067 1288.8800 37.1643 1289.0360 36.9816 1289.2659 ct
36.7988 1289.4957 36.0279 1290.8321 35.8613 1291.1694 ct
35.6947 1291.5067 35.0871 1291.6622 35.0869 1291.6353 ct
ds
%%DSIEndObject
%%DSIBeginObject: #23 - Ref:735 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
35.1423 1291.6257 mt
34.8193 1291.6012 34.5778 1291.4257 34.4062 1291.0910 ct
34.2346 1290.7562 33.2638 1289.3453 33.0243 1289.1723 ct
32.7847 1288.9993 32.5317 1288.8946 32.3472 1288.8825 ct
32.1626 1288.8704 31.8203 1289.0264 31.6375 1289.2563 ct
31.4548 1289.4861 30.6838 1290.8226 30.5172 1291.1598 ct
30.3506 1291.4971 29.7430 1291.6526 29.7428 1291.6257 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
35.1423 1291.6257 mt
34.8193 1291.6012 34.5778 1291.4257 34.4062 1291.0910 ct
34.2346 1290.7562 33.2638 1289.3453 33.0243 1289.1723 ct
32.7847 1288.9993 32.5317 1288.8946 32.3472 1288.8825 ct
32.1626 1288.8704 31.8203 1289.0264 31.6375 1289.2563 ct
31.4548 1289.4861 30.6838 1290.8226 30.5172 1291.1598 ct
30.3506 1291.4971 29.7430 1291.6526 29.7428 1291.6257 ct
ds
%%DSIEndObject
%%DSIBeginObject: #24 - Ref:737 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
29.7982 1291.6161 mt
29.4752 1291.5916 29.2337 1291.4162 29.0621 1291.0814 ct
28.8905 1290.7467 27.9198 1289.3357 27.6802 1289.1627 ct
27.4407 1288.9898 27.1877 1288.8850 27.0031 1288.8729 ct
26.8186 1288.8609 26.4762 1289.0169 26.2934 1289.2467 ct
26.1107 1289.4766 25.3398 1290.8130 25.1732 1291.1503 ct
25.0066 1291.4875 24.3989 1291.6430 24.3987 1291.6161 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
29.7982 1291.6161 mt
29.4752 1291.5916 29.2337 1291.4162 29.0621 1291.0814 ct
28.8905 1290.7467 27.9198 1289.3357 27.6802 1289.1627 ct
27.4407 1288.9898 27.1877 1288.8850 27.0031 1288.8729 ct
26.8186 1288.8609 26.4762 1289.0169 26.2934 1289.2467 ct
26.1107 1289.4766 25.3398 1290.8130 25.1732 1291.1503 ct
25.0066 1291.4875 24.3989 1291.6430 24.3987 1291.6161 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIBeginObject: #25 - Ref:738 Group
%%DSIBeginObject: #26 - Ref:739 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
126.9201 1292.3997 mt
126.5971 1292.3752 126.3555 1292.1998 126.1840 1291.8650 ct
126.0124 1291.5303 125.0416 1290.1193 124.8020 1289.9463 ct
124.5625 1289.7734 124.3095 1289.6686 124.1250 1289.6565 ct
123.9404 1289.6445 123.5980 1289.8004 123.4153 1290.0303 ct
123.2325 1290.2602 122.4616 1291.5966 122.2950 1291.9339 ct
122.1284 1292.2711 121.5208 1292.4266 121.5206 1292.3997 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
126.9201 1292.3997 mt
126.5971 1292.3752 126.3555 1292.1998 126.1840 1291.8650 ct
126.0124 1291.5303 125.0416 1290.1193 124.8020 1289.9463 ct
124.5625 1289.7734 124.3095 1289.6686 124.1250 1289.6565 ct
123.9404 1289.6445 123.5980 1289.8004 123.4153 1290.0303 ct
123.2325 1290.2602 122.4616 1291.5966 122.2950 1291.9339 ct
122.1284 1292.2711 121.5208 1292.4266 121.5206 1292.3997 ct
ds
%%DSIEndObject
%%DSIBeginObject: #27 - Ref:740 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
121.5805 1292.3948 mt
121.2575 1292.3703 121.0160 1292.1949 120.8444 1291.8601 ct
120.6729 1291.5253 119.7021 1290.1144 119.4625 1289.9414 ct
119.2230 1289.7685 118.9700 1289.6637 118.7854 1289.6516 ct
118.6009 1289.6395 118.2585 1289.7955 118.0758 1290.0254 ct
117.8930 1290.2553 117.1221 1291.5917 116.9555 1291.9290 ct
116.7889 1292.2662 116.1812 1292.4217 116.1810 1292.3948 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
121.5805 1292.3948 mt
121.2575 1292.3703 121.0160 1292.1949 120.8444 1291.8601 ct
120.6729 1291.5253 119.7021 1290.1144 119.4625 1289.9414 ct
119.2230 1289.7685 118.9700 1289.6637 118.7854 1289.6516 ct
118.6009 1289.6395 118.2585 1289.7955 118.0758 1290.0254 ct
117.8930 1290.2553 117.1221 1291.5917 116.9555 1291.9290 ct
116.7889 1292.2662 116.1812 1292.4217 116.1810 1292.3948 ct
ds
%%DSIEndObject
%%DSIBeginObject: #28 - Ref:741 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
116.2365 1292.3852 mt
115.9135 1292.3607 115.6719 1292.1853 115.5004 1291.8505 ct
115.3288 1291.5158 114.3580 1290.1048 114.1184 1289.9318 ct
113.8789 1289.7589 113.6259 1289.6541 113.4414 1289.6420 ct
113.2568 1289.6300 112.9144 1289.7860 112.7317 1290.0158 ct
112.5489 1290.2457 111.7780 1291.5821 111.6114 1291.9194 ct
111.4448 1292.2566 110.8372 1292.4121 110.8370 1292.3853 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
116.2365 1292.3852 mt
115.9135 1292.3607 115.6719 1292.1853 115.5004 1291.8505 ct
115.3288 1291.5158 114.3580 1290.1048 114.1184 1289.9318 ct
113.8789 1289.7589 113.6259 1289.6541 113.4414 1289.6420 ct
113.2568 1289.6300 112.9144 1289.7860 112.7317 1290.0158 ct
112.5489 1290.2457 111.7780 1291.5821 111.6114 1291.9194 ct
111.4448 1292.2566 110.8372 1292.4121 110.8370 1292.3853 ct
ds
%%DSIEndObject
%%DSIBeginObject: #29 - Ref:742 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
110.8924 1292.3756 mt
110.5694 1292.3512 110.3279 1292.1757 110.1563 1291.8409 ct
109.9847 1291.5062 109.0139 1290.0952 108.7744 1289.9223 ct
108.5348 1289.7493 108.2818 1289.6445 108.0973 1289.6325 ct
107.9127 1289.6204 107.5704 1289.7764 107.3876 1290.0063 ct
107.2049 1290.2361 106.4339 1291.5725 106.2674 1291.9098 ct
106.1008 1292.2471 105.4931 1292.4026 105.4929 1292.3757 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
110.8924 1292.3756 mt
110.5694 1292.3512 110.3279 1292.1757 110.1563 1291.8409 ct
109.9847 1291.5062 109.0139 1290.0952 108.7744 1289.9223 ct
108.5348 1289.7493 108.2818 1289.6445 108.0973 1289.6325 ct
107.9127 1289.6204 107.5704 1289.7764 107.3876 1290.0063 ct
107.2049 1290.2361 106.4339 1291.5725 106.2674 1291.9098 ct
106.1008 1292.2471 105.4931 1292.4026 105.4929 1292.3757 ct
ds
%%DSIEndObject
%%DSIBeginObject: #30 - Ref:743 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
105.5483 1292.3660 mt
105.2253 1292.3416 104.9838 1292.1661 104.8122 1291.8314 ct
104.6407 1291.4966 103.6699 1290.0857 103.4303 1289.9127 ct
103.1908 1289.7397 102.9378 1289.6350 102.7532 1289.6229 ct
102.5687 1289.6108 102.2263 1289.7668 102.0436 1289.9967 ct
101.8608 1290.2265 101.0899 1291.5630 100.9233 1291.9002 ct
100.7567 1292.2375 100.1491 1292.3930 100.1489 1292.3661 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
105.5483 1292.3660 mt
105.2253 1292.3416 104.9838 1292.1661 104.8122 1291.8314 ct
104.6407 1291.4966 103.6699 1290.0857 103.4303 1289.9127 ct
103.1908 1289.7397 102.9378 1289.6350 102.7532 1289.6229 ct
102.5687 1289.6108 102.2263 1289.7668 102.0436 1289.9967 ct
101.8608 1290.2265 101.0899 1291.5630 100.9233 1291.9002 ct
100.7567 1292.2375 100.1491 1292.3930 100.1489 1292.3661 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIEndObject
terminate
showpage

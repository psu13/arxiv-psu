%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 141 1160 215 1188 
%%Title: selfe.eps
%%Creator: Canvas 
%%CreationDate: Friday, December 18, 1998
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def
/mo{dup dhOdh
FontDirectory 1 index known	1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known 1 index $cvfontdict exch known and
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
F debug
0 id
1 fd
0 2349 translate
1 -1 scale
%%EndSetup
/DeviceCMYK scs
0.0000 0.0000 0.0000 1.0000 f4
0.1250 0.1250 sp
1 lc
11.5 lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:501 Group
%%DSIBeginObject: #2 - Ref:575 Line
0.0000 0.0000 0.0000 1.0000 f4
1.0000 1.0000 sp
0 lc
np
141.5151 1188.1229 mt
215.7651 1188.1229 li
ds
%%DSIEndObject
%%DSIBeginObject: #3 - Ref:543 Group
%%DSIBeginObject: #4 - Ref:872 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
155.5176 1187.9382 mt
155.5260 1187.5496 155.3447 1187.2407 154.9648 1186.9967 ct
154.5850 1186.7528 153.0129 1185.4288 152.8342 1185.1226 ct
152.6556 1184.8163 152.5599 1184.5019 152.5670 1184.2801 ct
152.5741 1184.0582 152.8003 1183.6675 153.0962 1183.4760 ct
153.3920 1183.2845 155.0781 1182.5195 155.5003 1182.3598 ct
155.9225 1182.2002 156.1791 1181.4925 156.1470 1181.4892 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
155.5176 1187.9382 mt
155.5260 1187.5496 155.3447 1187.2407 154.9648 1186.9967 ct
154.5850 1186.7528 153.0129 1185.4288 152.8342 1185.1226 ct
152.6556 1184.8163 152.5599 1184.5019 152.5670 1184.2801 ct
152.5741 1184.0582 152.8003 1183.6675 153.0962 1183.4760 ct
153.3920 1183.2845 155.0781 1182.5195 155.5003 1182.3598 ct
155.9225 1182.2002 156.1791 1181.4925 156.1470 1181.4892 ct
ds
%%DSIEndObject
%%DSIBeginObject: #5 - Ref:873 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
156.1121 1182.0984 mt
156.2258 1181.7266 156.1351 1181.3801 155.8358 1181.0422 ct
155.5365 1180.7042 154.3830 1179.0032 154.2942 1178.6599 ct
154.2054 1178.3166 154.1987 1177.9881 154.2658 1177.7765 ct
154.3329 1177.5650 154.6567 1177.2503 154.9934 1177.1464 ct
155.3301 1177.0424 157.1605 1176.7640 157.6102 1176.7250 ct
158.0600 1176.6860 158.4990 1176.0746 158.4691 1176.0627 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
156.1121 1182.0984 mt
156.2258 1181.7266 156.1351 1181.3801 155.8358 1181.0422 ct
155.5365 1180.7042 154.3830 1179.0032 154.2942 1178.6599 ct
154.2054 1178.3166 154.1987 1177.9881 154.2658 1177.7765 ct
154.3329 1177.5650 154.6567 1177.2503 154.9934 1177.1464 ct
155.3301 1177.0424 157.1605 1176.7640 157.6102 1176.7250 ct
158.0600 1176.6860 158.4990 1176.0746 158.4691 1176.0627 ct
ds
%%DSIEndObject
%%DSIBeginObject: #6 - Ref:874 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
158.2006 1176.6058 mt
158.4069 1176.2763 158.4093 1175.9181 158.2080 1175.5140 ct
158.0068 1175.1099 157.3347 1173.1676 157.3381 1172.8130 ct
157.3415 1172.4585 157.4204 1172.1395 157.5401 1171.9526 ct
157.6598 1171.7657 158.0543 1171.5460 158.4064 1171.5330 ct
158.7586 1171.5201 160.5986 1171.7267 161.0430 1171.8058 ct
161.4874 1171.8850 162.0702 1171.4086 162.0444 1171.3893 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
158.2006 1176.6058 mt
158.4069 1176.2763 158.4093 1175.9181 158.2080 1175.5140 ct
158.0068 1175.1099 157.3347 1173.1676 157.3381 1172.8130 ct
157.3415 1172.4585 157.4204 1172.1395 157.5401 1171.9526 ct
157.6598 1171.7657 158.0543 1171.5460 158.4064 1171.5330 ct
158.7586 1171.5201 160.5986 1171.7267 161.0430 1171.8058 ct
161.4874 1171.8850 162.0702 1171.4086 162.0444 1171.3893 ct
ds
%%DSIEndObject
%%DSIBeginObject: #7 - Ref:875 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
161.6448 1171.8338 mt
161.9256 1171.5650 162.0158 1171.2183 161.9197 1170.7772 ct
161.8236 1170.3361 161.6481 1168.2883 161.7383 1167.9454 ct
161.8286 1167.6025 161.9832 1167.3126 162.1451 1167.1608 ct
162.3070 1167.0089 162.7432 1166.8926 163.0878 1166.9664 ct
163.4324 1167.0402 165.1656 1167.6914 165.5770 1167.8771 ct
165.9885 1168.0628 166.6703 1167.7438 166.6500 1167.7187 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
161.6448 1171.8338 mt
161.9256 1171.5650 162.0158 1171.2183 161.9197 1170.7772 ct
161.8236 1170.3361 161.6481 1168.2883 161.7383 1167.9454 ct
161.8286 1167.6025 161.9832 1167.3126 162.1451 1167.1608 ct
162.3070 1167.0089 162.7432 1166.8926 163.0878 1166.9664 ct
163.4324 1167.0402 165.1656 1167.6914 165.5770 1167.8771 ct
165.9885 1168.0628 166.6703 1167.7438 166.6500 1167.7187 ct
ds
%%DSIEndObject
%%DSIBeginObject: #8 - Ref:876 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
166.2028 1168.1329 mt
166.5479 1167.9540 166.7320 1167.6468 166.7641 1167.1965 ct
166.7961 1166.7462 167.2045 1164.7319 167.3877 1164.4283 ct
167.5708 1164.1247 167.8009 1163.8901 167.9990 1163.7900 ct
168.1971 1163.6899 168.6484 1163.7011 168.9583 1163.8690 ct
169.2681 1164.0368 170.7477 1165.1499 171.0902 1165.4439 ct
171.4327 1165.7380 172.1767 1165.6239 172.1643 1165.5942 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
166.2028 1168.1329 mt
166.5479 1167.9540 166.7320 1167.6468 166.7641 1167.1965 ct
166.7961 1166.7462 167.2045 1164.7319 167.3877 1164.4283 ct
167.5708 1164.1247 167.8009 1163.8901 167.9990 1163.7900 ct
168.1971 1163.6899 168.6484 1163.7011 168.9583 1163.8690 ct
169.2681 1164.0368 170.7477 1165.1499 171.0902 1165.4439 ct
171.4327 1165.7380 172.1767 1165.6239 172.1643 1165.5942 ct
ds
%%DSIEndObject
%%DSIBeginObject: #9 - Ref:877 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
171.5760 1165.7409 mt
171.9556 1165.6574 172.2130 1165.4082 172.3604 1164.9815 ct
172.5077 1164.5548 173.4231 1162.7146 173.6786 1162.4687 ct
173.9340 1162.2228 174.2169 1162.0556 174.4342 1162.0101 ct
174.6514 1161.9646 175.0845 1162.0922 175.3404 1162.3345 ct
175.5964 1162.5768 176.7378 1164.0346 176.9926 1164.4072 ct
177.2475 1164.7798 177.9957 1164.8621 177.9914 1164.8301 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
171.5760 1165.7409 mt
171.9556 1165.6574 172.2130 1165.4082 172.3604 1164.9815 ct
172.5077 1164.5548 173.4231 1162.7146 173.6786 1162.4687 ct
173.9340 1162.2228 174.2169 1162.0556 174.4342 1162.0101 ct
174.6514 1161.9646 175.0845 1162.0922 175.3404 1162.3345 ct
175.5964 1162.5768 176.7378 1164.0346 176.9926 1164.4072 ct
177.2475 1164.7798 177.9957 1164.8621 177.9914 1164.8301 ct
ds
%%DSIEndObject
%%DSIBeginObject: #10 - Ref:878 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
177.3938 1164.8896 mt
177.7820 1164.9094 178.0961 1164.7372 178.3511 1164.3647 ct
178.6061 1163.9922 179.9757 1162.4597 180.2871 1162.2902 ct
180.5985 1162.1206 180.9156 1162.0342 181.1371 1162.0479 ct
181.3587 1162.0615 181.7425 1162.2991 181.9253 1162.6004 ct
182.1080 1162.9018 182.8230 1164.6096 182.9702 1165.0364 ct
183.1174 1165.4631 183.8172 1165.7404 183.8215 1165.7084 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
177.3938 1164.8896 mt
177.7820 1164.9094 178.0961 1164.7372 178.3511 1164.3647 ct
178.6061 1163.9922 179.9757 1162.4597 180.2871 1162.2902 ct
180.5985 1162.1206 180.9156 1162.0342 181.1371 1162.0479 ct
181.3587 1162.0615 181.7425 1162.2991 181.9253 1162.6004 ct
182.1080 1162.9018 182.8230 1164.6096 182.9702 1165.0364 ct
183.1174 1165.4631 183.8172 1165.7404 183.8215 1165.7084 ct
ds
%%DSIEndObject
%%DSIBeginObject: #11 - Ref:879 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
183.2333 1165.6631 mt
183.6034 1165.7820 183.9512 1165.6962 184.2933 1165.4017 ct
184.6354 1165.1072 186.3526 1163.9778 186.6971 1163.8939 ct
187.0416 1163.8099 187.3702 1163.8079 187.5808 1163.8779 ct
187.7914 1163.9480 188.1014 1164.2762 188.2006 1164.6144 ct
188.2998 1164.9525 188.5524 1166.7867 188.5850 1167.2369 ct
188.6177 1167.6871 189.2228 1168.1348 189.2352 1168.1050 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
183.2333 1165.6631 mt
183.6034 1165.7820 183.9512 1165.6962 184.2933 1165.4017 ct
184.6354 1165.1072 186.3526 1163.9778 186.6971 1163.8939 ct
187.0416 1163.8099 187.3702 1163.8079 187.5808 1163.8779 ct
187.7914 1163.9480 188.1014 1164.2762 188.2006 1164.6144 ct
188.2998 1164.9525 188.5524 1166.7867 188.5850 1167.2369 ct
188.6177 1167.6871 189.2228 1168.1348 189.2352 1168.1050 ct
ds
%%DSIEndObject
%%DSIBeginObject: #12 - Ref:880 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
188.6135 1167.9144 mt
188.9368 1168.1302 189.2948 1168.1430 189.7046 1167.9536 ct
190.1143 1167.7642 192.0754 1167.1490 192.4297 1167.1627 ct
192.7840 1167.1765 193.1006 1167.2646 193.2839 1167.3897 ct
193.4672 1167.5148 193.6754 1167.9155 193.6780 1168.2679 ct
193.6807 1168.6203 193.4206 1170.4534 193.3286 1170.8954 ct
193.2365 1171.3373 193.6957 1171.9337 193.7158 1171.9085 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
188.6135 1167.9144 mt
188.9368 1168.1302 189.2948 1168.1430 189.7046 1167.9536 ct
190.1143 1167.7642 192.0754 1167.1490 192.4297 1167.1627 ct
192.7840 1167.1765 193.1006 1167.2646 193.2839 1167.3897 ct
193.4672 1167.5148 193.6754 1167.9155 193.6780 1168.2679 ct
193.6807 1168.6203 193.4206 1170.4534 193.3286 1170.8954 ct
193.2365 1171.3373 193.6957 1171.9337 193.7158 1171.9085 ct
ds
%%DSIEndObject
%%DSIBeginObject: #13 - Ref:881 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
193.2284 1171.4673 mt
193.4841 1171.7601 193.8262 1171.8662 194.2713 1171.7905 ct
194.7163 1171.7148 196.7700 1171.6339 197.1084 1171.7398 ct
197.4468 1171.8458 197.7293 1172.0136 197.8735 1172.1823 ct
198.0177 1172.3510 198.1138 1172.7922 198.0242 1173.1330 ct
197.9347 1173.4738 197.2042 1175.1752 196.9998 1175.5776 ct
196.7954 1175.9801 197.0826 1176.6759 197.1086 1176.6567 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
193.2284 1171.4673 mt
193.4841 1171.7601 193.8262 1171.8662 194.2713 1171.7905 ct
194.7163 1171.7148 196.7700 1171.6339 197.1084 1171.7398 ct
197.4468 1171.8458 197.7293 1172.0136 197.8735 1172.1823 ct
198.0177 1172.3510 198.1138 1172.7922 198.0242 1173.1330 ct
197.9347 1173.4738 197.2042 1175.1752 196.9998 1175.5776 ct
196.7954 1175.9801 197.0826 1176.6759 197.1086 1176.6567 ct
ds
%%DSIEndObject
%%DSIBeginObject: #14 - Ref:882 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
196.8437 1176.0736 mt
197.0111 1176.4244 197.3122 1176.6186 197.7612 1176.6654 ct
198.2101 1176.7123 200.2100 1177.1867 200.5074 1177.3797 ct
200.8048 1177.5728 201.0318 1177.8104 201.1253 1178.0117 ct
201.2188 1178.2130 201.1927 1178.6637 201.0148 1178.9679 ct
200.8368 1179.2721 199.6757 1180.7143 199.3705 1181.0469 ct
199.0654 1181.3796 199.1549 1182.1270 199.1851 1182.1156 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
196.8437 1176.0736 mt
197.0111 1176.4244 197.3122 1176.6186 197.7612 1176.6654 ct
198.2101 1176.7123 200.2100 1177.1867 200.5074 1177.3797 ct
200.8048 1177.5728 201.0318 1177.8104 201.1253 1178.0117 ct
201.2188 1178.2130 201.1927 1178.6637 201.0148 1178.9679 ct
200.8368 1179.2721 199.6757 1180.7143 199.3705 1181.0469 ct
199.0654 1181.3796 199.1549 1182.1270 199.1851 1182.1156 ct
ds
%%DSIEndObject
%%DSIBeginObject: #15 - Ref:885 Bezier
0.0000 0.0000 0.0000 0.0000 f4
np
199.2419 1181.5088 mt
199.3144 1181.8907 199.5561 1182.1551 199.9784 1182.3148 ct
200.4006 1182.4744 202.2136 1183.4426 202.4520 1183.7050 ct
202.6905 1183.9675 202.8494 1184.2551 202.8886 1184.4736 ct
202.9277 1184.6920 202.7877 1185.1212 202.5381 1185.3701 ct
202.2886 1185.6189 200.7984 1186.7177 200.4186 1186.9617 ct
200.0387 1187.2056 199.9349 1187.9512 199.9670 1187.9478 ct
de
0.0000 0.0000 0.0000 1.0000 f4
np
199.2419 1181.5088 mt
199.3144 1181.8907 199.5561 1182.1551 199.9784 1182.3148 ct
200.4006 1182.4744 202.2136 1183.4426 202.4520 1183.7050 ct
202.6905 1183.9675 202.8494 1184.2551 202.8886 1184.4736 ct
202.9277 1184.6920 202.7877 1185.1212 202.5381 1185.3701 ct
202.2886 1185.6189 200.7984 1186.7177 200.4186 1186.9617 ct
200.0387 1187.2056 199.9349 1187.9512 199.9670 1187.9478 ct
ds
%%DSIEndObject
%%DSIEndObject
%%DSIEndObject
terminate
showpage

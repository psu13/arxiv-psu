%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.00
%%LanguageLevel: 2
%%BoundingBox: 0 0 349 31
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% separation convention operators
/findcmykcustomcolor where {
  pop
}{
  /findcmykcustomcolor { 5 array astore } def
} ifelse
/setcustomcolor where {
  pop
}{
  /setcustomcolor {
    exch
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval cvx
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace setcolor
  } def
} ifelse
/customcolorimage where {
  pop
}{
  /customcolorimage {
    gsave
    [ exch /Separation exch dup 4 get exch /DeviceCMYK exch
      0 4 getinterval
      [ exch /dup load exch { mul exch dup } /forall load
        /pop load dup ] cvx
    ] setcolorspace
    10 dict begin
      /ImageType 1 def
      /DataSource exch def
      /ImageMatrix exch def
      /BitsPerComponent exch def
      /Height exch def
      /Width exch def
      /Decode [1 0] def
    currentdict end
    image
    grestore
  } def
} ifelse
% PDF color state
/sCol {
  pdfLastStroke not {
    pdfStroke aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
/fCol {
  pdfLastFill not {
    pdfFill aload length
    dup 1 eq {
      pop setgray
    }{
      dup 3 eq {
        pop setrgbcolor
      }{
        4 eq {
          setcmykcolor
        }{
          findcmykcustomcolor exch setcustomcolor
        } ifelse
      } ifelse
    } ifelse
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q { end grestore } def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% color operators
/g { dup 1 array astore /pdfFill exch def setgray
     /pdfLastFill true def /pdfLastStroke false def } def
/G { dup 1 array astore /pdfStroke exch def setgray
     /pdfLastStroke true def /pdfLastFill false def } def
/rg { 3 copy 3 array astore /pdfFill exch def setrgbcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/RG { 3 copy 3 array astore /pdfStroke exch def setrgbcolor
      /pdfLastStroke true def /pdfLastFill false def } def
/k { 4 copy 4 array astore /pdfFill exch def setcmykcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/K { 4 copy 4 array astore /pdfStroke exch def setcmykcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/ck { 6 copy 6 array astore /pdfFill exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastFill true def /pdfLastStroke false def } def
/CK { 6 copy 6 array astore /pdfStroke exch def
      findcmykcustomcolor exch setcustomcolor
      /pdfLastStroke true def /pdfLastFill false def } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImSep {
  findcmykcustomcolor exch
  dup /Width get /pdfImBuf1 exch string def
  dup /Decode get aload pop 1 index sub /pdfImDecodeRange exch def
  /pdfImDecodeLow exch def
  begin Width Height BitsPerComponent ImageMatrix DataSource end
  /pdfImData exch def
  { pdfImData pdfImBuf1 readstring pop
    0 1 2 index length 1 sub {
      1 index exch 2 copy get
      pdfImDecodeRange mul 255 div pdfImDecodeLow add round cvi
      255 exch sub put
    } for }
  6 5 roll customcolorimage
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
0 g
0 G
q
[0.1 0 0 0.1 0 0] cm
q
1 g
1 i
437.762 152.856 m
437.762 152.856 l
437.762 74.156 373.962 10.3564 295.262 10.3564 c
216.562 10.3564 152.762 74.156 152.762 152.856 c
152.762 231.557 216.562 295.356 295.262 295.356 c
373.962 295.356 437.762 231.557 437.762 152.856 c
f*
10 w
11.5 M
437.762 152.856 m
437.762 152.856 l
437.762 74.156 373.962 10.3564 295.262 10.3564 c
216.562 10.3564 152.762 74.156 152.762 152.856 c
152.762 231.557 216.562 295.356 295.262 295.356 c
373.962 295.356 437.762 231.557 437.762 152.856 c
h
S
722.762 152.856 m
722.762 152.856 l
722.762 74.156 658.962 10.3564 580.262 10.3564 c
501.562 10.3564 437.762 74.156 437.762 152.856 c
437.762 231.557 501.562 295.356 580.262 295.356 c
658.962 295.356 722.762 231.557 722.762 152.856 c
f*
722.762 152.856 m
722.762 152.856 l
722.762 74.156 658.962 10.3564 580.262 10.3564 c
501.562 10.3564 437.762 74.156 437.762 152.856 c
437.762 231.557 501.562 295.356 580.262 295.356 c
658.962 295.356 722.762 231.557 722.762 152.856 c
h
S
1007.76 152.856 m
1007.76 152.856 l
1007.76 74.156 943.962 10.3564 865.262 10.3564 c
786.562 10.3564 722.762 74.156 722.762 152.856 c
722.762 231.557 786.562 295.356 865.262 295.356 c
943.962 295.356 1007.76 231.557 1007.76 152.856 c
f*
1007.76 152.856 m
1007.76 152.856 l
1007.76 74.156 943.962 10.3564 865.262 10.3564 c
786.562 10.3564 722.762 74.156 722.762 152.856 c
722.762 231.557 786.562 295.356 865.262 295.356 c
943.962 295.356 1007.76 231.557 1007.76 152.856 c
h
S
14.3 M
147.762 152.856 m
5.26196 10.3564 l
S
147.762 152.856 m
5.26196 295.356 l
S
1010.26 150.356 m
1152.76 7.85645 l
S
1010.26 150.356 m
1152.76 292.856 l
S
2292.76 152.856 m
2292.76 152.856 l
2292.76 74.156 2228.96 10.3564 2150.26 10.3564 c
2071.56 10.3564 2007.76 74.156 2007.76 152.856 c
2007.76 231.557 2071.56 295.356 2150.26 295.356 c
2228.96 295.356 2292.76 231.557 2292.76 152.856 c
f*
11.5 M
2292.76 152.856 m
2292.76 152.856 l
2292.76 74.156 2228.96 10.3564 2150.26 10.3564 c
2071.56 10.3564 2007.76 74.156 2007.76 152.856 c
2007.76 231.557 2071.56 295.356 2150.26 295.356 c
2228.96 295.356 2292.76 231.557 2292.76 152.856 c
h
S
2740.26 152.856 m
2740.26 152.856 l
2740.26 74.156 2676.46 10.3564 2597.76 10.3564 c
2519.06 10.3564 2455.26 74.156 2455.26 152.856 c
2455.26 231.557 2519.06 295.356 2597.76 295.356 c
2676.46 295.356 2740.26 231.557 2740.26 152.856 c
f*
2740.26 152.856 m
2740.26 152.856 l
2740.26 74.156 2676.46 10.3564 2597.76 10.3564 c
2519.06 10.3564 2455.26 74.156 2455.26 152.856 c
2455.26 231.557 2519.06 295.356 2597.76 295.356 c
2676.46 295.356 2740.26 231.557 2740.26 152.856 c
h
S
3187.76 152.856 m
3187.76 152.856 l
3187.76 74.156 3123.96 10.3564 3045.26 10.3564 c
2966.56 10.3564 2902.76 74.156 2902.76 152.856 c
2902.76 231.557 2966.56 295.356 3045.26 295.356 c
3123.96 295.356 3187.76 231.557 3187.76 152.856 c
f*
3187.76 152.856 m
3187.76 152.856 l
3187.76 74.156 3123.96 10.3564 3045.26 10.3564 c
2966.56 10.3564 2902.76 74.156 2902.76 152.856 c
2902.76 231.557 2966.56 295.356 3045.26 295.356 c
3123.96 295.356 3187.76 231.557 3187.76 152.856 c
h
S
14.3 M
1847.76 152.856 m
1705.26 10.3564 l
S
1847.76 152.856 m
1705.26 295.356 l
S
3350.26 150.356 m
3492.76 7.85645 l
S
3350.26 150.356 m
3492.76 292.856 l
S
11.5 M
2290.26 155.356 m
2320.26 155.356 l
2340.26 155.356 m
2370.26 155.356 l
2390.26 155.356 m
2420.26 155.356 l
2440.26 155.356 m
2455.26 155.356 l
2455.26 155.356 l
S
2737.76 152.856 m
2767.76 152.856 l
2787.76 152.856 m
2817.76 152.856 l
2837.76 152.856 m
2867.76 152.856 l
2887.76 152.856 m
2902.76 152.856 l
2902.76 152.856 l
S
3185.26 150.356 m
3215.26 150.356 l
3235.26 150.356 m
3265.26 150.356 l
3285.26 150.356 m
3315.26 150.356 l
3335.26 150.356 m
3350.26 150.356 l
3350.26 150.356 l
S
1842.76 152.856 m
1872.76 152.856 l
1892.76 152.856 m
1922.76 152.856 l
1942.76 152.856 m
1972.76 152.856 l
1992.76 152.856 m
2007.76 152.856 l
2007.76 152.856 l
S
1 0.071 0 RG
1320.26 152.856 m
1477.76 152.856 l
S
1 0.071 0 rg
1570.26 152.231 m
1460.26 112.856 l
1460.26 192.856 l
1570.26 152.231 l
f*
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF

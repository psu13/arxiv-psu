%!PS-Adobe-2.0 EPSF-2.0
%%Title: covering.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Wed Mar 29 19:50:59 2006
%%For: baez@math-cl-n03 (John Baez)
%%BoundingBox: 0 0 269 253
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 253 moveto 0 0 lineto 269 0 lineto 269 253 lineto closepath clip newpath
-69.0 485.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 1999 5653 106 106 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 126.20 369.80]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1970 7558 106 106 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 124.27 496.80]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1988 4930 106 106 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 125.47 321.60]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2004 4188 106 106 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 126.53 272.13]  PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
n 1856 3900 m 1751 3900 1751 5836 105 arcto 4 {pop} repeat
  1751 5941 2167 5941 105 arcto 4 {pop} repeat
  2272 5941 2272 4005 105 arcto 4 {pop} repeat
  2272 3900 1856 3900 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
2125 7557 m 2047 7719 l 2484 7930 l 2118 7654 l 2562 7768 l cp
eoclip
n 2100 7645 m 2127 7658 l 2145 7666 l 2168 7677 l 2196 7690 l 2229 7705 l
 2266 7722 l 2306 7740 l 2348 7759 l 2392 7778 l 2437 7798 l
 2482 7817 l 2526 7835 l 2569 7853 l 2612 7869 l 2653 7885 l
 2692 7900 l 2731 7913 l 2768 7926 l 2805 7937 l 2841 7948 l
 2876 7958 l 2911 7967 l 2947 7975 l 2982 7983 l 3018 7990 l
 3055 7997 l 3088 8002 l 3122 8008 l 3157 8013 l 3192 8017 l
 3229 8022 l 3266 8025 l 3303 8029 l 3342 8032 l 3381 8035 l
 3421 8037 l 3462 8038 l 3503 8039 l 3544 8040 l 3586 8040 l
 3627 8039 l 3669 8038 l 3710 8036 l 3751 8033 l 3791 8030 l
 3830 8026 l 3869 8022 l 3907 8016 l 3944 8010 l 3979 8004 l
 4013 7997 l 4046 7989 l 4078 7980 l 4108 7971 l 4137 7961 l
 4164 7951 l 4190 7940 l 4214 7928 l 4237 7916 l 4259 7903 l
 4279 7889 l 4299 7874 l 4317 7858 l 4333 7842 l 4349 7825 l
 4364 7807 l 4377 7788 l 4389 7769 l 4400 7748 l 4409 7727 l
 4417 7706 l 4424 7684 l 4429 7661 l 4433 7638 l 4435 7615 l
 4436 7592 l 4436 7568 l 4434 7545 l 4430 7522 l 4425 7499 l
 4419 7476 l 4411 7453 l 4402 7432 l 4391 7410 l 4379 7390 l
 4366 7370 l 4352 7351 l 4336 7333 l 4320 7315 l 4302 7299 l
 4283 7283 l 4263 7268 l 4242 7254 l 4220 7241 l 4196 7228 l
 4171 7217 l 4145 7206 l 4118 7196 l 4089 7186 l 4059 7177 l
 4027 7169 l 3994 7162 l 3959 7155 l 3924 7149 l 3887 7143 l
 3849 7139 l 3810 7134 l 3770 7131 l 3730 7128 l 3688 7126 l
 3647 7124 l 3605 7123 l 3563 7123 l 3521 7123 l 3479 7124 l
 3437 7125 l 3396 7127 l 3355 7129 l 3315 7132 l 3276 7135 l
 3238 7138 l 3200 7142 l 3164 7146 l 3128 7150 l 3093 7155 l
 3059 7160 l 3026 7165 l 2994 7170 l 2959 7176 l 2924 7183 l
 2890 7190 l 2857 7197 l 2823 7205 l 2790 7214 l 2757 7223 l
 2723 7233 l 2689 7243 l 2654 7255 l 2618 7267 l 2581 7280 l
 2543 7294 l 2504 7308 l 2464 7323 l 2425 7339 l 2385 7355 l
 2346 7370 l 2309 7386 l 2273 7401 l 2241 7414 l 2212 7426 l
 2188 7437 l 2167 7446 l 2152 7452 l 2141 7457 l 2134 7461 l
 2130 7462 l
 2128 7463 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2562 7768 m 2118 7654 l 2484 7930 l 2442 7810 l 2562 7768 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
gs  clippath
2187 5673 m 2109 5835 l 2546 6046 l 2180 5770 l 2624 5884 l cp
eoclip
n 2162 5761 m 2189 5774 l 2207 5782 l 2230 5793 l 2258 5806 l 2291 5821 l
 2328 5838 l 2368 5856 l 2410 5875 l 2454 5894 l 2499 5914 l
 2544 5933 l 2588 5951 l 2631 5969 l 2674 5985 l 2715 6001 l
 2754 6016 l 2793 6029 l 2830 6042 l 2867 6053 l 2903 6064 l
 2938 6074 l 2973 6083 l 3009 6091 l 3044 6099 l 3080 6106 l
 3117 6113 l 3150 6118 l 3184 6124 l 3219 6129 l 3254 6133 l
 3291 6138 l 3328 6141 l 3365 6145 l 3404 6148 l 3443 6151 l
 3483 6153 l 3524 6155 l 3565 6156 l 3606 6157 l 3648 6157 l
 3689 6156 l 3731 6155 l 3772 6153 l 3813 6151 l 3853 6148 l
 3893 6145 l 3932 6140 l 3970 6135 l 4007 6130 l 4042 6124 l
 4077 6117 l 4110 6110 l 4142 6102 l 4172 6093 l 4201 6084 l
 4228 6074 l 4254 6064 l 4279 6053 l 4302 6041 l 4324 6029 l
 4345 6016 l 4364 6002 l 4383 5988 l 4400 5972 l 4416 5956 l
 4431 5939 l 4444 5921 l 4457 5903 l 4468 5884 l 4477 5864 l
 4486 5844 l 4493 5823 l 4499 5802 l 4503 5780 l 4506 5758 l
 4507 5736 l 4507 5714 l 4505 5692 l 4502 5669 l 4497 5648 l
 4491 5626 l 4484 5605 l 4475 5584 l 4464 5563 l 4453 5544 l
 4440 5524 l 4426 5506 l 4410 5488 l 4394 5471 l 4376 5455 l
 4358 5440 l 4338 5425 l 4317 5411 l 4294 5398 l 4271 5386 l
 4246 5374 l 4220 5363 l 4192 5352 l 4163 5342 l 4133 5333 l
 4101 5324 l 4068 5316 l 4033 5309 l 3997 5302 l 3960 5295 l
 3922 5290 l 3882 5284 l 3842 5280 l 3801 5276 l 3760 5273 l
 3718 5270 l 3675 5268 l 3633 5266 l 3591 5265 l 3548 5264 l
 3506 5264 l 3465 5265 l 3424 5266 l 3383 5267 l 3344 5269 l
 3305 5271 l 3267 5274 l 3230 5277 l 3194 5280 l 3159 5284 l
 3125 5288 l 3092 5292 l 3060 5297 l 3024 5302 l 2989 5308 l
 2954 5314 l 2921 5320 l 2887 5328 l 2854 5336 l 2820 5344 l
 2786 5353 l 2752 5363 l 2717 5374 l 2681 5386 l 2643 5399 l
 2605 5412 l 2566 5426 l 2527 5441 l 2487 5456 l 2447 5472 l
 2408 5487 l 2371 5503 l 2336 5517 l 2303 5531 l 2274 5543 l
 2250 5553 l 2229 5562 l 2214 5569 l 2203 5573 l 2196 5577 l
 2192 5578 l
 2190 5579 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2624 5884 m 2180 5770 l 2546 6046 l 2504 5926 l 2624 5884 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
n 2484 4632 m
 2125 4787 l gs col0 s gr 
% Polyline
gs  clippath
5085 7365 m 5265 7365 l 5265 6924 l 5175 7284 l 5085 6924 l cp
eoclip
n 5175 7350 m
 5175 5550 l gs col0 s gr gr

% arrowhead
n 5085 6924 m 5175 7284 l 5265 6924 l  col0 s
% Polyline
gs  clippath
2186 4250 m 2108 4412 l 2545 4622 l 2179 4347 l 2623 4460 l cp
eoclip
n 2161 4338 m 2186 4350 l 2202 4358 l 2224 4369 l 2251 4382 l 2283 4397 l
 2321 4415 l 2362 4435 l 2408 4457 l 2457 4480 l 2508 4504 l
 2560 4528 l 2614 4553 l 2667 4577 l 2720 4601 l 2772 4624 l
 2823 4647 l 2872 4668 l 2919 4688 l 2964 4707 l 3008 4725 l
 3050 4742 l 3090 4757 l 3128 4771 l 3165 4784 l 3200 4797 l
 3234 4808 l 3267 4818 l 3300 4827 l 3331 4835 l 3362 4843 l
 3393 4850 l 3424 4856 l 3460 4863 l 3497 4869 l 3533 4874 l
 3570 4878 l 3607 4882 l 3643 4885 l 3680 4887 l 3718 4888 l
 3755 4889 l 3792 4889 l 3829 4888 l 3865 4886 l 3902 4884 l
 3937 4881 l 3972 4877 l 4006 4873 l 4039 4868 l 4071 4862 l
 4102 4856 l 4131 4850 l 4159 4843 l 4186 4836 l 4211 4828 l
 4235 4820 l 4257 4812 l 4277 4804 l 4296 4795 l 4314 4786 l
 4330 4777 l 4346 4768 l 4360 4757 l 4374 4747 l 4386 4736 l
 4397 4725 l 4406 4713 l 4415 4701 l 4422 4689 l 4427 4677 l
 4432 4664 l 4435 4650 l 4437 4637 l 4438 4623 l 4437 4610 l
 4435 4596 l 4432 4582 l 4428 4568 l 4423 4555 l 4416 4541 l
 4409 4528 l 4401 4516 l 4391 4503 l 4381 4491 l 4371 4480 l
 4359 4468 l 4347 4458 l 4335 4447 l 4322 4437 l 4308 4428 l
 4291 4417 l 4273 4406 l 4254 4396 l 4234 4386 l 4213 4376 l
 4191 4366 l 4167 4357 l 4142 4348 l 4117 4340 l 4090 4331 l
 4063 4324 l 4035 4316 l 4007 4310 l 3978 4303 l 3949 4298 l
 3921 4293 l 3892 4288 l 3864 4284 l 3836 4281 l 3809 4278 l
 3782 4276 l 3755 4274 l 3729 4273 l 3703 4273 l 3678 4272 l
 3652 4272 l 3626 4273 l 3599 4274 l 3572 4276 l 3545 4278 l
 3518 4280 l 3490 4283 l 3462 4286 l 3434 4290 l 3407 4294 l
 3379 4298 l 3351 4302 l 3325 4307 l 3298 4312 l 3273 4317 l
 3248 4322 l 3224 4328 l 3201 4333 l 3179 4338 l 3157 4343 l
 3137 4349 l 3117 4354 l 3098 4359 l 3075 4365 l 3053 4372 l
 3032 4378 l 3010 4385 l 2987 4392 l 2964 4400 l 2940 4408 l
 2915 4417 l 2888 4426 l 2861 4436 l 2833 4447 l 2805 4457 l
 2779 4467 l 2755 4475 l 2735 4483 l 2720 4489 l 2710 4493 l
 2704 4495 l
 2701 4496 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2623 4460 m 2179 4347 l 2545 4622 l 2503 4502 l 2623 4460 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
n 5312 5290 m 5596 5290 l 5596 5649 l 5312 5649 l
 cp gs col7 1.00 shd ef gr gs col7 s gr 
% Polyline
n 1183 5088 m 1467 5088 l 1467 5447 l 1183 5447 l
 cp gs col7 1.00 shd ef gr gs col7 s gr 
% Polyline
gs  clippath
2119 4887 m 2100 5066 l 2582 5118 l 2145 4981 l 2602 4939 l cp
eoclip
n 2125 4979 m 2153 4982 l 2172 4984 l 2196 4987 l 2227 4991 l 2264 4995 l
 2306 5000 l 2353 5005 l 2405 5011 l 2460 5017 l 2517 5024 l
 2577 5030 l 2637 5037 l 2697 5043 l 2756 5050 l 2814 5056 l
 2871 5062 l 2926 5067 l 2978 5073 l 3029 5078 l 3077 5082 l
 3123 5086 l 3167 5090 l 3208 5094 l 3248 5097 l 3287 5100 l
 3323 5103 l 3359 5105 l 3393 5107 l 3426 5109 l 3459 5111 l
 3491 5112 l 3523 5114 l 3560 5115 l 3597 5116 l 3634 5116 l
 3670 5117 l 3707 5117 l 3744 5116 l 3780 5116 l 3817 5115 l
 3853 5113 l 3889 5111 l 3925 5109 l 3960 5107 l 3995 5104 l
 4030 5100 l 4063 5096 l 4096 5092 l 4128 5087 l 4159 5082 l
 4189 5077 l 4217 5071 l 4245 5065 l 4271 5058 l 4295 5052 l
 4319 5044 l 4341 5037 l 4362 5029 l 4382 5021 l 4400 5013 l
 4418 5004 l 4434 4995 l 4455 4981 l 4475 4967 l 4493 4952 l
 4510 4936 l 4525 4919 l 4540 4901 l 4553 4882 l 4565 4863 l
 4575 4842 l 4585 4821 l 4593 4800 l 4600 4778 l 4605 4756 l
 4609 4734 l 4613 4712 l 4615 4691 l 4616 4670 l 4616 4650 l
 4615 4630 l 4614 4611 l 4612 4592 l 4610 4574 l 4606 4554 l
 4602 4535 l 4598 4515 l 4592 4496 l 4586 4476 l 4578 4456 l
 4569 4436 l 4560 4416 l 4549 4396 l 4537 4376 l 4524 4357 l
 4511 4337 l 4496 4319 l 4481 4300 l 4464 4283 l 4447 4266 l
 4430 4249 l 4411 4233 l 4392 4218 l 4372 4202 l 4356 4190 l
 4339 4179 l 4321 4167 l 4302 4155 l 4283 4143 l 4262 4131 l
 4240 4118 l 4217 4106 l 4193 4094 l 4168 4082 l 4142 4069 l
 4115 4058 l 4087 4046 l 4059 4034 l 4030 4023 l 4001 4013 l
 3972 4003 l 3942 3993 l 3913 3984 l 3883 3975 l 3854 3967 l
 3824 3960 l 3795 3953 l 3766 3947 l 3736 3941 l 3707 3936 l
 3679 3931 l 3650 3927 l 3621 3924 l 3592 3920 l 3561 3917 l
 3530 3915 l 3499 3912 l 3466 3910 l 3433 3909 l 3399 3907 l
 3365 3907 l 3331 3906 l 3296 3906 l 3261 3906 l 3227 3907 l
 3192 3907 l 3158 3909 l 3124 3910 l 3091 3912 l 3059 3914 l
 3027 3916 l 2996 3918 l 2966 3921 l 2937 3924 l 2909 3927 l
 2881 3930 l 2854 3933 l 2828 3937 l 2800 3941 l 2773 3945 l
 2745 3949 l 2718 3954 l 2691 3959 l 2662 3965 l 2633 3971 l
 2603 3977 l 2572 3985 l 2540 3992 l 2506 4001 l 2471 4009 l
 2435 4019 l 2398 4028 l 2361 4038 l 2325 4048 l 2291 4057 l
 2260 4065 l 2232 4073 l 2209 4080 l 2190 4085 l 2177 4089 l
 2168 4091 l 2163 4092 l
 2161 4093 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2602 4939 m 2145 4981 l 2582 5118 l 2502 5019 l 2602 4939 l 
 cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs
end

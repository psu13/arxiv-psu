%!PS-Adobe-2.0 EPSF-2.0
%%Title: frankfurt02fig1.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Mon Jun 10 18:09:31 2002
%%For: thiemann@mim.aei-potsdam.mpg.de (Thomas Thiemann,51,51,none)
%%BoundingBox: 0 0 633 436
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 436 moveto 0 0 lineto 633 0 lineto 633 436 lineto closepath clip newpath
-50.0 506.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
30.000 slw
n 9600 1200 m
 2400 8400 l gs col4 s gr 
% Polyline
2 slj
n 9075 3300 m 9072 3301 l 9066 3303 l 9057 3307 l 9045 3313 l 9030 3319 l
 9015 3326 l 8999 3333 l 8981 3342 l 8963 3352 l 8944 3363 l
 8925 3375 l 8905 3389 l 8891 3399 l 8884 3405 l 8881 3406 l
 8880 3409 l 8874 3416 l 8864 3430 l 8850 3450 l 8838 3469 l
 8828 3486 l 8820 3500 l 8814 3511 l 8810 3519 l 8806 3525 l
 8803 3531 l 8799 3539 l 8795 3550 l 8789 3564 l 8782 3581 l
 8775 3600 l 8768 3624 l 8766 3638 l 8766 3643 l 8769 3644 l
 8771 3644 l 8774 3647 l 8775 3658 l 8775 3675 l 8775 3692 l
 8775 3704 l 8775 3710 l 8775 3713 l 8775 3715 l 8775 3721 l
 8775 3733 l 8775 3750 l 8775 3767 l 8774 3778 l 8771 3781 l
 8769 3781 l 8766 3782 l 8766 3787 l 8768 3801 l 8775 3825 l
 8782 3844 l 8789 3861 l 8796 3875 l 8802 3886 l 8808 3894 l
 8813 3900 l 8817 3906 l 8823 3914 l 8829 3925 l 8836 3939 l
 8843 3956 l 8850 3975 l 8856 3999 l 8856 4012 l 8851 4015 l
 8844 4013 l 8837 4010 l 8833 4013 l 8836 4026 l 8850 4050 l
 8862 4066 l 8874 4082 l 8886 4095 l 8896 4105 l 8904 4113 l
 8912 4119 l 8919 4125 l 8926 4131 l 8934 4137 l 8943 4145 l
 8954 4155 l 8968 4168 l 8984 4184 l 9000 4200 l 9020 4220 l
 9031 4233 l 9035 4239 l 9031 4240 l 9025 4237 l 9019 4235 l
 9018 4236 l 9024 4242 l 9043 4255 l 9075 4275 l 9097 4288 l
 9119 4300 l 9141 4311 l 9160 4321 l 9178 4329 l 9193 4336 l
 9207 4341 l 9219 4346 l 9231 4350 l 9243 4354 l 9255 4359 l
 9269 4364 l 9284 4371 l 9300 4379 l 9318 4389 l 9337 4400 l
 9357 4412 l 9375 4425 l 9391 4438 l 9402 4449 l 9409 4458 l
 9411 4463 l 9409 4467 l 9405 4468 l 9400 4469 l 9394 4469 l
 9387 4469 l 9381 4469 l 9376 4470 l 9372 4472 l 9369 4477 l
 9369 4483 l 9371 4491 l 9375 4500 l 9383 4514 l 9391 4524 l
 9398 4530 l 9402 4531 l 9406 4531 l 9410 4531 l 9416 4534 l
 9424 4541 l 9436 4555 l 9450 4575 l 9462 4594 l 9472 4610 l
 9479 4621 l 9483 4627 l 9486 4630 l 9488 4631 l 9489 4633 l
 9492 4637 l 9496 4647 l 9503 4664 l 9513 4691 l 9525 4725 l
 9534 4754 l 9543 4781 l 9550 4805 l 9557 4825 l 9562 4842 l
 9567 4855 l 9571 4865 l 9575 4875 l 9579 4885 l 9582 4895 l
 9586 4908 l 9589 4925 l 9593 4945 l 9596 4969 l 9599 4996 l
 9600 5025 l 9599 5055 l 9596 5079 l 9592 5097 l 9587 5108 l
 9583 5114 l 9579 5117 l 9575 5119 l 9571 5120 l 9566 5122 l
 9560 5126 l 9553 5133 l 9545 5144 l 9536 5159 l 9525 5175 l
 9511 5195 l 9500 5209 l 9493 5216 l 9489 5219 l 9487 5219 l
 9486 5219 l 9482 5220 l 9475 5226 l 9464 5236 l 9450 5250 l
 9436 5264 l 9425 5275 l 9418 5282 l 9414 5286 l 9412 5288 l
 9411 5289 l 9407 5293 l 9400 5300 l 9389 5311 l 9375 5325 l
 9361 5339 l 9349 5350 l 9341 5357 l 9335 5361 l 9331 5363 l
 9327 5364 l 9323 5368 l 9316 5375 l 9308 5386 l 9300 5400 l
 9295 5412 l 9293 5421 l 9295 5428 l 9299 5431 l 9306 5431 l
 9313 5431 l 9319 5431 l 9324 5433 l 9326 5437 l 9324 5445 l
 9315 5458 l 9300 5475 l 9285 5489 l 9268 5503 l 9252 5515 l
 9236 5525 l 9223 5533 l 9210 5540 l 9199 5545 l 9188 5550 l
 9176 5555 l 9165 5560 l 9152 5567 l 9139 5575 l 9123 5585 l
 9107 5597 l 9090 5611 l 9075 5625 l 9063 5638 l 9054 5649 l
 9049 5656 l 9047 5660 l 9048 5662 l 9049 5661 l 9053 5659 l
 9056 5656 l 9060 5654 l 9064 5652 l 9068 5652 l 9071 5654 l
 9073 5660 l 9074 5669 l 9075 5683 l 9075 5700 l 9075 5722 l
 9075 5744 l 9075 5763 l 9075 5779 l 9075 5792 l 9075 5803 l
 9075 5813 l 9075 5822 l 9075 5833 l 9075 5846 l 9075 5862 l
 9075 5881 l 9075 5903 l 9075 5925 l 9075 5951 l 9073 5967 l
 9071 5973 l 9067 5973 l 9062 5969 l 9059 5965 l 9057 5963 l
 9057 5968 l 9063 5980 l 9075 6000 l 9087 6016 l 9099 6032 l
 9111 6045 l 9121 6055 l 9129 6063 l 9137 6069 l 9144 6075 l
 9151 6081 l 9159 6087 l 9168 6095 l 9179 6105 l 9193 6118 l
 9209 6134 l 9225 6150 l 9245 6170 l 9257 6183 l 9262 6189 l
 9260 6190 l 9256 6187 l 9252 6185 l 9252 6186 l 9258 6192 l
 9274 6205 l 9300 6225 l 9319 6239 l 9338 6253 l 9356 6265 l
 9370 6275 l 9382 6283 l 9391 6290 l 9399 6295 l 9406 6300 l
 9413 6305 l 9422 6310 l 9432 6317 l 9444 6325 l 9460 6335 l
 9479 6347 l 9501 6361 l 9525 6375 l 9554 6392 l 9578 6406 l
 9594 6415 l 9604 6420 l 9609 6423 l 9613 6425 l 9615 6426 l
 9620 6428 l 9628 6432 l 9640 6437 l 9656 6443 l 9675 6450 l
 9699 6457 l 9712 6458 l 9715 6455 l 9713 6450 l 9710 6445 l
 9713 6442 l 9726 6443 l 9750 6450 l 9769 6457 l 9786 6464 l
 9800 6471 l 9811 6477 l 9819 6483 l 9825 6488 l 9831 6492 l
 9839 6498 l 9850 6504 l 9864 6511 l 9881 6518 l 9900 6525 l
 9924 6532 l 9934 6534 l 9933 6534 l 9925 6531 l 9918 6529 l
 9920 6526 l 9937 6525 l 9975 6525 l 10000 6525 l 10024 6525 l
 10047 6525 l 10068 6525 l 10085 6525 l 10100 6525 l 10113 6525 l
 10125 6525 l 10137 6525 l 10150 6525 l 10165 6525 l 10182 6525 l
 10203 6525 l 10226 6525 l 10250 6525 l 10275 6525 l 10313 6525 l
 10329 6525 l 10328 6525 l 10319 6525 l 10309 6525 l 10307 6525 l
 10320 6525 l 10350 6525 l 10372 6525 l 10394 6525 l 10413 6526 l
 10429 6527 l 10442 6528 l 10453 6530 l 10463 6531 l 10472 6533 l
 10483 6534 l 10496 6534 l 10512 6534 l 10531 6532 l 10553 6530 l
 10575 6525 l 10601 6517 l 10617 6509 l 10623 6502 l 10623 6498 l
 10619 6494 l 10615 6490 l 10613 6484 l 10618 6476 l 10630 6464 l
 10650 6450 l 10669 6438 l 10685 6429 l 10697 6424 l 10705 6422 l
 10710 6423 l 10713 6425 l 10716 6427 l 10721 6426 l 10731 6422 l
 10747 6413 l 10771 6397 l 10800 6375 l 10824 6356 l 10846 6336 l
 10865 6319 l 10881 6304 l 10893 6291 l 10903 6280 l 10912 6271 l
 10919 6263 l 10926 6254 l 10934 6245 l 10943 6234 l 10955 6221 l
 10969 6206 l 10987 6189 l 11006 6169 l 11025 6150 l 11051 6124 l
 11068 6109 l 11075 6104 l 11077 6106 l 11075 6113 l 11073 6119 l
 11072 6121 l 11077 6116 l 11086 6101 l 11100 6075 l 11110 6053 l
 11119 6031 l 11126 6013 l 11131 5998 l 11134 5986 l 11136 5977 l
 11138 5969 l 11139 5960 l 11141 5951 l 11144 5938 l 11149 5922 l
 11156 5901 l 11165 5877 l 11175 5850 l 11187 5821 l 11197 5799 l
 11205 5786 l 11211 5780 l 11215 5779 l 11219 5781 l 11222 5783 l
 11226 5782 l 11230 5775 l 11236 5760 l 11243 5734 l 11250 5700 l
 11254 5671 l 11257 5644 l 11259 5620 l 11259 5601 l 11259 5586 l
 11259 5574 l 11257 5564 l 11256 5556 l 11255 5548 l 11254 5538 l
 11252 5526 l 11251 5510 l 11251 5489 l 11250 5463 l 11250 5433 l
 11250 5400 l 11250 5364 l 11250 5334 l 11251 5311 l 11252 5295 l
 11253 5285 l 11255 5279 l 11256 5275 l 11258 5271 l 11259 5266 l
 11259 5257 l 11259 5244 l 11257 5225 l 11255 5202 l 11250 5175 l
 11243 5146 l 11236 5122 l 11230 5106 l 11226 5096 l 11222 5091 l
 11219 5087 l 11215 5085 l 11211 5080 l 11205 5072 l 11197 5060 l
 11187 5044 l 11175 5025 l 11161 5005 l 11150 4992 l 11143 4986 l
 11139 4985 l 11137 4988 l 11136 4990 l 11132 4989 l 11125 4983 l
 11114 4970 l 11100 4950 l 11088 4931 l 11078 4914 l 11071 4900 l
 11067 4889 l 11064 4881 l 11062 4875 l 11061 4869 l 11058 4861 l
 11054 4850 l 11047 4836 l 11037 4819 l 11025 4800 l 11011 4780 l
 11000 4768 l 10993 4763 l 10989 4765 l 10987 4769 l 10986 4773 l
 10982 4773 l 10975 4767 l 10964 4751 l 10950 4725 l 10940 4703 l
 10930 4681 l 10923 4661 l 10917 4644 l 10912 4630 l 10909 4617 l
 10906 4606 l 10904 4595 l 10901 4583 l 10897 4570 l 10892 4554 l
 10887 4536 l 10881 4518 l 10875 4500 l 10873 4495 l 10872 4490 l
 10870 4486 l 10869 4483 l 10868 4480 l 10867 4478 l 10866 4477 l
 10865 4477 l 10864 4478 l 10864 4479 l 10864 4481 l 10863 4483 l
 10863 4486 l 10863 4489 l 10863 4492 l 10863 4495 l 10863 4499 l
 10863 4503 l 10863 4506 l 10863 4510 l 10863 4513 l 10863 4517 l
 10863 4520 l 10863 4523 l 10863 4526 l 10863 4528 l 10864 4530 l
 10864 4532 l 10864 4533 l 10865 4533 l 10866 4532 l 10867 4530 l
 10868 4527 l 10869 4523 l 10870 4519 l 10872 4513 l 10873 4507 l
 10875 4500 l 10880 4480 l 10886 4458 l 10891 4437 l 10896 4418 l
 10901 4402 l 10905 4387 l 10909 4375 l 10913 4363 l 10916 4350 l
 10920 4337 l 10924 4322 l 10929 4303 l 10934 4282 l 10939 4257 l
 10945 4229 l 10950 4200 l 10955 4166 l 10957 4140 l 10956 4123 l
 10953 4115 l 10949 4112 l 10944 4113 l 10939 4113 l 10935 4111 l
 10933 4105 l 10934 4093 l 10940 4074 l 10950 4050 l 10962 4029 l
 10975 4011 l 10987 3997 l 10998 3988 l 11008 3981 l 11017 3978 l
 11025 3975 l 11033 3972 l 11042 3969 l 11052 3962 l 11063 3953 l
 11075 3939 l 11088 3921 l 11100 3900 l 11110 3876 l 11115 3856 l
 11116 3841 l 11112 3830 l 11107 3824 l 11100 3819 l 11093 3814 l
 11088 3808 l 11084 3799 l 11085 3786 l 11090 3769 l 11100 3750 l
 11114 3733 l 11129 3720 l 11142 3713 l 11154 3710 l 11165 3711 l
 11175 3713 l 11185 3714 l 11196 3715 l 11208 3712 l 11221 3705 l
 11236 3692 l 11250 3675 l 11260 3656 l 11266 3639 l 11267 3626 l
 11265 3617 l 11261 3611 l 11256 3606 l 11251 3601 l 11247 3595 l
 11244 3584 l 11243 3569 l 11245 3549 l 11250 3525 l 11257 3501 l
 11264 3481 l 11271 3467 l 11277 3458 l 11283 3453 l 11288 3450 l
 11292 3447 l 11298 3442 l 11304 3433 l 11311 3419 l 11318 3399 l
 11325 3375 l 11330 3351 l 11334 3331 l 11336 3317 l 11337 3308 l
 11337 3303 l 11337 3300 l 11337 3297 l 11337 3292 l 11336 3283 l
 11334 3269 l 11330 3249 l 11325 3225 l 11318 3201 l 11312 3182 l
 11308 3168 l 11306 3161 l 11306 3158 l 11306 3156 l 11306 3155 l
 11304 3151 l 11299 3142 l 11289 3127 l 11272 3104 l 11250 3075 l
 11231 3052 l 11212 3030 l 11194 3011 l 11180 2996 l 11168 2984 l
 11159 2975 l 11151 2968 l 11144 2963 l 11137 2957 l 11128 2950 l
 11118 2941 l 11106 2929 l 11090 2914 l 11071 2895 l 11049 2873 l
 11025 2850 l 11000 2825 l 10979 2803 l 10964 2787 l 10955 2776 l
 10951 2769 l 10950 2765 l 10950 2762 l 10950 2760 l 10949 2757 l
 10945 2751 l 10936 2743 l 10921 2731 l 10900 2716 l 10875 2700 l
 10848 2685 l 10824 2673 l 10803 2665 l 10787 2660 l 10774 2657 l
 10765 2656 l 10756 2656 l 10748 2656 l 10739 2656 l 10727 2654 l
 10712 2650 l 10694 2644 l 10672 2635 l 10650 2625 l 10624 2611 l
 10608 2599 l 10602 2591 l 10602 2585 l 10606 2581 l 10610 2577 l
 10612 2573 l 10607 2566 l 10595 2558 l 10575 2550 l 10556 2545 l
 10540 2541 l 10529 2539 l 10523 2538 l 10520 2538 l 10519 2538 l
 10517 2538 l 10513 2538 l 10503 2539 l 10486 2541 l 10459 2545 l
 10425 2550 l 10396 2555 l 10369 2560 l 10344 2565 l 10323 2568 l
 10306 2571 l 10292 2573 l 10280 2574 l 10269 2575 l 10258 2576 l
 10246 2578 l 10233 2581 l 10216 2585 l 10197 2592 l 10174 2601 l
 10150 2612 l 10125 2625 l 10098 2644 l 10079 2661 l 10070 2675 l
 10067 2686 l 10070 2694 l 10075 2700 l 10080 2706 l 10084 2714 l
 10084 2725 l 10079 2739 l 10067 2756 l 10050 2775 l 10031 2792 l
 10013 2805 l 9998 2812 l 9987 2815 l 9977 2814 l 9969 2812 l
 9961 2811 l 9952 2810 l 9941 2813 l 9928 2820 l 9914 2833 l
 9900 2850 l 9890 2869 l 9885 2886 l 9884 2900 l 9888 2911 l
 9893 2919 l 9900 2925 l 9907 2931 l 9912 2939 l 9916 2950 l
 9915 2964 l 9910 2981 l 9900 3000 l 9886 3017 l 9871 3030 l
 9858 3038 l 9846 3042 l 9835 3044 l 9825 3044 l 9815 3044 l
 9804 3044 l 9792 3047 l 9779 3054 l 9764 3063 l 9750 3075 l
 9737 3092 l 9736 3101 l 9744 3103 l 9756 3100 l 9768 3098 l
 9775 3103 l 9770 3119 l 9750 3150 l 9735 3169 l 9718 3189 l
 9702 3207 l 9688 3223 l 9675 3237 l 9664 3248 l 9653 3259 l
 9644 3269 l 9634 3278 l 9623 3289 l 9612 3300 l 9598 3313 l
 9582 3327 l 9564 3343 l 9544 3360 l 9525 3375 l 9508 3387 l
 9494 3396 l 9485 3401 l 9479 3403 l 9477 3402 l 9477 3401 l
 9479 3397 l 9481 3394 l 9484 3390 l 9486 3386 l 9487 3382 l
 9485 3379 l 9481 3377 l 9474 3376 l 9463 3375 l 9450 3375 l
 9431 3375 l 9414 3375 l 9400 3375 l 9389 3375 l 9381 3375 l
 9375 3375 l 9369 3375 l 9361 3375 l 9350 3375 l 9336 3375 l
 9319 3375 l 9300 3375 l 9276 3375 l 9260 3376 l 9253 3379 l
 9250 3381 l 9248 3384 l 9243 3384 l 9235 3382 l 9225 3375 l
 9218 3364 l 9215 3352 l 9216 3339 l 9218 3326 l 9221 3314 l
 9223 3305 l 9225 3301 l
 9225 3300 l gs /PC [[0.00 1.00 0.00] [0.00 1.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 584.40 169.20] PATmp PATsp ef gr PATusp gs col2 s gr 
% Polyline
0 slj
n 2400 1200 m
 9600 8400 l gs col4 s gr 
% Polyline
2 slj
n 2625 3600 m 2623 3600 l 2620 3600 l 2615 3600 l 2606 3600 l 2596 3600 l
 2583 3600 l 2568 3600 l 2550 3600 l 2530 3600 l 2505 3600 l
 2476 3600 l 2441 3600 l 2400 3600 l 2366 3600 l 2334 3600 l
 2304 3599 l 2279 3599 l 2257 3598 l 2240 3597 l 2225 3596 l
 2212 3595 l 2200 3594 l 2188 3593 l 2176 3592 l 2162 3591 l
 2145 3591 l 2126 3591 l 2103 3592 l 2078 3594 l 2051 3596 l
 2025 3600 l 1992 3607 l 1972 3614 l 1962 3620 l 1961 3624 l
 1967 3628 l 1975 3631 l 1984 3635 l 1990 3639 l 1992 3645 l
 1986 3653 l 1972 3663 l 1950 3675 l 1928 3685 l 1906 3694 l
 1888 3701 l 1873 3706 l 1861 3709 l 1852 3711 l 1844 3713 l
 1835 3714 l 1826 3716 l 1813 3719 l 1797 3724 l 1776 3731 l
 1752 3740 l 1725 3750 l 1696 3762 l 1674 3772 l 1661 3779 l
 1655 3783 l 1654 3786 l 1656 3788 l 1658 3789 l 1657 3792 l
 1650 3796 l 1635 3803 l 1609 3813 l 1575 3825 l 1546 3834 l
 1519 3842 l 1494 3849 l 1473 3854 l 1456 3858 l 1442 3860 l
 1430 3861 l 1419 3863 l 1408 3864 l 1396 3865 l 1383 3867 l
 1366 3871 l 1347 3876 l 1324 3883 l 1300 3891 l 1275 3900 l
 1251 3910 l 1233 3919 l 1222 3925 l 1216 3929 l 1214 3931 l
 1216 3931 l 1219 3931 l 1222 3931 l 1225 3932 l 1225 3935 l
 1223 3940 l 1218 3948 l 1210 3960 l 1200 3975 l 1188 3994 l
 1178 4011 l 1171 4025 l 1167 4036 l 1164 4044 l 1162 4050 l
 1161 4056 l 1158 4064 l 1154 4075 l 1147 4089 l 1137 4106 l
 1125 4125 l 1111 4145 l 1101 4158 l 1095 4164 l 1094 4165 l
 1094 4162 l 1094 4160 l 1091 4161 l 1084 4167 l 1070 4180 l
 1050 4200 l 1034 4216 l 1018 4231 l 1004 4244 l 993 4253 l
 984 4260 l 976 4265 l 969 4269 l 962 4273 l 954 4278 l
 946 4286 l 936 4296 l 924 4311 l 912 4329 l 900 4350 l
 890 4374 l 884 4394 l 882 4408 l 882 4417 l 884 4422 l
 888 4425 l 891 4428 l 894 4433 l 897 4442 l 899 4456 l
 900 4476 l 900 4500 l 900 4524 l 899 4544 l 899 4558 l
 897 4567 l 896 4572 l 894 4575 l 892 4578 l 891 4583 l
 891 4592 l 892 4606 l 895 4626 l 900 4650 l 907 4674 l
 914 4694 l 920 4708 l 924 4717 l 928 4722 l 931 4725 l
 935 4728 l 939 4733 l 945 4742 l 953 4756 l 963 4776 l
 975 4800 l 987 4824 l 996 4844 l 1001 4859 l 1003 4870 l
 1002 4876 l 1000 4881 l 998 4886 l 999 4892 l 1003 4901 l
 1012 4914 l 1028 4931 l 1050 4950 l 1072 4965 l 1094 4977 l
 1112 4985 l 1127 4990 l 1139 4993 l 1148 4994 l 1156 4994 l
 1165 4994 l 1174 4994 l 1187 4996 l 1203 5000 l 1224 5006 l
 1248 5015 l 1275 5025 l 1300 5035 l 1319 5045 l 1331 5052 l
 1335 5058 l 1333 5063 l 1327 5066 l 1319 5069 l 1311 5071 l
 1307 5074 l 1309 5078 l 1320 5083 l 1342 5088 l 1377 5094 l
 1425 5100 l 1457 5103 l 1491 5105 l 1524 5107 l 1556 5108 l
 1585 5109 l 1612 5109 l 1636 5109 l 1658 5109 l 1678 5109 l
 1697 5108 l 1714 5107 l 1731 5106 l 1748 5105 l 1766 5104 l
 1784 5104 l 1804 5103 l 1825 5102 l 1849 5101 l 1875 5101 l
 1903 5101 l 1933 5100 l 1964 5100 l 1995 5100 l 2025 5100 l
 2048 5100 l 2067 5100 l 2084 5100 l 2096 5100 l 2106 5100 l
 2113 5100 l 2117 5100 l 2119 5100 l 2117 5100 l 2114 5100 l
 2110 5100 l 2105 5100 l 2100 5100 l 2095 5100 l 2089 5100 l
 2084 5100 l 2080 5100 l 2076 5100 l 2073 5100 l 2072 5100 l
 2073 5100 l 2075 5100 l 2080 5100 l 2085 5100 l 2092 5100 l
 2100 5100 l 2119 5100 l 2134 5099 l 2143 5097 l 2147 5094 l
 2146 5091 l 2144 5087 l 2142 5084 l 2144 5082 l 2154 5082 l
 2173 5084 l 2205 5090 l 2250 5100 l 2281 5108 l 2312 5117 l
 2342 5126 l 2369 5134 l 2393 5142 l 2414 5150 l 2432 5157 l
 2447 5163 l 2462 5169 l 2475 5175 l 2488 5181 l 2503 5187 l
 2518 5193 l 2536 5200 l 2557 5208 l 2581 5216 l 2608 5224 l
 2638 5233 l 2669 5242 l 2700 5250 l 2745 5260 l 2775 5265 l
 2792 5264 l 2797 5260 l 2794 5252 l 2787 5244 l 2780 5235 l
 2776 5229 l 2779 5225 l 2792 5227 l 2816 5235 l 2850 5250 l
 2875 5264 l 2900 5278 l 2921 5293 l 2939 5306 l 2953 5318 l
 2963 5329 l 2971 5339 l 2976 5348 l 2981 5356 l 2986 5365 l
 2993 5374 l 3002 5384 l 3014 5396 l 3031 5409 l 3053 5424 l
 3081 5440 l 3113 5458 l 3150 5475 l 3187 5491 l 3222 5503 l
 3252 5513 l 3277 5520 l 3296 5524 l 3311 5526 l 3322 5527 l
 3330 5526 l 3338 5525 l 3345 5524 l 3353 5523 l 3364 5522 l
 3379 5523 l 3398 5525 l 3423 5529 l 3453 5535 l 3488 5542 l
 3525 5550 l 3566 5559 l 3601 5568 l 3628 5575 l 3647 5580 l
 3659 5585 l 3666 5588 l 3668 5591 l 3669 5594 l 3669 5596 l
 3672 5599 l 3679 5602 l 3692 5605 l 3713 5610 l 3742 5615 l
 3780 5620 l 3825 5625 l 3863 5628 l 3899 5631 l 3933 5633 l
 3962 5635 l 3988 5636 l 4009 5636 l 4027 5637 l 4043 5637 l
 4056 5637 l 4069 5638 l 4081 5637 l 4094 5637 l 4109 5637 l
 4125 5636 l 4144 5636 l 4166 5635 l 4191 5633 l 4219 5631 l
 4247 5628 l 4275 5625 l 4304 5620 l 4326 5615 l 4340 5611 l
 4347 5608 l 4348 5606 l 4345 5606 l 4339 5606 l 4331 5606 l
 4323 5606 l 4316 5606 l 4311 5603 l 4310 5599 l 4312 5592 l
 4320 5581 l 4333 5567 l 4350 5550 l 4369 5531 l 4389 5512 l
 4407 5495 l 4423 5481 l 4437 5471 l 4448 5462 l 4459 5456 l
 4469 5450 l 4478 5444 l 4489 5437 l 4500 5427 l 4513 5415 l
 4527 5398 l 4543 5378 l 4560 5353 l 4575 5325 l 4589 5294 l
 4597 5266 l 4602 5245 l 4603 5229 l 4601 5219 l 4598 5212 l
 4594 5206 l 4589 5201 l 4585 5194 l 4581 5184 l 4578 5170 l
 4576 5151 l 4575 5127 l 4575 5100 l 4575 5071 l 4576 5048 l
 4576 5033 l 4578 5024 l 4579 5020 l 4581 5019 l 4583 5017 l
 4584 5014 l 4584 5007 l 4583 4993 l 4580 4974 l 4575 4950 l
 4568 4926 l 4562 4906 l 4557 4892 l 4553 4883 l 4551 4878 l
 4550 4875 l 4548 4872 l 4545 4867 l 4540 4858 l 4531 4844 l
 4517 4824 l 4500 4800 l 4484 4779 l 4469 4761 l 4456 4746 l
 4447 4736 l 4440 4728 l 4435 4723 l 4431 4719 l 4427 4715 l
 4422 4710 l 4414 4703 l 4404 4694 l 4389 4681 l 4371 4666 l
 4350 4650 l 4326 4633 l 4306 4620 l 4292 4613 l 4283 4610 l
 4278 4611 l 4275 4613 l 4272 4614 l 4267 4615 l 4258 4612 l
 4244 4605 l 4224 4592 l 4200 4575 l 4179 4559 l 4161 4543 l
 4147 4530 l 4138 4520 l 4131 4512 l 4128 4506 l 4125 4500 l
 4122 4494 l 4119 4488 l 4112 4480 l 4103 4470 l 4089 4457 l
 4071 4441 l 4050 4425 l 4026 4408 l 4006 4395 l 3992 4387 l
 3983 4383 l 3978 4381 l 3975 4381 l 3972 4381 l 3967 4381 l
 3958 4378 l 3944 4371 l 3924 4362 l 3900 4350 l 3876 4338 l
 3856 4328 l 3841 4321 l 3830 4317 l 3824 4314 l 3819 4312 l
 3814 4311 l 3808 4308 l 3799 4304 l 3786 4297 l 3769 4287 l
 3750 4275 l 3730 4261 l 3716 4251 l 3709 4245 l 3706 4244 l
 3705 4241 l 3699 4234 l 3689 4220 l 3675 4200 l 3663 4181 l
 3653 4164 l 3646 4150 l 3642 4139 l 3639 4131 l 3637 4125 l
 3636 4119 l 3633 4111 l 3629 4100 l 3622 4086 l 3612 4069 l
 3600 4050 l 3586 4030 l 3575 4017 l 3568 4011 l 3564 4010 l
 3562 4013 l 3561 4015 l 3557 4014 l 3550 4008 l 3539 3995 l
 3525 3975 l 3513 3956 l 3503 3938 l 3496 3923 l 3492 3912 l
 3489 3902 l 3487 3894 l 3486 3886 l 3483 3877 l 3479 3866 l
 3472 3853 l 3462 3839 l 3450 3825 l 3433 3811 l 3421 3808 l
 3415 3812 l 3413 3819 l 3410 3826 l 3404 3831 l 3392 3831 l
 3375 3825 l 3361 3817 l 3350 3809 l 3343 3802 l 3339 3798 l
 3337 3794 l 3336 3790 l 3332 3784 l 3325 3776 l 3314 3764 l
 3300 3750 l 3286 3736 l 3275 3724 l 3268 3716 l 3264 3710 l
 3262 3706 l 3261 3702 l 3257 3698 l 3250 3691 l 3239 3683 l
 3225 3675 l 3208 3668 l 3197 3667 l 3194 3670 l 3194 3675 l
 3193 3680 l 3188 3683 l 3174 3682 l 3150 3675 l 3131 3668 l
 3114 3661 l 3100 3654 l 3089 3648 l 3081 3642 l 3075 3637 l
 3069 3633 l 3061 3627 l 3050 3621 l 3036 3614 l 3019 3607 l
 3000 3600 l 2980 3594 l 2964 3591 l 2952 3590 l 2943 3591 l
 2937 3593 l 2932 3595 l 2928 3598 l 2926 3599 l
 2925 3600 l gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 58.80 239.33] PATmp PATsp ef gr PATusp gs col1 s gr 
/Times-Roman ff 360.00 scf sf
9825 7425 m
gs 1 -1 sc (supp\(f'\)) col2 sh gr
/Times-Roman ff 360.00 scf sf
1800 6150 m
gs 1 -1 sc (supp\(f\)) col1 sh gr
$F2psEnd
rs
end

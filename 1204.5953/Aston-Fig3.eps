%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, 20 August 2010 16:39:26 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
0 0 1.00000 RG
37.0000 6.01724 354.000 343.982 rc
newpath
38.0000 8.01724 m
45.6508 19.1161 l
52.3077 28.4789 l
59.7941 38.6912 l
67.3301 48.6427 l
74.8303 58.2299 l
81.7840 66.8449 l
88.9841 75.4964 l
96.4305 84.1648 l
103.853 92.5320 l
111.487 100.863 l
118.212 107.976 l
125.783 115.740 l
133.385 123.285 l
140.710 130.325 l
147.363 136.527 l
155.273 143.673 l
161.974 149.539 l
169.769 156.152 l
176.669 161.822 l
184.239 167.851 l
191.448 173.412 l
198.969 179.033 l
205.876 184.035 l
213.326 189.266 l
221.065 194.524 l
227.801 198.960 l
235.077 203.608 l
242.594 208.259 l
249.947 212.665 l
257.062 216.796 l
264.961 221.237 l
272.060 225.100 l
279.638 229.095 l
286.506 232.605 l
294.014 236.324 l
301.079 239.715 l
308.463 243.150 l
315.683 246.404 l
323.241 249.704 l
330.521 252.782 l
337.965 255.830 l
345.348 258.759 l
352.132 261.368 l
359.907 264.266 l
366.862 266.777 l
374.276 269.372 l
381.373 271.779 l
389.000 274.284 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
37.0000 6.01724 354.000 343.982 rc
newpath
38.0000 8.01724 m
45.6508 19.1022 l
52.3077 28.5073 l
59.7941 38.6837 l
67.3301 48.5099 l
74.8303 57.9304 l
81.7840 66.3924 l
88.9841 74.9119 l
96.4305 83.4839 l
103.853 91.7974 l
111.487 100.114 l
118.212 107.247 l
125.783 115.067 l
133.385 122.704 l
140.710 129.869 l
147.363 136.220 l
155.273 143.587 l
161.974 149.679 l
169.769 156.597 l
176.669 162.575 l
184.239 168.976 l
191.448 174.918 l
198.969 180.957 l
205.876 186.355 l
213.326 192.017 l
221.065 197.719 l
227.801 202.534 l
235.077 207.578 l
242.594 212.621 l
249.947 217.391 l
257.062 221.857 l
264.961 226.651 l
272.060 230.817 l
279.638 235.126 l
286.506 238.916 l
294.014 242.942 l
301.079 246.629 l
308.463 250.383 l
315.683 253.964 l
323.241 257.621 l
330.521 261.059 l
337.965 264.490 l
345.348 267.811 l
352.132 270.792 l
359.907 274.133 l
366.862 277.060 l
374.276 280.130 l
381.373 283.026 l
389.000 286.086 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
345.649 349.000 m
345.649 351.600 l
S
newpath
289.713 349.000 m
289.713 351.600 l
S
newpath
233.776 349.000 m
233.776 351.600 l
S
newpath
177.840 349.000 m
177.840 351.600 l
S
newpath
121.904 349.000 m
121.904 351.600 l
S
newpath
65.9681 349.000 m
65.9681 351.600 l
S
newpath
38.0000 349.000 m
389.000 349.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
190 371 46 18 rc
newpath
196.578 376.484 m
196.578 378.843 l
198.250 378.843 l
198.250 379.390 l
196.578 379.390 l
196.578 384.031 l
196.578 384.489 196.645 384.799 196.781 384.960  c
196.916 385.122 197.088 385.203 197.296 385.203  c
197.463 385.203 197.627 385.151 197.789 385.046  c
197.950 384.942 198.078 384.786 198.171 384.578  c
198.468 384.578 l
198.291 385.088 198.036 385.474 197.703 385.734  c
197.369 385.994 197.026 386.125 196.671 386.125  c
196.432 386.125 196.197 386.057 195.968 385.921  c
195.739 385.786 195.570 385.593 195.460 385.343  c
195.351 385.093 195.296 384.713 195.296 384.203  c
195.296 379.390 l
194.156 379.390 l
194.156 379.125 l
194.447 379.010 194.742 378.817 195.039 378.546  c
195.335 378.276 195.604 377.953 195.843 377.578  c
195.958 377.380 196.125 377.015 196.343 376.484  c
196.578 376.484 l
h
207.414 389.140 m
207.414 389.421 l
206.632 389.026 205.976 388.562 205.445 388.031  c
204.695 387.281 204.117 386.390 203.710 385.359  c
203.304 384.328 203.101 383.260 203.101 382.156  c
203.101 380.541 203.500 379.070 204.296 377.742  c
205.093 376.414 206.132 375.463 207.414 374.890  c
207.414 375.218 l
206.778 375.572 206.255 376.057 205.843 376.671  c
205.432 377.286 205.125 378.065 204.921 379.007  c
204.718 379.950 204.617 380.932 204.617 381.953  c
204.617 383.067 204.700 384.083 204.867 385.000  c
205.002 385.718 205.166 386.296 205.359 386.734  c
205.552 387.171 205.812 387.591 206.140 387.992  c
206.468 388.393 206.893 388.776 207.414 389.140  c
h
210.398 374.890 m
210.398 382.015 l
212.210 380.343 l
212.596 379.989 212.820 379.765 212.882 379.671  c
212.924 379.609 212.945 379.546 212.945 379.484  c
212.945 379.380 212.903 379.291 212.820 379.218  c
212.737 379.145 212.596 379.104 212.398 379.093  c
212.398 378.843 l
215.507 378.843 l
215.507 379.093 l
215.080 379.104 214.724 379.169 214.437 379.289  c
214.151 379.408 213.841 379.619 213.507 379.921  c
211.664 381.625 l
213.507 383.937 l
214.018 384.583 214.362 384.989 214.539 385.156  c
214.789 385.406 215.007 385.567 215.195 385.640  c
215.320 385.692 215.544 385.718 215.867 385.718  c
215.867 386.000 l
212.398 386.000 l
212.398 385.718 l
212.596 385.708 212.729 385.677 212.796 385.625  c
212.864 385.572 212.898 385.494 212.898 385.390  c
212.898 385.276 212.794 385.083 212.585 384.812  c
210.398 382.015 l
210.398 384.390 l
210.398 384.849 210.429 385.151 210.492 385.296  c
210.554 385.442 210.645 385.546 210.765 385.609  c
210.885 385.671 211.148 385.708 211.554 385.718  c
211.554 386.000 l
207.914 386.000 l
207.914 385.718 l
208.278 385.718 208.549 385.671 208.726 385.578  c
208.841 385.526 208.924 385.437 208.976 385.312  c
209.059 385.145 209.101 384.849 209.101 384.421  c
209.101 377.906 l
209.101 377.083 209.083 376.578 209.046 376.390  c
209.010 376.203 208.950 376.075 208.867 376.007  c
208.783 375.940 208.674 375.906 208.539 375.906  c
208.424 375.906 208.257 375.947 208.039 376.031  c
207.914 375.765 l
210.039 374.890 l
210.398 374.890 l
h
215.867 378.843 m
219.210 378.843 l
219.210 379.125 l
219.039 379.125 l
218.809 379.125 218.635 379.177 218.515 379.281  c
218.395 379.385 218.335 379.510 218.335 379.656  c
218.335 379.864 218.424 380.145 218.601 380.500  c
220.335 384.109 l
221.945 380.156 l
222.028 379.947 222.070 379.739 222.070 379.531  c
222.070 379.437 222.054 379.364 222.023 379.312  c
221.981 379.260 221.916 379.216 221.828 379.179  c
221.739 379.143 221.580 379.125 221.351 379.125  c
221.351 378.843 l
223.679 378.843 l
223.679 379.125 l
223.492 379.145 223.346 379.187 223.242 379.250  c
223.138 379.312 223.023 379.432 222.898 379.609  c
222.846 379.682 222.757 379.880 222.632 380.203  c
219.710 387.359 l
219.429 388.046 219.062 388.567 218.609 388.921  c
218.156 389.276 217.716 389.453 217.289 389.453  c
216.987 389.453 216.737 389.364 216.539 389.187  c
216.341 389.010 216.242 388.807 216.242 388.578  c
216.242 388.359 216.312 388.184 216.453 388.054  c
216.593 387.924 216.789 387.859 217.039 387.859  c
217.216 387.859 217.450 387.916 217.742 388.031  c
217.950 388.104 218.080 388.140 218.132 388.140  c
218.289 388.140 218.460 388.059 218.648 387.898  c
218.835 387.737 219.023 387.427 219.210 386.968  c
219.710 385.718 l
217.148 380.312 l
217.065 380.156 216.940 379.958 216.773 379.718  c
216.638 379.531 216.528 379.406 216.445 379.343  c
216.330 379.260 216.138 379.187 215.867 379.125  c
215.867 378.843 l
h
226.367 378.625 m
226.367 380.234 l
226.971 379.161 227.585 378.625 228.210 378.625  c
228.502 378.625 228.742 378.713 228.929 378.890  c
229.117 379.067 229.210 379.270 229.210 379.500  c
229.210 379.697 229.143 379.867 229.007 380.007  c
228.872 380.148 228.710 380.218 228.523 380.218  c
228.335 380.218 228.130 380.130 227.906 379.953  c
227.682 379.776 227.513 379.687 227.398 379.687  c
227.304 379.687 227.205 379.739 227.101 379.843  c
226.862 380.052 226.617 380.401 226.367 380.890  c
226.367 384.328 l
226.367 384.724 226.419 385.020 226.523 385.218  c
226.585 385.364 226.703 385.484 226.875 385.578  c
227.046 385.671 227.294 385.718 227.617 385.718  c
227.617 386.000 l
223.960 386.000 l
223.960 385.718 l
224.325 385.718 224.596 385.661 224.773 385.546  c
224.898 385.463 224.987 385.328 225.039 385.140  c
225.070 385.057 225.085 384.807 225.085 384.390  c
225.085 381.609 l
225.085 380.776 225.067 380.281 225.031 380.125  c
224.994 379.968 224.932 379.854 224.843 379.781  c
224.755 379.708 224.643 379.671 224.507 379.671  c
224.341 379.671 224.158 379.708 223.960 379.781  c
223.882 379.500 l
226.039 378.625 l
226.367 378.625 l
h
229.460 375.218 m
229.460 374.890 l
230.252 375.276 230.914 375.734 231.445 376.265  c
232.184 377.026 232.757 377.919 233.164 378.945  c
233.570 379.971 233.773 381.036 233.773 382.140  c
233.773 383.755 233.377 385.229 232.585 386.562  c
231.794 387.895 230.752 388.849 229.460 389.421  c
229.460 389.140 l
230.106 388.776 230.635 388.289 231.046 387.679  c
231.458 387.070 231.765 386.291 231.968 385.343  c
232.171 384.395 232.273 383.406 232.273 382.375  c
232.273 381.270 232.184 380.260 232.007 379.343  c
231.882 378.625 231.721 378.049 231.523 377.617  c
231.325 377.184 231.065 376.768 230.742 376.367  c
230.419 375.966 229.992 375.583 229.460 375.218  c
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 349.000 m
38.0000 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
40.4687 368.750 m
40.4687 367.770 40.6171 366.924 40.9140 366.210  c
41.2109 365.497 41.6041 364.968 42.0937 364.625  c
42.4791 364.354 42.8750 364.218 43.2812 364.218  c
43.9375 364.218 44.5260 364.552 45.0468 365.218  c
45.7031 366.052 46.0312 367.182 46.0312 368.609  c
46.0312 369.609 45.8880 370.458 45.6015 371.156  c
45.3151 371.854 44.9479 372.362 44.5000 372.679  c
44.0520 372.997 43.6250 373.156 43.2187 373.156  c
42.3958 373.156 41.7083 372.671 41.1562 371.703  c
40.6979 370.880 40.4687 369.895 40.4687 368.750  c
h
41.7187 368.906 m
41.7187 370.093 41.8645 371.062 42.1562 371.812  c
42.3958 372.437 42.7552 372.750 43.2343 372.750  c
43.4635 372.750 43.7005 372.648 43.9453 372.445  c
44.1901 372.242 44.3750 371.895 44.5000 371.406  c
44.6979 370.687 44.7968 369.661 44.7968 368.328  c
44.7968 367.349 44.6927 366.531 44.4843 365.875  c
44.3385 365.385 44.1406 365.041 43.8906 364.843  c
43.7239 364.708 43.5156 364.640 43.2656 364.640  c
42.9843 364.640 42.7291 364.765 42.5000 365.015  c
42.1979 365.369 41.9921 365.924 41.8828 366.679  c
41.7734 367.434 41.7187 368.177 41.7187 368.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
93.9362 349.000 m
93.9362 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
100.953 371.343 m
100.359 373.000 l
95.2812 373.000 l
95.2812 372.765 l
96.7708 371.401 97.8203 370.286 98.4296 369.421  c
99.0390 368.557 99.3437 367.770 99.3437 367.062  c
99.3437 366.510 99.1770 366.059 98.8437 365.710  c
98.5104 365.362 98.1093 365.187 97.6406 365.187  c
97.2239 365.187 96.8463 365.309 96.5078 365.554  c
96.1692 365.799 95.9218 366.161 95.7656 366.640  c
95.5312 366.640 l
95.6354 365.859 95.9062 365.260 96.3437 364.843  c
96.7812 364.427 97.3281 364.218 97.9843 364.218  c
98.6822 364.218 99.2656 364.442 99.7343 364.890  c
100.203 365.338 100.437 365.864 100.437 366.468  c
100.437 366.906 100.333 367.343 100.125 367.781  c
99.8125 368.468 99.3072 369.192 98.6093 369.953  c
97.5572 371.109 96.8958 371.807 96.6250 372.046  c
98.8750 372.046 l
99.3333 372.046 99.6536 372.028 99.8359 371.992  c
100.018 371.955 100.184 371.885 100.335 371.781  c
100.487 371.677 100.614 371.531 100.718 371.343  c
100.953 371.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
149.872 349.000 m
149.872 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
157.046 369.828 m
157.046 370.734 l
155.890 370.734 l
155.890 373.000 l
154.843 373.000 l
154.843 370.734 l
151.203 370.734 l
151.203 369.921 l
155.203 364.218 l
155.890 364.218 l
155.890 369.828 l
157.046 369.828 l
h
154.843 369.828 m
154.843 365.546 l
151.828 369.828 l
154.843 369.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
205.808 349.000 m
205.808 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
212.828 364.218 m
212.828 364.453 l
212.265 364.505 211.807 364.614 211.453 364.781  c
211.099 364.947 210.750 365.203 210.406 365.546  c
210.062 365.890 209.778 366.273 209.554 366.695  c
209.330 367.117 209.140 367.614 208.984 368.187  c
209.599 367.770 210.213 367.562 210.828 367.562  c
211.411 367.562 211.919 367.799 212.351 368.273  c
212.783 368.747 213.000 369.359 213.000 370.109  c
213.000 370.828 212.781 371.484 212.343 372.078  c
211.822 372.796 211.130 373.156 210.265 373.156  c
209.671 373.156 209.171 372.958 208.765 372.562  c
207.963 371.812 207.562 370.833 207.562 369.625  c
207.562 368.854 207.716 368.122 208.023 367.429  c
208.330 366.737 208.770 366.119 209.343 365.578  c
209.916 365.036 210.466 364.674 210.992 364.492  c
211.518 364.309 212.005 364.218 212.453 364.218  c
212.828 364.218 l
h
208.875 368.656 m
208.802 369.229 208.765 369.692 208.765 370.046  c
208.765 370.453 208.841 370.893 208.992 371.367  c
209.143 371.841 209.364 372.218 209.656 372.500  c
209.875 372.697 210.140 372.796 210.453 372.796  c
210.817 372.796 211.145 372.622 211.437 372.273  c
211.729 371.924 211.875 371.432 211.875 370.796  c
211.875 370.067 211.729 369.440 211.437 368.914  c
211.145 368.388 210.739 368.125 210.218 368.125  c
210.052 368.125 209.877 368.158 209.695 368.226  c
209.513 368.294 209.239 368.437 208.875 368.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
261.745 349.000 m
261.745 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
265.500 368.671 m
264.812 368.109 264.369 367.658 264.171 367.320  c
263.974 366.981 263.875 366.630 263.875 366.265  c
263.875 365.703 264.091 365.221 264.523 364.820  c
264.955 364.419 265.531 364.218 266.250 364.218  c
266.947 364.218 267.507 364.406 267.929 364.781  c
268.351 365.156 268.562 365.583 268.562 366.062  c
268.562 366.385 268.447 366.713 268.218 367.046  c
267.989 367.380 267.515 367.776 266.796 368.234  c
267.536 368.807 268.026 369.260 268.265 369.593  c
268.588 370.020 268.750 370.474 268.750 370.953  c
268.750 371.557 268.520 372.075 268.062 372.507  c
267.604 372.940 267.000 373.156 266.250 373.156  c
265.427 373.156 264.786 372.901 264.328 372.390  c
263.963 371.974 263.781 371.520 263.781 371.031  c
263.781 370.656 263.911 370.281 264.171 369.906  c
264.432 369.531 264.875 369.119 265.500 368.671  c
h
266.484 367.984 m
266.994 367.526 267.317 367.164 267.453 366.898  c
267.588 366.632 267.656 366.333 267.656 366.000  c
267.656 365.562 267.531 365.216 267.281 364.960  c
267.031 364.705 266.692 364.578 266.265 364.578  c
265.828 364.578 265.474 364.703 265.203 364.953  c
264.932 365.203 264.796 365.494 264.796 365.828  c
264.796 366.046 264.854 366.268 264.968 366.492  c
265.083 366.716 265.244 366.927 265.453 367.125  c
266.484 367.984 l
h
265.796 368.906 m
265.442 369.197 265.182 369.518 265.015 369.867  c
264.849 370.216 264.765 370.593 264.765 371.000  c
264.765 371.552 264.914 371.992 265.210 372.320  c
265.507 372.648 265.885 372.812 266.343 372.812  c
266.802 372.812 267.169 372.682 267.445 372.421  c
267.721 372.161 267.859 371.849 267.859 371.484  c
267.859 371.182 267.776 370.906 267.609 370.656  c
267.317 370.208 266.713 369.625 265.796 368.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
317.681 349.000 m
317.681 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.531 365.234 m
319.625 364.218 l
319.828 364.218 l
319.828 371.484 l
319.828 371.963 319.849 372.263 319.890 372.382  c
319.932 372.502 320.015 372.593 320.140 372.656  c
320.265 372.718 320.520 372.755 320.906 372.765  c
320.906 373.000 l
317.671 373.000 l
317.671 372.765 l
318.078 372.755 318.341 372.718 318.460 372.656  c
318.580 372.593 318.664 372.510 318.710 372.406  c
318.757 372.302 318.781 371.994 318.781 371.484  c
318.781 366.843 l
318.781 366.208 318.760 365.802 318.718 365.625  c
318.687 365.489 318.632 365.390 318.554 365.328  c
318.476 365.265 318.380 365.234 318.265 365.234  c
318.109 365.234 317.895 365.302 317.625 365.437  c
317.531 365.234 l
h
322.968 368.750 m
322.968 367.770 323.117 366.924 323.414 366.210  c
323.710 365.497 324.104 364.968 324.593 364.625  c
324.979 364.354 325.375 364.218 325.781 364.218  c
326.437 364.218 327.026 364.552 327.546 365.218  c
328.203 366.052 328.531 367.182 328.531 368.609  c
328.531 369.609 328.388 370.458 328.101 371.156  c
327.815 371.854 327.447 372.362 327.000 372.679  c
326.552 372.997 326.125 373.156 325.718 373.156  c
324.895 373.156 324.208 372.671 323.656 371.703  c
323.197 370.880 322.968 369.895 322.968 368.750  c
h
324.218 368.906 m
324.218 370.093 324.364 371.062 324.656 371.812  c
324.895 372.437 325.255 372.750 325.734 372.750  c
325.963 372.750 326.200 372.648 326.445 372.445  c
326.690 372.242 326.875 371.895 327.000 371.406  c
327.197 370.687 327.296 369.661 327.296 368.328  c
327.296 367.349 327.192 366.531 326.984 365.875  c
326.838 365.385 326.640 365.041 326.390 364.843  c
326.224 364.708 326.015 364.640 325.765 364.640  c
325.484 364.640 325.229 364.765 325.000 365.015  c
324.697 365.369 324.492 365.924 324.382 366.679  c
324.273 367.434 324.218 368.177 324.218 368.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
373.617 349.000 m
373.617 354.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
373.531 365.234 m
375.625 364.218 l
375.828 364.218 l
375.828 371.484 l
375.828 371.963 375.849 372.263 375.890 372.382  c
375.932 372.502 376.015 372.593 376.140 372.656  c
376.265 372.718 376.520 372.755 376.906 372.765  c
376.906 373.000 l
373.671 373.000 l
373.671 372.765 l
374.078 372.755 374.341 372.718 374.460 372.656  c
374.580 372.593 374.664 372.510 374.710 372.406  c
374.757 372.302 374.781 371.994 374.781 371.484  c
374.781 366.843 l
374.781 366.208 374.760 365.802 374.718 365.625  c
374.687 365.489 374.632 365.390 374.554 365.328  c
374.476 365.265 374.380 365.234 374.265 365.234  c
374.109 365.234 373.895 365.302 373.625 365.437  c
373.531 365.234 l
h
384.453 371.343 m
383.859 373.000 l
378.781 373.000 l
378.781 372.765 l
380.270 371.401 381.320 370.286 381.929 369.421  c
382.539 368.557 382.843 367.770 382.843 367.062  c
382.843 366.510 382.677 366.059 382.343 365.710  c
382.010 365.362 381.609 365.187 381.140 365.187  c
380.724 365.187 380.346 365.309 380.007 365.554  c
379.669 365.799 379.421 366.161 379.265 366.640  c
379.031 366.640 l
379.135 365.859 379.406 365.260 379.843 364.843  c
380.281 364.427 380.828 364.218 381.484 364.218  c
382.182 364.218 382.765 364.442 383.234 364.890  c
383.703 365.338 383.937 365.864 383.937 366.468  c
383.937 366.906 383.833 367.343 383.625 367.781  c
383.312 368.468 382.807 369.192 382.109 369.953  c
381.057 371.109 380.395 371.807 380.125 372.046  c
382.375 372.046 l
382.833 372.046 383.153 372.028 383.335 371.992  c
383.518 371.955 383.684 371.885 383.835 371.781  c
383.987 371.677 384.114 371.531 384.218 371.343  c
384.453 371.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
38.0000 42.1155 m
35.4000 42.1155 l
S
newpath
38.0000 110.312 m
35.4000 110.312 l
S
newpath
38.0000 178.508 m
35.4000 178.508 l
S
newpath
38.0000 246.705 m
35.4000 246.705 l
S
newpath
38.0000 314.901 m
35.4000 314.901 l
S
newpath
38.0000 349.000 m
38.0000 8.01724 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 169 8 18 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 349.000 m
32.8000 349.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 354.750 m
28.4687 353.770 28.6171 352.924 28.9140 352.210  c
29.2109 351.497 29.6041 350.968 30.0937 350.625  c
30.4791 350.354 30.8750 350.218 31.2812 350.218  c
31.9375 350.218 32.5260 350.552 33.0468 351.218  c
33.7031 352.052 34.0312 353.182 34.0312 354.609  c
34.0312 355.609 33.8880 356.458 33.6015 357.156  c
33.3151 357.854 32.9479 358.362 32.5000 358.679  c
32.0520 358.997 31.6250 359.156 31.2187 359.156  c
30.3958 359.156 29.7083 358.671 29.1562 357.703  c
28.6979 356.880 28.4687 355.895 28.4687 354.750  c
h
29.7187 354.906 m
29.7187 356.093 29.8645 357.062 30.1562 357.812  c
30.3958 358.437 30.7552 358.750 31.2343 358.750  c
31.4635 358.750 31.7005 358.648 31.9453 358.445  c
32.1901 358.242 32.3750 357.895 32.5000 357.406  c
32.6979 356.687 32.7968 355.661 32.7968 354.328  c
32.7968 353.349 32.6927 352.531 32.4843 351.875  c
32.3385 351.385 32.1406 351.041 31.8906 350.843  c
31.7239 350.708 31.5156 350.640 31.2656 350.640  c
30.9843 350.640 30.7291 350.765 30.5000 351.015  c
30.1979 351.369 29.9921 351.924 29.8828 352.679  c
29.7734 353.434 29.7187 354.177 29.7187 354.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 280.803 m
32.8000 280.803 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 285.750 m
19.4687 284.770 19.6171 283.924 19.9140 283.210  c
20.2109 282.497 20.6041 281.968 21.0937 281.625  c
21.4791 281.354 21.8750 281.218 22.2812 281.218  c
22.9375 281.218 23.5260 281.552 24.0468 282.218  c
24.7031 283.052 25.0312 284.182 25.0312 285.609  c
25.0312 286.609 24.8880 287.458 24.6015 288.156  c
24.3151 288.854 23.9479 289.362 23.5000 289.679  c
23.0520 289.997 22.6250 290.156 22.2187 290.156  c
21.3958 290.156 20.7083 289.671 20.1562 288.703  c
19.6979 287.880 19.4687 286.895 19.4687 285.750  c
h
20.7187 285.906 m
20.7187 287.093 20.8645 288.062 21.1562 288.812  c
21.3958 289.437 21.7552 289.750 22.2343 289.750  c
22.4635 289.750 22.7005 289.648 22.9453 289.445  c
23.1901 289.242 23.3750 288.895 23.5000 288.406  c
23.6979 287.687 23.7968 286.661 23.7968 285.328  c
23.7968 284.349 23.6927 283.531 23.4843 282.875  c
23.3385 282.385 23.1406 282.041 22.8906 281.843  c
22.7239 281.708 22.5156 281.640 22.2656 281.640  c
21.9843 281.640 21.7291 281.765 21.5000 282.015  c
21.1979 282.369 20.9921 282.924 20.8828 283.679  c
20.7734 284.434 20.7187 285.177 20.7187 285.906  c
h
27.1250 288.765 m
27.3229 288.765 27.4895 288.835 27.6250 288.976  c
27.7604 289.117 27.8281 289.281 27.8281 289.468  c
27.8281 289.666 27.7604 289.833 27.6250 289.968  c
27.4895 290.104 27.3229 290.171 27.1250 290.171  c
26.9270 290.171 26.7604 290.104 26.6250 289.968  c
26.4895 289.833 26.4218 289.666 26.4218 289.468  c
26.4218 289.270 26.4895 289.104 26.6250 288.968  c
26.7604 288.833 26.9270 288.765 27.1250 288.765  c
h
34.7031 288.343 m
34.1093 290.000 l
29.0312 290.000 l
29.0312 289.765 l
30.5208 288.401 31.5703 287.286 32.1796 286.421  c
32.7890 285.557 33.0937 284.770 33.0937 284.062  c
33.0937 283.510 32.9270 283.059 32.5937 282.710  c
32.2604 282.362 31.8593 282.187 31.3906 282.187  c
30.9739 282.187 30.5963 282.309 30.2578 282.554  c
29.9192 282.799 29.6718 283.161 29.5156 283.640  c
29.2812 283.640 l
29.3854 282.859 29.6562 282.260 30.0937 281.843  c
30.5312 281.427 31.0781 281.218 31.7343 281.218  c
32.4322 281.218 33.0156 281.442 33.4843 281.890  c
33.9531 282.338 34.1875 282.864 34.1875 283.468  c
34.1875 283.906 34.0833 284.343 33.8750 284.781  c
33.5625 285.468 33.0572 286.192 32.3593 286.953  c
31.3072 288.109 30.6458 288.807 30.3750 289.046  c
32.6250 289.046 l
33.0833 289.046 33.4036 289.028 33.5859 288.992  c
33.7682 288.955 33.9349 288.885 34.0859 288.781  c
34.2369 288.677 34.3645 288.531 34.4687 288.343  c
34.7031 288.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 212.606 m
32.8000 212.606 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 217.750 m
19.4687 216.770 19.6171 215.924 19.9140 215.210  c
20.2109 214.497 20.6041 213.968 21.0937 213.625  c
21.4791 213.354 21.8750 213.218 22.2812 213.218  c
22.9375 213.218 23.5260 213.552 24.0468 214.218  c
24.7031 215.052 25.0312 216.182 25.0312 217.609  c
25.0312 218.609 24.8880 219.458 24.6015 220.156  c
24.3151 220.854 23.9479 221.362 23.5000 221.679  c
23.0520 221.997 22.6250 222.156 22.2187 222.156  c
21.3958 222.156 20.7083 221.671 20.1562 220.703  c
19.6979 219.880 19.4687 218.895 19.4687 217.750  c
h
20.7187 217.906 m
20.7187 219.093 20.8645 220.062 21.1562 220.812  c
21.3958 221.437 21.7552 221.750 22.2343 221.750  c
22.4635 221.750 22.7005 221.648 22.9453 221.445  c
23.1901 221.242 23.3750 220.895 23.5000 220.406  c
23.6979 219.687 23.7968 218.661 23.7968 217.328  c
23.7968 216.349 23.6927 215.531 23.4843 214.875  c
23.3385 214.385 23.1406 214.041 22.8906 213.843  c
22.7239 213.708 22.5156 213.640 22.2656 213.640  c
21.9843 213.640 21.7291 213.765 21.5000 214.015  c
21.1979 214.369 20.9921 214.924 20.8828 215.679  c
20.7734 216.434 20.7187 217.177 20.7187 217.906  c
h
27.1250 220.765 m
27.3229 220.765 27.4895 220.835 27.6250 220.976  c
27.7604 221.117 27.8281 221.281 27.8281 221.468  c
27.8281 221.666 27.7604 221.833 27.6250 221.968  c
27.4895 222.104 27.3229 222.171 27.1250 222.171  c
26.9270 222.171 26.7604 222.104 26.6250 221.968  c
26.4895 221.833 26.4218 221.666 26.4218 221.468  c
26.4218 221.270 26.4895 221.104 26.6250 220.968  c
26.7604 220.833 26.9270 220.765 27.1250 220.765  c
h
34.7968 218.828 m
34.7968 219.734 l
33.6406 219.734 l
33.6406 222.000 l
32.5937 222.000 l
32.5937 219.734 l
28.9531 219.734 l
28.9531 218.921 l
32.9531 213.218 l
33.6406 213.218 l
33.6406 218.828 l
34.7968 218.828 l
h
32.5937 218.828 m
32.5937 214.546 l
29.5781 218.828 l
32.5937 218.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 144.410 m
32.8000 144.410 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 149.750 m
19.4687 148.770 19.6171 147.924 19.9140 147.210  c
20.2109 146.497 20.6041 145.968 21.0937 145.625  c
21.4791 145.354 21.8750 145.218 22.2812 145.218  c
22.9375 145.218 23.5260 145.552 24.0468 146.218  c
24.7031 147.052 25.0312 148.182 25.0312 149.609  c
25.0312 150.609 24.8880 151.458 24.6015 152.156  c
24.3151 152.854 23.9479 153.362 23.5000 153.679  c
23.0520 153.997 22.6250 154.156 22.2187 154.156  c
21.3958 154.156 20.7083 153.671 20.1562 152.703  c
19.6979 151.880 19.4687 150.895 19.4687 149.750  c
h
20.7187 149.906 m
20.7187 151.093 20.8645 152.062 21.1562 152.812  c
21.3958 153.437 21.7552 153.750 22.2343 153.750  c
22.4635 153.750 22.7005 153.648 22.9453 153.445  c
23.1901 153.242 23.3750 152.895 23.5000 152.406  c
23.6979 151.687 23.7968 150.661 23.7968 149.328  c
23.7968 148.349 23.6927 147.531 23.4843 146.875  c
23.3385 146.385 23.1406 146.041 22.8906 145.843  c
22.7239 145.708 22.5156 145.640 22.2656 145.640  c
21.9843 145.640 21.7291 145.765 21.5000 146.015  c
21.1979 146.369 20.9921 146.924 20.8828 147.679  c
20.7734 148.434 20.7187 149.177 20.7187 149.906  c
h
27.1250 152.765 m
27.3229 152.765 27.4895 152.835 27.6250 152.976  c
27.7604 153.117 27.8281 153.281 27.8281 153.468  c
27.8281 153.666 27.7604 153.833 27.6250 153.968  c
27.4895 154.104 27.3229 154.171 27.1250 154.171  c
26.9270 154.171 26.7604 154.104 26.6250 153.968  c
26.4895 153.833 26.4218 153.666 26.4218 153.468  c
26.4218 153.270 26.4895 153.104 26.6250 152.968  c
26.7604 152.833 26.9270 152.765 27.1250 152.765  c
h
34.5781 145.218 m
34.5781 145.453 l
34.0156 145.505 33.5572 145.614 33.2031 145.781  c
32.8489 145.947 32.5000 146.203 32.1562 146.546  c
31.8125 146.890 31.5286 147.273 31.3046 147.695  c
31.0807 148.117 30.8906 148.614 30.7343 149.187  c
31.3489 148.770 31.9635 148.562 32.5781 148.562  c
33.1614 148.562 33.6692 148.799 34.1015 149.273  c
34.5338 149.747 34.7500 150.359 34.7500 151.109  c
34.7500 151.828 34.5312 152.484 34.0937 153.078  c
33.5729 153.796 32.8802 154.156 32.0156 154.156  c
31.4218 154.156 30.9218 153.958 30.5156 153.562  c
29.7135 152.812 29.3125 151.833 29.3125 150.625  c
29.3125 149.854 29.4661 149.122 29.7734 148.429  c
30.0807 147.737 30.5208 147.119 31.0937 146.578  c
31.6666 146.036 32.2161 145.674 32.7421 145.492  c
33.2682 145.309 33.7552 145.218 34.2031 145.218  c
34.5781 145.218 l
h
30.6250 149.656 m
30.5520 150.229 30.5156 150.692 30.5156 151.046  c
30.5156 151.453 30.5911 151.893 30.7421 152.367  c
30.8932 152.841 31.1145 153.218 31.4062 153.500  c
31.6250 153.697 31.8906 153.796 32.2031 153.796  c
32.5677 153.796 32.8958 153.622 33.1875 153.273  c
33.4791 152.924 33.6250 152.432 33.6250 151.796  c
33.6250 151.067 33.4791 150.440 33.1875 149.914  c
32.8958 149.388 32.4895 149.125 31.9687 149.125  c
31.8020 149.125 31.6276 149.158 31.4453 149.226  c
31.2630 149.294 30.9895 149.437 30.6250 149.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 76.2137 m
32.8000 76.2137 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 81.7500 m
19.4687 80.7708 19.6171 79.9244 19.9140 79.2109  c
20.2109 78.4974 20.6041 77.9687 21.0937 77.6250  c
21.4791 77.3541 21.8750 77.2187 22.2812 77.2187  c
22.9375 77.2187 23.5260 77.5520 24.0468 78.2187  c
24.7031 79.0520 25.0312 80.1822 25.0312 81.6093  c
25.0312 82.6093 24.8880 83.4583 24.6015 84.1562  c
24.3151 84.8541 23.9479 85.3619 23.5000 85.6796  c
23.0520 85.9974 22.6250 86.1562 22.2187 86.1562  c
21.3958 86.1562 20.7083 85.6718 20.1562 84.7031  c
19.6979 83.8802 19.4687 82.8958 19.4687 81.7500  c
h
20.7187 81.9062 m
20.7187 83.0937 20.8645 84.0625 21.1562 84.8125  c
21.3958 85.4375 21.7552 85.7500 22.2343 85.7500  c
22.4635 85.7500 22.7005 85.6484 22.9453 85.4453  c
23.1901 85.2421 23.3750 84.8958 23.5000 84.4062  c
23.6979 83.6875 23.7968 82.6614 23.7968 81.3281  c
23.7968 80.3489 23.6927 79.5312 23.4843 78.8750  c
23.3385 78.3854 23.1406 78.0416 22.8906 77.8437  c
22.7239 77.7083 22.5156 77.6406 22.2656 77.6406  c
21.9843 77.6406 21.7291 77.7656 21.5000 78.0156  c
21.1979 78.3697 20.9921 78.9244 20.8828 79.6796  c
20.7734 80.4349 20.7187 81.1770 20.7187 81.9062  c
h
27.1250 84.7656 m
27.3229 84.7656 27.4895 84.8359 27.6250 84.9765  c
27.7604 85.1171 27.8281 85.2812 27.8281 85.4687  c
27.8281 85.6666 27.7604 85.8333 27.6250 85.9687  c
27.4895 86.1041 27.3229 86.1718 27.1250 86.1718  c
26.9270 86.1718 26.7604 86.1041 26.6250 85.9687  c
26.4895 85.8333 26.4218 85.6666 26.4218 85.4687  c
26.4218 85.2708 26.4895 85.1041 26.6250 84.9687  c
26.7604 84.8333 26.9270 84.7656 27.1250 84.7656  c
h
31.2500 81.6718 m
30.5625 81.1093 30.1197 80.6588 29.9218 80.3203  c
29.7239 79.9817 29.6250 79.6302 29.6250 79.2656  c
29.6250 78.7031 29.8411 78.2213 30.2734 77.8203  c
30.7057 77.4192 31.2812 77.2187 32.0000 77.2187  c
32.6979 77.2187 33.2578 77.4062 33.6796 77.7812  c
34.1015 78.1562 34.3125 78.5833 34.3125 79.0625  c
34.3125 79.3854 34.1979 79.7135 33.9687 80.0468  c
33.7395 80.3802 33.2656 80.7760 32.5468 81.2343  c
33.2864 81.8072 33.7760 82.2604 34.0156 82.5937  c
34.3385 83.0208 34.5000 83.4739 34.5000 83.9531  c
34.5000 84.5572 34.2708 85.0755 33.8125 85.5078  c
33.3541 85.9401 32.7500 86.1562 32.0000 86.1562  c
31.1770 86.1562 30.5364 85.9010 30.0781 85.3906  c
29.7135 84.9739 29.5312 84.5208 29.5312 84.0312  c
29.5312 83.6562 29.6614 83.2812 29.9218 82.9062  c
30.1822 82.5312 30.6250 82.1197 31.2500 81.6718  c
h
32.2343 80.9843 m
32.7447 80.5260 33.0677 80.1640 33.2031 79.8984  c
33.3385 79.6328 33.4062 79.3333 33.4062 79.0000  c
33.4062 78.5625 33.2812 78.2161 33.0312 77.9609  c
32.7812 77.7057 32.4427 77.5781 32.0156 77.5781  c
31.5781 77.5781 31.2239 77.7031 30.9531 77.9531  c
30.6822 78.2031 30.5468 78.4947 30.5468 78.8281  c
30.5468 79.0468 30.6041 79.2682 30.7187 79.4921  c
30.8333 79.7161 30.9947 79.9270 31.2031 80.1250  c
32.2343 80.9843 l
h
31.5468 81.9062 m
31.1927 82.1979 30.9322 82.5182 30.7656 82.8671  c
30.5989 83.2161 30.5156 83.5937 30.5156 84.0000  c
30.5156 84.5520 30.6640 84.9921 30.9609 85.3203  c
31.2578 85.6484 31.6354 85.8125 32.0937 85.8125  c
32.5520 85.8125 32.9192 85.6822 33.1953 85.4218  c
33.4713 85.1614 33.6093 84.8489 33.6093 84.4843  c
33.6093 84.1822 33.5260 83.9062 33.3593 83.6562  c
33.0677 83.2083 32.4635 82.6250 31.5468 81.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 8.01724 m
32.8000 8.01724 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
29.5312 10.2343 m
31.6250 9.21875 l
31.8281 9.21875 l
31.8281 16.4843 l
31.8281 16.9635 31.8489 17.2630 31.8906 17.3828  c
31.9322 17.5026 32.0156 17.5937 32.1406 17.6562  c
32.2656 17.7187 32.5208 17.7552 32.9062 17.7656  c
32.9062 18.0000 l
29.6718 18.0000 l
29.6718 17.7656 l
30.0781 17.7552 30.3411 17.7187 30.4609 17.6562  c
30.5807 17.5937 30.6640 17.5104 30.7109 17.4062  c
30.7578 17.3020 30.7812 16.9947 30.7812 16.4843  c
30.7812 11.8437 l
30.7812 11.2083 30.7604 10.8020 30.7187 10.6250  c
30.6875 10.4895 30.6328 10.3906 30.5546 10.3281  c
30.4765 10.2656 30.3802 10.2343 30.2656 10.2343  c
30.1093 10.2343 29.8958 10.3020 29.6250 10.4375  c
29.5312 10.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

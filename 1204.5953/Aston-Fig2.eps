%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 124 575 667
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, 20 August 2010 16:44:50 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 390 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 390.000 l
0 390.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 380 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
1.00000 0 1.00000 RG
83.0000 4.97937 308.000 333.020 rc
newpath
84.0000 337.000 m
389.000 40.5495 l
S
cliprestore
newpath
0 0 m
0 380.000 l
390.000 380.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
83.0000 4.97937 308.000 333.020 rc
newpath
84.0000 333.938 m
84.8310 334.197 l
85.6620 334.262 l
86.4930 334.154 l
87.3240 333.893 l
88.9861 332.984 l
90.6481 331.664 l
93.5403 328.689 l
96.4326 325.209 l
102.937 316.910 l
109.486 309.112 l
116.003 302.307 l
122.045 296.697 l
128.302 291.311 l
134.772 285.929 l
141.222 280.590 l
147.857 275.064 l
153.700 270.184 l
160.279 264.728 l
166.884 259.349 l
173.250 254.300 l
179.030 249.837 l
185.904 244.659 l
191.727 240.343 l
198.500 235.341 l
204.496 230.869 l
211.074 225.849 l
217.338 220.905 l
223.873 215.536 l
229.875 210.393 l
236.349 204.610 l
243.073 198.351 l
248.927 192.714 l
255.249 186.462 l
261.781 179.871 l
274.353 167.045 l
281.217 160.118 l
287.385 154.036 l
293.971 147.760 l
299.938 142.314 l
306.462 136.650 l
312.601 131.594 l
319.018 126.557 l
325.291 121.814 l
331.859 116.951 l
338.185 112.284 l
351.069 102.725 l
356.964 98.4654 l
363.720 93.9536 l
369.763 90.4850 l
376.206 87.4570 l
382.373 84.7533 l
389.000 80.1987 l
S
cliprestore
newpath
0 0 m
0 380.000 l
390.000 380.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
83.0000 4.97937 308.000 333.020 rc
newpath
84.0000 337.000 m
90.6481 330.546 l
96.4326 324.898 l
102.937 318.597 l
109.486 312.314 l
122.045 300.333 l
128.302 294.356 l
134.772 288.151 l
141.222 281.939 l
147.857 275.521 l
153.700 269.843 l
160.279 263.422 l
166.884 256.941 l
173.250 250.658 l
179.030 244.915 l
185.904 238.034 l
191.727 232.156 l
198.500 225.257 l
204.496 219.094 l
211.074 212.271 l
217.338 205.717 l
223.873 198.823 l
229.875 192.448 l
236.349 185.529 l
243.073 178.304 l
248.927 171.988 l
255.249 165.144 l
261.781 158.054 l
268.170 151.101 l
274.353 144.360 l
281.217 136.855 l
287.385 130.090 l
293.971 122.837 l
299.938 116.228 l
306.462 108.952 l
312.601 102.044 l
319.018 94.7473 l
325.291 87.5258 l
331.859 79.8625 l
338.185 72.3746 l
344.654 64.6026 l
351.069 56.7751 l
356.964 49.4694 l
363.720 40.9450 l
369.763 33.1565 l
376.206 24.6412 l
382.373 16.2510 l
389.000 6.97937 l
S
cliprestore
newpath
0 0 m
0 380.000 l
390.000 380.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
351.330 337.000 m
351.330 339.100 l
S
newpath
302.725 337.000 m
302.725 339.100 l
S
newpath
254.119 337.000 m
254.119 339.100 l
S
newpath
205.513 337.000 m
205.513 339.100 l
S
newpath
156.908 337.000 m
156.908 339.100 l
S
newpath
108.302 337.000 m
108.302 339.100 l
S
newpath
84.0000 337.000 m
389.000 337.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
195 358 82 21 rc
newpath
203.218 368.468 m
203.197 368.843 203.171 369.237 203.140 369.648  c
203.109 370.059 203.080 370.447 203.054 370.812  c
203.028 371.177 203.005 371.494 202.984 371.765  c
202.963 372.036 202.953 372.208 202.953 372.281  c
202.953 372.458 202.976 372.638 203.023 372.820  c
203.070 373.002 203.140 373.166 203.234 373.312  c
203.328 373.458 203.437 373.578 203.562 373.671  c
203.687 373.765 203.828 373.812 203.984 373.812  c
204.265 373.812 204.481 373.718 204.632 373.531  c
204.783 373.343 204.885 373.020 204.937 372.562  c
205.234 372.562 l
205.234 372.906 205.218 373.195 205.187 373.429  c
205.156 373.664 205.114 373.867 205.062 374.039  c
205.010 374.210 204.942 374.356 204.859 374.476  c
204.776 374.596 204.682 374.708 204.578 374.812  c
204.401 375.000 204.208 375.127 204.000 375.195  c
203.791 375.263 203.614 375.296 203.468 375.296  c
203.322 375.296 203.174 375.270 203.023 375.218  c
202.872 375.166 202.734 375.083 202.609 374.968  c
202.307 374.656 202.114 374.278 202.031 373.835  c
201.947 373.393 201.906 372.963 201.906 372.546  c
201.906 372.005 201.934 371.414 201.992 370.773  c
202.049 370.132 202.135 369.369 202.250 368.484  c
200.812 368.484 l
200.562 368.484 200.317 368.622 200.078 368.898  c
199.838 369.174 199.630 369.552 199.453 370.031  c
199.156 370.031 l
199.312 369.416 199.481 368.927 199.664 368.562  c
199.846 368.197 200.062 367.890 200.312 367.640  c
200.562 367.390 200.835 367.221 201.132 367.132  c
201.429 367.044 201.692 367.000 201.921 367.000  c
205.687 367.000 l
205.687 368.468 l
203.218 368.468 l
h
f
newpath
209.468 374.500 m
209.250 374.729 209.036 374.893 208.828 374.992  c
208.619 375.091 208.395 375.140 208.156 375.140  c
207.666 375.140 207.239 374.934 206.875 374.523  c
206.510 374.112 206.328 373.588 206.328 372.953  c
206.328 372.307 206.531 371.718 206.937 371.187  c
207.343 370.656 207.864 370.390 208.500 370.390  c
208.895 370.390 209.218 370.515 209.468 370.765  c
209.468 369.937 l
209.468 369.427 209.458 369.114 209.437 369.000  c
209.416 368.885 209.380 368.807 209.328 368.765  c
209.276 368.724 209.208 368.703 209.125 368.703  c
209.041 368.703 208.927 368.729 208.781 368.781  c
208.718 368.609 l
210.062 368.062 l
210.281 368.062 l
210.281 373.234 l
210.281 373.755 210.291 374.072 210.312 374.187  c
210.333 374.302 210.372 374.382 210.429 374.429  c
210.487 374.476 210.552 374.500 210.625 374.500  c
210.708 374.500 210.822 374.468 210.968 374.406  c
211.031 374.578 l
209.703 375.140 l
209.468 375.140 l
209.468 374.500 l
h
209.468 374.156 m
209.468 371.843 l
209.447 371.625 209.390 371.424 209.296 371.242  c
209.203 371.059 209.075 370.921 208.914 370.828  c
208.752 370.734 208.593 370.687 208.437 370.687  c
208.145 370.687 207.890 370.817 207.671 371.078  c
207.369 371.421 207.218 371.916 207.218 372.562  c
207.218 373.218 207.362 373.721 207.648 374.070  c
207.934 374.419 208.255 374.593 208.609 374.593  c
208.911 374.593 209.197 374.447 209.468 374.156  c
h
f
newpath
219.968 378.140 m
219.968 378.421 l
219.187 378.026 218.531 377.562 218.000 377.031  c
217.250 376.281 216.671 375.390 216.265 374.359  c
215.859 373.328 215.656 372.260 215.656 371.156  c
215.656 369.541 216.054 368.070 216.851 366.742  c
217.648 365.414 218.687 364.463 219.968 363.890  c
219.968 364.218 l
219.333 364.572 218.809 365.057 218.398 365.671  c
217.987 366.286 217.679 367.065 217.476 368.007  c
217.273 368.950 217.171 369.932 217.171 370.953  c
217.171 372.067 217.255 373.083 217.421 374.000  c
217.557 374.718 217.721 375.296 217.914 375.734  c
218.106 376.171 218.367 376.591 218.695 376.992  c
219.023 377.393 219.447 377.776 219.968 378.140  c
h
226.906 372.281 m
226.718 373.218 226.343 373.942 225.781 374.453  c
225.218 374.963 224.593 375.218 223.906 375.218  c
223.093 375.218 222.385 374.877 221.781 374.195  c
221.177 373.513 220.875 372.588 220.875 371.421  c
220.875 370.296 221.210 369.382 221.882 368.679  c
222.554 367.976 223.359 367.625 224.296 367.625  c
224.994 367.625 225.570 367.812 226.023 368.187  c
226.476 368.562 226.703 368.947 226.703 369.343  c
226.703 369.541 226.640 369.703 226.515 369.828  c
226.390 369.953 226.213 370.015 225.984 370.015  c
225.671 370.015 225.437 369.916 225.281 369.718  c
225.197 369.604 225.140 369.393 225.109 369.085  c
225.078 368.778 224.974 368.546 224.796 368.390  c
224.609 368.234 224.354 368.156 224.031 368.156  c
223.510 368.156 223.093 368.349 222.781 368.734  c
222.354 369.244 222.140 369.916 222.140 370.750  c
222.140 371.604 222.351 372.359 222.773 373.015  c
223.195 373.671 223.760 374.000 224.468 374.000  c
224.979 374.000 225.437 373.822 225.843 373.468  c
226.135 373.229 226.416 372.796 226.687 372.171  c
226.906 372.281 l
h
231.992 373.968 m
231.252 374.531 230.789 374.859 230.601 374.953  c
230.320 375.088 230.023 375.156 229.710 375.156  c
229.210 375.156 228.802 374.984 228.484 374.640  c
228.166 374.296 228.007 373.849 228.007 373.296  c
228.007 372.953 228.085 372.651 228.242 372.390  c
228.450 372.036 228.820 371.703 229.351 371.390  c
229.882 371.078 230.763 370.697 231.992 370.250  c
231.992 369.968 l
231.992 369.260 231.877 368.773 231.648 368.507  c
231.419 368.242 231.091 368.109 230.664 368.109  c
230.330 368.109 230.070 368.197 229.882 368.375  c
229.684 368.552 229.585 368.755 229.585 368.984  c
229.601 369.437 l
229.601 369.677 229.539 369.862 229.414 369.992  c
229.289 370.122 229.127 370.187 228.929 370.187  c
228.742 370.187 228.585 370.119 228.460 369.984  c
228.335 369.849 228.273 369.661 228.273 369.421  c
228.273 368.974 228.502 368.562 228.960 368.187  c
229.419 367.812 230.065 367.625 230.898 367.625  c
231.533 367.625 232.054 367.734 232.460 367.953  c
232.763 368.109 232.987 368.359 233.132 368.703  c
233.226 368.932 233.273 369.390 233.273 370.078  c
233.273 372.515 l
233.273 373.192 233.286 373.609 233.312 373.765  c
233.338 373.921 233.382 374.026 233.445 374.078  c
233.507 374.130 233.575 374.156 233.648 374.156  c
233.731 374.156 233.804 374.135 233.867 374.093  c
233.981 374.031 234.195 373.843 234.507 373.531  c
234.507 373.968 l
233.924 374.750 233.367 375.140 232.835 375.140  c
232.575 375.140 232.369 375.052 232.218 374.875  c
232.067 374.697 231.992 374.395 231.992 373.968  c
h
231.992 373.453 m
231.992 370.734 l
231.200 371.046 230.690 371.265 230.460 371.390  c
230.054 371.619 229.763 371.859 229.585 372.109  c
229.408 372.359 229.320 372.635 229.320 372.937  c
229.320 373.312 229.432 373.622 229.656 373.867  c
229.880 374.112 230.138 374.234 230.429 374.234  c
230.825 374.234 231.346 373.974 231.992 373.453  c
h
237.500 363.890 m
237.500 373.375 l
237.500 373.822 237.531 374.119 237.593 374.265  c
237.656 374.411 237.755 374.523 237.890 374.601  c
238.026 374.679 238.281 374.718 238.656 374.718  c
238.656 375.000 l
235.140 375.000 l
235.140 374.718 l
235.474 374.718 235.700 374.684 235.820 374.617  c
235.940 374.549 236.033 374.437 236.101 374.281  c
236.169 374.125 236.203 373.822 236.203 373.375  c
236.203 366.875 l
236.203 366.072 236.184 365.578 236.148 365.390  c
236.112 365.203 236.052 365.075 235.968 365.007  c
235.885 364.940 235.781 364.906 235.656 364.906  c
235.520 364.906 235.349 364.947 235.140 365.031  c
235.015 364.765 l
237.140 363.890 l
237.500 363.890 l
h
245.601 363.890 m
245.601 371.015 l
247.414 369.343 l
247.799 368.989 248.023 368.765 248.085 368.671  c
248.127 368.609 248.148 368.546 248.148 368.484  c
248.148 368.380 248.106 368.291 248.023 368.218  c
247.940 368.145 247.799 368.104 247.601 368.093  c
247.601 367.843 l
250.710 367.843 l
250.710 368.093 l
250.283 368.104 249.927 368.169 249.640 368.289  c
249.354 368.408 249.044 368.619 248.710 368.921  c
246.867 370.625 l
248.710 372.937 l
249.221 373.583 249.565 373.989 249.742 374.156  c
249.992 374.406 250.210 374.567 250.398 374.640  c
250.523 374.692 250.747 374.718 251.070 374.718  c
251.070 375.000 l
247.601 375.000 l
247.601 374.718 l
247.799 374.708 247.932 374.677 248.000 374.625  c
248.067 374.572 248.101 374.494 248.101 374.390  c
248.101 374.276 247.997 374.083 247.789 373.812  c
245.601 371.015 l
245.601 373.390 l
245.601 373.849 245.632 374.151 245.695 374.296  c
245.757 374.442 245.849 374.546 245.968 374.609  c
246.088 374.671 246.351 374.708 246.757 374.718  c
246.757 375.000 l
243.117 375.000 l
243.117 374.718 l
243.481 374.718 243.752 374.671 243.929 374.578  c
244.044 374.526 244.127 374.437 244.179 374.312  c
244.263 374.145 244.304 373.849 244.304 373.421  c
244.304 366.906 l
244.304 366.083 244.286 365.578 244.250 365.390  c
244.213 365.203 244.153 365.075 244.070 365.007  c
243.987 364.940 243.877 364.906 243.742 364.906  c
243.627 364.906 243.460 364.947 243.242 365.031  c
243.117 364.765 l
245.242 363.890 l
245.601 363.890 l
h
258.367 369.593 m
259.106 369.750 259.658 370.000 260.023 370.343  c
260.523 370.822 260.773 371.406 260.773 372.093  c
260.773 372.625 260.606 373.130 260.273 373.609  c
259.940 374.088 259.484 374.440 258.906 374.664  c
258.328 374.888 257.440 375.000 256.242 375.000  c
251.242 375.000 l
251.242 374.703 l
251.648 374.703 l
252.085 374.703 252.403 374.562 252.601 374.281  c
252.716 374.104 252.773 373.718 252.773 373.125  c
252.773 366.281 l
252.773 365.625 252.700 365.208 252.554 365.031  c
252.346 364.802 252.044 364.687 251.648 364.687  c
251.242 364.687 l
251.242 364.406 l
255.820 364.406 l
256.674 364.406 257.362 364.468 257.882 364.593  c
258.664 364.781 259.260 365.112 259.671 365.585  c
260.083 366.059 260.289 366.609 260.289 367.234  c
260.289 367.765 260.127 368.239 259.804 368.656  c
259.481 369.072 259.002 369.385 258.367 369.593  c
h
254.273 369.171 m
254.471 369.203 254.692 369.229 254.937 369.250  c
255.182 369.270 255.455 369.281 255.757 369.281  c
256.518 369.281 257.088 369.197 257.468 369.031  c
257.849 368.864 258.140 368.612 258.343 368.273  c
258.546 367.934 258.648 367.567 258.648 367.171  c
258.648 366.546 258.395 366.015 257.890 365.578  c
257.385 365.140 256.648 364.921 255.679 364.921  c
255.158 364.921 254.690 364.979 254.273 365.093  c
254.273 369.171 l
h
254.273 374.234 m
254.877 374.369 255.476 374.437 256.070 374.437  c
257.007 374.437 257.724 374.226 258.218 373.804  c
258.713 373.382 258.960 372.859 258.960 372.234  c
258.960 371.817 258.849 371.419 258.625 371.039  c
258.401 370.658 258.036 370.359 257.531 370.140  c
257.026 369.921 256.403 369.812 255.664 369.812  c
255.341 369.812 255.065 369.817 254.835 369.828  c
254.606 369.838 254.419 369.859 254.273 369.890  c
254.273 374.234 l
h
264.929 370.031 m
264.929 373.125 l
264.929 373.791 265.002 374.203 265.148 374.359  c
265.346 374.588 265.648 374.703 266.054 374.703  c
266.460 374.703 l
266.460 375.000 l
261.914 375.000 l
261.914 374.703 l
262.320 374.703 l
262.768 374.703 263.085 374.557 263.273 374.265  c
263.377 374.109 263.429 373.729 263.429 373.125  c
263.429 366.281 l
263.429 365.614 263.362 365.197 263.226 365.031  c
263.018 364.802 262.716 364.687 262.320 364.687  c
261.914 364.687 l
261.914 364.406 l
265.804 364.406 l
266.752 364.406 267.500 364.502 268.046 364.695  c
268.593 364.888 269.054 365.216 269.429 365.679  c
269.804 366.143 269.992 366.692 269.992 367.328  c
269.992 368.192 269.705 368.895 269.132 369.437  c
268.559 369.979 267.752 370.250 266.710 370.250  c
266.460 370.250 266.187 370.231 265.890 370.195  c
265.593 370.158 265.273 370.104 264.929 370.031  c
h
264.929 369.593 m
265.210 369.645 265.458 369.684 265.671 369.710  c
265.885 369.737 266.065 369.750 266.210 369.750  c
266.752 369.750 267.221 369.539 267.617 369.117  c
268.013 368.695 268.210 368.151 268.210 367.484  c
268.210 367.026 268.117 366.601 267.929 366.210  c
267.742 365.820 267.476 365.526 267.132 365.328  c
266.789 365.130 266.398 365.031 265.960 365.031  c
265.690 365.031 265.346 365.083 264.929 365.187  c
264.929 369.593 l
h
270.906 364.218 m
270.906 363.890 l
271.697 364.276 272.359 364.734 272.890 365.265  c
273.630 366.026 274.203 366.919 274.609 367.945  c
275.015 368.971 275.218 370.036 275.218 371.140  c
275.218 372.755 274.822 374.229 274.031 375.562  c
273.239 376.895 272.197 377.849 270.906 378.421  c
270.906 378.140 l
271.552 377.776 272.080 377.289 272.492 376.679  c
272.903 376.070 273.210 375.291 273.414 374.343  c
273.617 373.395 273.718 372.406 273.718 371.375  c
273.718 370.270 273.630 369.260 273.453 368.343  c
273.328 367.625 273.166 367.049 272.968 366.617  c
272.770 366.184 272.510 365.768 272.187 365.367  c
271.864 364.966 271.437 364.583 270.906 364.218  c
h
f
Q
cliprestore
newpath
0 0 m
0 380.000 l
390.000 380.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
84.0000 337.000 m
84.0000 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
86.4687 356.750 m
86.4687 355.770 86.6171 354.924 86.9140 354.210  c
87.2109 353.497 87.6041 352.968 88.0937 352.625  c
88.4791 352.354 88.8750 352.218 89.2812 352.218  c
89.9375 352.218 90.5260 352.552 91.0468 353.218  c
91.7031 354.052 92.0312 355.182 92.0312 356.609  c
92.0312 357.609 91.8880 358.458 91.6015 359.156  c
91.3151 359.854 90.9479 360.362 90.5000 360.679  c
90.0520 360.997 89.6250 361.156 89.2187 361.156  c
88.3958 361.156 87.7083 360.671 87.1562 359.703  c
86.6979 358.880 86.4687 357.895 86.4687 356.750  c
h
87.7187 356.906 m
87.7187 358.093 87.8645 359.062 88.1562 359.812  c
88.3958 360.437 88.7552 360.750 89.2343 360.750  c
89.4635 360.750 89.7005 360.648 89.9453 360.445  c
90.1901 360.242 90.3750 359.895 90.5000 359.406  c
90.6979 358.687 90.7968 357.661 90.7968 356.328  c
90.7968 355.349 90.6927 354.531 90.4843 353.875  c
90.3385 353.385 90.1406 353.041 89.8906 352.843  c
89.7239 352.708 89.5156 352.640 89.2656 352.640  c
88.9843 352.640 88.7291 352.765 88.5000 353.015  c
88.1979 353.369 87.9921 353.924 87.8828 354.679  c
87.7734 355.434 87.7187 356.177 87.7187 356.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
132.605 337.000 m
132.605 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
139.953 359.343 m
139.359 361.000 l
134.281 361.000 l
134.281 360.765 l
135.770 359.401 136.820 358.286 137.429 357.421  c
138.039 356.557 138.343 355.770 138.343 355.062  c
138.343 354.510 138.177 354.059 137.843 353.710  c
137.510 353.362 137.109 353.187 136.640 353.187  c
136.224 353.187 135.846 353.309 135.507 353.554  c
135.169 353.799 134.921 354.161 134.765 354.640  c
134.531 354.640 l
134.635 353.859 134.906 353.260 135.343 352.843  c
135.781 352.427 136.328 352.218 136.984 352.218  c
137.682 352.218 138.265 352.442 138.734 352.890  c
139.203 353.338 139.437 353.864 139.437 354.468  c
139.437 354.906 139.333 355.343 139.125 355.781  c
138.812 356.468 138.307 357.192 137.609 357.953  c
136.557 359.109 135.895 359.807 135.625 360.046  c
137.875 360.046 l
138.333 360.046 138.653 360.028 138.835 359.992  c
139.018 359.955 139.184 359.885 139.335 359.781  c
139.487 359.677 139.614 359.531 139.718 359.343  c
139.953 359.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
181.211 337.000 m
181.211 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.046 357.828 m
189.046 358.734 l
187.890 358.734 l
187.890 361.000 l
186.843 361.000 l
186.843 358.734 l
183.203 358.734 l
183.203 357.921 l
187.203 352.218 l
187.890 352.218 l
187.890 357.828 l
189.046 357.828 l
h
186.843 357.828 m
186.843 353.546 l
183.828 357.828 l
186.843 357.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
229.816 337.000 m
229.816 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
236.828 352.218 m
236.828 352.453 l
236.265 352.505 235.807 352.614 235.453 352.781  c
235.099 352.947 234.750 353.203 234.406 353.546  c
234.062 353.890 233.778 354.273 233.554 354.695  c
233.330 355.117 233.140 355.614 232.984 356.187  c
233.599 355.770 234.213 355.562 234.828 355.562  c
235.411 355.562 235.919 355.799 236.351 356.273  c
236.783 356.747 237.000 357.359 237.000 358.109  c
237.000 358.828 236.781 359.484 236.343 360.078  c
235.822 360.796 235.130 361.156 234.265 361.156  c
233.671 361.156 233.171 360.958 232.765 360.562  c
231.963 359.812 231.562 358.833 231.562 357.625  c
231.562 356.854 231.716 356.122 232.023 355.429  c
232.330 354.737 232.770 354.119 233.343 353.578  c
233.916 353.036 234.466 352.674 234.992 352.492  c
235.518 352.309 236.005 352.218 236.453 352.218  c
236.828 352.218 l
h
232.875 356.656 m
232.802 357.229 232.765 357.692 232.765 358.046  c
232.765 358.453 232.841 358.893 232.992 359.367  c
233.143 359.841 233.364 360.218 233.656 360.500  c
233.875 360.697 234.140 360.796 234.453 360.796  c
234.817 360.796 235.145 360.622 235.437 360.273  c
235.729 359.924 235.875 359.432 235.875 358.796  c
235.875 358.067 235.729 357.440 235.437 356.914  c
235.145 356.388 234.739 356.125 234.218 356.125  c
234.052 356.125 233.877 356.158 233.695 356.226  c
233.513 356.294 233.239 356.437 232.875 356.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
278.422 337.000 m
278.422 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
282.500 356.671 m
281.812 356.109 281.369 355.658 281.171 355.320  c
280.974 354.981 280.875 354.630 280.875 354.265  c
280.875 353.703 281.091 353.221 281.523 352.820  c
281.955 352.419 282.531 352.218 283.250 352.218  c
283.947 352.218 284.507 352.406 284.929 352.781  c
285.351 353.156 285.562 353.583 285.562 354.062  c
285.562 354.385 285.447 354.713 285.218 355.046  c
284.989 355.380 284.515 355.776 283.796 356.234  c
284.536 356.807 285.026 357.260 285.265 357.593  c
285.588 358.020 285.750 358.474 285.750 358.953  c
285.750 359.557 285.520 360.075 285.062 360.507  c
284.604 360.940 284.000 361.156 283.250 361.156  c
282.427 361.156 281.786 360.901 281.328 360.390  c
280.963 359.974 280.781 359.520 280.781 359.031  c
280.781 358.656 280.911 358.281 281.171 357.906  c
281.432 357.531 281.875 357.119 282.500 356.671  c
h
283.484 355.984 m
283.994 355.526 284.317 355.164 284.453 354.898  c
284.588 354.632 284.656 354.333 284.656 354.000  c
284.656 353.562 284.531 353.216 284.281 352.960  c
284.031 352.705 283.692 352.578 283.265 352.578  c
282.828 352.578 282.474 352.703 282.203 352.953  c
281.932 353.203 281.796 353.494 281.796 353.828  c
281.796 354.046 281.854 354.268 281.968 354.492  c
282.083 354.716 282.244 354.927 282.453 355.125  c
283.484 355.984 l
h
282.796 356.906 m
282.442 357.197 282.182 357.518 282.015 357.867  c
281.849 358.216 281.765 358.593 281.765 359.000  c
281.765 359.552 281.914 359.992 282.210 360.320  c
282.507 360.648 282.885 360.812 283.343 360.812  c
283.802 360.812 284.169 360.682 284.445 360.421  c
284.721 360.161 284.859 359.849 284.859 359.484  c
284.859 359.182 284.776 358.906 284.609 358.656  c
284.317 358.208 283.713 357.625 282.796 356.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
327.027 337.000 m
327.027 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
327.531 353.234 m
329.625 352.218 l
329.828 352.218 l
329.828 359.484 l
329.828 359.963 329.849 360.263 329.890 360.382  c
329.932 360.502 330.015 360.593 330.140 360.656  c
330.265 360.718 330.520 360.755 330.906 360.765  c
330.906 361.000 l
327.671 361.000 l
327.671 360.765 l
328.078 360.755 328.341 360.718 328.460 360.656  c
328.580 360.593 328.664 360.510 328.710 360.406  c
328.757 360.302 328.781 359.994 328.781 359.484  c
328.781 354.843 l
328.781 354.208 328.760 353.802 328.718 353.625  c
328.687 353.489 328.632 353.390 328.554 353.328  c
328.476 353.265 328.380 353.234 328.265 353.234  c
328.109 353.234 327.895 353.302 327.625 353.437  c
327.531 353.234 l
h
332.968 356.750 m
332.968 355.770 333.117 354.924 333.414 354.210  c
333.710 353.497 334.104 352.968 334.593 352.625  c
334.979 352.354 335.375 352.218 335.781 352.218  c
336.437 352.218 337.026 352.552 337.546 353.218  c
338.203 354.052 338.531 355.182 338.531 356.609  c
338.531 357.609 338.388 358.458 338.101 359.156  c
337.815 359.854 337.447 360.362 337.000 360.679  c
336.552 360.997 336.125 361.156 335.718 361.156  c
334.895 361.156 334.208 360.671 333.656 359.703  c
333.197 358.880 332.968 357.895 332.968 356.750  c
h
334.218 356.906 m
334.218 358.093 334.364 359.062 334.656 359.812  c
334.895 360.437 335.255 360.750 335.734 360.750  c
335.963 360.750 336.200 360.648 336.445 360.445  c
336.690 360.242 336.875 359.895 337.000 359.406  c
337.197 358.687 337.296 357.661 337.296 356.328  c
337.296 355.349 337.192 354.531 336.984 353.875  c
336.838 353.385 336.640 353.041 336.390 352.843  c
336.224 352.708 336.015 352.640 335.765 352.640  c
335.484 352.640 335.229 352.765 335.000 353.015  c
334.697 353.369 334.492 353.924 334.382 354.679  c
334.273 355.434 334.218 356.177 334.218 356.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
375.633 337.000 m
375.633 342.150 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
375.531 353.234 m
377.625 352.218 l
377.828 352.218 l
377.828 359.484 l
377.828 359.963 377.849 360.263 377.890 360.382  c
377.932 360.502 378.015 360.593 378.140 360.656  c
378.265 360.718 378.520 360.755 378.906 360.765  c
378.906 361.000 l
375.671 361.000 l
375.671 360.765 l
376.078 360.755 376.341 360.718 376.460 360.656  c
376.580 360.593 376.664 360.510 376.710 360.406  c
376.757 360.302 376.781 359.994 376.781 359.484  c
376.781 354.843 l
376.781 354.208 376.760 353.802 376.718 353.625  c
376.687 353.489 376.632 353.390 376.554 353.328  c
376.476 353.265 376.380 353.234 376.265 353.234  c
376.109 353.234 375.895 353.302 375.625 353.437  c
375.531 353.234 l
h
386.453 359.343 m
385.859 361.000 l
380.781 361.000 l
380.781 360.765 l
382.270 359.401 383.320 358.286 383.929 357.421  c
384.539 356.557 384.843 355.770 384.843 355.062  c
384.843 354.510 384.677 354.059 384.343 353.710  c
384.010 353.362 383.609 353.187 383.140 353.187  c
382.724 353.187 382.346 353.309 382.007 353.554  c
381.669 353.799 381.421 354.161 381.265 354.640  c
381.031 354.640 l
381.135 353.859 381.406 353.260 381.843 352.843  c
382.281 352.427 382.828 352.218 383.484 352.218  c
384.182 352.218 384.765 352.442 385.234 352.890  c
385.703 353.338 385.937 353.864 385.937 354.468  c
385.937 354.906 385.833 355.343 385.625 355.781  c
385.312 356.468 384.807 357.192 384.109 357.953  c
383.057 359.109 382.395 359.807 382.125 360.046  c
384.375 360.046 l
384.833 360.046 385.153 360.028 385.335 359.992  c
385.518 359.955 385.684 359.885 385.835 359.781  c
385.987 359.677 386.114 359.531 386.218 359.343  c
386.453 359.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
84.0000 20.9854 m
81.9000 20.9854 l
S
newpath
84.0000 69.6030 m
81.9000 69.6030 l
S
newpath
84.0000 118.220 m
81.9000 118.220 l
S
newpath
84.0000 166.838 m
81.9000 166.838 l
S
newpath
84.0000 215.455 m
81.9000 215.455 l
S
newpath
84.0000 264.073 m
81.9000 264.073 l
S
newpath
84.0000 312.691 m
81.9000 312.691 l
S
newpath
84.0000 337.000 m
84.0000 6.97937 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 161 60 21 rc
newpath
8.21875 171.468 m
8.19791 171.843 8.17187 172.237 8.14062 172.648  c
8.10937 173.059 8.08072 173.447 8.05468 173.812  c
8.02864 174.177 8.00520 174.494 7.98437 174.765  c
7.96354 175.036 7.95312 175.208 7.95312 175.281  c
7.95312 175.458 7.97656 175.638 8.02343 175.820  c
8.07031 176.002 8.14062 176.166 8.23437 176.312  c
8.32812 176.458 8.43750 176.578 8.56250 176.671  c
8.68750 176.765 8.82812 176.812 8.98437 176.812  c
9.26562 176.812 9.48177 176.718 9.63281 176.531  c
9.78385 176.343 9.88541 176.020 9.93750 175.562  c
10.2343 175.562 l
10.2343 175.906 10.2187 176.195 10.1875 176.429  c
10.1562 176.664 10.1145 176.867 10.0625 177.039  c
10.0104 177.210 9.94270 177.356 9.85937 177.476  c
9.77604 177.596 9.68229 177.708 9.57812 177.812  c
9.40104 178.000 9.20833 178.127 9.00000 178.195  c
8.79166 178.263 8.61458 178.296 8.46875 178.296  c
8.32291 178.296 8.17447 178.270 8.02343 178.218  c
7.87239 178.166 7.73437 178.083 7.60937 177.968  c
7.30729 177.656 7.11458 177.278 7.03125 176.835  c
6.94791 176.393 6.90625 175.963 6.90625 175.546  c
6.90625 175.005 6.93489 174.414 6.99218 173.773  c
7.04947 173.132 7.13541 172.369 7.25000 171.484  c
5.81250 171.484 l
5.56250 171.484 5.31770 171.622 5.07812 171.898  c
4.83854 172.174 4.63020 172.552 4.45312 173.031  c
4.15625 173.031 l
4.31250 172.416 4.48177 171.927 4.66406 171.562  c
4.84635 171.197 5.06250 170.890 5.31250 170.640  c
5.56250 170.390 5.83593 170.221 6.13281 170.132  c
6.42968 170.044 6.69270 170.000 6.92187 170.000  c
10.6875 170.000 l
10.6875 171.468 l
8.21875 171.468 l
h
f
newpath
12.7812 172.937 m
12.7812 174.046 l
13.1979 173.307 13.6197 172.937 14.0468 172.937  c
14.2447 172.937 14.4088 172.997 14.5390 173.117  c
14.6692 173.237 14.7343 173.375 14.7343 173.531  c
14.7343 173.666 14.6875 173.783 14.5937 173.882  c
14.5000 173.981 14.3906 174.031 14.2656 174.031  c
14.1406 174.031 14.0000 173.968 13.8437 173.843  c
13.6875 173.718 13.5729 173.656 13.5000 173.656  c
13.4270 173.656 13.3541 173.692 13.2812 173.765  c
13.1250 173.911 12.9583 174.156 12.7812 174.500  c
12.7812 176.843 l
12.7812 177.125 12.8177 177.333 12.8906 177.468  c
12.9322 177.562 13.0130 177.643 13.1328 177.710  c
13.2526 177.778 13.4218 177.812 13.6406 177.812  c
13.6406 178.000 l
11.1250 178.000 l
11.1250 177.812 l
11.3750 177.812 11.5625 177.770 11.6875 177.687  c
11.7708 177.635 11.8333 177.546 11.8750 177.421  c
11.8854 177.359 11.8906 177.182 11.8906 176.890  c
11.8906 174.984 l
11.8906 174.411 11.8802 174.070 11.8593 173.960  c
11.8385 173.851 11.7968 173.773 11.7343 173.726  c
11.6718 173.679 11.5937 173.656 11.5000 173.656  c
11.3854 173.656 11.2604 173.682 11.1250 173.734  c
11.0625 173.531 l
12.5625 172.937 l
12.7812 172.937 l
h
f
newpath
23.9687 181.140 m
23.9687 181.421 l
23.1875 181.026 22.5312 180.562 22.0000 180.031  c
21.2500 179.281 20.6718 178.390 20.2656 177.359  c
19.8593 176.328 19.6562 175.260 19.6562 174.156  c
19.6562 172.541 20.0546 171.070 20.8515 169.742  c
21.6484 168.414 22.6875 167.463 23.9687 166.890  c
23.9687 167.218 l
23.3333 167.572 22.8099 168.057 22.3984 168.671  c
21.9869 169.286 21.6796 170.065 21.4765 171.007  c
21.2734 171.950 21.1718 172.932 21.1718 173.953  c
21.1718 175.067 21.2552 176.083 21.4218 177.000  c
21.5572 177.718 21.7213 178.296 21.9140 178.734  c
22.1067 179.171 22.3671 179.591 22.6953 179.992  c
23.0234 180.393 23.4479 180.776 23.9687 181.140  c
h
26.9531 166.890 m
26.9531 174.015 l
28.7656 172.343 l
29.1510 171.989 29.3750 171.765 29.4375 171.671  c
29.4791 171.609 29.5000 171.546 29.5000 171.484  c
29.5000 171.380 29.4583 171.291 29.3750 171.218  c
29.2916 171.145 29.1510 171.104 28.9531 171.093  c
28.9531 170.843 l
32.0625 170.843 l
32.0625 171.093 l
31.6354 171.104 31.2786 171.169 30.9921 171.289  c
30.7057 171.408 30.3958 171.619 30.0625 171.921  c
28.2187 173.625 l
30.0625 175.937 l
30.5729 176.583 30.9166 176.989 31.0937 177.156  c
31.3437 177.406 31.5625 177.567 31.7500 177.640  c
31.8750 177.692 32.0989 177.718 32.4218 177.718  c
32.4218 178.000 l
28.9531 178.000 l
28.9531 177.718 l
29.1510 177.708 29.2838 177.677 29.3515 177.625  c
29.4192 177.572 29.4531 177.494 29.4531 177.390  c
29.4531 177.276 29.3489 177.083 29.1406 176.812  c
26.9531 174.015 l
26.9531 176.390 l
26.9531 176.849 26.9843 177.151 27.0468 177.296  c
27.1093 177.442 27.2005 177.546 27.3203 177.609  c
27.4401 177.671 27.7031 177.708 28.1093 177.718  c
28.1093 178.000 l
24.4687 178.000 l
24.4687 177.718 l
24.8333 177.718 25.1041 177.671 25.2812 177.578  c
25.3958 177.526 25.4791 177.437 25.5312 177.312  c
25.6145 177.145 25.6562 176.849 25.6562 176.421  c
25.6562 169.906 l
25.6562 169.083 25.6380 168.578 25.6015 168.390  c
25.5651 168.203 25.5052 168.075 25.4218 168.007  c
25.3385 167.940 25.2291 167.906 25.0937 167.906  c
24.9791 167.906 24.8125 167.947 24.5937 168.031  c
24.4687 167.765 l
26.5937 166.890 l
26.9531 166.890 l
h
39.7187 172.593 m
40.4583 172.750 41.0104 173.000 41.3750 173.343  c
41.8750 173.822 42.1250 174.406 42.1250 175.093  c
42.1250 175.625 41.9583 176.130 41.6250 176.609  c
41.2916 177.088 40.8359 177.440 40.2578 177.664  c
39.6796 177.888 38.7916 178.000 37.5937 178.000  c
32.5937 178.000 l
32.5937 177.703 l
33.0000 177.703 l
33.4375 177.703 33.7552 177.562 33.9531 177.281  c
34.0677 177.104 34.1250 176.718 34.1250 176.125  c
34.1250 169.281 l
34.1250 168.625 34.0520 168.208 33.9062 168.031  c
33.6979 167.802 33.3958 167.687 33.0000 167.687  c
32.5937 167.687 l
32.5937 167.406 l
37.1718 167.406 l
38.0260 167.406 38.7135 167.468 39.2343 167.593  c
40.0156 167.781 40.6119 168.112 41.0234 168.585  c
41.4349 169.059 41.6406 169.609 41.6406 170.234  c
41.6406 170.765 41.4791 171.239 41.1562 171.656  c
40.8333 172.072 40.3541 172.385 39.7187 172.593  c
h
35.6250 172.171 m
35.8229 172.203 36.0442 172.229 36.2890 172.250  c
36.5338 172.270 36.8072 172.281 37.1093 172.281  c
37.8697 172.281 38.4401 172.197 38.8203 172.031  c
39.2005 171.864 39.4921 171.612 39.6953 171.273  c
39.8984 170.934 40.0000 170.567 40.0000 170.171  c
40.0000 169.546 39.7474 169.015 39.2421 168.578  c
38.7369 168.140 38.0000 167.921 37.0312 167.921  c
36.5104 167.921 36.0416 167.979 35.6250 168.093  c
35.6250 172.171 l
h
35.6250 177.234 m
36.2291 177.369 36.8281 177.437 37.4218 177.437  c
38.3593 177.437 39.0755 177.226 39.5703 176.804  c
40.0651 176.382 40.3125 175.859 40.3125 175.234  c
40.3125 174.817 40.2005 174.419 39.9765 174.039  c
39.7526 173.658 39.3880 173.359 38.8828 173.140  c
38.3776 172.921 37.7552 172.812 37.0156 172.812  c
36.6927 172.812 36.4166 172.817 36.1875 172.828  c
35.9583 172.838 35.7708 172.859 35.6250 172.890  c
35.6250 177.234 l
h
46.2812 173.031 m
46.2812 176.125 l
46.2812 176.791 46.3541 177.203 46.5000 177.359  c
46.6979 177.588 47.0000 177.703 47.4062 177.703  c
47.8125 177.703 l
47.8125 178.000 l
43.2656 178.000 l
43.2656 177.703 l
43.6718 177.703 l
44.1197 177.703 44.4375 177.557 44.6250 177.265  c
44.7291 177.109 44.7812 176.729 44.7812 176.125  c
44.7812 169.281 l
44.7812 168.614 44.7135 168.197 44.5781 168.031  c
44.3697 167.802 44.0677 167.687 43.6718 167.687  c
43.2656 167.687 l
43.2656 167.406 l
47.1562 167.406 l
48.1041 167.406 48.8515 167.502 49.3984 167.695  c
49.9453 167.888 50.4062 168.216 50.7812 168.679  c
51.1562 169.143 51.3437 169.692 51.3437 170.328  c
51.3437 171.192 51.0572 171.895 50.4843 172.437  c
49.9114 172.979 49.1041 173.250 48.0625 173.250  c
47.8125 173.250 47.5390 173.231 47.2421 173.195  c
46.9453 173.158 46.6250 173.104 46.2812 173.031  c
h
46.2812 172.593 m
46.5625 172.645 46.8099 172.684 47.0234 172.710  c
47.2369 172.737 47.4166 172.750 47.5625 172.750  c
48.1041 172.750 48.5729 172.539 48.9687 172.117  c
49.3645 171.695 49.5625 171.151 49.5625 170.484  c
49.5625 170.026 49.4687 169.601 49.2812 169.210  c
49.0937 168.820 48.8281 168.526 48.4843 168.328  c
48.1406 168.130 47.7500 168.031 47.3125 168.031  c
47.0416 168.031 46.6979 168.083 46.2812 168.187  c
46.2812 172.593 l
h
52.2578 167.218 m
52.2578 166.890 l
53.0494 167.276 53.7109 167.734 54.2421 168.265  c
54.9817 169.026 55.5546 169.919 55.9609 170.945  c
56.3671 171.971 56.5703 173.036 56.5703 174.140  c
56.5703 175.755 56.1744 177.229 55.3828 178.562  c
54.5911 179.895 53.5494 180.849 52.2578 181.421  c
52.2578 181.140 l
52.9036 180.776 53.4322 180.289 53.8437 179.679  c
54.2552 179.070 54.5625 178.291 54.7656 177.343  c
54.9687 176.395 55.0703 175.406 55.0703 174.375  c
55.0703 173.270 54.9817 172.260 54.8046 171.343  c
54.6796 170.625 54.5182 170.049 54.3203 169.617  c
54.1224 169.184 53.8619 168.768 53.5390 168.367  c
53.2161 167.966 52.7890 167.583 52.2578 167.218  c
h
f
Q
cliprestore
newpath
0 0 m
0 380.000 l
390.000 380.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
84.0000 337.000 m
78.8500 337.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
74.4687 342.750 m
74.4687 341.770 74.6171 340.924 74.9140 340.210  c
75.2109 339.497 75.6041 338.968 76.0937 338.625  c
76.4791 338.354 76.8750 338.218 77.2812 338.218  c
77.9375 338.218 78.5260 338.552 79.0468 339.218  c
79.7031 340.052 80.0312 341.182 80.0312 342.609  c
80.0312 343.609 79.8880 344.458 79.6015 345.156  c
79.3151 345.854 78.9479 346.362 78.5000 346.679  c
78.0520 346.997 77.6250 347.156 77.2187 347.156  c
76.3958 347.156 75.7083 346.671 75.1562 345.703  c
74.6979 344.880 74.4687 343.895 74.4687 342.750  c
h
75.7187 342.906 m
75.7187 344.093 75.8645 345.062 76.1562 345.812  c
76.3958 346.437 76.7552 346.750 77.2343 346.750  c
77.4635 346.750 77.7005 346.648 77.9453 346.445  c
78.1901 346.242 78.3750 345.895 78.5000 345.406  c
78.6979 344.687 78.7968 343.661 78.7968 342.328  c
78.7968 341.349 78.6927 340.531 78.4843 339.875  c
78.3385 339.385 78.1406 339.041 77.8906 338.843  c
77.7239 338.708 77.5156 338.640 77.2656 338.640  c
76.9843 338.640 76.7291 338.765 76.5000 339.015  c
76.1979 339.369 75.9921 339.924 75.8828 340.679  c
75.7734 341.434 75.7187 342.177 75.7187 342.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 288.382 m
78.8500 288.382 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
79.9531 296.343 m
79.3593 298.000 l
74.2812 298.000 l
74.2812 297.765 l
75.7708 296.401 76.8203 295.286 77.4296 294.421  c
78.0390 293.557 78.3437 292.770 78.3437 292.062  c
78.3437 291.510 78.1770 291.059 77.8437 290.710  c
77.5104 290.362 77.1093 290.187 76.6406 290.187  c
76.2239 290.187 75.8463 290.309 75.5078 290.554  c
75.1692 290.799 74.9218 291.161 74.7656 291.640  c
74.5312 291.640 l
74.6354 290.859 74.9062 290.260 75.3437 289.843  c
75.7812 289.427 76.3281 289.218 76.9843 289.218  c
77.6822 289.218 78.2656 289.442 78.7343 289.890  c
79.2031 290.338 79.4375 290.864 79.4375 291.468  c
79.4375 291.906 79.3333 292.343 79.1250 292.781  c
78.8125 293.468 78.3072 294.192 77.6093 294.953  c
76.5572 296.109 75.8958 296.807 75.6250 297.046  c
77.8750 297.046 l
78.3333 297.046 78.6536 297.028 78.8359 296.992  c
79.0182 296.955 79.1849 296.885 79.3359 296.781  c
79.4869 296.677 79.6145 296.531 79.7187 296.343  c
79.9531 296.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 239.764 m
78.8500 239.764 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
80.0468 245.828 m
80.0468 246.734 l
78.8906 246.734 l
78.8906 249.000 l
77.8437 249.000 l
77.8437 246.734 l
74.2031 246.734 l
74.2031 245.921 l
78.2031 240.218 l
78.8906 240.218 l
78.8906 245.828 l
80.0468 245.828 l
h
77.8437 245.828 m
77.8437 241.546 l
74.8281 245.828 l
77.8437 245.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 191.147 m
78.8500 191.147 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
79.8281 192.218 m
79.8281 192.453 l
79.2656 192.505 78.8072 192.614 78.4531 192.781  c
78.0989 192.947 77.7500 193.203 77.4062 193.546  c
77.0625 193.890 76.7786 194.273 76.5546 194.695  c
76.3307 195.117 76.1406 195.614 75.9843 196.187  c
76.5989 195.770 77.2135 195.562 77.8281 195.562  c
78.4114 195.562 78.9192 195.799 79.3515 196.273  c
79.7838 196.747 80.0000 197.359 80.0000 198.109  c
80.0000 198.828 79.7812 199.484 79.3437 200.078  c
78.8229 200.796 78.1302 201.156 77.2656 201.156  c
76.6718 201.156 76.1718 200.958 75.7656 200.562  c
74.9635 199.812 74.5625 198.833 74.5625 197.625  c
74.5625 196.854 74.7161 196.122 75.0234 195.429  c
75.3307 194.737 75.7708 194.119 76.3437 193.578  c
76.9166 193.036 77.4661 192.674 77.9921 192.492  c
78.5182 192.309 79.0052 192.218 79.4531 192.218  c
79.8281 192.218 l
h
75.8750 196.656 m
75.8020 197.229 75.7656 197.692 75.7656 198.046  c
75.7656 198.453 75.8411 198.893 75.9921 199.367  c
76.1432 199.841 76.3645 200.218 76.6562 200.500  c
76.8750 200.697 77.1406 200.796 77.4531 200.796  c
77.8177 200.796 78.1458 200.622 78.4375 200.273  c
78.7291 199.924 78.8750 199.432 78.8750 198.796  c
78.8750 198.067 78.7291 197.440 78.4375 196.914  c
78.1458 196.388 77.7395 196.125 77.2187 196.125  c
77.0520 196.125 76.8776 196.158 76.6953 196.226  c
76.5130 196.294 76.2395 196.437 75.8750 196.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 142.529 m
78.8500 142.529 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
76.5000 147.671 m
75.8125 147.109 75.3697 146.658 75.1718 146.320  c
74.9739 145.981 74.8750 145.630 74.8750 145.265  c
74.8750 144.703 75.0911 144.221 75.5234 143.820  c
75.9557 143.419 76.5312 143.218 77.2500 143.218  c
77.9479 143.218 78.5078 143.406 78.9296 143.781  c
79.3515 144.156 79.5625 144.583 79.5625 145.062  c
79.5625 145.385 79.4479 145.713 79.2187 146.046  c
78.9895 146.380 78.5156 146.776 77.7968 147.234  c
78.5364 147.807 79.0260 148.260 79.2656 148.593  c
79.5885 149.020 79.7500 149.474 79.7500 149.953  c
79.7500 150.557 79.5208 151.075 79.0625 151.507  c
78.6041 151.940 78.0000 152.156 77.2500 152.156  c
76.4270 152.156 75.7864 151.901 75.3281 151.390  c
74.9635 150.974 74.7812 150.520 74.7812 150.031  c
74.7812 149.656 74.9114 149.281 75.1718 148.906  c
75.4322 148.531 75.8750 148.119 76.5000 147.671  c
h
77.4843 146.984 m
77.9947 146.526 78.3177 146.164 78.4531 145.898  c
78.5885 145.632 78.6562 145.333 78.6562 145.000  c
78.6562 144.562 78.5312 144.216 78.2812 143.960  c
78.0312 143.705 77.6927 143.578 77.2656 143.578  c
76.8281 143.578 76.4739 143.703 76.2031 143.953  c
75.9322 144.203 75.7968 144.494 75.7968 144.828  c
75.7968 145.046 75.8541 145.268 75.9687 145.492  c
76.0833 145.716 76.2447 145.927 76.4531 146.125  c
77.4843 146.984 l
h
76.7968 147.906 m
76.4427 148.197 76.1822 148.518 76.0156 148.867  c
75.8489 149.216 75.7656 149.593 75.7656 150.000  c
75.7656 150.552 75.9140 150.992 76.2109 151.320  c
76.5078 151.648 76.8854 151.812 77.3437 151.812  c
77.8020 151.812 78.1692 151.682 78.4453 151.421  c
78.7213 151.161 78.8593 150.849 78.8593 150.484  c
78.8593 150.182 78.7760 149.906 78.6093 149.656  c
78.3177 149.208 77.7135 148.625 76.7968 147.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 93.9118 m
78.8500 93.9118 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.5312 95.2343 m
71.6250 94.2187 l
71.8281 94.2187 l
71.8281 101.484 l
71.8281 101.963 71.8489 102.263 71.8906 102.382  c
71.9322 102.502 72.0156 102.593 72.1406 102.656  c
72.2656 102.718 72.5208 102.755 72.9062 102.765  c
72.9062 103.000 l
69.6718 103.000 l
69.6718 102.765 l
70.0781 102.755 70.3411 102.718 70.4609 102.656  c
70.5807 102.593 70.6640 102.510 70.7109 102.406  c
70.7578 102.302 70.7812 101.994 70.7812 101.484  c
70.7812 96.8437 l
70.7812 96.2083 70.7604 95.8020 70.7187 95.6250  c
70.6875 95.4895 70.6328 95.3906 70.5546 95.3281  c
70.4765 95.2656 70.3802 95.2343 70.2656 95.2343  c
70.1093 95.2343 69.8958 95.3020 69.6250 95.4375  c
69.5312 95.2343 l
h
74.9687 98.7500 m
74.9687 97.7708 75.1171 96.9244 75.4140 96.2109  c
75.7109 95.4974 76.1041 94.9687 76.5937 94.6250  c
76.9791 94.3541 77.3750 94.2187 77.7812 94.2187  c
78.4375 94.2187 79.0260 94.5520 79.5468 95.2187  c
80.2031 96.0520 80.5312 97.1822 80.5312 98.6093  c
80.5312 99.6093 80.3880 100.458 80.1015 101.156  c
79.8151 101.854 79.4479 102.362 79.0000 102.679  c
78.5520 102.997 78.1250 103.156 77.7187 103.156  c
76.8958 103.156 76.2083 102.671 75.6562 101.703  c
75.1979 100.880 74.9687 99.8958 74.9687 98.7500  c
h
76.2187 98.9062 m
76.2187 100.093 76.3645 101.062 76.6562 101.812  c
76.8958 102.437 77.2552 102.750 77.7343 102.750  c
77.9635 102.750 78.2005 102.648 78.4453 102.445  c
78.6901 102.242 78.8750 101.895 79.0000 101.406  c
79.1979 100.687 79.2968 99.6614 79.2968 98.3281  c
79.2968 97.3489 79.1927 96.5312 78.9843 95.8750  c
78.8385 95.3854 78.6406 95.0416 78.3906 94.8437  c
78.2239 94.7083 78.0156 94.6406 77.7656 94.6406  c
77.4843 94.6406 77.2291 94.7656 77.0000 95.0156  c
76.6979 95.3697 76.4921 95.9244 76.3828 96.6796  c
76.2734 97.4349 76.2187 98.1770 76.2187 98.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
84.0000 45.2942 m
78.8500 45.2942 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.5312 47.2343 m
71.6250 46.2187 l
71.8281 46.2187 l
71.8281 53.4843 l
71.8281 53.9635 71.8489 54.2630 71.8906 54.3828  c
71.9322 54.5026 72.0156 54.5937 72.1406 54.6562  c
72.2656 54.7187 72.5208 54.7552 72.9062 54.7656  c
72.9062 55.0000 l
69.6718 55.0000 l
69.6718 54.7656 l
70.0781 54.7552 70.3411 54.7187 70.4609 54.6562  c
70.5807 54.5937 70.6640 54.5104 70.7109 54.4062  c
70.7578 54.3020 70.7812 53.9947 70.7812 53.4843  c
70.7812 48.8437 l
70.7812 48.2083 70.7604 47.8020 70.7187 47.6250  c
70.6875 47.4895 70.6328 47.3906 70.5546 47.3281  c
70.4765 47.2656 70.3802 47.2343 70.2656 47.2343  c
70.1093 47.2343 69.8958 47.3020 69.6250 47.4375  c
69.5312 47.2343 l
h
80.4531 53.3437 m
79.8593 55.0000 l
74.7812 55.0000 l
74.7812 54.7656 l
76.2708 53.4010 77.3203 52.2864 77.9296 51.4218  c
78.5390 50.5572 78.8437 49.7708 78.8437 49.0625  c
78.8437 48.5104 78.6770 48.0599 78.3437 47.7109  c
78.0104 47.3619 77.6093 47.1875 77.1406 47.1875  c
76.7239 47.1875 76.3463 47.3099 76.0078 47.5546  c
75.6692 47.7994 75.4218 48.1614 75.2656 48.6406  c
75.0312 48.6406 l
75.1354 47.8593 75.4062 47.2604 75.8437 46.8437  c
76.2812 46.4270 76.8281 46.2187 77.4843 46.2187  c
78.1822 46.2187 78.7656 46.4427 79.2343 46.8906  c
79.7031 47.3385 79.9375 47.8645 79.9375 48.4687  c
79.9375 48.9062 79.8333 49.3437 79.6250 49.7812  c
79.3125 50.4687 78.8072 51.1927 78.1093 51.9531  c
77.0572 53.1093 76.3958 53.8072 76.1250 54.0468  c
78.3750 54.0468 l
78.8333 54.0468 79.1536 54.0286 79.3359 53.9921  c
79.5182 53.9557 79.6849 53.8854 79.8359 53.7812  c
79.9869 53.6770 80.1145 53.5312 80.2187 53.3437  c
80.4531 53.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 390 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

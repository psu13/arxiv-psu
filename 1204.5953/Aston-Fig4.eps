%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 158 575 633
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 18 January 2012 12:28:55 o'clock GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
468 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
468.000 0 l
468.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 458 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
105.000 -1.00000 350.995 348.000 rc
1.00000 0 0 RG
newpath
106.000 263.857 m
107.829 260.248 l
109.421 257.975 l
111.211 256.252 l
113.014 255.282 l
114.807 254.957 l
116.470 255.131 l
118.192 255.702 l
119.973 256.628 l
121.748 257.807 l
123.574 259.210 l
125.182 260.549 l
126.992 262.114 l
128.810 263.693 l
130.562 265.175 l
132.153 266.454 l
134.044 267.854 l
135.647 268.912 l
137.511 269.966 l
139.161 270.722 l
140.971 271.340 l
142.695 271.710 l
144.494 271.857 l
146.146 271.769 l
147.927 271.427 l
149.778 270.798 l
151.389 270.022 l
153.129 268.944 l
154.926 267.571 l
156.685 265.976 l
158.386 264.201 l
160.276 261.970 l
161.973 259.737 l
163.785 257.124 l
165.428 254.560 l
167.223 251.551 l
168.913 248.534 l
170.679 245.196 l
172.405 241.763 l
174.213 237.999 l
175.953 234.220 l
177.734 230.211 l
179.499 226.103 l
181.122 222.222 l
182.981 217.659 l
184.644 213.484 l
186.417 208.947 l
188.114 204.531 l
189.999 199.554 l
191.631 195.193 l
193.483 190.194 l
195.171 185.602 l
197.017 180.550 l
198.610 176.174 l
203.929 161.539 l
205.674 156.753 l
207.350 152.175 l
209.162 147.254 l
210.890 142.598 l
212.707 137.739 l
214.353 133.383 l
216.172 128.621 l
217.914 124.117 l
219.651 119.684 l
221.466 115.122 l
223.138 110.986 l
224.850 106.820 l
226.741 102.305 l
228.452 98.2982 l
230.202 94.2819 l
231.982 90.2851 l
233.619 86.6917 l
235.363 82.9479 l
237.094 79.3230 l
238.945 75.5472 l
240.579 72.3038 l
242.464 68.6666 l
244.166 65.4819 l
245.849 62.4230 l
247.659 59.2369 l
249.476 56.1462 l
251.130 53.4291 l
252.886 50.6432 l
254.600 48.0236 l
256.457 45.2951 l
258.065 43.0275 l
259.911 40.5303 l
261.646 38.2873 l
263.365 36.1659 l
265.085 34.1423 l
266.839 32.1809 l
268.699 30.2147 l
270.404 28.5141 l
272.087 26.9312 l
273.886 25.3441 l
275.682 23.8687 l
277.293 22.6364 l
279.202 21.2893 l
280.799 20.2559 l
282.667 19.1558 l
284.450 18.2150 l
286.042 17.4651 l
287.832 16.7238 l
289.634 16.0866 l
291.428 15.5614 l
293.091 15.1720 l
294.813 14.8679 l
296.594 14.6601 l
298.369 14.5614 l
300.194 14.5734 l
301.803 14.6801 l
303.613 14.9085 l
305.431 15.2543 l
307.183 15.6987 l
308.774 16.1977 l
310.665 16.9104 l
312.268 17.6166 l
314.132 18.5574 l
315.782 19.4986 l
317.592 20.6496 l
319.316 21.8621 l
321.115 23.2500 l
322.767 24.6363 l
324.548 26.2531 l
326.399 28.0680 l
328.010 29.7617 l
329.750 31.7117 l
331.547 33.8597 l
333.306 36.0944 l
335.007 38.3839 l
336.896 41.0749 l
338.594 43.6286 l
340.406 46.4992 l
342.049 49.2307 l
343.844 52.3609 l
345.534 55.4455 l
347.299 58.8164 l
349.026 62.2590 l
350.834 66.0213 l
352.574 69.8001 l
354.355 73.8242 l
356.120 77.9771 l
357.743 81.9374 l
359.602 86.6488 l
361.265 91.0208 l
363.038 95.8491 l
364.735 100.633 l
366.620 106.136 l
368.252 111.065 l
370.104 116.845 l
371.792 122.287 l
373.638 128.434 l
375.231 133.902 l
377.046 140.316 l
378.798 146.704 l
380.550 153.278 l
382.295 160.020 l
383.971 166.678 l
385.783 174.077 l
387.511 181.328 l
389.328 189.169 l
390.974 196.455 l
392.793 204.716 l
394.535 212.838 l
396.272 221.144 l
398.087 230.040 l
399.759 238.433 l
401.471 247.230 l
403.361 257.180 l
405.073 266.405 l
406.823 276.054 l
408.603 286.090 l
410.240 295.514 l
411.984 305.772 l
413.715 316.168 l
415.566 327.530 l
417.200 337.764 l
419.085 349.814 l
S
cliprestore
newpath
0 0 m
0 390.000 l
458.000 390.000 l
458.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
106.000 349.000 m
453.995 349.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
245 369 69 21 rc
newpath
254.718 386.890 m
254.218 387.109 253.755 387.218 253.328 387.218  c
252.671 387.218 252.143 387.023 251.742 386.632  c
251.341 386.242 251.140 385.734 251.140 385.109  c
251.140 384.859 251.171 384.557 251.234 384.203  c
252.453 378.171 l
250.984 378.171 l
251.125 377.453 l
252.578 377.453 l
252.921 375.718 l
254.750 375.234 l
254.312 377.453 l
256.750 377.453 l
256.609 378.171 l
254.171 378.171 l
252.921 384.453 l
252.859 384.776 252.828 385.078 252.828 385.359  c
252.828 386.057 253.156 386.406 253.812 386.406  c
254.104 386.406 254.453 386.328 254.859 386.171  c
254.718 386.890 l
h
f
newpath
f
newpath
271.625 387.000 m
273.937 375.390 l
274.031 374.911 274.078 374.494 274.078 374.140  c
274.078 373.880 273.854 373.739 273.406 373.718  c
272.812 373.671 l
272.656 373.671 l
272.765 373.125 l
276.125 373.125 l
274.421 381.687 l
274.546 381.687 l
277.411 380.218 278.843 378.984 278.843 377.984  c
278.843 377.776 278.750 377.599 278.562 377.453  c
280.328 377.343 l
280.411 377.510 280.453 377.656 280.453 377.781  c
280.453 378.656 278.968 379.869 276.000 381.421  c
277.177 383.369 278.234 384.864 279.171 385.906  c
279.453 386.229 279.895 386.406 280.500 386.437  c
280.703 386.453 l
280.593 387.000 l
277.703 387.000 l
276.536 385.583 275.458 383.937 274.468 382.062  c
274.343 382.062 l
273.359 387.000 l
271.625 387.000 l
h
279.953 390.468 m
281.036 389.718 282.390 388.593 284.015 387.093  c
284.343 386.781 l
284.281 385.416 284.109 383.979 283.828 382.468  c
283.546 380.958 283.255 379.864 282.953 379.187  c
282.692 378.635 282.487 378.309 282.335 378.210  c
282.184 378.112 281.781 378.046 281.125 378.015  c
280.921 378.000 l
281.015 377.453 l
284.203 377.453 l
285.119 379.609 285.645 382.130 285.781 385.015  c
286.859 383.640 l
287.932 382.276 288.645 381.278 289.000 380.648  c
289.354 380.018 289.531 379.437 289.531 378.906  c
289.531 378.354 289.296 377.869 288.828 377.453  c
291.000 377.453 l
291.135 377.713 291.203 377.963 291.203 378.203  c
291.203 378.703 291.039 379.224 290.710 379.765  c
290.382 380.307 289.703 381.197 288.671 382.437  c
285.328 386.421 l
284.005 388.015 283.015 389.364 282.359 390.468  c
279.953 390.468 l
h
291.843 387.000 m
293.296 379.734 l
293.390 379.255 293.437 378.838 293.437 378.484  c
293.437 378.224 293.213 378.078 292.765 378.046  c
292.171 378.015 l
292.015 378.000 l
292.125 377.453 l
295.484 377.453 l
294.703 381.359 l
296.401 378.609 298.026 377.234 299.578 377.234  c
299.734 377.234 299.880 377.260 300.015 377.312  c
299.265 379.296 l
299.005 379.182 298.744 379.125 298.484 379.125  c
297.359 379.125 296.020 380.265 294.468 382.546  c
293.578 387.000 l
291.843 387.000 l
h
f
[ 1.00000 0 0 1.00000 263.000 373.000 ] concat
newpath
3.76510 16.5664 m
3.49127 17.0000 l
1.16375 15.5548 0 12.6648 0 8.33000  c
0 8.50000 l
0 8.67000 l
0 4.31997 1.16375 1.42997 3.49127 0  c
3.76510 0.410738 l
2.73064 1.29306 2.03847 2.53288 1.68859 4.13020  c
1.47561 5.11901 1.36912 6.51894 1.36912 8.33000  c
1.36912 8.50000 l
1.36912 8.67000 l
1.36912 10.4658 1.47561 11.8581 1.68859 12.8469  c
2.03847 14.4443 2.73064 15.6841 3.76510 16.5664  c
h
f
[ 1.00000 0 0 1.00000 -263.000 -373.000 ] concat
[ 1.00000 0 0 1.00000 303.000 373.000 ] concat
newpath
0 0.433558 m
0.273826 0 l
2.60134 1.44519 3.76510 4.33519 3.76510 8.67000  c
3.76510 8.50000 l
3.76510 8.33000 l
3.76510 12.6800 2.60134 15.5700 0.273826 17.0000  c
0 16.5892 l
1.03445 15.7069 1.72662 14.4671 2.07651 12.8698  c
2.28948 11.8809 2.39597 10.4810 2.39597 8.67000  c
2.39597 8.50000 l
2.39597 8.33000 l
2.39597 6.53416 2.28948 5.14183 2.07651 4.15302  c
1.72662 2.55570 1.03445 1.31588 0 0.433558  c
h
f
[ 1.00000 0 0 1.00000 -303.000 -373.000 ] concat
Q
cliprestore
newpath
0 0 m
0 390.000 l
458.000 390.000 l
458.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
106.000 349.000 m
106.000 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
110.906 375.234 m
109.937 375.234 109.156 374.783 108.562 373.882  c
107.968 372.981 107.671 371.796 107.671 370.328  c
107.671 368.817 107.968 367.614 108.562 366.718  c
109.156 365.822 109.953 365.375 110.953 365.375  c
111.953 365.375 112.752 365.822 113.351 366.718  c
113.950 367.614 114.250 368.812 114.250 370.312  c
114.250 371.822 113.950 373.020 113.351 373.906  c
112.752 374.791 111.937 375.234 110.906 375.234  c
h
110.921 374.843 m
112.255 374.906 112.921 373.369 112.921 370.234  c
112.921 367.244 112.265 365.750 110.953 365.750  c
109.651 365.750 109.000 367.265 109.000 370.296  c
109.000 373.265 109.640 374.781 110.921 374.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
175.599 349.000 m
175.599 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.578 365.515 m
180.578 373.359 l
180.625 373.984 l
180.635 374.234 180.705 374.398 180.835 374.476  c
180.966 374.554 181.234 374.593 181.640 374.593  c
182.390 374.609 l
182.390 375.000 l
177.531 375.000 l
177.531 374.609 l
178.265 374.593 l
178.671 374.593 178.940 374.554 179.070 374.476  c
179.200 374.398 179.276 374.234 179.296 373.984  c
179.328 373.359 l
179.328 367.531 l
179.296 366.890 l
179.296 366.588 179.208 366.437 179.031 366.437  c
178.906 366.437 178.614 366.479 178.156 366.562  c
177.531 366.671 l
177.531 366.281 l
180.578 365.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
245.198 349.000 m
245.198 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
247.015 375.000 m
247.015 374.375 l
247.380 373.322 247.942 372.437 248.703 371.718  c
249.390 371.093 l
250.161 370.364 250.677 369.786 250.937 369.359  c
251.197 368.932 251.328 368.442 251.328 367.890  c
251.328 367.244 251.169 366.729 250.851 366.343  c
250.533 365.958 250.114 365.765 249.593 365.765  c
249.020 365.765 248.536 365.921 248.140 366.234  c
247.994 366.349 247.901 366.770 247.859 367.500  c
247.859 367.656 l
247.218 367.656 l
247.218 365.937 l
248.135 365.552 248.979 365.359 249.750 365.359  c
250.593 365.359 251.289 365.599 251.835 366.078  c
252.382 366.557 252.656 367.161 252.656 367.890  c
252.656 368.880 252.041 369.796 250.812 370.640  c
250.046 371.171 l
248.828 372.005 248.161 372.916 248.046 373.906  c
252.609 373.906 l
252.609 375.000 l
247.015 375.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
314.797 349.000 m
314.797 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
316.171 374.937 m
316.171 373.281 l
316.796 373.281 l
316.812 373.421 l
316.828 373.859 l
316.828 374.130 316.987 374.362 317.304 374.554  c
317.622 374.747 318.015 374.843 318.484 374.843  c
319.036 374.843 319.481 374.625 319.820 374.187  c
320.158 373.750 320.328 373.171 320.328 372.453  c
320.328 371.744 320.106 371.190 319.664 370.789  c
319.221 370.388 318.604 370.187 317.812 370.187  c
317.031 370.187 l
317.031 369.796 l
317.453 369.796 l
319.224 369.796 320.109 369.083 320.109 367.656  c
320.109 366.385 319.552 365.750 318.437 365.750  c
317.947 365.750 317.520 365.854 317.156 366.062  c
317.020 366.145 316.927 366.484 316.875 367.078  c
316.875 367.171 l
316.250 367.171 l
316.250 365.734 l
316.927 365.484 317.692 365.359 318.546 365.359  c
319.411 365.359 320.096 365.554 320.601 365.945  c
321.106 366.335 321.359 366.864 321.359 367.531  c
321.359 368.645 320.703 369.442 319.390 369.921  c
320.192 370.130 320.768 370.427 321.117 370.812  c
321.466 371.197 321.640 371.734 321.640 372.421  c
321.640 373.286 321.359 373.971 320.796 374.476  c
320.234 374.981 319.468 375.234 318.500 375.234  c
317.614 375.234 316.838 375.135 316.171 374.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
384.396 349.000 m
384.396 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
389.703 372.343 m
385.390 372.343 l
385.390 371.718 l
390.093 365.453 l
390.796 365.453 l
390.796 371.390 l
392.046 371.390 l
392.046 372.343 l
390.796 372.343 l
390.796 373.359 l
390.796 373.859 390.835 374.182 390.914 374.328  c
390.992 374.474 391.161 374.552 391.421 374.562  c
391.859 374.593 l
391.968 374.609 l
391.968 375.000 l
388.375 375.000 l
388.375 374.609 l
388.484 374.593 l
389.140 374.562 l
389.369 374.552 389.520 374.468 389.593 374.312  c
389.666 374.156 389.703 373.838 389.703 373.359  c
389.703 372.343 l
h
386.093 371.390 m
389.703 371.390 l
389.703 366.609 l
386.093 371.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
453.995 349.000 m
453.995 354.540 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
455.484 375.015 m
455.484 373.437 l
456.109 373.437 l
456.125 373.578 l
456.140 374.062 l
456.161 374.583 456.567 374.843 457.359 374.843  c
457.942 374.843 458.406 374.614 458.750 374.156  c
459.093 373.697 459.265 373.078 459.265 372.296  c
459.265 371.401 459.000 370.760 458.468 370.375  c
457.937 369.989 457.067 369.796 455.859 369.796  c
455.640 369.796 l
455.640 365.609 l
460.375 365.609 l
460.375 366.703 l
456.031 366.703 l
456.031 369.328 l
456.609 369.328 l
459.255 369.328 460.578 370.333 460.578 372.343  c
460.578 373.250 460.273 373.958 459.664 374.468  c
459.054 374.979 458.213 375.234 457.140 375.234  c
456.609 375.234 456.057 375.161 455.484 375.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
140.799 349.000 m
140.799 351.770 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
210.398 349.000 m
210.398 351.770 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
279.997 349.000 m
279.997 351.770 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
349.596 349.000 m
349.596 351.770 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
419.196 349.000 m
419.196 351.770 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
106.000 349.000 m
106.000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 142 56 62 rc
newpath
8.95312 163.468 m
10.0364 162.718 11.3906 161.593 13.0156 160.093  c
13.3437 159.781 l
13.2812 158.416 13.1093 156.979 12.8281 155.468  c
12.5468 153.958 12.2552 152.864 11.9531 152.187  c
11.6927 151.635 11.4869 151.309 11.3359 151.210  c
11.1849 151.112 10.7812 151.046 10.1250 151.015  c
9.92187 151.000 l
10.0156 150.453 l
13.2031 150.453 l
14.1197 152.609 14.6458 155.130 14.7812 158.015  c
15.8593 156.640 l
16.9322 155.276 17.6458 154.278 18.0000 153.648  c
18.3541 153.018 18.5312 152.437 18.5312 151.906  c
18.5312 151.354 18.2968 150.869 17.8281 150.453  c
20.0000 150.453 l
20.1354 150.713 20.2031 150.963 20.2031 151.203  c
20.2031 151.703 20.0390 152.224 19.7109 152.765  c
19.3828 153.307 18.7031 154.197 17.6718 155.437  c
14.3281 159.421 l
13.0052 161.015 12.0156 162.364 11.3593 163.468  c
8.95312 163.468 l
h
f
newpath
35.7187 159.890 m
35.2187 160.109 34.7552 160.218 34.3281 160.218  c
33.6718 160.218 33.1432 160.023 32.7421 159.632  c
32.3411 159.242 32.1406 158.734 32.1406 158.109  c
32.1406 157.859 32.1718 157.557 32.2343 157.203  c
33.4531 151.171 l
31.9843 151.171 l
32.1250 150.453 l
33.5781 150.453 l
33.9218 148.718 l
35.7500 148.234 l
35.3125 150.453 l
37.7500 150.453 l
37.6093 151.171 l
35.1718 151.171 l
33.9218 157.453 l
33.8593 157.776 33.8281 158.078 33.8281 158.359  c
33.8281 159.057 34.1562 159.406 34.8125 159.406  c
35.1041 159.406 35.4531 159.328 35.8593 159.171  c
35.7187 159.890 l
h
f
[ 1.00000 0 0 1.00000 23.0000 146.000 ] concat
newpath
3.76510 16.5664 m
3.49127 17.0000 l
1.16375 15.5548 0 12.6648 0 8.33000  c
0 8.50000 l
0 8.67000 l
0 4.31997 1.16375 1.42997 3.49127 0  c
3.76510 0.410738 l
2.73064 1.29306 2.03847 2.53288 1.68859 4.13020  c
1.47561 5.11901 1.36912 6.51894 1.36912 8.33000  c
1.36912 8.50000 l
1.36912 8.67000 l
1.36912 10.4658 1.47561 11.8581 1.68859 12.8469  c
2.03847 14.4443 2.73064 15.6841 3.76510 16.5664  c
h
f
[ 1.00000 0 0 1.00000 -23.0000 -146.000 ] concat
[ 1.00000 0 0 1.00000 40.0000 146.000 ] concat
newpath
0 0.433558 m
0.273826 0 l
2.60134 1.44519 3.76510 4.33519 3.76510 8.67000  c
3.76510 8.50000 l
3.76510 8.33000 l
3.76510 12.6800 2.60134 15.5700 0.273826 17.0000  c
0 16.5892 l
1.03445 15.7069 1.72662 14.4671 2.07651 12.8698  c
2.28948 11.8809 2.39597 10.4810 2.39597 8.67000  c
2.39597 8.50000 l
2.39597 8.33000 l
2.39597 6.53416 2.28948 5.14183 2.07651 4.15302  c
1.72662 2.55570 1.03445 1.31588 0 0.433558  c
h
f
[ 1.00000 0 0 1.00000 -40.0000 -146.000 ] concat
newpath
17.0937 199.484 m
15.3333 200.640 13.7864 201.218 12.4531 201.218  c
11.5572 201.218 10.8437 200.916 10.3125 200.312  c
9.78125 199.708 9.51562 198.895 9.51562 197.875  c
9.51562 196.177 10.1119 194.645 11.3046 193.281  c
12.4974 191.916 13.8437 191.234 15.3437 191.234  c
15.9166 191.234 16.3906 191.406 16.7656 191.750  c
17.1406 192.093 17.3281 192.526 17.3281 193.046  c
17.3281 194.234 16.7864 195.208 15.7031 195.968  c
14.6197 196.729 13.1666 197.151 11.3437 197.234  c
11.3281 197.687 l
11.3281 199.375 12.0312 200.218 13.4375 200.218  c
14.6145 200.218 15.8854 199.713 17.2500 198.703  c
17.0937 199.484 l
h
11.3750 196.734 m
12.7083 196.630 13.7526 196.283 14.5078 195.695  c
15.2630 195.106 15.6406 194.349 15.6406 193.421  c
15.6406 192.484 15.2604 192.015 14.5000 192.015  c
13.7187 192.015 13.0338 192.458 12.4453 193.343  c
11.8567 194.229 11.5000 195.359 11.3750 196.734  c
h
f
q
17 168 8 14 rc
newpath
28.6250 176.156 m
19.3750 176.156 l
19.3750 175.437 l
28.6250 175.437 l
28.6250 176.156 l
h
f
Q
newpath
32.7031 176.875 m
32.6406 176.500 32.5833 176.169 32.5312 175.882  c
32.4791 175.596 32.4192 175.346 32.3515 175.132  c
32.2838 174.919 32.2031 174.726 32.1093 174.554  c
32.0156 174.382 31.9010 174.229 31.7656 174.093  c
31.5677 173.895 31.3619 173.755 31.1484 173.671  c
30.9349 173.588 30.7135 173.546 30.4843 173.546  c
30.2552 173.546 30.0546 173.632 29.8828 173.804  c
29.7109 173.976 29.5729 174.171 29.4687 174.390  c
29.3125 174.682 29.2005 175.028 29.1328 175.429  c
29.0651 175.830 29.0312 176.229 29.0312 176.625  c
29.0312 177.062 29.0625 177.492 29.1250 177.914  c
29.1875 178.335 29.2812 178.671 29.4062 178.921  c
29.5416 179.192 29.7161 179.403 29.9296 179.554  c
30.1432 179.705 30.3593 179.781 30.5781 179.781  c
30.7343 179.781 30.8932 179.742 31.0546 179.664  c
31.2161 179.585 31.3697 179.479 31.5156 179.343  c
31.6614 179.197 31.8072 178.989 31.9531 178.718  c
32.0989 178.447 32.2187 178.177 32.3125 177.906  c
32.7031 176.875 l
32.7031 176.875 l
h
35.6875 178.890 m
35.6875 179.036 35.6614 179.184 35.6093 179.335  c
35.5572 179.487 35.4869 179.627 35.3984 179.757  c
35.3099 179.888 35.2031 179.994 35.0781 180.078  c
34.9531 180.161 34.8229 180.203 34.6875 180.203  c
34.5312 180.203 34.3854 180.140 34.2500 180.015  c
34.1145 179.890 33.9895 179.734 33.8750 179.546  c
33.7604 179.359 33.6562 179.151 33.5625 178.921  c
33.4687 178.692 33.3854 178.474 33.3125 178.265  c
33.2291 178.411 33.1354 178.588 33.0312 178.796  c
32.9270 179.005 32.7656 179.218 32.5468 179.437  c
32.3072 179.677 31.9843 179.872 31.5781 180.023  c
31.1718 180.174 30.7812 180.250 30.4062 180.250  c
30.0520 180.250 29.7031 180.179 29.3593 180.039  c
29.0156 179.898 28.7291 179.713 28.5000 179.484  c
27.8854 178.869 27.5781 177.974 27.5781 176.796  c
27.5781 176.161 27.6484 175.609 27.7890 175.140  c
27.9296 174.671 28.1770 174.260 28.5312 173.906  c
28.6979 173.739 28.8593 173.601 29.0156 173.492  c
29.1718 173.382 29.3359 173.289 29.5078 173.210  c
29.6796 173.132 29.8593 173.078 30.0468 173.046  c
30.2343 173.015 30.4479 173.000 30.6875 173.000  c
30.9687 173.000 31.2369 173.057 31.4921 173.171  c
31.7474 173.286 31.9791 173.455 32.1875 173.679  c
32.3958 173.903 32.5781 174.179 32.7343 174.507  c
32.8906 174.835 33.0000 175.224 33.0625 175.671  c
33.0937 175.671 l
33.9843 173.187 l
35.2187 173.187 l
33.6093 177.625 l
33.6406 177.802 33.6849 177.984 33.7421 178.171  c
33.7994 178.359 33.8750 178.531 33.9687 178.687  c
34.0625 178.843 34.1718 178.971 34.2968 179.070  c
34.4218 179.169 34.5677 179.218 34.7343 179.218  c
34.7968 179.218 34.8619 179.197 34.9296 179.156  c
34.9974 179.114 35.0572 179.067 35.1093 179.015  c
35.1822 178.942 35.2500 178.841 35.3125 178.710  c
35.3750 178.580 35.4218 178.369 35.4531 178.078  c
35.7031 178.078 l
35.6875 178.890 l
h
f
newpath
42.3750 189.343 m
41.3750 189.895 40.4010 190.171 39.4531 190.171  c
38.7447 190.171 38.1901 189.942 37.7890 189.484  c
37.3880 189.026 37.1875 188.395 37.1875 187.593  c
37.1875 186.239 37.6588 185.036 38.6015 183.984  c
39.5442 182.932 40.6197 182.406 41.8281 182.406  c
42.3802 182.406 42.9531 182.510 43.5468 182.718  c
43.1718 184.593 l
42.5000 184.593 l
42.5156 184.468 l
42.5260 184.375 42.5468 184.229 42.5781 184.031  c
42.5989 183.937 42.6093 183.854 42.6093 183.781  c
42.6093 183.250 42.1406 182.984 41.2031 182.984  c
40.4739 182.984 39.8593 183.398 39.3593 184.226  c
38.8593 185.054 38.6093 186.083 38.6093 187.312  c
38.6093 188.697 39.1875 189.390 40.3437 189.390  c
40.8333 189.390 41.5468 189.187 42.4843 188.781  c
42.3750 189.343 l
h
f
newpath
47.4375 179.921 m
47.0625 180.088 46.7031 180.171 46.3593 180.171  c
45.8593 180.171 45.4505 180.020 45.1328 179.718  c
44.8151 179.416 44.6562 179.020 44.6562 178.531  c
44.6562 178.343 44.6875 178.109 44.7500 177.828  c
45.6875 173.125 l
44.5312 173.125 l
44.6406 172.578 l
45.7812 172.578 l
46.0625 171.234 l
47.4843 170.843 l
47.1406 172.578 l
49.0312 172.578 l
48.9062 173.125 l
47.0312 173.125 l
46.0468 178.015 l
45.9947 178.265 45.9687 178.505 45.9687 178.734  c
45.9687 179.276 46.2291 179.546 46.7500 179.546  c
46.9791 179.546 47.2500 179.479 47.5625 179.343  c
47.4375 179.921 l
h
f
newpath
6.50000 164.500 m
50.5000 164.500 l
S
Q
cliprestore
newpath
0 0 m
0 390.000 l
458.000 390.000 l
458.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
106.000 346.000 m
100.460 346.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
70.9062 357.234 m
69.9375 357.234 69.1562 356.783 68.5625 355.882  c
67.9687 354.981 67.6718 353.796 67.6718 352.328  c
67.6718 350.817 67.9687 349.614 68.5625 348.718  c
69.1562 347.822 69.9531 347.375 70.9531 347.375  c
71.9531 347.375 72.7526 347.822 73.3515 348.718  c
73.9505 349.614 74.2500 350.812 74.2500 352.312  c
74.2500 353.822 73.9505 355.020 73.3515 355.906  c
72.7526 356.791 71.9375 357.234 70.9062 357.234  c
h
70.9218 356.843 m
72.2552 356.906 72.9218 355.369 72.9218 352.234  c
72.9218 349.244 72.2656 347.750 70.9531 347.750  c
69.6510 347.750 69.0000 349.265 69.0000 352.296  c
69.0000 355.265 69.6406 356.781 70.9218 356.843  c
h
75.9375 357.000 m
75.9375 355.437 l
77.5000 355.437 l
77.5000 357.000 l
75.9375 357.000 l
h
83.7968 352.406 m
83.2031 353.229 82.4479 353.640 81.5312 353.640  c
80.7083 353.640 80.0390 353.364 79.5234 352.812  c
79.0078 352.260 78.7500 351.552 78.7500 350.687  c
78.7500 349.750 79.0416 348.960 79.6250 348.320  c
80.2083 347.679 80.9375 347.359 81.8125 347.359  c
82.8750 347.359 83.6927 347.776 84.2656 348.609  c
84.8385 349.442 85.1250 350.625 85.1250 352.156  c
85.1250 353.770 84.7942 355.020 84.1328 355.906  c
83.4713 356.791 82.5416 357.234 81.3437 357.234  c
80.5625 357.234 79.8697 357.093 79.2656 356.812  c
79.2656 355.312 l
79.8906 355.312 l
79.9062 355.453 l
79.9375 355.906 l
79.9583 356.187 80.1093 356.414 80.3906 356.585  c
80.6718 356.757 81.0260 356.843 81.4531 356.843  c
82.1927 356.843 82.7682 356.455 83.1796 355.679  c
83.5911 354.903 83.7968 353.812 83.7968 352.406  c
h
83.7500 351.062 m
83.7500 350.093 83.5546 349.302 83.1640 348.687  c
82.7734 348.072 82.2708 347.765 81.6562 347.765  c
80.5520 347.765 80.0000 348.682 80.0000 350.515  c
80.0000 352.296 80.5729 353.187 81.7187 353.187  c
82.3437 353.187 82.8385 352.994 83.2031 352.609  c
83.5677 352.224 83.7500 351.708 83.7500 351.062  c
h
91.7968 352.406 m
91.2031 353.229 90.4479 353.640 89.5312 353.640  c
88.7083 353.640 88.0390 353.364 87.5234 352.812  c
87.0078 352.260 86.7500 351.552 86.7500 350.687  c
86.7500 349.750 87.0416 348.960 87.6250 348.320  c
88.2083 347.679 88.9375 347.359 89.8125 347.359  c
90.8750 347.359 91.6927 347.776 92.2656 348.609  c
92.8385 349.442 93.1250 350.625 93.1250 352.156  c
93.1250 353.770 92.7942 355.020 92.1328 355.906  c
91.4713 356.791 90.5416 357.234 89.3437 357.234  c
88.5625 357.234 87.8697 357.093 87.2656 356.812  c
87.2656 355.312 l
87.8906 355.312 l
87.9062 355.453 l
87.9375 355.906 l
87.9583 356.187 88.1093 356.414 88.3906 356.585  c
88.6718 356.757 89.0260 356.843 89.4531 356.843  c
90.1927 356.843 90.7682 356.455 91.1796 355.679  c
91.5911 354.903 91.7968 353.812 91.7968 352.406  c
h
91.7500 351.062 m
91.7500 350.093 91.5546 349.302 91.1640 348.687  c
90.7734 348.072 90.2708 347.765 89.6562 347.765  c
88.5520 347.765 88.0000 348.682 88.0000 350.515  c
88.0000 352.296 88.5729 353.187 89.7187 353.187  c
90.3437 353.187 90.8385 352.994 91.2031 352.609  c
91.5677 352.224 91.7500 351.708 91.7500 351.062  c
h
99.7968 352.406 m
99.2031 353.229 98.4479 353.640 97.5312 353.640  c
96.7083 353.640 96.0390 353.364 95.5234 352.812  c
95.0078 352.260 94.7500 351.552 94.7500 350.687  c
94.7500 349.750 95.0416 348.960 95.6250 348.320  c
96.2083 347.679 96.9375 347.359 97.8125 347.359  c
98.8750 347.359 99.6927 347.776 100.265 348.609  c
100.838 349.442 101.125 350.625 101.125 352.156  c
101.125 353.770 100.794 355.020 100.132 355.906  c
99.4713 356.791 98.5416 357.234 97.3437 357.234  c
96.5625 357.234 95.8697 357.093 95.2656 356.812  c
95.2656 355.312 l
95.8906 355.312 l
95.9062 355.453 l
95.9375 355.906 l
95.9583 356.187 96.1093 356.414 96.3906 356.585  c
96.6718 356.757 97.0260 356.843 97.4531 356.843  c
98.1927 356.843 98.7682 356.455 99.1796 355.679  c
99.5911 354.903 99.7968 353.812 99.7968 352.406  c
h
99.7500 351.062 m
99.7500 350.093 99.5546 349.302 99.1640 348.687  c
98.7734 348.072 98.2708 347.765 97.6562 347.765  c
96.5520 347.765 96.0000 348.682 96.0000 350.515  c
96.0000 352.296 96.5729 353.187 97.7187 353.187  c
98.3437 353.187 98.8385 352.994 99.2031 352.609  c
99.5677 352.224 99.7500 351.708 99.7500 351.062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 263.857 m
100.460 263.857 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
98.5781 264.515 m
98.5781 272.359 l
98.6250 272.984 l
98.6354 273.234 98.7057 273.398 98.8359 273.476  c
98.9661 273.554 99.2343 273.593 99.6406 273.593  c
100.390 273.609 l
100.390 274.000 l
95.5312 274.000 l
95.5312 273.609 l
96.2656 273.593 l
96.6718 273.593 96.9401 273.554 97.0703 273.476  c
97.2005 273.398 97.2760 273.234 97.2968 272.984  c
97.3281 272.359 l
97.3281 266.531 l
97.2968 265.890 l
97.2968 265.588 97.2083 265.437 97.0312 265.437  c
96.9062 265.437 96.6145 265.479 96.1562 265.562  c
95.5312 265.671 l
95.5312 265.281 l
98.5781 264.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 181.714 m
100.460 181.714 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
71.5781 182.515 m
71.5781 190.359 l
71.6250 190.984 l
71.6354 191.234 71.7057 191.398 71.8359 191.476  c
71.9661 191.554 72.2343 191.593 72.6406 191.593  c
73.3906 191.609 l
73.3906 192.000 l
68.5312 192.000 l
68.5312 191.609 l
69.2656 191.593 l
69.6718 191.593 69.9401 191.554 70.0703 191.476  c
70.2005 191.398 70.2760 191.234 70.2968 190.984  c
70.3281 190.359 l
70.3281 184.531 l
70.2968 183.890 l
70.2968 183.588 70.2083 183.437 70.0312 183.437  c
69.9062 183.437 69.6145 183.479 69.1562 183.562  c
68.5312 183.671 l
68.5312 183.281 l
71.5781 182.515 l
h
75.9375 192.000 m
75.9375 190.437 l
77.5000 190.437 l
77.5000 192.000 l
75.9375 192.000 l
h
81.9062 192.234 m
80.9375 192.234 80.1562 191.783 79.5625 190.882  c
78.9687 189.981 78.6718 188.796 78.6718 187.328  c
78.6718 185.817 78.9687 184.614 79.5625 183.718  c
80.1562 182.822 80.9531 182.375 81.9531 182.375  c
82.9531 182.375 83.7526 182.822 84.3515 183.718  c
84.9505 184.614 85.2500 185.812 85.2500 187.312  c
85.2500 188.822 84.9505 190.020 84.3515 190.906  c
83.7526 191.791 82.9375 192.234 81.9062 192.234  c
h
81.9218 191.843 m
83.2552 191.906 83.9218 190.369 83.9218 187.234  c
83.9218 184.244 83.2656 182.750 81.9531 182.750  c
80.6510 182.750 80.0000 184.265 80.0000 187.296  c
80.0000 190.265 80.6406 191.781 81.9218 191.843  c
h
89.9062 192.234 m
88.9375 192.234 88.1562 191.783 87.5625 190.882  c
86.9687 189.981 86.6718 188.796 86.6718 187.328  c
86.6718 185.817 86.9687 184.614 87.5625 183.718  c
88.1562 182.822 88.9531 182.375 89.9531 182.375  c
90.9531 182.375 91.7526 182.822 92.3515 183.718  c
92.9505 184.614 93.2500 185.812 93.2500 187.312  c
93.2500 188.822 92.9505 190.020 92.3515 190.906  c
91.7526 191.791 90.9375 192.234 89.9062 192.234  c
h
89.9218 191.843 m
91.2552 191.906 91.9218 190.369 91.9218 187.234  c
91.9218 184.244 91.2656 182.750 89.9531 182.750  c
88.6510 182.750 88.0000 184.265 88.0000 187.296  c
88.0000 190.265 88.6406 191.781 89.9218 191.843  c
h
98.5781 182.515 m
98.5781 190.359 l
98.6250 190.984 l
98.6354 191.234 98.7057 191.398 98.8359 191.476  c
98.9661 191.554 99.2343 191.593 99.6406 191.593  c
100.390 191.609 l
100.390 192.000 l
95.5312 192.000 l
95.5312 191.609 l
96.2656 191.593 l
96.6718 191.593 96.9401 191.554 97.0703 191.476  c
97.2005 191.398 97.2760 191.234 97.2968 190.984  c
97.3281 190.359 l
97.3281 184.531 l
97.2968 183.890 l
97.2968 183.588 97.2083 183.437 97.0312 183.437  c
96.9062 183.437 96.6145 183.479 96.1562 183.562  c
95.5312 183.671 l
95.5312 183.281 l
98.5781 182.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 99.5714 m
100.460 99.5714 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
71.5781 100.515 m
71.5781 108.359 l
71.6250 108.984 l
71.6354 109.234 71.7057 109.398 71.8359 109.476  c
71.9661 109.554 72.2343 109.593 72.6406 109.593  c
73.3906 109.609 l
73.3906 110.000 l
68.5312 110.000 l
68.5312 109.609 l
69.2656 109.593 l
69.6718 109.593 69.9401 109.554 70.0703 109.476  c
70.2005 109.398 70.2760 109.234 70.2968 108.984  c
70.3281 108.359 l
70.3281 102.531 l
70.2968 101.890 l
70.2968 101.588 70.2083 101.437 70.0312 101.437  c
69.9062 101.437 69.6145 101.479 69.1562 101.562  c
68.5312 101.671 l
68.5312 101.281 l
71.5781 100.515 l
h
75.9375 110.000 m
75.9375 108.437 l
77.5000 108.437 l
77.5000 110.000 l
75.9375 110.000 l
h
81.9062 110.234 m
80.9375 110.234 80.1562 109.783 79.5625 108.882  c
78.9687 107.981 78.6718 106.796 78.6718 105.328  c
78.6718 103.817 78.9687 102.614 79.5625 101.718  c
80.1562 100.822 80.9531 100.375 81.9531 100.375  c
82.9531 100.375 83.7526 100.822 84.3515 101.718  c
84.9505 102.614 85.2500 103.812 85.2500 105.312  c
85.2500 106.822 84.9505 108.020 84.3515 108.906  c
83.7526 109.791 82.9375 110.234 81.9062 110.234  c
h
81.9218 109.843 m
83.2552 109.906 83.9218 108.369 83.9218 105.234  c
83.9218 102.244 83.2656 100.750 81.9531 100.750  c
80.6510 100.750 80.0000 102.265 80.0000 105.296  c
80.0000 108.265 80.6406 109.781 81.9218 109.843  c
h
89.9062 110.234 m
88.9375 110.234 88.1562 109.783 87.5625 108.882  c
86.9687 107.981 86.6718 106.796 86.6718 105.328  c
86.6718 103.817 86.9687 102.614 87.5625 101.718  c
88.1562 100.822 88.9531 100.375 89.9531 100.375  c
90.9531 100.375 91.7526 100.822 92.3515 101.718  c
92.9505 102.614 93.2500 103.812 93.2500 105.312  c
93.2500 106.822 92.9505 108.020 92.3515 108.906  c
91.7526 109.791 90.9375 110.234 89.9062 110.234  c
h
89.9218 109.843 m
91.2552 109.906 91.9218 108.369 91.9218 105.234  c
91.9218 102.244 91.2656 100.750 89.9531 100.750  c
88.6510 100.750 88.0000 102.265 88.0000 105.296  c
88.0000 108.265 88.6406 109.781 89.9218 109.843  c
h
95.0156 110.000 m
95.0156 109.375 l
95.3802 108.322 95.9427 107.437 96.7031 106.718  c
97.3906 106.093 l
98.1614 105.364 98.6770 104.786 98.9375 104.359  c
99.1979 103.932 99.3281 103.442 99.3281 102.890  c
99.3281 102.244 99.1692 101.729 98.8515 101.343  c
98.5338 100.958 98.1145 100.765 97.5937 100.765  c
97.0208 100.765 96.5364 100.921 96.1406 101.234  c
95.9947 101.349 95.9010 101.770 95.8593 102.500  c
95.8593 102.656 l
95.2187 102.656 l
95.2187 100.937 l
96.1354 100.552 96.9791 100.359 97.7500 100.359  c
98.5937 100.359 99.2890 100.599 99.8359 101.078  c
100.382 101.557 100.656 102.161 100.656 102.890  c
100.656 103.880 100.041 104.796 98.8125 105.640  c
98.0468 106.171 l
96.8281 107.005 96.1614 107.916 96.0468 108.906  c
100.609 108.906 l
100.609 110.000 l
95.0156 110.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 17.4285 m
100.460 17.4285 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
71.5781 18.5156 m
71.5781 26.3593 l
71.6250 26.9843 l
71.6354 27.2343 71.7057 27.3984 71.8359 27.4765  c
71.9661 27.5546 72.2343 27.5937 72.6406 27.5937  c
73.3906 27.6093 l
73.3906 28.0000 l
68.5312 28.0000 l
68.5312 27.6093 l
69.2656 27.5937 l
69.6718 27.5937 69.9401 27.5546 70.0703 27.4765  c
70.2005 27.3984 70.2760 27.2343 70.2968 26.9843  c
70.3281 26.3593 l
70.3281 20.5312 l
70.2968 19.8906 l
70.2968 19.5885 70.2083 19.4375 70.0312 19.4375  c
69.9062 19.4375 69.6145 19.4791 69.1562 19.5625  c
68.5312 19.6718 l
68.5312 19.2812 l
71.5781 18.5156 l
h
75.9375 28.0000 m
75.9375 26.4375 l
77.5000 26.4375 l
77.5000 28.0000 l
75.9375 28.0000 l
h
81.9062 28.2343 m
80.9375 28.2343 80.1562 27.7838 79.5625 26.8828  c
78.9687 25.9817 78.6718 24.7968 78.6718 23.3281  c
78.6718 21.8177 78.9687 20.6145 79.5625 19.7187  c
80.1562 18.8229 80.9531 18.3750 81.9531 18.3750  c
82.9531 18.3750 83.7526 18.8229 84.3515 19.7187  c
84.9505 20.6145 85.2500 21.8125 85.2500 23.3125  c
85.2500 24.8229 84.9505 26.0208 84.3515 26.9062  c
83.7526 27.7916 82.9375 28.2343 81.9062 28.2343  c
h
81.9218 27.8437 m
83.2552 27.9062 83.9218 26.3697 83.9218 23.2343  c
83.9218 20.2447 83.2656 18.7500 81.9531 18.7500  c
80.6510 18.7500 80.0000 20.2656 80.0000 23.2968  c
80.0000 26.2656 80.6406 27.7812 81.9218 27.8437  c
h
89.9062 28.2343 m
88.9375 28.2343 88.1562 27.7838 87.5625 26.8828  c
86.9687 25.9817 86.6718 24.7968 86.6718 23.3281  c
86.6718 21.8177 86.9687 20.6145 87.5625 19.7187  c
88.1562 18.8229 88.9531 18.3750 89.9531 18.3750  c
90.9531 18.3750 91.7526 18.8229 92.3515 19.7187  c
92.9505 20.6145 93.2500 21.8125 93.2500 23.3125  c
93.2500 24.8229 92.9505 26.0208 92.3515 26.9062  c
91.7526 27.7916 90.9375 28.2343 89.9062 28.2343  c
h
89.9218 27.8437 m
91.2552 27.9062 91.9218 26.3697 91.9218 23.2343  c
91.9218 20.2447 91.2656 18.7500 89.9531 18.7500  c
88.6510 18.7500 88.0000 20.2656 88.0000 23.2968  c
88.0000 26.2656 88.6406 27.7812 89.9218 27.8437  c
h
95.1718 27.9375 m
95.1718 26.2812 l
95.7968 26.2812 l
95.8125 26.4218 l
95.8281 26.8593 l
95.8281 27.1302 95.9869 27.3619 96.3046 27.5546  c
96.6224 27.7474 97.0156 27.8437 97.4843 27.8437  c
98.0364 27.8437 98.4817 27.6250 98.8203 27.1875  c
99.1588 26.7500 99.3281 26.1718 99.3281 25.4531  c
99.3281 24.7447 99.1067 24.1901 98.6640 23.7890  c
98.2213 23.3880 97.6041 23.1875 96.8125 23.1875  c
96.0312 23.1875 l
96.0312 22.7968 l
96.4531 22.7968 l
98.2239 22.7968 99.1093 22.0833 99.1093 20.6562  c
99.1093 19.3854 98.5520 18.7500 97.4375 18.7500  c
96.9479 18.7500 96.5208 18.8541 96.1562 19.0625  c
96.0208 19.1458 95.9270 19.4843 95.8750 20.0781  c
95.8750 20.1718 l
95.2500 20.1718 l
95.2500 18.7343 l
95.9270 18.4843 96.6927 18.3593 97.5468 18.3593  c
98.4114 18.3593 99.0963 18.5546 99.6015 18.9453  c
100.106 19.3359 100.359 19.8645 100.359 20.5312  c
100.359 21.6458 99.7031 22.4427 98.3906 22.9218  c
99.1927 23.1302 99.7682 23.4270 100.117 23.8125  c
100.466 24.1979 100.640 24.7343 100.640 25.4218  c
100.640 26.2864 100.359 26.9713 99.7968 27.4765  c
99.2343 27.9817 98.4687 28.2343 97.5000 28.2343  c
96.6145 28.2343 95.8385 28.1354 95.1718 27.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 304.928 m
103.230 304.928 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 222.785 m
103.230 222.785 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 140.642 m
103.230 140.642 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 58.5000 m
103.230 58.5000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 468 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

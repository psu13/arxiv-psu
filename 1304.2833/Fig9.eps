%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig9.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Oscar B
%%CreationDate: 4/9/13
%%BoundingBox: 0 0 237 381
%%HiResBoundingBox: 0 0 236.4346 380.2408
%%CropBox: 0 0 236.4346 380.2408
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 80 128 8
%%BeginData: 5182 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0BFF7DFD4AFF7D7D52FFFF277DFD47FF7D7DA87DFFFFFFF852FD
%46FF7D52FF7DA8FFFFA82752FD46FFA87DA87DA8FFFFFF7DFD4FFFA8A8FD
%46FFA87D7D7D527DFFFF7DFD48FFA8A87DA8A8FFFF7DA8FD48FF7D7DFD04
%FF7DFD49FF7DA8FD04FF7DA8FD48FF52A87DFFFFFF7DFD48FFA8A8A8FD04
%FF7DA8FD4EFF7DFD4FFFA8A8FD4EFF7DFD05FFA8FD49FF7DA8FFFFA8527D
%A8FD48FF7DFFFFA8FFA87DFD49FF7DA8A87DFD48FF7DA8A8FF7DFF7D7DFD
%47FF7D5252FFFF527DFF7DFD48FF527DFFFF2727FD49FFA8FFA8FFFFA87D
%52A8FD4CFF7DFFA87DFD4CFF7DA8FFA852A8FD05FFA8A8FD43FF7DFFFFFF
%A852FD05FF7D7DFFA87D7DFD3FFF7DA8FFFFFF7D52A8FFFFFF52A87DA87D
%FD40FF7DFD05FFA852FD04FFA8FD43FFA8A8FD05FF7D52FD47FF7DFD07FF
%A852FD06FFA8A8FD3EFFA8A8FD07FF7D52FD04FF7D7D7DA8FD3DFF7DFD09
%FFA852FD04FF7D7D7DFD3DFF7DA8FD09FF7D52FD04FF7DA8A8FD3CFF7DFD
%0BFFA852FD06FFA8A8FD3AFF7DA8FD0BFF7D52FD05FFA85252FD39FF7DFD
%0DFF7D52FD04FF7D7D52A8FD33FFA87D527D7DA8A8FD0DFF7D52FFFFFFA8
%7DFD35FFA87DFFA8A87DFD0FFF7D52FD04FFA8FD34FFA87D527DA8A8A8FD
%0FFF7D52FFFFA87DFD39FF7DFD11FF7D52FD3CFF7DA8FD11FF7D52FD07FF
%A87DA8FD2EFFA87DFF7DFD13FF7D52FD04FF7DFFFFA85252FD2DFF7D7DA8
%A8A8FD13FF7D52FFFFA852A87D52A8A8A8FD2CFFA87DFF7DFD15FF7D52FF
%FFA87D7DFFFFFF7D7DA8FD2AFF7D7DA8A8A8FD15FF7D52FD07FF7D52FD2E
%FF7DFD17FF7D52FD36FFA8A8FD17FF7D52FD31FFA8A8FFFF7DFD19FF7D52
%FD31FF527DA87DA8FD19FF7D52FD30FF7D7DA87DFD1BFF7D52FD32FF7DA8
%FD1BFF7D52FD31FF7DFD1DFF7D52FD30FFA8A8FD1DFF7D52FD2FFF7DFD1F
%FF7D52FD2EFFA8A8FD1FFF7D52FD2DFF7DFD21FF7D52FD2CFF7DA8FD21FF
%7D52FD2BFF7DFD23FF7D7DFD2AFF7DA8FD23FF7D52FD08FFA87DA8FD1EFF
%7DFD25FF7D7DFD07FF7D7D7DFD1EFFA8A8FD09FFA8FD08FFA87DA8FD10FF
%7D52FD06FF527D52FD1EFF7DFD09FF527DFFFFA8FFA8FFFFFF52A87DFD11
%FF7D7DFD04FF7DFF7DA8FD1EFFA8A8FD08FF52A8FFFFFD047DFFA87DA87D
%FD12FF7D7DFFFF7D7DFD21FF7DFD09FF52A8FFFFA8A87DA8FFFF7DA87DFD
%13FF7D7DFFA87DFD21FF7D7DFD08A87D7DA8A8A87DA87DA8A87D527DFD13
%A8FF27277DFD12A87DF8527DFD0CFF7DFD07A87DA8A8A87DFD1EA852F8FD
%13A87D27277DA8FD0BFF7DA8FD28FFA87DFD15FFA8FD0EFF7DFD28FFA87D
%A87D7DA8FD21FFA8A8FD26FFA87DFF7D527DFD0FFFA8A8A8FD10FF7DFD26
%FFA852FFFFA87D7DFD0FFF7D7D7DFD10FFA8A8FD24FF7D27FFFFFFA8FFA8
%FD0FFF52527DFD10FF7DFD24FFA852FD15FFA87D7D7DFD10FF7DA8FD22FF
%7D27FD16FFA87DFFA8FD10FF7DFD22FFA827FD17FFA8FFA8FD11FF7DA8FD
%20FFA827FD18FFA8527D7DFD10FF7DFD20FFA827FD1BFF7DFD11FFA8A8FD
%1EFF7D27FD1BFF7D7DFD11FF7DFD1EFFA852FD1CFF7DA8FD11FFA8A8FD1C
%FF7D27FD1DFF7DA87DFD10FF7DFD1CFFA852FFFFA87DFD2DFF7DA8FD1AFF
%7D27FFFFA852FD2AFF7D7D7DFF7DFD1AFFA827FFFF7DA8FD2AFF7D7DA8A8
%7D7DA8FD18FFA827FFFFA827FD2BFFA87D7D7DA87DFD18FFA827FFFFFF7D
%A852FD2BFFA87DA8FFA8A8FD16FF7D27FD04FFA8FF52A8FD2EFF7DFD16FF
%A852FD07FFA8A8FD2BFFA8A8FFA8A8FD14FF7D27FD07FF527DA8FD2BFFA8
%52FF7DFD14FFA852FD08FFA8A8FD2CFF7D7DA8A8A8FD12FF7D27FD37FFA8
%7DFF7DFD12FFA852FD05FF7DFFA8FD30FFA8A8FF7DA8FD10FFA852FD05FF
%277DFFA87DFD32FF7DFD10FFA852FD05FFA87D52A8FD2FFFA87DA8FF7D7D
%A8FD0EFFA852FD06FFA8A87DA8FD2FFFA8527D527D7DFD0EFFA852FD06FF
%7DA8FD32FF52A87DA8FFA8A8FD0CFFA827FD06FF7D7DFD33FFA85252527D
%7DFD0CFFA827FD07FFA8FD37FFA87D7DA8FD0AFFA827FD05FFA8FD3CFF7D
%FD0AFFA827FD05FF7D7DA8FD3BFF7DA8FD08FFA827FD05FF7D7D52A8FD3B
%FF7DFD08FFA827FFFFA8FFFFA87D52FD3DFFA8A8FD06FFA827FFFFFF52FF
%FFFFA8A8FD3DFF7DFD06FFA852FD04FFA8A8FD41FFA8A8FD04FFA827FD05
%FF7DFD42FF7DFD04FFA827FD05FF7DA852A8FD40FF7DA8FFFFA827FD06FF
%52527DA8FD40FF7DFFFFA827FD08FFA8A8FD41FF7DA8FF52FD46FF7D7D7D
%FFFFFFA87D52FD42FF7D7D7DA8A85252A8FFFFFF52F8FD44FFA8FFFFFF7D
%7DFD04FF527DFD47FFA8FFA8FD04FFA8A8FFFFFF7DA8A8FD48FF7DFFFFA8
%FD4CFF7DA8A87DFD4CFF7DFF7D7DA8FD4BFF7DA8FFA8FD4CFF7DFD4FFF7D
%A8FD4EFF7DFD4FFFA8A8FD4EFF7DFD4FFF7DA8FD4EFF7DFD4FFF7DA8FD4E
%FF7DFD4FFF7DA8FD4EFF7DFD4FFFA8A8FD4EFF7DFD4FFF7DA8FD42FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2013-04-09T15:34:17-05:00</xmp:CreateDate>
         <xmp:MetadataDate>2013-04-09T15:34:17-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2013-04-09T15:34:17-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>160</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACgAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q6lqNnpmnXWo30ghsrK&#xA;GS4upjUhIolLuxpvsqk4qwPXPNvmy5t9NudMik0RdSvrHT7O1voYpJ5TcsJrichHkQJFZBmQBq8w&#xA;wagXdVC/nPq/mDy/+SXmCS4m+vazLBLZpcWsTJVLqUxB+C8uBjtn5Ma7EbYqzHyJrdxrvkvRNXuY&#xA;3hu72ygluopFKsk5QCVSCAdpKjFU9xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoXVUWTTL&#xA;uNrMagrwyK1geFJwVIMR9QrH8f2fiNPHFXn1vHFZT2kUX5fTxXNrL9aswb7TjKsxT0vVUtdFy/pj&#xA;hy68fh6bYqyHzdd3l3+WXmG4vLKTTrl9Kv8A1LOV4pHSkEgFWhaSM8gOWzd/HFWVYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWDz22ot+Yl9rh0mSf6pY2ul6LIygKXuJ5HvZ/U34Ropi&#xA;B/aPFuINRiqcfmH/AMoB5m/7ZV9/1DPirIMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVY/+Yf8AygHmb/tlX3/UM+Kp7cXEFvBJcXEiw28KtJNNIwVERRVmZjQAACpJxVJdC87eWdbv&#xA;7yx03U7O7uLWTisdvcxTPJH6UchlCoSeIaXh8xiqe4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FUo8y+ZrLy/Zx3V1Bc3IlcRxxWkLTMWbYciKIgJIALMKkhRuQMVY75r81adqP5SeYdbkSTTrC&#xA;fSrowSXvpxc1mtyImXi7ikhkCpvUnt0xVGi/1a48+2dxaia58uS6Wv1We3blZyS3UrSyTyODwPpR&#xA;20Sx9WPrHj8PIhVk1vZwwS3MsYPO7kE01TX4xGkW3h8MS4qrYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUDq+jWuqpax3TSCK1uobwRIQFkkt29SISVBqqyhZKCnxKO22KsX83+VNGs/yf1by4&#xA;0RvNMsNFnggS6IlbjbW5MLFiB8SFFKsOhAIxVS023b8u0SzaR5fIztS0mkJd9ILHaGRzu1nX7Dtv&#xA;D0Y+nuirOwQRUbg9Diqlc3lpaoHuZ44EJoGkZUBNCaVYjsK4qq4q7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FUh8/wD/ACgnmT/tl3v/AFDviqdtHHLCY5FDxupV0YAqykUIIPUHFXn9u9z+W91H&#xA;Z3DvP+Xtw6x2d25LPosjmiwTsdzYsTSOQ/3P2W+ChVVPPOHlKfXr7TJuSS2tiJmaxuJJhavO7RND&#xA;PNBEVFx6PptxjdgPirWoxVfF5LZ302XU9b1K/bTeMgi9f6vDLcK5k9WVLcRNIORoI3dowABx6kqs&#xA;kxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIfP/8AygnmT/tl3v8A1DviqfL9kfLFVk8ENxDJ&#xA;BPGssEqlJYnAZGRhRlZTsQR1GKsHgnm/L6aOzvJGl8iSsI7G+kJZ9IdjRLe4c7myJ2ilP919h/g4&#xA;sqrI/Nen6tfaNLDpcsa3PVreaqxXMfEq9u8iD1IeYb4ZY/iRgG3AKlVLPIeu6jf281pdxzSfUmMR&#xA;ubjgtxHIlOVreIp2uIwynmlUlQrIp3xVleKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoTVNX0rSbNr&#xA;3VLuGxs0Kq1xcOscYLHio5MQKkmgxViHmXzx5P1vyd5ktNJ1m0vbv9E37/VopVMpRbdgzBK8io5C&#xA;ppirOl+yPlirsVWTwQ3EMkE8aywSqUlicBkZGFGVlOxBHUYq8+trq5/LW6i0/UZXn/L64dYtL1SV&#xA;i76PI54x2l27VLWbEhYJ2/u9o5Dx4tirMfMk+pwaPO+nW8VzOVKuJriS1RIyDzk9SGOaWqjcBF5e&#xA;BHXFWL/lfN56eyMmu/6Ro14n1nSLm45RX8SMRSG4hYytxYHlGWlaQLtIeXRVneKuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVLPMGiyapbQC3vJNPvbSYXFneRJHIUkCNGapKroytHIykU71BBocVYj5o8ta7F&#xA;5T16913XW1hrXTNQazgW1htYo5HtZU9T4OcjOI3ZPt8dz8NaUVegr9kfLFXYq7FVO6tba7tpbW6i&#xA;Se2nRop4JVDxvG44sjq1QysDQg4q8/tbq5/LW5i07UZXn/L2d1h0vVJmLyaPI54x2l3I1S1mxIWC&#xA;dj+72jkPHi2Ks003T9Rgvb27vb760bllEEEaNFDDFHy4gI0ktZDz/eOCA1B8IpiqOmmihieaZ1ji&#xA;jUvJI5CqqqKlmJ2AAxVCaTrmjaxb/WdKvoL+AUrLbyLKoqKipUnqNxiqNxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV5FbEny552qa/867IfpN3rOKvXV+yPlirsVdirsVU7q1tru2ltbqJJ7adGinglUPG8bji&#xA;yOrVDKwNCDirz+1urn8tbmLTtRlef8vZ3WHS9UmYvJo8jnjHaXcjVLWbEhYJ2P7vaOQ8eLYqmU2h&#xA;eeNO1PXLnQbmzuRrl1HcRy6nLcUsFS2jgZI7eNWE45Rcwvqxfap2qVUDe+VIvLkbec9Q1G61rzPY&#xA;RhGu55mto5opHAezitbcCEh2akMbIzepx+Ku+Ksq8r64+uaSuoPD9VaSSRfqjEmaHgxX07gEDhMt&#xA;PjT9k7VbqVU2xV2KuxV2KuxV2KuxV2KuxV2KsH1TzRo/mP8ALHzBf6e8Yd9KvfrFqssMksLCGSqS&#xA;+i8gVga1BNQeu9cVZwv2R8sVdirsVdirsVU7q1tru2ltbqJJ7adGinglUPG8bjiyOrVDKwNCDirz&#xA;+1urn8tbmLTtRlef8vZ3WHS9UmYvJo8jnjHaXcjVLWbEhYJ2P7vaOQ8eLYq9EIBFCKjY7+I3GKuo&#xA;PvxV2KuxV2KuxV2KuxV2KuxV2KuxVhPm/wAn+VNO8na9eWOj2dteW+kX8UF1HBGJo42t3rGklOap&#xA;24g0pirNl+yPlirsVdirsVdirsVU7q1tru2ltbqJJ7adGinglUPG8bjiyOrVDKwNCDirz+1urn8t&#xA;bmLTtRlef8vZ3WHS9UmYvJo8jnjHaXcjVLWbEhYJ2P7vaOQ8eLYq9ExV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxVIfP/wDygnmT/tl3v/UO+Kp8v2R8sVdirsVdirsVdirsVU7q1tru2ltbqJJ7adGinglUPG8b&#xA;jiyOrVDKwNCDirz+1urn8tbmLTtRlef8vZ3WHS9UmYvJo8jnjHaXcjVLWbEhYJ2P7vaOQ8eLYq9E&#xA;xV2KuxV2KuxV2KuxV2KuxV2KpD5//wCUE8yf9su9/wCod8VT5fsj5Yq7FVhuIBOLcyKLhlMiw8hz&#xA;KKQCwXrQFgK4qvxVTubm3tbeW5uZUgtoEaWeeVgiIiDkzuzUCqoFSTiqnY6lp2oRvJYXUN3HG/py&#xA;PBIsgVwA3FipNGowNPfFURirsVU7q1tru2ltbqJJ7adGinglUPG8bjiyOrVDKwNCDirCbS4uPIFx&#xA;DpuoSvP5JndYdK1OVi76Y7kLHZ3btUm3JIWCdvs7RyH7LMqzrFUg8265qOnPo1np3orea1qAsI57&#xA;lWeGIC2numdkR4mYlbUoo5D4mGKovyprZ13yxpGtmMRHU7O3vDEp5KpniWQqG/aA5bHviqaYq7FX&#xA;Yq7FXYq7FUh8/wD/ACgfmT/tl3v/AFDviqZrq2lcR/pkHT/fqf1xVv8AS2lf8tsH/I1P64qwXTZb&#xA;T/lbes6nczT+m1lbWmnSmX/QxEimSduRYR1eSRFCLVqoWpQ1xVE67qGuNqs50/Ub9bT4fSFrcaIs&#xA;X2RXiLqCSbrX7Tfhiqn5se61D8sNQsfrJudWeEloJ5rUzzKk3NoibURwkyRrwHBe/c4qmHlPVLB9&#xA;a803hmENvdahC1u09YTIE0+1jZ1WQIxXkpStOqnFWS/pbSv+W2D/AJGp/XFXfpbSv+W2D/kan9cV&#xA;d+ltK/5bYP8Akan9cVUrq90G7tpbW6ntZ7adGingleN43jccWR1YkMrA0IOKsHHm7Rvy7ms9K1bU&#xA;kfyjeS/VtH1WWYSNYyMCyWd27MzmGgPozH7IHGQigdlUTo1na6jceYrfzTBa3dhqGovdwC6ngnh9&#xA;KJUt7VYIgz8R6NusjluJDsdjucVZhBf6JbwRwQXNtFBEoSKJHjVERRRVVQaAAbADFVT9LaV/y2wf&#xA;8jU/rirv0tpX/LbB/wAjU/riqyXW9HiieV72AIilmPqKaACp2BxVKPLP5k+QfNCqdB1+yv5H6W8c&#xA;yiffxhfjKPpXFWSYq7FUh/MAA+Q/MgO4Ol3v/UO+KohfKflWg/3DWP8A0jQ/804q3/hPyr/1ZrH/&#xA;AKRof+acVd/hPyr/ANWax/6Rof8AmnFXf4T8q/8AVmsf+kaH/mnFXf4T8q/9Wax/6Rof+acVd/hP&#xA;yr/1ZrH/AKRof+acVd/hPyr/ANWax/6Rof8AmnFXf4T8q/8AVmsf+kaH/mnFXf4T8q/9Wax/6Rof&#xA;+acVWT+WvJ9vBJPPpWnxQRKXlle3gVERRVmZitAANyTirzTzjoPlLWH0rUtU8pS3flxLuP8ARmmW&#xA;NtbwvdTyOsENzevM9qEhLzKsUBer8uTqR8Kqs68s6d5T1zRLXVY/LEFhb3caTW0NzbWfMxSIro9L&#xA;dp0AKt05V9sVTT/CflX/AKs1j/0jQ/8ANOKu/wAJ+Vf+rNY/9I0P/NOKu/wn5V/6s1j/ANI0P/NO&#xA;Kof/AA15IuhJbppunSMVKyIkMBYA7H7IqMVSvyt+Tv5Y+Vmjk0Xy5ZwXMJBju5E+sXCkd1mnMkg+&#xA;hsVZjirsVSHz/wD8oJ5k/wC2Xe/9Q74qny/ZHyxV2KuxV2KuxV2KuxV2Kqd1dW1pbS3V1KkFtAjS&#xA;zzysEjSNByZ3ZqBVUCpJxVgenLffmFfQateRva+QrV1m0jT5VKS6tKhDR3t0jUKWqEBreFhWQ0kf&#xA;bguKsz1TRdO1QWovozMlpOLmKPkwQyKjIpdQQHA5kgNtWh6gYqu0jS7LSdJstKsUMdlp8EVraozM&#xA;5WKFBGgLMSzUVRuTXFUXirsVU7iYQW8s5R5BEjOUjUu7cRWiqN2Y9hiryb8vvLWrxeZ9J1XWtJkL&#xA;3FvqGpJO8CxSWF/f3cslxDNIDycNFKEQHYU+EH7SqvXcVdirsVSHz/8A8oJ5k/7Zd7/1DviqfL9k&#xA;fLFXYq7FXYq7FXYq7FVO6ura0tpbq6lSC2gRpZ55WCRpGg5M7s1AqqBUk4q8/tbW5/Mq5i1HUYng&#xA;/L2B1m0vS5lKSaxIh5R3d3G1CtmpAaCBh+82kkHHiuKvRMVdirsVdirsVUL+2mubOa3hupbKWRSq&#xA;XcAiaWMn9pBMk0dR/lIR7YqwzyUNavtY1GWTzDrN5Y6PeTWLJepo4t7qSJeLkfVLKCcCNm/nX4hT&#xA;cVqqzrFXYq7FUh8//wDKCeZP+2Xe/wDUO+Kp8v2R8sVdirsVdirsVdiqndXVtaW0t1dSpBbQI0s8&#xA;8rBI0jQcmd2agVVAqScVedAH8wSNZ1kGy/Lax/0qxsbkekdWMPxre3qvThZJx5wwv/ef3knw8VxV&#xA;mfl3WbrWLaW+ayezsJH/ANxrTErPNBQfvnhKgxBz9hWPLjQsFJ4hVNsVdirsVdirsVc3LieJAamx&#xA;IqK/LbFWPeW/KLaIkES6hLcQwveTsjAJ61xfXBuJZ5iv22Du/HoAG6VoQqyHFXYqkHnaHWpdHVdK&#xA;W6kImU3kOnSwwXrwBWqtvJcFIlfnwJ5Ovw8gDWmKvOriy1geX/ME8Fp5m06wXStQN8nmK9t7uGUG&#xA;0kASFBc3kyuJGVuQ4pxBFdwMVeyL9kfLFXYq7FXYq7FVO6ura0tpbq6lSC2gRpZ55WCRpGg5M7s1&#xA;AqqBUk4q8/tbW5/Mq5i1HUYng/L2B1m0vS5lKSaxIh5R3d3G1CtmpAaCBh+82kkHHiuKrPPd5q2n&#xA;a9b+bJhcDRPK1zF9btqf6O1ldwSRXd8oAq8lsZlJ68Y0fju5xV6MrKyhlIZWFVYbgg9xireKuxV2&#xA;KuxV2KuxV2KuxV2KuxV5xqXmfUdW8t+erO6WMRWOl3/omNSGPG71SzHKpP8Auuxj+mvyCr0dfsj5&#xA;Yq7FXYq7FVO5uba1tpbq6lSC2gRpZ55WCIiIOTO7NQKqgVJOKvP7W1ufzKuYtR1GJ4Py9gdZtL0u&#xA;ZSkmsSIeUd3dxtQrZqQGggYfvNpJBx4rir0TFUh82aX5o1KGO10a/srO0nSWDU0vbR7pnilCrWHh&#xA;NAqMq8vthlNdxtuqnNnawWdpBaQLxgt41iiWtaIihVFT7DFVXFXYq7FXYq7FXYq7FXYq7FULqmra&#xA;VpNk99qt7Bp9lHQSXV1KkMSljQcnkKqKk0G+KsM8z6V5e0jyt5mmtrwG71vSdQeGKSVD6qg3l85h&#xA;UAFgr379K/Dx+ZVZ6v2R8sVdirsVWTzw28Mk88ixQRKXllchUVFFWZmOwAHU4qweCCb8wZo7y8ja&#xA;LyJEwksbGQFX1d1NUuLhDuLIHeKI/wB79t/g4qyrMNXvJrLS7u6t4hPcwxO1vblgnqyhT6cfI7Au&#xA;9FHzxVgn5fSeb2vtf0vXJZLu5kuJhe6tBKqCzufSi9OCG3lrxheB0mgZFbqVk+MFnVZ7psN7BYxQ&#xA;3s/1q5iBR7khVaQKSFdwiogdloX4qF5VoKYqicVdirsVdirsVdirsVdirsVdirEvzF0PXNWtdHXS&#xA;LHT9Se01A3F3ZaqzLayQGzuYSH4pMa85Up8Db702xV5lN5fm0vTtUGreUL7TtR/Ruri01GPU3vdJ&#xA;ggFrP6UMUIkVYzFC4gi5WyfBXfsVXvS/ZHyxV2KrJ54beGSeeRYoIlLyyuQqKiirMzHYADqcVefQ&#xA;xXH5l3CXV0jw/l3C4e0tHBR9adDVZ5lNCLEEVjjP999pvgoGVehNLErojOqvJXgpIBagqaDvTFUh&#xA;n8vXmp+YBfaxJHJpmnSJJo+mxlihmUA/W7nkF5So1REm6pTnu5HBVPwqgkgAFvtHx+eKt4q7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FUh8/8A/KCeZP8Atl3v/UO+Kp8v2R8sVWTzw28Mk88ixQRKXllchUVF&#xA;FWZmOwAHU4q89jiuPzKmW6uY3i/LyBhJZ2bgpJrToarNMrUK2IIrHGf777Tfu6BlWY+Xtfs9c8vW&#xA;us6dFIsF1FzjtZQscqOtVaGRalVkR1KMK0BGKsO0PQPNGr+aX1jWXezNm/CSROac+DB/qdlzCuto&#xA;rKDNOQHuWH7MSqpVei4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh8//wDKCeZP+2Xe/wDUO+Kp&#xA;1LPDb27zzyLFBEheWVyFRUUVZmY7AAdTirz+KK4/Mu4S6ukeH8u4XD2lo4KPrToarNMpoRYgiscZ&#xA;/vvtN8FAyrL/ADNr0Pl3QLrV5LO4vYbJVZrSyRHnZS6p+7R3jU8eVacug2qdsVY3+XXmk6jc6hpi&#xA;2P7lJpr+31m0iZdPure9ZLq3kVjUCaSO5BkSteSsxoGFVWc4q7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqkR8+eRhN6B8xaYJg3AxfXLflyrTjx51rXtiqVXX5lxxeZv8P2/l3V7u5Mqwi4jWzhiPITH1AL&#xA;m6t5vTpayHn6dDQca8l5Ko78y720svy78zXN3MkECaZdhpJCFWrwsqip7szBQO52xVIrNoPzPt4r&#xA;yVHXyFHLztYHBRtXaJtpJkNCLJXHwxsKykVYBKB1XoIAAAAoBsAOlMVdiqF07SdL0yFoNNs4LGB3&#xA;MrxW0aRIXagLlUCgsaCpxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUmPlLRjrY1opIdQFz9b&#xA;EvNqc/qhswvHpwERNF/mJbqcVQn5l21vc/l15nhuI1libSr0lHAYVWB2U0PcEAj3xVEW99pWmapZ&#xA;eUNMtRbFNOkubdYkUW9vDbyRwRoVBU/GZTxA7I3TFUbYW+uRzFr+9t7iHiQEhtnhYNUUPJppdqV2&#xA;piqPxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVj/AOYf/KAeZv8AtlX3/UM+Koyby1pE&#xA;2uLrckTHUBHFCW5sEK27StDVK8Twa5kI9yCd1WiqaYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FWP/AJh/8oB5m/7ZV9/1DPirIMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVY/8AmH/ygHmb/tlX3/UM+KsgxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVj&#xA;/wCYf/KAeZv+2Vff9Qz4qyDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>293.000000</stDim:w>
            <stDim:h>489.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Fig9</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:FB7F117407206811822AAC864043C65B</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811822AAC864043C65B</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:04801174072068118083E93750DF73CC</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:9aa7c64d-44c7-534a-b680-cde2cfddbd3a</stRef:instanceID>
            <stRef:documentID>xmp.did:04801174072068118083E93750DF73CC</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:04801174072068118083E93750DF73CC</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:04801174072068118083E93750DF73CC</stEvt:instanceID>
                  <stEvt:when>2013-03-15T15:26:06-06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811822AAC864043C65B</stEvt:instanceID>
                  <stEvt:when>2013-04-09T15:34:17-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -380.241 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 380.241 li
236.435 380.241 li
236.435 0 li
cp
clp
gsave
18.5 55.6948 mo
28.5 55.6948 li
28.5 63.6949 li
18.5 63.6949 li
18.5 55.6948 li
clp
22.8091 56.6968 mo
24.8379 56.6968 li
24.2461 59.354 24.084 60.127 24.084 61.3296 cv
24.084 61.5977 24.084 62.084 24.228 62.6948 cv
24.4082 63.4849 24.606 63.5918 24.874 63.5918 cv
25.2329 63.5918 25.6099 63.2681 25.6099 62.9087 cv
25.6099 62.8008 25.6099 62.7656 25.5029 62.5137 cv
24.9819 61.2207 24.9819 60.0537 24.9819 59.5508 cv
24.9819 58.5986 25.1089 57.6299 25.3062 56.6968 cv
27.353 56.6968 li
27.5859 56.6968 28.2339 56.6968 28.2339 56.0859 cv
28.2339 55.6538 27.856 55.6538 27.5151 55.6538 cv
21.499 55.6538 li
21.103 55.6538 20.4209 55.6538 19.6318 56.499 cv
19.0029 57.1987 18.5361 58.0249 18.5361 58.1138 cv
18.5361 58.1318 18.5361 58.2939 18.751 58.2939 cv
18.896 58.2939 18.9312 58.2217 19.0391 58.0776 cv
19.9189 56.6958 20.9609 56.6958 21.3188 56.6958 cv
22.3418 56.6958 li
21.7681 58.8677 20.7988 61.042 20.043 62.6748 cv
19.8999 62.9438 19.8999 62.98 19.8999 63.106 cv
19.8999 63.4468 20.187 63.5908 20.4209 63.5908 cv
20.96 63.5908 21.104 63.0879 21.3179 62.4238 cv
21.5698 61.5967 21.5698 61.563 21.8027 60.6636 cv
22.8091 56.6968 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
grestore
gsave
0 316.704 mo
23.5 316.704 li
23.5 324.704 li
0 324.704 li
0 316.704 li
clp
10.834 320.274 mo
11.1392 320.274 11.4629 320.274 11.4629 319.915 cv
11.4629 319.555 11.1392 319.555 10.834 319.555 cv
1.11914 319.555 li
.812012 319.555 .489746 319.555 .489746 319.915 cv
.489746 320.274 .812012 320.274 1.11914 320.274 cv
10.834 320.274 li
false sop
.75021 .679683 .670222 .90164 cmyk
f
grestore
gsave
0 316.704 mo
23.5 316.704 li
23.5 324.704 li
0 324.704 li
0 316.704 li
clp
17.709 317.708 mo
19.7368 317.708 li
19.145 320.364 18.9829 321.137 18.9829 322.34 cv
18.9829 322.609 18.9829 323.094 19.127 323.705 cv
19.3071 324.495 19.5049 324.602 19.7729 324.602 cv
20.1318 324.602 20.5088 324.278 20.5088 323.918 cv
20.5088 323.811 20.5088 323.775 20.4019 323.523 cv
19.8809 322.23 19.8809 321.064 19.8809 320.56 cv
19.8809 319.609 20.0068 318.639 20.2051 317.706 cv
22.252 317.706 li
22.4839 317.706 23.1318 317.706 23.1318 317.096 cv
23.1318 316.665 22.7539 316.665 22.4141 316.665 cv
16.3979 316.665 li
16.002 316.665 15.3198 316.665 14.5308 317.508 cv
13.9019 318.208 13.4351 319.034 13.4351 319.124 cv
13.4351 319.142 13.4351 319.303 13.6499 319.303 cv
13.7949 319.303 13.8301 319.231 13.937 319.088 cv
14.8169 317.705 15.8589 317.705 16.2178 317.705 cv
17.2412 317.705 li
16.667 319.877 15.6968 322.051 14.9419 323.685 cv
14.7979 323.953 14.7979 323.99 14.7979 324.115 cv
14.7979 324.458 15.0859 324.6 15.3188 324.6 cv
15.8569 324.6 16.001 324.096 16.2158 323.432 cv
16.4668 322.607 16.4668 322.572 16.7002 321.672 cv
17.709 317.708 li
false sop
.75021 .679683 .670222 .90164 cmyk
f
grestore
34.982 190.876 mo
227.575 190.876 li
227.575 189.876 li
34.982 189.876 li
34.982 190.876 li
false sop
.75021 .679683 .670222 .90164 cmyk
f
225.594 193.281 mo
236.435 190.376 li
225.594 187.47 li
225.594 193.281 li
cp
f
34.4819 8.85984 mo
34.4819 380.241 li
35.4819 380.241 li
35.4819 8.85984 li
34.4819 8.85984 li
f
32.0771 10.8408 mo
34.9819 0 li
37.8882 10.8408 li
32.0771 10.8408 li
cp
f
36 320.704 mo
35.4819 320.704 li
35.4819 190.876 li
36 190.876 li
36 320.704 li
36 189.876 mo
35.4819 189.876 li
35.4819 59.6948 li
36 59.6948 li
36 189.876 li
level3{
gsave
clp
[1 0 0 -1 35 190.199 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!W`<%!W`<%!W`<%!s&E&!s/N(!s/N("9JW)"9JW)"9JW)"Tni,"Tni,"Tni,"p4r
-"p>&/"p>&/#6Y/0#6Y/0#6b82#R(A3#R(A3#R(A3#mLS6#mLS6#mLS6$3pe9$3pe9$3pe9$O6n:$O@"
<$O@"<$j[+=$jd4?%1*=@%13FB%LNOC%LNOC%graF%graF&.8jG&.AsI&I]'J&I]*K&I]*K&e,9M&e,<
N'+GEO'+PKP'+PNQ'FkWR'Ft]S'Ft`T'b:iU'b:lV((_&X((_&X(D%2Z~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 35 190.199 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!**$!<E3%!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8Z/"9\i1"9\i1"9\l3"U,&5"U,
&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A#RC_C#mgnE#mgnE#mgnF$47+I$47+I$47
+J$O[=M$O[=N$k*OQ$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0^&.fBa&.fBa&.fBa&J5Te&J5Te&eY
fi&eYfi&eYfi',)#m',)#m',)#m'GM5q'GM5q'bqGu'bqGu()@Z$~>
<~zzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8Z
/"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\
B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1Na
U%LrsY%LrsY%LrsY%LrsY%hB0]%hB0]%hB0]~>
<~zzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiH+!s8W-!s8W-!s8W-!s8Z
/"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP8:#6tJ=#6tJ=#6tJ>#RC\A#RC\
B#mgnE#mgnE#mgnF$47+I$47+I$47+J$O[=M$O[=M$k*OQ$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%Lrs
Y%LrsY%hB0]%hB0]&.fBa&.fBa&.fBa&J5Te~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
36 190.876 mo
35.4819 190.876 li
35.4819 189.876 li
36 189.876 li
36 190.876 li
level3{
gsave
clp
[1 0 0 -1 35 190.199 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\Z2OI\Z2OJ\Z2OJ\Z2OK\Z2OK\Z2RM\uM[N\uM[O\uM[O\uVaQ\uVaQ\uVaR\uVaR\uVaS\uVaS\uVaT
\uVaT\uVaU];qjV];qjW];qmY];qmY];qmZ];qmZ];qm[]<%s\]WA'^]WA'^]WA'_]WA'`]WA'`]WA*b
]WA*b]WA*b]WA*c]r\3d]r\3e]r\3e]r\3f]r\3f]r\3g]r\3g]r\3g]r\3h]r\6i^9"?k^9+El^9+Em
^9+Em^9+En^9+En^9+En^9+Eo^9+Eo^9+Ep^9+Ep^TFNr^TFNr^TFQt^TFQt^TFQu^TFQu^TFQu^TFR!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 35 190.199 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@K/\\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]
\[f8]\[f;_]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Mc]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e
]=Y\e]=Y\e]=Y\f]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(nj]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q
~>
<~WMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWN)tuWiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE,#X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;&XK8M)XK8M)
XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)
~>
<~V5:#bV5:#bV5:#bV5:#bV5C,eVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^8hVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-JlW2QYn
W2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYoWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukrWiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
~>
<~`lH-?a2c6@a2l?CaN2HDaN;QGaiVZHai_cKb0%lLb0.uObKJ)PbKS2Sbfn;Tbg"DWc-=MXc-FV[cHa_\
cHab^cd0q`cd0tbd*U1fdF$@hdF$CjdaHRldaHUne'ldpe'lgreC<!teC<%!e^`7%f%/F'f%/I)f@SX+
f@SX+f@SX,f\"j/f\"j0g"G'3g"G'4g=k97g=k98gY:K;gY:K;gY:K<gt^]?gt^]@h;-oCh;-oDhVR,G
hVR,Ghr!>Khr!>Khr!>Ki8EPOi8EPOiSibSiSibSio8tWio8tWj5]1[j5]1[jQ,C_jQ,C_jQ,C_jlPUc
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
35.4819 320.704 mo
35 320.704 li
35 59.6948 li
35.4819 59.6948 li
35.4819 189.876 li
35.4819 190.876 li
35.4819 320.704 li
level3{
gsave
clp
[1 0 0 -1 35 190.199 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 35 190.199 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
35.1457 60.0476 mo
39.3786 64.2995 li
40.0873 63.594 li
35.8543 59.3421 li
.75021 .679683 .670222 .90164 cmyk
f
47.4728 72.4275 mo
156.732 182.164 li
157.44 181.458 li
48.1815 71.7219 li
f
160.778 186.228 mo
164.661 190.127 li
160.78 194.029 li
161.489 194.734 li
166.072 190.127 li
161.487 185.522 li
160.778 186.228 li
cp
f
152.687 202.166 mo
43.4233 312.029 li
44.1323 312.734 li
153.396 202.872 li
f
39.3764 316.097 mo
35.1455 320.351 li
35.8545 321.056 li
40.0855 316.802 li
f
gsave
160.722 197.612 mo
170.722 197.612 li
170.722 205.612 li
160.722 205.612 li
160.722 197.612 li
clp
165.028 198.615 mo
167.058 198.615 li
166.466 201.272 166.304 202.045 166.304 203.249 cv
166.304 203.517 166.304 204.003 166.448 204.613 cv
166.628 205.403 166.826 205.51 167.094 205.51 cv
167.453 205.51 167.83 205.186 167.83 204.826 cv
167.83 204.719 167.83 204.683 167.724 204.431 cv
167.202 203.138 167.202 201.972 167.202 201.468 cv
167.202 200.516 167.329 199.547 167.526 198.614 cv
169.573 198.614 li
169.806 198.614 170.454 198.614 170.454 198.003 cv
170.454 197.571 170.076 197.571 169.735 197.571 cv
163.719 197.571 li
163.323 197.571 162.642 197.571 161.853 198.416 cv
161.224 199.116 160.756 199.942 160.756 200.031 cv
160.756 200.049 160.756 200.211 160.972 200.211 cv
161.116 200.211 161.151 200.139 161.259 199.995 cv
162.14 198.613 163.181 198.613 163.539 198.613 cv
164.562 198.613 li
163.987 200.785 163.019 202.958 162.263 204.593 cv
162.12 204.861 162.12 204.898 162.12 205.023 cv
162.12 205.365 162.407 205.508 162.642 205.508 cv
163.181 205.508 163.323 205.005 163.538 204.341 cv
163.79 203.515 163.79 203.48 164.022 202.581 cv
165.028 198.615 li
f
grestore
gsave
211.56 201.312 mo
223.16 201.312 li
223.16 230.913 li
211.56 230.913 li
211.56 201.312 li
clp
217.267 202.531 mo
217.353 202.187 217.396 202.043 217.669 202 cv
217.798 201.985 218.258 201.985 218.546 201.985 cv
219.565 201.985 221.159 201.985 221.159 203.407 cv
221.159 203.896 220.931 204.886 220.37 205.447 cv
219.996 205.82 219.233 206.28 217.942 206.28 cv
216.333 206.28 li
217.267 202.531 li
cp
219.335 206.467 mo
220.786 206.151 222.495 205.145 222.495 203.696 cv
222.495 202.46 221.202 201.54 219.321 201.54 cv
215.228 201.54 li
214.94 201.54 214.812 201.54 214.812 201.828 cv
214.812 201.986 214.94 201.986 215.211 201.986 cv
215.241 201.986 215.515 201.986 215.758 202.015 cv
216.017 202.044 216.147 202.058 216.147 202.244 cv
216.147 202.302 216.131 202.345 216.088 202.517 cv
214.163 210.231 li
214.019 210.792 213.991 210.906 212.854 210.906 cv
212.597 210.906 212.467 210.906 212.467 211.194 cv
212.467 211.351 212.64 211.351 212.669 211.351 cv
213.069 211.351 214.076 211.309 214.478 211.309 cv
214.88 211.309 215.901 211.351 216.303 211.351 cv
216.417 211.351 216.591 211.351 216.591 211.063 cv
216.591 210.906 216.46 210.906 216.188 210.906 cv
215.655 210.906 215.253 210.906 215.253 210.648 cv
215.296 210.403 li
216.245 206.596 li
217.954 206.596 li
219.261 206.596 219.521 207.401 219.521 207.905 cv
219.521 208.12 219.405 208.565 219.319 208.895 cv
219.217 209.297 219.09 209.829 219.09 210.117 cv
219.09 211.668 220.813 211.668 221 211.668 cv
222.221 211.668 222.724 210.217 222.724 210.017 cv
222.724 209.844 222.565 209.844 222.551 209.844 cv
222.422 209.844 222.394 209.945 222.364 210.045 cv
222.005 211.108 221.387 211.353 221.056 211.353 cv
220.582 211.353 220.481 211.037 220.481 210.477 cv
220.481 210.032 220.567 209.297 220.625 208.838 cv
220.653 208.637 220.685 208.364 220.685 208.163 cv
220.687 207.057 219.724 206.612 219.335 206.467 cv
f
grestore
gsave
211.56 201.312 mo
223.16 201.312 li
223.16 230.913 li
211.56 230.913 li
211.56 201.312 li
clp
211.896 218.19 mo
222.897 218.19 li
222.897 216.757 li
211.896 216.757 li
f
grestore
gsave
211.56 201.312 mo
223.16 201.312 li
223.16 230.913 li
211.56 230.913 li
211.56 201.312 li
clp
217.892 222.221 mo
218.021 221.703 218.063 221.545 219.415 221.545 cv
219.845 221.545 219.961 221.545 219.961 221.273 cv
219.961 221.1 219.802 221.1 219.731 221.1 cv
219.257 221.1 218.08 221.143 217.604 221.143 cv
217.173 221.143 216.126 221.1 215.694 221.1 cv
215.594 221.1 215.422 221.1 215.422 221.387 cv
215.422 221.545 215.551 221.545 215.824 221.545 cv
215.853 221.545 216.126 221.545 216.369 221.574 cv
216.629 221.603 216.758 221.617 216.758 221.803 cv
216.758 221.862 216.743 221.905 216.7 222.076 cv
214.774 229.792 li
214.632 230.352 214.603 230.465 213.468 230.465 cv
213.224 230.465 213.079 230.465 213.079 230.752 cv
213.079 230.912 213.208 230.912 213.468 230.912 cv
220.118 230.912 li
220.464 230.912 220.478 230.912 220.563 230.667 cv
221.698 227.562 li
221.757 227.406 221.757 227.375 221.757 227.363 cv
221.757 227.303 221.712 227.205 221.583 227.205 cv
221.454 227.205 221.44 227.277 221.339 227.506 cv
220.851 228.828 220.219 230.465 217.733 230.465 cv
216.383 230.465 li
216.181 230.465 216.153 230.465 216.067 230.451 cv
215.923 230.436 215.88 230.424 215.88 230.307 cv
215.88 230.264 215.88 230.236 215.952 229.975 cv
217.89 222.217 li
f
grestore
gsave
10.1001 3.69972 mo
26.8999 3.69972 li
26.8999 33.2998 li
10.1001 33.2998 li
10.1001 3.69972 li
clp
15.8291 8.28076 mo
15.5991 8.28076 15.3979 8.28076 15.1968 8.48193 cv
14.9668 8.69775 14.938 8.94189 14.938 9.04297 cv
14.938 9.3877 15.1968 9.54492 15.4688 9.54492 cv
15.8857 9.54492 16.2739 9.19971 16.2739 8.62598 cv
16.2739 7.92188 15.5981 7.39063 14.5791 7.39063 cv
12.6401 7.39063 10.729 9.44482 10.729 11.4707 cv
10.729 12.7637 11.562 13.8989 13.0562 13.8989 cv
15.1108 13.8989 16.3169 12.376 16.3169 12.2036 cv
16.145 12.0171 li
16.0728 12.0171 16.0439 12.0459 15.958 12.1606 cv
14.8228 13.583 13.2568 13.583 13.084 13.583 cv
12.1802 13.583 11.791 12.8799 11.791 12.0181 cv
11.791 11.4287 12.0791 10.0356 12.5659 9.14502 cv
13.0122 8.32568 13.8018 7.70801 14.5908 7.70801 cv
15.082 7.70557 15.6279 7.89307 15.8291 8.28076 cv
f
grestore
gsave
10.1001 3.69972 mo
26.8999 3.69972 li
26.8999 33.2998 li
10.1001 33.2998 li
10.1001 3.69972 li
clp
22.4741 5.02002 mo
22.5752 4.61768 22.6318 4.53174 22.8042 4.48877 cv
22.9331 4.46094 23.4082 4.46094 23.709 4.46094 cv
25.1611 4.46094 25.8071 4.51807 25.8071 5.6377 cv
25.8071 5.85303 25.749 6.41357 25.6919 6.78662 cv
25.6489 7.06006 li
25.6489 7.146 25.6919 7.24658 25.8208 7.24658 cv
25.979 7.24658 26.0088 7.13184 26.0371 6.91602 cv
26.4248 4.41699 li
26.4531 4.17188 li
26.4531 4.01367 26.3101 4.01367 26.0649 4.01367 cv
18.0918 4.01367 li
17.748 4.01367 17.7329 4.02783 17.6328 4.30176 cv
16.771 6.82959 li
16.6851 7.08887 li
16.6851 7.1748 16.7568 7.24658 16.8569 7.24658 cv
17.001 7.24658 17.0151 7.1748 17.1011 6.94482 cv
17.877 4.71777 18.25 4.45996 20.377 4.45996 cv
20.937 4.45996 li
21.3389 4.45996 21.3389 4.51807 21.3389 4.63184 cv
21.2822 4.93408 li
19.3569 12.605 li
19.228 13.1367 19.1851 13.2939 17.6479 13.2939 cv
17.1299 13.2939 17.0439 13.2939 17.0439 13.5669 cv
17.0439 13.7388 17.2021 13.7388 17.2881 13.7388 cv
17.6768 13.7388 18.0791 13.71 18.4658 13.71 cv
18.8682 13.71 19.2852 13.6958 19.687 13.6958 cv
20.0889 13.6958 20.4922 13.71 20.8789 13.71 cv
21.2959 13.71 21.7271 13.7388 22.1289 13.7388 cv
22.272 13.7388 22.4448 13.7388 22.4448 13.4507 cv
22.4448 13.293 22.3301 13.293 21.9561 13.293 cv
21.5981 13.293 21.4111 13.293 21.0371 13.2637 cv
20.6201 13.2217 20.5059 13.1787 20.5059 12.9487 cv
20.5059 12.9341 20.5059 12.8628 20.564 12.647 cv
22.4741 5.02002 li
f
grestore
gsave
10.1001 3.69972 mo
26.8999 3.69972 li
26.8999 33.2998 li
10.1001 33.2998 li
10.1001 3.69972 li
clp
10.125 20.5772 mo
26.709 20.5772 li
26.709 19.1444 li
10.125 19.1444 li
f
grestore
gsave
10.1001 3.69972 mo
26.8999 3.69972 li
26.8999 33.2998 li
10.1001 33.2998 li
10.1001 3.69972 li
clp
18.9131 24.6089 mo
19.042 24.0918 19.085 23.9341 20.436 23.9341 cv
20.8672 23.9341 20.9819 23.9341 20.9819 23.6606 cv
20.9819 23.4878 20.8242 23.4878 20.7529 23.4878 cv
20.2788 23.4878 19.1011 23.5308 18.627 23.5308 cv
18.1948 23.5308 17.147 23.4878 16.7158 23.4878 cv
16.6147 23.4878 16.4429 23.4878 16.4429 23.7759 cv
16.4429 23.9341 16.5718 23.9341 16.8462 23.9341 cv
16.874 23.9341 17.147 23.9341 17.3911 23.9629 cv
17.6499 23.9917 17.7788 24.0059 17.7788 24.1919 cv
17.7788 24.25 17.7642 24.293 17.7212 24.4648 cv
15.7969 32.1787 li
15.6528 32.7397 15.624 32.854 14.4888 32.854 cv
14.2451 32.854 14.1011 32.854 14.1011 33.1421 cv
14.1011 33.2998 14.23 33.2998 14.4888 33.2998 cv
21.1401 33.2998 li
21.4849 33.2998 21.499 33.2998 21.5859 33.0547 cv
22.7202 29.9517 li
22.7778 29.7939 22.7778 29.7646 22.7778 29.751 cv
22.7778 29.6929 22.7349 29.5928 22.606 29.5928 cv
22.4771 29.5928 22.4619 29.6646 22.3618 29.895 cv
21.873 31.2158 21.2412 32.853 18.7559 32.853 cv
17.4048 32.853 li
17.2041 32.853 17.1748 32.853 17.0889 32.8379 cv
16.9438 32.8247 16.9009 32.812 16.9009 32.6968 cv
16.9009 32.6538 16.9009 32.625 16.9722 32.3657 cv
18.9111 24.6079 li
f
grestore
gsave
61.9331 176.22 mo
100.433 176.22 li
100.433 189.12 li
61.9331 189.12 li
61.9331 176.22 li
clp
gsave
61.9331 176.22 mo
100.433 176.22 li
100.433 189.22 li
61.9331 189.22 li
61.9331 176.22 li
clp
gsave
61.9331 176.22 mo
100.433 176.22 li
100.433 189.22 li
61.9331 189.22 li
61.9331 176.22 li
clp
gsave
61.9331 176.22 mo
100.433 176.22 li
100.433 189.22 li
61.9331 189.22 li
61.9331 176.22 li
clp
65.333 181.337 mo
67.021 181.337 li
67.3789 181.337 67.5591 181.337 67.5591 180.978 cv
67.5591 180.781 67.3799 180.781 67.0562 180.781 cv
65.4771 180.781 li
66.123 178.231 66.2129 177.872 66.2129 177.763 cv
66.2129 177.458 65.998 177.279 65.6919 177.279 cv
65.6382 177.279 65.1348 177.297 64.9741 177.925 cv
64.2739 180.78 li
62.5859 180.78 li
62.228 180.78 62.0469 180.78 62.0469 181.121 cv
62.0469 181.337 62.1909 181.337 62.5488 181.337 cv
64.1299 181.337 li
62.8369 186.437 62.7651 186.741 62.7651 187.065 cv
62.7651 188.035 63.4468 188.718 64.417 188.718 cv
66.248 188.718 67.271 186.095 67.271 185.952 cv
67.271 185.772 67.127 185.772 67.0552 185.772 cv
66.894 185.772 66.876 185.826 66.7861 186.023 cv
66.0142 187.891 65.062 188.321 64.4521 188.321 cv
64.0742 188.321 63.895 188.089 63.895 187.496 cv
63.895 187.064 63.9312 186.939 64.0029 186.635 cv
65.333 181.337 li
f
85.4702 182.648 mo
85.7397 182.648 86.0791 182.648 86.0791 182.289 cv
86.0791 181.93 85.7388 181.93 85.4868 181.93 cv
74.731 181.93 li
74.48 181.93 74.1382 181.93 74.1382 182.289 cv
74.1382 182.648 74.479 182.648 74.748 182.648 cv
85.4702 182.648 li
cp
85.4878 186.132 mo
85.7397 186.132 86.0801 186.132 86.0801 185.772 cv
86.0801 185.414 85.7397 185.414 85.4712 185.414 cv
74.75 185.414 li
74.48 185.414 74.1392 185.414 74.1392 185.772 cv
74.1392 186.132 74.481 186.132 74.7319 186.132 cv
85.4878 186.132 li
f
100.293 182.774 mo
100.293 181.337 100.203 179.901 99.5752 178.572 cv
98.748 176.848 97.2759 176.56 96.522 176.56 cv
95.4438 176.56 94.1338 177.028 93.3979 178.697 cv
92.8232 179.936 92.7329 181.338 92.7329 182.774 cv
92.7329 184.121 92.8052 185.736 93.542 187.101 cv
94.314 188.556 95.625 188.915 96.5039 188.915 cv
97.4741 188.915 98.8379 188.536 99.6289 186.831 cv
100.204 185.593 100.293 184.193 100.293 182.774 cv
cp
96.5039 188.519 mo
95.8042 188.519 94.7441 188.072 94.4209 186.347 cv
94.2241 185.27 94.2241 183.618 94.2241 182.558 cv
94.2241 181.41 94.2241 180.224 94.3682 179.255 cv
94.71 177.116 96.0562 176.956 96.5049 176.956 cv
97.0981 176.956 98.2832 177.278 98.624 179.057 cv
98.8042 180.063 98.8042 181.427 98.8042 182.558 cv
98.8042 183.906 98.8042 185.126 98.6069 186.276 cv
98.3359 187.981 97.313 188.519 96.5039 188.519 cv
f
grestore
grestore
grestore
gsave
3.72609 113.037 mo
33.3262 113.037 li
33.3262 151.837 li
3.72609 151.837 li
3.72609 113.037 li
clp
4.94482 146.29 mo
4.60107 146.204 4.45703 146.161 4.41406 145.888 cv
4.3999 145.759 4.3999 145.299 4.3999 145.012 cv
4.3999 143.992 4.3999 142.398 5.82178 142.398 cv
6.31104 142.398 7.30176 142.627 7.86182 143.188 cv
8.23584 143.561 8.69482 144.323 8.69482 145.616 cv
8.69482 147.225 li
4.94482 146.29 li
cp
8.88086 144.221 mo
8.56494 142.77 7.55908 141.06 6.10889 141.06 cv
4.87402 141.06 3.9541 142.353 3.9541 144.235 cv
3.9541 148.329 li
3.9541 148.617 3.9541 148.746 4.24219 148.746 cv
4.3999 148.746 4.3999 148.617 4.3999 148.344 cv
4.3999 148.315 4.3999 148.043 4.4292 147.799 cv
4.45801 147.54 4.47217 147.411 4.6582 147.411 cv
4.71582 147.411 4.75879 147.425 4.93115 147.469 cv
12.645 149.394 li
13.2061 149.538 13.3198 149.566 13.3198 150.702 cv
13.3198 150.961 13.3198 151.09 13.6079 151.09 cv
13.7661 151.09 13.7661 150.918 13.7661 150.889 cv
13.7661 150.487 13.7231 149.481 13.7231 149.078 cv
13.7231 148.675 13.7661 147.656 13.7661 147.254 cv
13.7661 147.139 13.7661 146.967 13.478 146.967 cv
13.3198 146.967 13.3198 147.096 13.3198 147.369 cv
13.3198 147.901 13.3198 148.303 13.062 148.303 cv
12.8169 148.26 li
9.00977 147.312 li
9.00977 145.602 li
9.00977 144.295 9.81494 144.037 10.3179 144.037 cv
10.5332 144.037 10.979 144.152 11.3091 144.238 cv
11.71 144.339 12.2432 144.467 12.5288 144.467 cv
14.0811 144.467 14.0811 142.743 14.0811 142.556 cv
14.0811 141.335 12.6299 140.832 12.4292 140.832 cv
12.2568 140.832 12.2568 140.99 12.2568 141.004 cv
12.2568 141.133 12.3569 141.162 12.458 141.191 cv
13.521 141.55 13.7661 142.168 13.7661 142.499 cv
13.7661 142.973 13.4502 143.073 12.8901 143.073 cv
12.4438 143.073 11.7119 142.987 11.252 142.929 cv
11.0498 142.9 10.7769 142.871 10.5762 142.871 cv
9.47119 142.87 9.0249 143.833 8.88086 144.221 cv
f
grestore
gsave
3.72609 113.037 mo
33.3262 113.037 li
33.3262 151.837 li
3.72609 151.837 li
3.72609 113.037 li
clp
20.6021 151.692 mo
20.6021 140.689 li
19.1693 140.689 li
19.1693 151.692 li
f
grestore
gsave
3.72609 113.037 mo
33.3262 113.037 li
33.3262 151.837 li
3.72609 151.837 li
3.72609 113.037 li
clp
24.6348 145.705 mo
24.1182 145.576 23.96 145.533 23.96 144.182 cv
23.96 143.751 23.96 143.636 23.687 143.636 cv
23.5151 143.636 23.5151 143.794 23.5151 143.865 cv
23.5151 144.339 23.5581 145.517 23.5581 145.991 cv
23.5581 146.422 23.5151 147.471 23.5151 147.902 cv
23.5151 148.003 23.5151 148.175 23.8027 148.175 cv
23.9609 148.175 23.9609 148.046 23.9609 147.773 cv
23.9609 147.744 23.9609 147.472 23.9897 147.228 cv
24.019 146.969 24.0332 146.84 24.2188 146.84 cv
24.2769 146.84 24.3198 146.854 24.4922 146.898 cv
32.2061 148.823 li
32.7671 148.967 32.8809 148.995 32.8809 150.13 cv
32.8809 150.375 32.8809 150.519 33.1689 150.519 cv
33.3271 150.519 33.3271 150.39 33.3271 150.13 cv
33.3271 143.48 li
33.3271 143.134 33.3271 143.121 33.082 143.034 cv
29.979 141.9 li
29.8218 141.842 29.793 141.842 29.7778 141.842 cv
29.7212 141.842 29.6201 141.885 29.6201 142.014 cv
29.6201 142.143 29.6919 142.158 29.9219 142.258 cv
31.2432 142.747 32.8799 143.379 32.8799 145.864 cv
32.8799 147.215 li
32.8799 147.416 32.8799 147.445 32.8647 147.531 cv
32.8511 147.675 32.8379 147.718 32.7222 147.718 cv
32.6792 147.718 32.6499 147.718 32.3911 147.646 cv
24.6348 145.705 li
f
grestore
gsave
3.72609 113.037 mo
33.3262 113.037 li
33.3262 151.837 li
3.72609 151.837 li
3.72609 113.037 li
clp
18.7891 125.128 mo
18.7891 124.913 18.7891 124.64 18.501 124.64 cv
18.2129 124.64 18.2129 124.912 18.2129 125.114 cv
18.2129 133.719 li
18.2129 133.92 18.2129 134.193 18.501 134.193 cv
18.7891 134.193 18.7891 133.92 18.7891 133.704 cv
18.7891 125.128 li
cp
21.5752 125.113 mo
21.5752 124.912 21.5752 124.639 21.2871 124.639 cv
21.001 124.64 21.001 124.912 21.001 125.128 cv
21.001 133.705 li
21.001 133.921 21.001 134.194 21.2881 134.194 cv
21.5762 134.194 21.5762 133.921 21.5762 133.72 cv
21.5762 125.113 li
f
grestore
gsave
3.72609 113.037 mo
33.3262 113.037 li
33.3262 151.837 li
3.72609 151.837 li
3.72609 113.037 li
clp
18.8892 113.229 mo
17.7397 113.229 16.5898 113.301 15.5269 113.803 cv
14.1479 114.465 13.918 115.642 13.918 116.245 cv
13.918 117.107 14.292 118.156 15.627 118.744 cv
16.6191 119.204 17.7388 119.276 18.8882 119.276 cv
19.9658 119.276 21.2578 119.218 22.3501 118.629 cv
23.5132 118.012 23.8008 116.963 23.8008 116.259 cv
23.8008 115.484 23.499 114.392 22.1338 113.759 cv
21.144 113.301 20.0229 113.229 18.8892 113.229 cv
cp
23.4858 116.26 mo
23.4858 116.821 23.127 117.668 21.748 117.927 cv
20.8857 118.085 19.564 118.085 18.7168 118.085 cv
17.7969 118.085 16.8491 118.085 16.0742 117.97 cv
14.3638 117.697 14.2349 116.619 14.2349 116.261 cv
14.2349 115.787 14.4932 114.839 15.916 114.566 cv
16.7212 114.423 17.813 114.423 18.7178 114.423 cv
19.7949 114.423 20.7729 114.423 21.6909 114.581 cv
23.0552 114.795 23.4858 115.613 23.4858 116.26 cv
f
grestore
gsave
20.5259 230.913 mo
33.4248 230.913 li
33.4248 271.413 li
20.5259 271.413 li
20.5259 230.913 li
clp
gsave
20.5259 230.913 mo
33.5259 230.913 li
33.5259 271.413 li
20.5259 271.413 li
20.5259 230.913 li
clp
gsave
20.5259 230.913 mo
33.5259 230.913 li
33.5259 271.413 li
20.5259 271.413 li
20.5259 230.913 li
clp
gsave
20.5259 230.913 mo
33.5259 230.913 li
33.5259 271.413 li
20.5259 271.413 li
20.5259 230.913 li
clp
31.7671 270.182 mo
32.0371 270.235 32.4492 270.342 32.5391 270.342 cv
32.8618 270.342 33.0229 270.092 33.0229 269.822 cv
33.0229 269.606 32.8789 269.283 32.52 269.157 cv
32.4478 269.121 30.0059 268.51 29.6841 268.439 cv
29.0898 268.293 27.833 267.971 27.3491 267.864 cv
27.1162 267.792 26.271 267.29 25.876 266.859 cv
25.75 266.713 25.2832 266.195 25.2832 265.42 cv
25.2832 264.954 25.499 264.685 25.499 264.667 cv
25.5889 265.206 26.02 265.601 26.4858 265.601 cv
26.7729 265.601 27.1147 265.404 27.1147 264.918 cv
27.1147 264.434 26.7021 263.93 26.0552 263.93 cv
25.4258 263.93 24.8882 264.504 24.8882 265.42 cv
24.8882 266.588 25.7681 267.379 26.27 267.719 cv
25.4619 267.864 24.8882 268.51 24.8882 269.355 cv
24.8882 270.18 25.5879 270.521 25.9111 270.682 cv
26.521 271.006 27.5991 271.24 27.6519 271.24 cv
27.832 271.24 27.832 271.06 27.832 271.025 cv
27.832 270.844 27.814 270.828 27.4189 270.719 cv
26.145 270.413 25.2822 270.053 25.2822 269.407 cv
25.2822 269.102 25.4258 268.85 26.1079 268.85 cv
26.4849 268.85 26.6821 268.905 27.6172 269.137 cv
31.7671 270.182 li
f
26.9541 245.826 mo
26.9541 245.555 26.9541 245.215 26.5952 245.215 cv
26.2358 245.215 26.2358 245.557 26.2358 245.807 cv
26.2358 256.564 li
26.2358 256.816 26.2358 257.158 26.5952 257.158 cv
26.9541 257.158 26.9541 256.816 26.9541 256.547 cv
26.9541 245.826 li
cp
30.438 245.807 mo
30.438 245.555 30.438 245.215 30.0791 245.215 cv
29.7212 245.215 29.7212 245.555 29.7212 245.825 cv
29.7212 256.545 li
29.7212 256.815 29.7212 257.156 30.0791 257.156 cv
30.438 257.156 30.438 256.814 30.438 256.563 cv
30.438 245.807 li
f
27.0801 231.002 mo
25.6431 231.002 24.207 231.092 22.8779 231.721 cv
21.1538 232.547 20.8662 234.019 20.8662 234.774 cv
20.8662 235.85 21.334 237.163 23.0029 237.898 cv
24.2422 238.473 25.644 238.563 27.0801 238.563 cv
28.4268 238.563 30.042 238.492 31.4067 237.754 cv
32.8608 236.982 33.2202 235.67 33.2202 234.792 cv
33.2202 233.822 32.8428 232.458 31.1372 231.667 cv
29.8979 231.092 28.499 231.002 27.0801 231.002 cv
cp
32.8262 234.792 mo
32.8262 235.491 32.377 236.551 30.6528 236.874 cv
29.5762 237.072 27.9238 237.072 26.8638 237.072 cv
25.7158 237.072 24.5298 237.072 23.5601 236.928 cv
21.4219 236.586 21.2607 235.239 21.2607 234.792 cv
21.2607 234.197 21.584 233.012 23.3628 232.672 cv
24.3691 232.492 25.7329 232.492 26.8638 232.492 cv
28.2119 232.492 29.4321 232.492 30.582 232.689 cv
32.2871 232.959 32.8262 233.983 32.8262 234.792 cv
f
grestore
grestore
grestore
gsave
22.8999 183.926 mo
30.8999 183.926 li
30.8999 196.825 li
22.8999 196.825 li
22.8999 183.926 li
clp
gsave
22.8999 183.926 mo
30.8999 183.926 li
30.8999 196.926 li
22.8999 196.926 li
22.8999 183.926 li
clp
30.8599 190.48 mo
30.8599 189.043 30.77 187.607 30.1421 186.278 cv
29.3149 184.554 27.8428 184.266 27.0889 184.266 cv
26.0107 184.266 24.7012 184.734 23.9648 186.403 cv
23.3901 187.642 23.2998 189.044 23.2998 190.48 cv
23.2998 191.827 23.3721 193.442 24.1089 194.807 cv
24.8809 196.261 26.1919 196.62 27.0708 196.62 cv
28.041 196.62 29.4048 196.243 30.1958 194.537 cv
30.77 193.298 30.8599 191.899 30.8599 190.48 cv
cp
27.0708 196.226 mo
26.3711 196.226 25.312 195.777 24.9878 194.053 cv
24.791 192.976 24.791 191.324 24.791 190.264 cv
24.791 189.116 24.791 187.93 24.9351 186.96 cv
25.2759 184.822 26.623 184.661 27.0708 184.661 cv
27.6641 184.661 28.8491 184.984 29.1909 186.763 cv
29.3701 187.769 29.3701 189.133 29.3701 190.264 cv
29.3701 191.612 29.3701 192.832 29.1729 193.982 cv
28.9028 195.687 27.8789 196.226 27.0708 196.226 cv
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
100.842 91.6997 mo
100.612 91.6997 100.411 91.6997 100.21 91.9009 cv
99.98 92.1157 99.9512 92.3608 99.9512 92.4619 cv
99.9512 92.8066 100.21 92.9639 100.482 92.9639 cv
100.899 92.9639 101.287 92.6196 101.287 92.0449 cv
101.287 91.3408 100.611 90.8101 99.5908 90.8101 cv
97.6519 90.8101 95.7412 92.8638 95.7412 94.8896 cv
95.7412 96.1826 96.5737 97.3179 98.0688 97.3179 cv
100.123 97.3179 101.33 95.7949 101.33 95.6226 cv
101.158 95.436 li
101.086 95.436 101.057 95.4648 100.971 95.5796 cv
99.8359 97.002 98.27 97.002 98.0981 97.002 cv
97.1938 97.002 96.8052 96.2979 96.8052 95.436 cv
96.8052 94.8467 97.0918 93.4536 97.5801 92.563 cv
98.0249 91.7437 98.8159 91.126 99.605 91.126 cv
100.096 91.125 100.642 91.312 100.842 91.6997 cv
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
107.488 88.439 mo
107.589 88.0366 107.646 87.9507 107.818 87.9077 cv
107.947 87.8799 108.422 87.8799 108.723 87.8799 cv
110.174 87.8799 110.821 87.937 110.821 89.0566 cv
110.821 89.2729 110.763 89.833 110.706 90.2056 cv
110.663 90.479 li
110.663 90.5649 110.706 90.666 110.835 90.666 cv
110.993 90.666 111.022 90.5508 111.051 90.335 cv
111.438 87.8359 li
111.467 87.5908 li
111.467 87.4331 111.323 87.4331 111.079 87.4331 cv
103.106 87.4331 li
102.762 87.4331 102.747 87.4478 102.647 87.7207 cv
101.785 90.249 li
101.699 90.5078 li
101.699 90.5938 101.771 90.666 101.871 90.666 cv
102.015 90.666 102.029 90.5938 102.116 90.3638 cv
102.892 88.1367 103.265 87.8779 105.392 87.8779 cv
105.952 87.8779 li
106.354 87.8779 106.354 87.936 106.354 88.0498 cv
106.297 88.3521 li
104.372 96.0229 li
104.243 96.5547 104.2 96.7119 102.663 96.7119 cv
102.145 96.7119 102.059 96.7119 102.059 96.9849 cv
102.059 97.1567 102.217 97.1567 102.303 97.1567 cv
102.691 97.1567 103.094 97.1279 103.481 97.1279 cv
103.883 97.1279 104.3 97.1138 104.702 97.1138 cv
105.104 97.1138 105.506 97.1279 105.894 97.1279 cv
106.311 97.1279 106.742 97.1567 107.144 97.1567 cv
107.288 97.1567 107.46 97.1567 107.46 96.8687 cv
107.46 96.7109 107.345 96.7109 106.971 96.7109 cv
106.613 96.7109 106.425 96.7109 106.052 96.6816 cv
105.635 96.6387 105.521 96.5957 105.521 96.3657 cv
105.521 96.3521 105.521 96.2798 105.579 96.064 cv
107.488 88.439 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
95.1401 103.996 mo
111.724 103.996 li
111.724 102.563 li
95.1401 102.563 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
103.926 108.028 mo
104.055 107.511 104.099 107.353 105.449 107.353 cv
105.88 107.353 105.995 107.353 105.995 107.08 cv
105.995 106.908 105.837 106.908 105.766 106.908 cv
105.292 106.908 104.114 106.951 103.64 106.951 cv
103.209 106.951 102.16 106.908 101.729 106.908 cv
101.628 106.908 101.456 106.908 101.456 107.196 cv
101.456 107.354 101.585 107.354 101.859 107.354 cv
101.887 107.354 102.16 107.354 102.404 107.383 cv
102.663 107.412 102.792 107.426 102.792 107.612 cv
102.792 107.67 102.777 107.713 102.734 107.885 cv
100.809 115.6 li
100.665 116.161 100.637 116.274 99.501 116.274 cv
99.2568 116.274 99.1128 116.274 99.1128 116.562 cv
99.1128 116.72 99.2422 116.72 99.501 116.72 cv
106.152 116.72 li
106.497 116.72 106.511 116.72 106.598 116.475 cv
107.732 113.372 li
107.79 113.215 107.79 113.185 107.79 113.171 cv
107.79 113.113 107.747 113.013 107.618 113.013 cv
107.489 113.013 107.474 113.085 107.373 113.315 cv
106.884 114.636 106.252 116.273 103.768 116.273 cv
102.417 116.273 li
102.216 116.273 102.187 116.273 102.101 116.259 cv
101.957 116.244 101.915 116.231 101.915 116.116 cv
101.915 116.073 101.915 116.044 101.986 115.785 cv
103.926 108.028 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
127.303 102.182 mo
127.519 102.182 127.791 102.182 127.791 101.894 cv
127.791 101.606 127.519 101.606 127.317 101.606 cv
118.713 101.606 li
118.513 101.606 118.237 101.606 118.237 101.894 cv
118.237 102.182 118.511 102.182 118.728 102.182 cv
127.303 102.182 li
cp
127.317 104.968 mo
127.519 104.968 127.79 104.968 127.79 104.68 cv
127.79 104.393 127.519 104.393 127.302 104.393 cv
118.726 104.393 li
118.51 104.393 118.237 104.393 118.237 104.68 cv
118.237 104.968 118.51 104.968 118.712 104.968 cv
127.317 104.968 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
142.062 103.575 mo
142.306 103.575 142.563 103.575 142.563 103.288 cv
142.563 103 142.306 103 142.062 103 cv
134.289 103 li
134.046 103 133.787 103 133.787 103.288 cv
133.787 103.575 134.046 103.575 134.289 103.575 cv
142.062 103.575 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
150.819 88.3389 mo
150.907 87.9946 150.949 87.8511 151.222 87.8076 cv
151.353 87.793 151.812 87.793 152.099 87.793 cv
153.119 87.793 154.712 87.793 154.712 89.2148 cv
154.712 89.7036 154.483 90.6948 153.923 91.2549 cv
153.55 91.6289 152.788 92.0879 151.495 92.0879 cv
149.886 92.0879 li
150.819 88.3389 li
cp
152.89 92.2749 mo
154.341 91.959 156.05 90.9526 156.05 89.5029 cv
156.05 88.2666 154.757 87.3477 152.875 87.3477 cv
148.782 87.3477 li
148.494 87.3477 148.364 87.3477 148.364 87.6357 cv
148.364 87.7939 148.494 87.7939 148.767 87.7939 cv
148.795 87.7939 149.067 87.7939 149.313 87.8228 cv
149.571 87.8521 149.701 87.8657 149.701 88.0518 cv
149.701 88.1099 149.687 88.1528 149.642 88.3247 cv
147.717 96.0386 li
147.573 96.5996 147.545 96.7139 146.41 96.7139 cv
146.151 96.7139 146.021 96.7139 146.021 97.002 cv
146.021 97.1597 146.194 97.1597 146.224 97.1597 cv
146.625 97.1597 147.63 97.1167 148.032 97.1167 cv
148.435 97.1167 149.455 97.1597 149.856 97.1597 cv
149.972 97.1597 150.146 97.1597 150.146 96.8716 cv
150.146 96.7139 150.015 96.7139 149.743 96.7139 cv
149.211 96.7139 148.808 96.7139 148.808 96.4556 cv
148.851 96.2109 li
149.799 92.4038 li
151.509 92.4038 li
152.817 92.4038 153.073 93.208 153.073 93.7119 cv
153.073 93.9268 152.96 94.3726 152.873 94.7026 cv
152.772 95.105 152.644 95.6367 152.644 95.9238 cv
152.644 97.4756 154.367 97.4756 154.554 97.4756 cv
155.774 97.4756 156.278 96.0249 156.278 95.8237 cv
156.278 95.6519 156.121 95.6519 156.104 95.6519 cv
155.976 95.6519 155.948 95.752 155.918 95.853 cv
155.56 96.916 154.94 97.1606 154.61 97.1606 cv
154.136 97.1606 154.036 96.8447 154.036 96.2847 cv
154.036 95.8389 154.123 95.1069 154.18 94.647 cv
154.209 94.4458 154.237 94.1719 154.237 93.9707 cv
154.239 92.8638 153.278 92.4189 152.89 92.2749 cv
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
145.453 103.996 mo
156.456 103.996 li
156.456 102.563 li
145.453 102.563 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
151.446 108.028 mo
151.575 107.511 151.618 107.353 152.969 107.353 cv
153.399 107.353 153.515 107.353 153.515 107.08 cv
153.515 106.908 153.356 106.908 153.285 106.908 cv
152.81 106.908 151.634 106.951 151.159 106.951 cv
150.728 106.951 149.679 106.908 149.248 106.908 cv
149.147 106.908 148.976 106.908 148.976 107.196 cv
148.976 107.354 149.104 107.354 149.377 107.354 cv
149.405 107.354 149.679 107.354 149.924 107.383 cv
150.183 107.412 150.312 107.426 150.312 107.612 cv
150.312 107.67 150.297 107.713 150.254 107.885 cv
148.329 115.6 li
148.185 116.161 148.155 116.274 147.021 116.274 cv
146.776 116.274 146.633 116.274 146.633 116.562 cv
146.633 116.72 146.762 116.72 147.021 116.72 cv
153.672 116.72 li
154.017 116.72 154.03 116.72 154.117 116.475 cv
155.251 113.372 li
155.31 113.215 155.31 113.185 155.31 113.171 cv
155.31 113.113 155.267 113.013 155.138 113.013 cv
155.008 113.013 154.993 113.085 154.894 113.315 cv
154.403 114.636 153.772 116.273 151.288 116.273 cv
149.937 116.273 li
149.735 116.273 149.707 116.273 149.621 116.259 cv
149.478 116.244 149.435 116.231 149.435 116.116 cv
149.435 116.073 149.435 116.044 149.505 115.785 cv
151.442 108.027 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
167.229 103.575 mo
171.237 103.575 li
171.438 103.575 171.712 103.575 171.712 103.288 cv
171.712 103 171.44 103 171.237 103 cv
167.229 103 li
167.229 98.9771 li
167.229 98.7759 167.229 98.5039 166.942 98.5039 cv
166.655 98.5039 166.655 98.7759 166.655 98.9771 cv
166.655 103 li
162.633 103 li
162.433 103 162.159 103 162.159 103.288 cv
162.159 103.575 162.431 103.575 162.633 103.575 cv
166.655 103.575 li
166.655 107.597 li
166.655 107.798 166.655 108.071 166.942 108.071 cv
167.229 108.071 167.229 107.798 167.229 107.597 cv
167.229 103.575 li
f
grestore
gsave
94.834 87.1187 mo
184.034 87.1187 li
184.034 116.719 li
94.834 116.719 li
94.834 87.1187 li
clp
179.521 101.521 mo
181.144 101.521 li
180.67 103.647 180.541 104.265 180.541 105.228 cv
180.541 105.443 180.541 105.832 180.655 106.32 cv
180.799 106.952 180.958 107.038 181.173 107.038 cv
181.46 107.038 181.763 106.779 181.763 106.492 cv
181.763 106.406 181.763 106.378 181.675 106.176 cv
181.259 105.142 181.259 104.208 181.259 103.805 cv
181.259 103.044 181.36 102.268 181.519 101.521 cv
183.155 101.521 li
183.343 101.521 183.86 101.521 183.86 101.032 cv
183.86 100.687 183.558 100.687 183.285 100.687 cv
178.474 100.687 li
178.157 100.687 177.612 100.687 176.979 101.363 cv
176.476 101.923 176.104 102.584 176.104 102.655 cv
176.104 102.669 176.104 102.799 176.276 102.799 cv
176.39 102.799 176.42 102.741 176.505 102.626 cv
177.209 101.521 178.042 101.521 178.329 101.521 cv
179.147 101.521 li
178.688 103.259 177.913 104.998 177.31 106.305 cv
177.194 106.52 177.194 106.549 177.194 106.65 cv
177.194 106.923 177.424 107.038 177.61 107.038 cv
178.042 107.038 178.157 106.636 178.329 106.104 cv
178.53 105.443 178.53 105.415 178.718 104.696 cv
179.521 101.521 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
106.242 267.699 mo
106.012 267.699 105.811 267.699 105.61 267.9 cv
105.38 268.116 105.351 268.361 105.351 268.461 cv
105.351 268.807 105.61 268.963 105.882 268.963 cv
106.299 268.963 106.687 268.619 106.687 268.045 cv
106.687 267.34 106.011 266.809 104.991 266.809 cv
103.052 266.809 101.141 268.864 101.141 270.889 cv
101.141 272.182 101.974 273.317 103.469 273.317 cv
105.523 273.317 106.73 271.793 106.73 271.622 cv
106.558 271.434 li
106.486 271.434 106.457 271.463 106.371 271.579 cv
105.236 273 103.67 273 103.498 273 cv
102.594 273 102.205 272.297 102.205 271.434 cv
102.205 270.846 102.492 269.454 102.98 268.563 cv
103.425 267.744 104.216 267.125 105.005 267.125 cv
105.496 267.125 106.042 267.311 106.242 267.699 cv
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
112.888 264.439 mo
112.989 264.035 113.046 263.951 113.218 263.908 cv
113.347 263.879 113.821 263.879 114.123 263.879 cv
115.574 263.879 116.222 263.936 116.222 265.057 cv
116.222 265.272 116.163 265.833 116.106 266.205 cv
116.063 266.478 li
116.063 266.565 116.106 266.667 116.235 266.667 cv
116.394 266.667 116.422 266.549 116.451 266.334 cv
116.839 263.836 li
116.867 263.59 li
116.867 263.432 116.724 263.432 116.479 263.432 cv
108.506 263.432 li
108.162 263.432 108.147 263.448 108.047 263.721 cv
107.185 266.249 li
107.099 266.508 li
107.099 266.594 107.171 266.667 107.271 266.667 cv
107.415 266.667 107.429 266.594 107.516 266.363 cv
108.292 264.135 108.665 263.877 110.792 263.877 cv
111.353 263.877 li
111.754 263.877 111.754 263.936 111.754 264.049 cv
111.696 264.352 li
109.772 272.024 li
109.643 272.555 109.6 272.713 108.063 272.713 cv
107.545 272.713 107.459 272.713 107.459 272.986 cv
107.459 273.158 107.617 273.158 107.703 273.158 cv
108.091 273.158 108.494 273.129 108.881 273.129 cv
109.283 273.129 109.7 273.115 110.102 273.115 cv
110.504 273.115 110.906 273.129 111.294 273.129 cv
111.711 273.129 112.142 273.158 112.544 273.158 cv
112.688 273.158 112.86 273.158 112.86 272.87 cv
112.86 272.713 112.745 272.713 112.371 272.713 cv
112.013 272.713 111.825 272.713 111.452 272.684 cv
111.035 272.641 110.921 272.598 110.921 272.37 cv
110.921 272.354 110.921 272.282 110.979 272.067 cv
112.89 264.438 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
100.558 279.995 mo
117.142 279.995 li
117.142 278.562 li
100.558 278.562 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
109.326 284.027 mo
109.455 283.51 109.499 283.351 110.849 283.351 cv
111.28 283.351 111.396 283.351 111.396 283.08 cv
111.396 282.906 111.237 282.906 111.166 282.906 cv
110.692 282.906 109.514 282.949 109.04 282.949 cv
108.609 282.949 107.56 282.906 107.129 282.906 cv
107.028 282.906 106.856 282.906 106.856 283.194 cv
106.856 283.351 106.985 283.351 107.259 283.351 cv
107.287 283.351 107.56 283.351 107.804 283.379 cv
108.063 283.409 108.192 283.422 108.192 283.609 cv
108.192 283.668 108.177 283.711 108.134 283.881 cv
106.209 291.596 li
106.065 292.158 106.037 292.272 104.901 292.272 cv
104.657 292.272 104.513 292.272 104.513 292.56 cv
104.513 292.717 104.642 292.717 104.901 292.717 cv
111.552 292.717 li
111.897 292.717 111.911 292.717 111.998 292.471 cv
113.132 289.369 li
113.19 289.211 113.19 289.182 113.19 289.168 cv
113.19 289.111 113.147 289.01 113.019 289.01 cv
112.89 289.01 112.874 289.083 112.772 289.314 cv
112.284 290.633 111.651 292.272 109.168 292.272 cv
107.817 292.272 li
107.616 292.272 107.587 292.272 107.501 292.256 cv
107.357 292.243 107.315 292.23 107.315 292.114 cv
107.315 292.071 107.315 292.042 107.386 291.783 cv
109.326 284.027 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
132.703 278.18 mo
132.918 278.18 133.19 278.18 133.19 277.893 cv
133.19 277.605 132.918 277.605 132.717 277.605 cv
124.112 277.605 li
123.912 277.605 123.638 277.605 123.638 277.893 cv
123.638 278.18 123.911 278.18 124.126 278.18 cv
132.703 278.18 li
cp
132.717 280.967 mo
132.917 280.967 133.19 280.967 133.19 280.678 cv
133.19 280.393 132.918 280.393 132.703 280.393 cv
124.127 280.393 li
123.911 280.393 123.638 280.393 123.638 280.678 cv
123.638 280.967 123.911 280.967 124.112 280.967 cv
132.717 280.967 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
145.101 264.338 mo
145.187 263.994 145.229 263.85 145.502 263.807 cv
145.632 263.792 146.091 263.792 146.378 263.792 cv
147.399 263.792 148.993 263.792 148.993 265.213 cv
148.993 265.703 148.765 266.694 148.204 267.254 cv
147.831 267.627 147.069 268.088 145.776 268.088 cv
144.167 268.088 li
145.101 264.338 li
cp
147.169 268.273 mo
148.62 267.958 150.331 266.952 150.331 265.502 cv
150.331 264.266 149.036 263.346 147.155 263.346 cv
143.062 263.346 li
142.774 263.346 142.644 263.346 142.644 263.635 cv
142.644 263.792 142.774 263.792 143.047 263.792 cv
143.075 263.792 143.349 263.792 143.593 263.82 cv
143.851 263.848 143.979 263.863 143.979 264.049 cv
143.979 264.107 143.966 264.151 143.923 264.322 cv
141.998 272.036 li
141.854 272.596 141.825 272.711 140.69 272.711 cv
140.431 272.711 140.301 272.711 140.301 272.999 cv
140.301 273.157 140.474 273.157 140.502 273.157 cv
140.903 273.157 141.91 273.114 142.313 273.114 cv
142.716 273.114 143.735 273.157 144.138 273.157 cv
144.252 273.157 144.424 273.157 144.424 272.869 cv
144.424 272.711 144.295 272.711 144.022 272.711 cv
143.491 272.711 143.088 272.711 143.088 272.454 cv
143.131 272.209 li
144.079 268.401 li
145.789 268.401 li
147.095 268.401 147.354 269.206 147.354 269.709 cv
147.354 269.924 147.239 270.37 147.153 270.701 cv
147.052 271.103 146.924 271.635 146.924 271.922 cv
146.924 273.473 148.647 273.473 148.836 273.473 cv
150.058 273.473 150.56 272.023 150.56 271.822 cv
150.56 271.65 150.401 271.65 150.388 271.65 cv
150.258 271.65 150.229 271.75 150.199 271.85 cv
149.842 272.913 149.222 273.159 148.892 273.159 cv
148.417 273.159 148.317 272.842 148.317 272.283 cv
148.317 271.838 148.403 271.104 148.463 270.643 cv
148.489 270.443 148.521 270.168 148.521 269.967 cv
148.521 268.863 147.558 268.418 147.169 268.273 cv
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
139.713 279.995 mo
150.716 279.995 li
150.716 278.562 li
139.713 278.562 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
145.687 284.027 mo
145.815 283.51 145.858 283.351 147.21 283.351 cv
147.64 283.351 147.755 283.351 147.755 283.08 cv
147.755 282.906 147.597 282.906 147.526 282.906 cv
147.049 282.906 145.873 282.949 145.399 282.949 cv
144.968 282.949 143.92 282.906 143.487 282.906 cv
143.388 282.906 143.215 282.906 143.215 283.194 cv
143.215 283.351 143.345 283.351 143.618 283.351 cv
143.646 283.351 143.919 283.351 144.164 283.379 cv
144.422 283.409 144.551 283.422 144.551 283.609 cv
144.551 283.668 144.537 283.711 144.494 283.881 cv
142.569 291.596 li
142.425 292.158 142.396 292.272 141.261 292.272 cv
141.017 292.272 140.873 292.272 140.873 292.56 cv
140.873 292.717 141.002 292.717 141.261 292.717 cv
147.913 292.717 li
148.257 292.717 148.272 292.717 148.358 292.471 cv
149.491 289.369 li
149.55 289.211 149.55 289.182 149.55 289.168 cv
149.55 289.111 149.507 289.01 149.378 289.01 cv
149.249 289.01 149.233 289.083 149.134 289.314 cv
148.644 290.633 148.013 292.272 145.528 292.272 cv
144.177 292.272 li
143.976 292.272 143.948 292.272 143.86 292.256 cv
143.717 292.243 143.674 292.23 143.674 292.114 cv
143.674 292.071 143.674 292.042 143.745 291.783 cv
145.687 284.027 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
165.101 279.574 mo
165.345 279.574 165.604 279.574 165.604 279.287 cv
165.604 279 165.345 279 165.101 279 cv
157.328 279 li
157.084 279 156.826 279 156.826 279.287 cv
156.826 279.574 157.084 279.574 157.328 279.574 cv
165.101 279.574 li
f
grestore
gsave
100.434 263.119 mo
178.433 263.119 li
178.433 292.719 li
100.434 292.719 li
100.434 263.119 li
clp
173.761 277.519 mo
175.384 277.519 li
174.909 279.646 174.78 280.262 174.78 281.226 cv
174.78 281.441 174.78 281.83 174.896 282.318 cv
175.038 282.951 175.198 283.037 175.413 283.037 cv
175.7 283.037 176.001 282.777 176.001 282.49 cv
176.001 282.404 176.001 282.377 175.915 282.174 cv
175.499 281.141 175.499 280.208 175.499 279.805 cv
175.499 279.043 175.599 278.268 175.757 277.52 cv
177.394 277.52 li
177.582 277.52 178.099 277.52 178.099 277.032 cv
178.099 276.687 177.798 276.687 177.524 276.687 cv
172.713 276.687 li
172.397 276.687 171.853 276.687 171.219 277.363 cv
170.715 277.922 170.344 278.583 170.344 278.655 cv
170.344 278.668 170.344 278.799 170.517 278.799 cv
170.629 278.799 170.659 278.741 170.745 278.625 cv
171.45 277.521 172.284 277.521 172.569 277.521 cv
173.387 277.521 li
172.931 279.258 172.153 280.998 171.549 282.305 cv
171.435 282.52 171.435 282.547 171.435 282.65 cv
171.435 282.922 171.664 283.037 171.853 283.037 cv
172.284 283.037 172.397 282.637 172.569 282.105 cv
172.771 281.443 172.771 281.416 172.958 280.696 cv
173.761 277.519 li
f
grestore
35.8535 60.0484 mo
40.0967 55.8052 li
39.3896 55.0981 li
35.1464 59.3413 li
f
49.7124 46.1895 mo
59.329 36.5729 li
58.6219 35.8658 li
49.0053 45.4824 li
cp
68.9456 26.9563 mo
78.5622 17.3397 li
77.8551 16.6326 li
68.2385 26.2492 li
cp
f
88.1797 7.72221 mo
92.4214 3.48051 li
91.7143 2.7734 li
87.4726 7.0151 li
f
33.2954 321.057 mo
37.5386 325.299 li
38.2456 324.592 li
34.0024 320.35 li
f
47.1543 334.917 mo
56.771 344.533 li
57.4781 343.826 li
47.8614 334.209 li
cp
66.3877 354.149 mo
76.0044 363.766 li
76.7115 363.059 li
67.0948 353.442 li
cp
f
85.6215 373.383 mo
89.8632 377.625 li
90.5704 376.918 li
86.3287 372.676 li
f
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
106.242 8.28174 mo
106.013 8.28174 105.811 8.28174 105.61 8.48291 cv
105.38 8.69873 105.351 8.94287 105.351 9.04395 cv
105.351 9.3877 105.61 9.5459 105.882 9.5459 cv
106.299 9.5459 106.688 9.20068 106.688 8.62598 cv
106.688 7.92285 106.012 7.39063 104.992 7.39063 cv
103.054 7.39063 101.141 9.44482 101.141 11.4697 cv
101.141 12.7627 101.975 13.8979 103.469 13.8979 cv
105.524 13.8979 106.731 12.375 106.731 12.2026 cv
106.558 12.0156 li
106.487 12.0156 106.457 12.0449 106.371 12.1587 cv
105.236 13.5806 103.67 13.5806 103.498 13.5806 cv
102.594 13.5806 102.205 12.877 102.205 12.0156 cv
102.205 11.4268 102.492 10.0337 102.98 9.14307 cv
103.425 8.32373 104.215 7.70459 105.005 7.70459 cv
105.495 7.70557 106.042 7.89404 106.242 8.28174 cv
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
112.888 5.021 mo
112.989 4.61865 113.045 4.53271 113.217 4.48975 cv
113.347 4.46094 113.821 4.46094 114.122 4.46094 cv
115.573 4.46094 116.22 4.51904 116.22 5.6377 cv
116.22 5.854 116.162 6.41455 116.106 6.78662 cv
116.063 7.06006 li
116.063 7.146 116.106 7.24658 116.235 7.24658 cv
116.394 7.24658 116.422 7.13184 116.45 6.91602 cv
116.839 4.41602 li
116.866 4.17188 li
116.866 4.01367 116.724 4.01367 116.479 4.01367 cv
108.505 4.01367 li
108.16 4.01367 108.147 4.02881 108.046 4.30176 cv
107.184 6.82959 li
107.098 7.08789 li
107.098 7.17383 107.17 7.24561 107.27 7.24561 cv
107.414 7.24561 107.428 7.17383 107.514 6.94385 cv
108.289 4.7168 108.663 4.45898 110.789 4.45898 cv
111.351 4.45898 li
111.752 4.45898 111.752 4.5166 111.752 4.63086 cv
111.694 4.93262 li
109.769 12.604 li
109.64 13.1357 109.597 13.293 108.06 13.293 cv
107.542 13.293 107.456 13.293 107.456 13.5659 cv
107.456 13.7378 107.614 13.7378 107.7 13.7378 cv
108.088 13.7378 108.49 13.71 108.878 13.71 cv
109.28 13.71 109.696 13.6948 110.099 13.6948 cv
110.502 13.6948 110.904 13.71 111.291 13.71 cv
111.708 13.71 112.14 13.7378 112.541 13.7378 cv
112.685 13.7378 112.856 13.7378 112.856 13.4497 cv
112.856 13.292 112.743 13.292 112.368 13.292 cv
112.011 13.292 111.823 13.292 111.45 13.2627 cv
111.033 13.2207 110.919 13.1777 110.919 12.9478 cv
110.919 12.9326 110.919 12.8618 110.976 12.646 cv
112.888 5.021 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
100.557 20.5772 mo
117.142 20.5772 li
117.142 19.1444 li
100.557 19.1444 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
109.325 24.6089 mo
109.455 24.0928 109.499 23.9341 110.848 23.9341 cv
111.28 23.9341 111.396 23.9341 111.396 23.6606 cv
111.396 23.4878 111.237 23.4878 111.165 23.4878 cv
110.691 23.4878 109.513 23.5308 109.039 23.5308 cv
108.608 23.5308 107.56 23.4878 107.128 23.4878 cv
107.028 23.4878 106.855 23.4878 106.855 23.7759 cv
106.855 23.9341 106.985 23.9341 107.258 23.9341 cv
107.286 23.9341 107.559 23.9341 107.804 23.9629 cv
108.062 23.9917 108.192 24.0059 108.192 24.1919 cv
108.192 24.25 108.177 24.293 108.134 24.4648 cv
106.208 32.1787 li
106.065 32.7397 106.036 32.854 104.901 32.854 cv
104.657 32.854 104.512 32.854 104.512 33.1406 cv
104.512 33.2988 104.641 33.2988 104.901 33.2988 cv
111.551 33.2988 li
111.897 33.2988 111.91 33.2988 111.997 33.0547 cv
113.131 29.9507 li
113.19 29.7939 113.19 29.7646 113.19 29.75 cv
113.19 29.6929 113.147 29.5918 113.019 29.5918 cv
112.888 29.5918 112.873 29.6636 112.772 29.894 cv
112.284 31.2148 111.653 32.853 109.168 32.853 cv
107.817 32.853 li
107.616 32.853 107.587 32.853 107.501 32.8379 cv
107.356 32.8228 107.314 32.8101 107.314 32.6948 cv
107.314 32.6519 107.314 32.6226 107.385 32.3638 cv
109.325 24.6089 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
132.702 18.7627 mo
132.918 18.7627 133.19 18.7627 133.19 18.4761 cv
133.19 18.188 132.918 18.188 132.717 18.188 cv
124.112 18.188 li
123.911 18.188 123.638 18.188 123.638 18.4761 cv
123.638 18.7627 123.91 18.7627 124.125 18.7627 cv
132.702 18.7627 li
cp
132.717 21.5498 mo
132.917 21.5498 133.19 21.5498 133.19 21.2617 cv
133.19 20.9746 132.918 20.9746 132.702 20.9746 cv
124.126 20.9746 li
123.911 20.9746 123.638 20.9746 123.638 21.2617 cv
123.638 21.5498 123.911 21.5498 124.112 21.5498 cv
132.717 21.5498 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
145.101 4.91992 mo
145.187 4.57568 145.229 4.43164 145.502 4.38867 cv
145.631 4.375 146.09 4.375 146.378 4.375 cv
147.399 4.375 148.993 4.375 148.993 5.79688 cv
148.993 6.28564 148.765 7.27686 148.204 7.83691 cv
147.831 8.21094 147.069 8.66992 145.776 8.66992 cv
144.167 8.66992 li
145.101 4.91992 li
cp
147.169 8.85596 mo
148.62 8.53955 150.331 7.53369 150.331 6.08398 cv
150.331 4.84863 149.036 3.92871 147.155 3.92871 cv
143.062 3.92871 li
142.774 3.92871 142.644 3.92871 142.644 4.21582 cv
142.644 4.37402 142.774 4.37402 143.047 4.37402 cv
143.074 4.37402 143.349 4.37402 143.592 4.40283 cv
143.851 4.43164 143.979 4.4458 143.979 4.63184 cv
143.979 4.68994 143.965 4.73291 143.922 4.90479 cv
141.998 12.6187 li
141.853 13.1797 141.824 13.2939 140.688 13.2939 cv
140.431 13.2939 140.3 13.2939 140.3 13.5815 cv
140.3 13.7397 140.474 13.7397 140.502 13.7397 cv
140.903 13.7397 141.909 13.6968 142.312 13.6968 cv
142.715 13.6968 143.735 13.7397 144.136 13.7397 cv
144.252 13.7397 144.424 13.7397 144.424 13.4517 cv
144.424 13.2939 144.295 13.2939 144.022 13.2939 cv
143.491 13.2939 143.088 13.2939 143.088 13.0356 cv
143.131 12.792 li
144.079 8.98486 li
145.788 8.98486 li
147.095 8.98486 147.354 9.78857 147.354 10.292 cv
147.354 10.5068 147.239 10.9526 147.153 11.2837 cv
147.052 11.686 146.924 12.2178 146.924 12.5049 cv
146.924 14.0566 148.647 14.0566 148.836 14.0566 cv
150.058 14.0566 150.56 12.606 150.56 12.4048 cv
150.56 12.2329 150.401 12.2329 150.388 12.2329 cv
150.258 12.2329 150.229 12.333 150.199 12.4341 cv
149.842 13.4966 149.222 13.7417 148.892 13.7417 cv
148.417 13.7417 148.317 13.4258 148.317 12.8647 cv
148.317 12.4199 148.403 11.687 148.463 11.228 cv
148.489 11.0259 148.521 10.7529 148.521 10.5518 cv
148.521 9.44482 147.558 9 147.169 8.85596 cv
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
139.713 20.5772 mo
150.716 20.5772 li
150.716 19.1444 li
139.713 19.1444 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
145.687 24.6089 mo
145.815 24.0928 145.858 23.9341 147.21 23.9341 cv
147.64 23.9341 147.755 23.9341 147.755 23.6606 cv
147.755 23.4878 147.597 23.4878 147.526 23.4878 cv
147.049 23.4878 145.873 23.5308 145.399 23.5308 cv
144.967 23.5308 143.919 23.4878 143.487 23.4878 cv
143.388 23.4878 143.215 23.4878 143.215 23.7759 cv
143.215 23.9341 143.345 23.9341 143.618 23.9341 cv
143.646 23.9341 143.919 23.9341 144.163 23.9629 cv
144.422 23.9917 144.551 24.0059 144.551 24.1919 cv
144.551 24.25 144.536 24.293 144.493 24.4648 cv
142.569 32.1787 li
142.424 32.7397 142.396 32.854 141.26 32.854 cv
141.017 32.854 140.873 32.854 140.873 33.1406 cv
140.873 33.2988 141.002 33.2988 141.26 33.2988 cv
147.913 33.2988 li
148.257 33.2988 148.272 33.2988 148.358 33.0547 cv
149.491 29.9507 li
149.55 29.7939 149.55 29.7646 149.55 29.75 cv
149.55 29.6929 149.507 29.5918 149.378 29.5918 cv
149.249 29.5918 149.233 29.6636 149.134 29.894 cv
148.644 31.2148 148.013 32.853 145.528 32.853 cv
144.176 32.853 li
143.976 32.853 143.946 32.853 143.86 32.8379 cv
143.717 32.8228 143.674 32.8101 143.674 32.6948 cv
143.674 32.6519 143.674 32.6226 143.744 32.3638 cv
145.683 24.606 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
161.509 20.1558 mo
165.517 20.1558 li
165.718 20.1558 165.992 20.1558 165.992 19.8687 cv
165.992 19.5806 165.719 19.5806 165.517 19.5806 cv
161.509 19.5806 li
161.509 15.5591 li
161.509 15.3579 161.509 15.085 161.222 15.085 cv
160.933 15.085 160.933 15.3579 160.933 15.5591 cv
160.933 19.5806 li
156.912 19.5806 li
156.711 19.5806 156.437 19.5806 156.437 19.8687 cv
156.437 20.1558 156.71 20.1558 156.912 20.1558 cv
160.933 20.1558 li
160.933 24.1787 li
160.933 24.3799 160.933 24.6528 161.222 24.6528 cv
161.509 24.6528 161.509 24.3799 161.509 24.1787 cv
161.509 20.1558 li
f
grestore
gsave
100.433 3.69972 mo
178.433 3.69972 li
178.433 33.2998 li
100.433 33.2998 li
100.433 3.69972 li
clp
173.761 18.103 mo
175.384 18.103 li
174.909 20.228 174.78 20.8467 174.78 21.8101 cv
174.78 22.0239 174.78 22.4126 174.896 22.9019 cv
175.038 23.5337 175.198 23.6196 175.413 23.6196 cv
175.7 23.6196 176.001 23.3608 176.001 23.0737 cv
176.001 22.9878 176.001 22.96 175.915 22.7588 cv
175.499 21.7236 175.499 20.791 175.499 20.3877 cv
175.499 19.627 175.599 18.8511 175.757 18.105 cv
177.394 18.105 li
177.582 18.105 178.099 18.105 178.099 17.6157 cv
178.099 17.271 177.798 17.271 177.524 17.271 cv
172.713 17.271 li
172.397 17.271 171.853 17.271 171.219 17.9468 cv
170.715 18.5068 170.344 19.168 170.344 19.2388 cv
170.344 19.2539 170.344 19.3828 170.517 19.3828 cv
170.629 19.3828 170.659 19.3247 170.745 19.2109 cv
171.45 18.106 172.284 18.106 172.569 18.106 cv
173.387 18.106 li
172.931 19.8438 172.153 21.583 171.549 22.8896 cv
171.435 23.105 171.435 23.1338 171.435 23.2339 cv
171.435 23.5068 171.664 23.6216 171.853 23.6216 cv
172.284 23.6216 172.397 23.2197 172.569 22.688 cv
172.771 22.0259 172.771 21.999 172.958 21.2798 cv
173.761 18.103 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
97.1172 348.797 mo
96.8872 348.797 96.6851 348.797 96.4839 348.999 cv
96.2549 349.213 96.2261 349.459 96.2261 349.56 cv
96.2261 349.905 96.4839 350.062 96.7568 350.062 cv
97.1729 350.062 97.562 349.717 97.562 349.143 cv
97.562 348.439 96.8857 347.908 95.8672 347.908 cv
93.9277 347.908 92.0161 349.963 92.0161 351.988 cv
92.0161 353.281 92.8491 354.417 94.3428 354.417 cv
96.3979 354.417 97.605 352.893 97.605 352.721 cv
97.4331 352.533 li
97.3608 352.533 97.3311 352.562 97.2451 352.678 cv
96.1099 354.1 94.5439 354.1 94.3721 354.1 cv
93.4678 354.1 93.0791 353.397 93.0791 352.534 cv
93.0791 351.945 93.3662 350.551 93.854 349.661 cv
94.2988 348.842 95.0898 348.225 95.8789 348.225 cv
96.3701 348.223 96.916 348.409 97.1172 348.797 cv
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
103.762 345.537 mo
103.864 345.133 103.92 345.049 104.092 345.006 cv
104.222 344.978 104.696 344.978 104.998 344.978 cv
106.449 344.978 107.096 345.035 107.096 346.155 cv
107.096 346.371 107.037 346.93 106.981 347.303 cv
106.938 347.577 li
106.938 347.663 106.981 347.764 107.11 347.764 cv
107.268 347.764 107.298 347.648 107.326 347.432 cv
107.714 344.935 li
107.742 344.689 li
107.742 344.531 107.598 344.531 107.354 344.531 cv
99.3809 344.531 li
99.0361 344.531 99.022 344.547 98.9219 344.819 cv
98.0591 347.346 li
97.9731 347.607 li
97.9731 347.693 98.0449 347.764 98.145 347.764 cv
98.29 347.764 98.3027 347.693 98.3892 347.461 cv
99.165 345.235 99.5391 344.976 101.665 344.976 cv
102.225 344.976 li
102.627 344.976 102.627 345.035 102.627 345.148 cv
102.57 345.451 li
100.644 353.124 li
100.515 353.654 100.472 353.811 98.9351 353.811 cv
98.417 353.811 98.3311 353.811 98.3311 354.084 cv
98.3311 354.256 98.4888 354.256 98.5752 354.256 cv
98.9639 354.256 99.3662 354.228 99.7529 354.228 cv
100.155 354.228 100.572 354.213 100.975 354.213 cv
101.376 354.213 101.779 354.228 102.167 354.228 cv
102.583 354.228 103.015 354.256 103.417 354.256 cv
103.56 354.256 103.733 354.256 103.733 353.967 cv
103.733 353.811 103.618 353.811 103.244 353.811 cv
102.886 353.811 102.698 353.811 102.325 353.783 cv
101.909 353.74 101.794 353.697 101.794 353.467 cv
101.794 353.453 101.794 353.381 101.852 353.167 cv
103.763 345.537 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
91.4141 361.094 mo
107.998 361.094 li
107.998 359.661 li
91.4141 359.661 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
100.2 365.125 mo
100.33 364.608 100.373 364.45 101.723 364.45 cv
102.154 364.45 102.269 364.45 102.269 364.178 cv
102.269 364.004 102.111 364.004 102.04 364.004 cv
101.566 364.004 100.388 364.047 99.9141 364.047 cv
99.4819 364.047 98.4341 364.004 98.0029 364.004 cv
97.9019 364.004 97.73 364.004 97.73 364.292 cv
97.73 364.45 97.8599 364.45 98.1328 364.45 cv
98.1602 364.45 98.4341 364.45 98.6777 364.479 cv
98.937 364.507 99.0669 364.522 99.0669 364.708 cv
99.0669 364.767 99.0508 364.81 99.0078 364.981 cv
97.083 372.696 li
96.939 373.256 96.9102 373.37 95.7749 373.37 cv
95.5308 373.37 95.3872 373.37 95.3872 373.658 cv
95.3872 373.817 95.5161 373.817 95.7749 373.817 cv
102.426 373.817 li
102.771 373.817 102.785 373.817 102.872 373.571 cv
104.006 370.467 li
104.064 370.311 104.064 370.281 104.064 370.268 cv
104.064 370.208 104.021 370.11 103.892 370.11 cv
103.763 370.11 103.747 370.182 103.648 370.412 cv
103.159 371.733 102.527 373.37 100.043 373.37 cv
98.6909 373.37 li
98.4897 373.37 98.4609 373.37 98.375 373.356 cv
98.231 373.34 98.189 373.329 98.189 373.212 cv
98.189 373.168 98.189 373.141 98.2588 372.88 cv
100.198 365.123 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
123.576 359.279 mo
123.793 359.279 124.063 359.279 124.063 358.991 cv
124.063 358.704 123.793 358.704 123.591 358.704 cv
114.985 358.704 li
114.786 358.704 114.513 358.704 114.513 358.991 cv
114.513 359.279 114.785 359.279 115 359.279 cv
123.577 359.279 li
123.576 359.279 li
cp
123.592 362.065 mo
123.793 362.065 124.065 362.065 124.065 361.778 cv
124.065 361.491 123.794 361.491 123.577 361.491 cv
115.001 361.491 li
114.785 361.491 114.513 361.491 114.513 361.778 cv
114.513 362.065 114.785 362.065 114.987 362.065 cv
123.592 362.065 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
138.334 360.672 mo
138.579 360.672 138.838 360.672 138.838 360.386 cv
138.838 360.099 138.579 360.099 138.334 360.099 cv
130.563 360.099 li
130.319 360.099 130.062 360.099 130.062 360.386 cv
130.062 360.672 130.319 360.672 130.563 360.672 cv
138.334 360.672 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
147.095 345.435 mo
147.183 345.09 147.224 344.948 147.497 344.904 cv
147.627 344.889 148.086 344.889 148.373 344.889 cv
149.394 344.889 150.987 344.889 150.987 346.311 cv
150.987 346.801 150.759 347.792 150.196 348.352 cv
149.825 348.725 149.063 349.184 147.771 349.184 cv
146.161 349.184 li
147.095 345.435 li
cp
149.164 349.372 mo
150.614 349.055 152.324 348.049 152.324 346.6 cv
152.324 345.365 151.03 344.445 149.149 344.445 cv
145.056 344.445 li
144.767 344.445 144.638 344.445 144.638 344.733 cv
144.638 344.889 144.767 344.889 145.04 344.889 cv
145.069 344.889 145.341 344.889 145.587 344.918 cv
145.845 344.948 145.974 344.961 145.974 345.148 cv
145.974 345.208 145.96 345.25 145.917 345.42 cv
143.991 353.135 li
143.849 353.697 143.819 353.811 142.685 353.811 cv
142.425 353.811 142.295 353.811 142.295 354.098 cv
142.295 354.256 142.468 354.256 142.496 354.256 cv
142.897 354.256 143.903 354.213 144.308 354.213 cv
144.71 354.213 145.729 354.256 146.131 354.256 cv
146.246 354.256 146.418 354.256 146.418 353.967 cv
146.418 353.811 146.289 353.811 146.017 353.811 cv
145.485 353.811 145.082 353.811 145.082 353.553 cv
145.125 353.307 li
146.073 349.5 li
147.783 349.5 li
149.09 349.5 149.349 350.305 149.349 350.81 cv
149.349 351.025 149.233 351.469 149.147 351.799 cv
149.046 352.202 148.918 352.734 148.918 353.022 cv
148.918 354.574 150.644 354.574 150.83 354.574 cv
152.05 354.574 152.553 353.123 152.553 352.922 cv
152.553 352.75 152.396 352.75 152.381 352.75 cv
152.252 352.75 152.224 352.85 152.192 352.951 cv
151.834 354.012 151.216 354.258 150.885 354.258 cv
150.411 354.258 150.312 353.942 150.312 353.381 cv
150.312 352.937 150.397 352.203 150.455 351.744 cv
150.483 351.543 150.515 351.268 150.515 351.068 cv
150.517 349.961 149.553 349.516 149.164 349.372 cv
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
141.728 361.094 mo
152.729 361.094 li
152.729 359.661 li
141.728 359.661 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
147.722 365.125 mo
147.851 364.608 147.894 364.45 149.244 364.45 cv
149.674 364.45 149.789 364.45 149.789 364.178 cv
149.789 364.004 149.631 364.004 149.56 364.004 cv
149.086 364.004 147.909 364.047 147.435 364.047 cv
147.002 364.047 145.954 364.004 145.524 364.004 cv
145.422 364.004 145.251 364.004 145.251 364.292 cv
145.251 364.45 145.38 364.45 145.653 364.45 cv
145.681 364.45 145.954 364.45 146.198 364.479 cv
146.458 364.507 146.587 364.522 146.587 364.708 cv
146.587 364.767 146.571 364.81 146.528 364.981 cv
144.604 372.696 li
144.459 373.256 144.431 373.37 143.295 373.37 cv
143.051 373.37 142.908 373.37 142.908 373.658 cv
142.908 373.817 143.037 373.817 143.295 373.817 cv
149.946 373.817 li
150.293 373.817 150.306 373.817 150.392 373.571 cv
151.526 370.467 li
151.584 370.311 151.584 370.281 151.584 370.268 cv
151.584 370.208 151.541 370.11 151.412 370.11 cv
151.283 370.11 151.269 370.182 151.168 370.412 cv
150.681 371.733 150.047 373.37 147.563 373.37 cv
146.211 373.37 li
146.01 373.37 145.981 373.37 145.896 373.356 cv
145.752 373.34 145.709 373.329 145.709 373.212 cv
145.709 373.168 145.709 373.141 145.778 372.88 cv
147.718 365.123 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
167.095 360.672 mo
167.34 360.672 167.599 360.672 167.599 360.386 cv
167.599 360.099 167.34 360.099 167.095 360.099 cv
159.323 360.099 li
159.079 360.099 158.821 360.099 158.821 360.386 cv
158.821 360.672 159.079 360.672 159.323 360.672 cv
167.095 360.672 li
f
grestore
gsave
91.1069 344.215 mo
180.308 344.215 li
180.308 373.817 li
91.1069 373.817 li
91.1069 344.215 li
clp
175.795 358.618 mo
177.418 358.618 li
176.942 360.745 176.813 361.362 176.813 362.325 cv
176.813 362.54 176.813 362.929 176.929 363.417 cv
177.074 364.05 177.231 364.136 177.446 364.136 cv
177.733 364.136 178.036 363.875 178.036 363.588 cv
178.036 363.502 178.036 363.475 177.949 363.273 cv
177.533 362.24 177.533 361.306 177.533 360.904 cv
177.533 360.142 177.634 359.366 177.791 358.619 cv
179.431 358.619 li
179.616 358.619 180.134 358.619 180.134 358.131 cv
180.134 357.785 179.832 357.785 179.56 357.785 cv
174.747 357.785 li
174.431 357.785 173.886 357.785 173.253 358.461 cv
172.751 359.022 172.378 359.682 172.378 359.753 cv
172.378 359.768 172.378 359.898 172.55 359.898 cv
172.665 359.898 172.694 359.839 172.778 359.725 cv
173.483 358.62 174.317 358.62 174.603 358.62 cv
175.422 358.62 li
174.963 360.358 174.188 362.097 173.583 363.403 cv
173.469 363.618 173.469 363.647 173.469 363.749 cv
173.469 364.022 173.698 364.136 173.885 364.136 cv
174.317 364.136 174.431 363.735 174.603 363.203 cv
174.806 362.542 174.806 362.515 174.991 361.793 cv
175.795 358.618 li
f
grestore
grestore
grestore
grestore
35.1457 60.0476 mo
165.012 190.48 li
165.721 189.774 li
35.8543 59.342 li
f
165.012 189.774 mo
35.1455 320.351 li
35.8545 321.056 li
165.721 190.48 li
f
36.9824 59.6948 mo
36.9824 60.7993 36.0879 61.6948 34.9824 61.6948 cv
33.8779 61.6948 32.9824 60.7993 32.9824 59.6948 cv
32.9824 58.5898 33.8779 57.6948 34.9824 57.6948 cv
36.0879 57.6948 36.9824 58.5898 36.9824 59.6948 cv
cp
f
36.9824 59.6948 mo
36.4824 59.6948 li
36.4809 60.5233 35.8116 61.1933 34.9824 61.1948 cv
34.1543 61.1933 33.4839 60.5229 33.4824 59.6948 cv
33.4839 58.8662 34.1541 58.1963 34.9824 58.1948 cv
35.8118 58.1963 36.4809 58.8658 36.4824 59.6948 cv
36.9824 59.6948 li
37.4824 59.6948 li
37.4823 58.3138 36.364 57.1949 34.9824 57.1948 cv
33.6017 57.1951 32.4827 58.3135 32.4824 59.6948 cv
32.4828 61.0757 33.6016 62.1945 34.9824 62.1948 cv
36.3642 62.1946 37.4823 61.0754 37.4824 59.6948 cv
36.9824 59.6948 li
cp
f
166.366 190.376 mo
166.366 191.48 165.472 192.376 164.366 192.376 cv
163.262 192.376 162.366 191.48 162.366 190.376 cv
162.366 189.271 163.262 188.376 164.366 188.376 cv
165.472 188.376 166.366 189.271 166.366 190.376 cv
cp
f
166.366 190.376 mo
165.866 190.376 li
165.865 191.204 165.195 191.874 164.366 191.876 cv
163.538 191.874 162.868 191.204 162.866 190.376 cv
162.868 189.547 163.538 188.877 164.366 188.876 cv
165.196 188.877 165.865 189.547 165.866 190.376 cv
166.366 190.376 li
166.866 190.376 li
166.866 188.995 165.748 187.876 164.366 187.876 cv
162.986 187.876 161.866 188.995 161.866 190.376 cv
161.867 191.757 162.985 192.876 164.366 192.876 cv
165.748 192.876 166.866 191.757 166.866 190.376 cv
166.366 190.376 li
cp
f
37.5 320.704 mo
37.5 321.808 36.6055 322.704 35.5 322.704 cv
34.3955 322.704 33.5 321.808 33.5 320.704 cv
33.5 319.598 34.3955 318.704 35.5 318.704 cv
36.6055 318.704 37.5 319.598 37.5 320.704 cv
cp
f
37.5 320.704 mo
37 320.704 li
36.9985 321.532 36.3292 322.202 35.5 322.204 cv
34.6719 322.202 34.0015 321.532 34 320.704 cv
34.0015 319.874 34.6716 319.205 35.5 319.204 cv
36.3295 319.205 36.9985 319.874 37 320.704 cv
37.5 320.704 li
38 320.704 li
38 319.322 36.8814 318.204 35.5 318.204 cv
34.1195 318.204 33.0002 319.322 33 320.704 cv
33.0004 322.084 34.1191 323.203 35.5 323.204 cv
36.8817 323.203 37.9998 322.084 38 320.704 cv
37.5 320.704 li
cp
f
gsave
39.8271 57.6948 mo
55.8272 57.6948 li
55.8272 41.6948 li
39.8271 41.6948 li
39.8271 57.6948 li
clp
44.7949 54.5269 mo
44.7949 54.3472 44.6338 54.3472 44.5796 54.3472 cv
44.418 54.3472 44.3828 54.4194 44.3467 54.5444 cv
43.7896 56.3042 42.2993 56.897 41.5273 56.897 cv
41.2754 56.897 41.0601 56.8433 41.0601 56.3052 cv
41.0601 55.8735 41.2041 55.4604 41.3838 54.9761 cv
42.1914 52.8032 42.9282 49.7856 42.9282 49.6431 cv
42.9282 49.3374 42.7129 49.1577 42.4072 49.1577 cv
42.2095 49.1577 41.8867 49.2827 41.7432 49.6245 cv
41.6172 49.9663 41.4556 50.8452 41.3477 51.187 cv
41.3115 51.2769 40.8628 52.8579 40.8086 53.0903 cv
40.7559 53.27 40.5938 53.7192 40.5576 53.8989 cv
40.4141 54.4009 39.9824 55.2456 39.9824 55.8198 cv
39.9824 56.5552 40.4858 57.2925 41.4912 57.2925 cv
43.5381 57.2925 44.7949 55.1196 44.7949 54.5269 cv
0 0 0 1 cmyk
f
51.1299 46.8628 mo
54.9639 46.8628 li
55.1279 46.8628 55.4282 46.8628 55.4282 46.562 cv
55.4282 46.2485 55.1396 46.2485 54.9639 46.2485 cv
51.1299 46.2485 li
51.1299 42.4009 li
51.1299 42.2378 51.1299 41.937 50.8286 41.937 cv
50.5151 41.937 50.5151 42.2261 50.5151 42.4009 cv
50.5151 46.2485 li
46.6675 46.2485 li
46.5049 46.2485 46.2041 46.2485 46.2041 46.5493 cv
46.2041 46.8628 46.4927 46.8628 46.6675 46.8628 cv
50.5151 46.8628 li
50.5151 50.7095 li
50.5151 50.8735 50.5151 51.1733 50.8164 51.1733 cv
51.1299 51.1733 51.1299 50.8853 51.1299 50.7095 cv
51.1299 46.8628 li
f
grestore
gsave
40.0772 336.603 mo
55.5771 336.603 li
55.5771 324.704 li
40.0772 324.704 li
40.0772 336.603 li
clp
gsave
40.0772 336.704 mo
55.5771 336.704 li
55.5771 324.704 li
40.0772 324.704 li
40.0772 336.704 li
clp
44.9453 333.435 mo
44.9453 333.256 44.7837 333.256 44.7295 333.256 cv
44.5684 333.256 44.5327 333.328 44.4966 333.454 cv
43.9395 335.213 42.4492 335.806 41.6772 335.806 cv
41.4258 335.806 41.21 335.751 41.21 335.214 cv
41.21 334.783 41.354 334.37 41.5337 333.885 cv
42.3418 331.712 43.0781 328.695 43.0781 328.551 cv
43.0781 328.246 42.8628 328.067 42.5571 328.067 cv
42.3594 328.067 42.0366 328.192 41.8931 328.534 cv
41.7671 328.875 41.6055 329.754 41.4976 330.096 cv
41.4619 330.186 41.0127 331.766 40.9585 331.999 cv
40.9058 332.178 40.7437 332.627 40.7075 332.807 cv
40.564 333.31 40.1328 334.155 40.1328 334.728 cv
40.1328 335.464 40.6357 336.201 41.6411 336.201 cv
43.688 336.201 44.9453 334.029 44.9453 333.435 cv
0 0 0 1 cmyk
f
54.8008 325.771 mo
55.0015 325.771 55.3022 325.771 55.3022 325.47 cv
55.3022 325.157 55.0137 325.157 54.8008 325.157 cv
47.332 325.157 li
47.1309 325.157 46.8306 325.157 46.8306 325.458 cv
46.8306 325.771 47.1191 325.771 47.332 325.771 cv
54.8013 325.771 li
f
grestore
grestore
gsave
167.722 187.562 mo
180.222 187.562 li
180.222 171.062 li
167.722 171.062 li
167.722 187.562 li
clp
172.84 184.394 mo
172.84 184.214 172.679 184.214 172.624 184.214 cv
172.463 184.214 172.427 184.287 172.392 184.412 cv
171.834 186.171 170.344 186.764 169.571 186.764 cv
169.32 186.764 169.104 186.71 169.104 186.172 cv
169.104 185.741 169.249 185.328 169.429 184.843 cv
170.236 182.67 170.973 179.653 170.973 179.51 cv
170.973 179.205 170.757 179.025 170.452 179.025 cv
170.254 179.025 169.931 179.15 169.788 179.492 cv
169.661 179.833 169.5 180.712 169.392 181.054 cv
169.356 181.144 168.907 182.725 168.853 182.958 cv
168.8 183.137 168.638 183.586 168.603 183.766 cv
168.458 184.268 168.027 185.113 168.027 185.687 cv
168.027 186.422 168.53 187.16 169.536 187.16 cv
171.583 187.16 172.84 184.987 172.84 184.394 cv
0 0 0 1 cmyk
f
179.838 175.564 mo
179.838 174.186 179.675 173.196 179.099 172.319 cv
178.71 171.743 177.934 171.241 176.931 171.241 cv
174.023 171.241 174.023 174.662 174.023 175.564 cv
174.023 176.467 174.023 179.813 176.931 179.813 cv
179.838 179.813 179.838 176.467 179.838 175.564 cv
cp
176.931 179.461 mo
176.354 179.461 175.59 179.124 175.339 178.095 cv
175.164 177.356 175.164 176.329 175.164 175.401 cv
175.164 174.486 175.164 173.534 175.352 172.844 cv
175.615 171.854 176.417 171.591 176.931 171.591 cv
177.607 171.591 178.259 172.004 178.485 172.732 cv
178.685 173.409 178.698 174.311 178.698 175.401 cv
178.698 176.329 178.698 177.255 178.535 178.044 cv
178.284 179.185 177.433 179.461 176.931 179.461 cv
f
grestore
gsave
32.5005 284.717 mo
32.5005 239.217 li
19.2993 239.217 li
19.2993 284.717 li
32.5005 284.717 li
clp
gsave
32.7993 284.717 mo
32.7993 239.217 li
19.2993 239.217 li
19.2993 284.717 li
32.7993 284.717 li
clp
20.8735 278.583 mo
20.4438 278.476 20.2642 278.422 20.2095 278.081 cv
20.1919 277.919 20.1919 277.344 20.1919 276.985 cv
20.1919 275.71 20.1919 273.717 21.9692 273.717 cv
22.5806 273.717 23.8188 274.004 24.52 274.705 cv
24.9868 275.171 25.561 276.124 25.561 277.739 cv
25.561 279.75 li
20.8735 278.583 li
cp
25.7944 275.998 mo
25.3989 274.184 24.1411 272.047 22.3286 272.047 cv
20.7837 272.047 19.6353 273.664 19.6353 276.015 cv
19.6353 281.132 li
19.6353 281.492 19.6353 281.653 19.9946 281.653 cv
20.1919 281.653 20.1919 281.492 20.1919 281.151 cv
20.1919 281.114 20.1919 280.774 20.2271 280.468 cv
20.2642 280.145 20.2817 279.983 20.5142 279.983 cv
20.5864 279.983 20.6401 280.001 20.856 280.055 cv
30.4985 282.461 li
31.1997 282.641 31.3423 282.676 31.3423 284.096 cv
31.3423 284.419 31.3423 284.581 31.7017 284.581 cv
31.8989 284.581 31.8989 284.365 31.8989 284.33 cv
31.8989 283.827 31.8452 282.569 31.8452 282.067 cv
31.8452 281.564 31.8989 280.289 31.8989 279.786 cv
31.8989 279.642 31.8989 279.426 31.5396 279.426 cv
31.3423 279.426 31.3423 279.588 31.3423 279.929 cv
31.3423 280.594 31.3423 281.097 31.02 281.097 cv
30.9116 281.097 30.8228 281.061 30.7144 281.043 cv
25.9556 279.858 li
25.9556 277.721 li
25.9556 276.087 26.9614 275.764 27.5903 275.764 cv
27.8589 275.764 28.4165 275.907 28.8286 276.015 cv
29.3325 276.141 29.9966 276.301 30.356 276.301 cv
32.2954 276.301 32.2954 274.147 32.2954 273.914 cv
32.2954 272.387 30.481 271.758 30.23 271.758 cv
30.0142 271.758 30.0142 271.957 30.0142 271.974 cv
30.0142 272.135 30.1392 272.172 30.2661 272.208 cv
31.5942 272.657 31.9009 273.428 31.9009 273.842 cv
31.9009 274.434 31.5044 274.56 30.8052 274.56 cv
30.2485 274.56 29.3325 274.452 28.7583 274.381 cv
28.5063 274.344 28.1646 274.309 27.9126 274.309 cv
26.5298 274.309 25.9741 275.512 25.7944 275.998 cv
0 0 0 1 cmyk
f
26.0278 254.281 mo
26.0278 254.011 26.0278 253.67 25.6685 253.67 cv
25.3091 253.67 25.3091 254.011 25.3091 254.262 cv
25.3091 265.019 li
25.3091 265.27 25.3091 265.612 25.6685 265.612 cv
26.0278 265.612 26.0278 265.27 26.0278 265 cv
26.0278 254.28 li
26.0278 254.281 li
cp
29.5112 254.262 mo
29.5112 254.011 29.5112 253.67 29.1519 253.67 cv
28.7935 253.67 28.7935 254.011 28.7935 254.281 cv
28.7935 265.001 li
28.7935 265.271 28.7935 265.612 29.1519 265.612 cv
29.5112 265.612 29.5112 265.271 29.5112 265.019 cv
29.5112 254.262 li
f
26.1538 239.407 mo
24.7173 239.407 23.2798 239.498 21.9517 240.125 cv
20.2271 240.952 19.9399 242.424 19.9399 243.178 cv
19.9399 244.256 20.4067 245.567 22.0767 246.302 cv
23.3159 246.877 24.7173 246.967 26.1528 246.967 cv
27.5005 246.967 29.1157 246.895 30.481 246.159 cv
31.936 245.387 32.2954 244.076 32.2954 243.196 cv
32.2954 242.227 31.9175 240.862 30.2114 240.071 cv
28.9722 239.498 27.5728 239.407 26.1528 239.407 cv
26.1538 239.407 li
cp
31.8999 243.196 mo
31.8999 243.896 31.4507 244.956 29.7271 245.28 cv
28.6499 245.477 26.9985 245.477 25.938 245.477 cv
24.7896 245.477 23.604 245.477 22.6343 245.333 cv
20.4966 244.991 20.3364 243.644 20.3364 243.196 cv
20.3364 242.603 20.6587 241.418 22.436 241.077 cv
23.4419 240.898 24.8071 240.898 25.938 240.898 cv
27.2856 240.898 28.5063 240.898 29.6548 241.094 cv
31.3608 241.364 31.8999 242.387 31.8999 243.196 cv
f
grestore
grestore
gsave
32.3496 145.161 mo
32.3496 104.661 li
19.4497 104.661 li
19.4497 145.161 li
32.3496 145.161 li
clp
gsave
32.4497 145.161 mo
32.4497 104.661 li
19.4497 104.661 li
19.4497 145.161 li
32.4497 145.161 li
clp
30.6899 143.93 mo
30.9595 143.984 31.3721 144.091 31.4624 144.091 cv
31.7856 144.091 31.9473 143.84 31.9473 143.571 cv
31.9473 143.355 31.8032 143.032 31.4443 142.906 cv
31.3721 142.87 28.9302 142.26 28.6079 142.188 cv
28.0146 142.044 26.7578 141.721 26.2729 141.613 cv
26.0396 141.541 25.1953 141.039 24.8008 140.608 cv
24.6748 140.463 24.2075 139.944 24.2075 139.171 cv
24.2075 138.705 24.4233 138.435 24.4233 138.417 cv
24.5132 138.956 24.9443 139.351 25.4106 139.351 cv
25.6982 139.351 26.0396 139.153 26.0396 138.668 cv
26.0396 138.184 25.6265 137.681 24.98 137.681 cv
24.3511 137.681 23.813 138.255 23.813 139.171 cv
23.813 140.338 24.6929 141.129 25.1953 141.47 cv
24.3872 141.613 23.813 142.26 23.813 143.104 cv
23.813 143.93 24.5132 144.271 24.8364 144.433 cv
25.4468 144.757 26.5239 144.99 26.5781 144.99 cv
26.7578 144.99 26.7578 144.81 26.7578 144.774 cv
26.7578 144.595 26.7397 144.577 26.3442 144.468 cv
25.0703 144.164 24.2075 143.804 24.2075 143.158 cv
24.2075 142.852 24.3511 142.601 25.0342 142.601 cv
25.4106 142.601 25.6084 142.655 26.5425 142.888 cv
30.6909 143.929 li
0 0 0 1 cmyk
f
25.8774 119.574 mo
25.8774 119.305 25.8774 118.964 25.5181 118.964 cv
25.1587 118.964 25.1587 119.305 25.1587 119.556 cv
25.1587 130.312 li
25.1587 130.563 25.1587 130.905 25.5181 130.905 cv
25.8774 130.905 25.8774 130.563 25.8774 130.294 cv
25.8774 119.574 li
25.8774 119.574 li
cp
29.3613 119.556 mo
29.3613 119.305 29.3613 118.964 29.0015 118.964 cv
28.6431 118.964 28.6431 119.305 28.6431 119.574 cv
28.6431 130.294 li
28.6431 130.564 28.6431 130.906 29.0015 130.906 cv
29.3613 130.906 29.3613 130.564 29.3613 130.313 cv
29.3613 119.556 li
f
26.0034 104.75 mo
24.5674 104.75 23.1304 104.841 21.8013 105.469 cv
20.0776 106.295 19.79 107.767 19.79 108.521 cv
19.79 109.599 20.2573 110.91 21.9268 111.646 cv
23.1655 112.221 24.5669 112.311 26.0034 112.311 cv
27.3501 112.311 28.9658 112.239 30.3306 111.502 cv
31.7852 110.73 32.1445 109.419 32.1445 108.54 cv
32.1445 107.57 31.7671 106.205 30.061 105.415 cv
28.8223 104.841 27.4224 104.75 26.0034 104.75 cv
cp
31.7495 108.54 mo
31.7495 109.24 31.3008 110.299 29.5771 110.623 cv
28.4995 110.82 26.8477 110.82 25.7881 110.82 cv
24.6392 110.82 23.4536 110.82 22.4844 110.676 cv
20.3467 110.334 20.1855 108.988 20.1855 108.54 cv
20.1855 107.947 20.5083 106.762 22.2866 106.42 cv
23.2925 106.241 24.6572 106.241 25.7881 106.241 cv
27.1353 106.241 28.356 106.241 29.5054 106.438 cv
31.2104 106.708 31.7495 107.731 31.7495 108.54 cv
f
grestore
grestore
gsave
107.435 122.188 mo
125.466 140.22 li
138.053 127.633 li
120.022 109.602 li
107.435 122.188 li
clp
gsave
107.293 122.329 mo
125.324 140.36 li
138.053 127.633 li
120.022 109.602 li
107.293 122.329 li
clp
125.26 119.274 mo
124.041 118.056 122.402 117.585 121.399 117.421 cv
119.025 117.026 117.807 117.94 117.781 117.967 cv
117.819 118.183 li
118.111 118.474 119.038 118.69 119.344 118.538 cv
121.107 117.61 122.568 117.978 123.813 119.222 cv
125.502 120.911 li
122.987 120.632 120.486 121.966 116.347 124.429 cv
114.86 125.306 112.816 125.8 111.534 124.519 cv
110.544 123.528 110.302 121.966 111.407 120.861 cv
111.661 120.606 111.94 120.455 111.991 120.403 cv
112.029 120.366 112.093 120.278 111.978 120.163 cv
111.902 120.087 111.546 119.858 110.925 119.769 cv
110.659 119.731 110.392 119.718 109.795 120.315 cv
108.626 121.483 108.753 123.134 109.998 124.378 cv
111.077 125.458 112.715 125.876 113.87 125.966 cv
116.042 126.13 117.197 125.433 118.328 124.76 cv
120.639 123.388 123.559 121.687 125.577 121.571 cv
126.01 121.548 126.098 121.56 126.416 121.825 cv
127.025 122.359 127.888 122.358 128.027 122.22 cv
128.104 122.143 128.104 122.118 127.825 121.839 cv
125.26 119.274 li
0 0 0 1 cmyk
f
131.076 127.966 mo
133.787 130.677 li
133.903 130.792 134.116 131.005 134.328 130.793 cv
134.551 130.571 134.346 130.366 134.221 130.242 cv
131.51 127.531 li
134.23 124.811 li
134.346 124.695 134.559 124.482 134.347 124.271 cv
134.124 124.048 133.92 124.251 133.796 124.376 cv
131.075 127.097 li
128.354 124.376 li
128.24 124.261 128.027 124.048 127.814 124.261 cv
127.594 124.482 127.798 124.687 127.92 124.81 cv
130.641 127.53 li
127.921 130.251 li
127.805 130.366 127.593 130.579 127.807 130.792 cv
128.027 131.014 128.232 130.81 128.355 130.686 cv
131.076 127.966 li
f
grestore
grestore
gsave
127.339 257.961 mo
145.017 240.284 li
134.763 230.032 li
117.085 247.709 li
127.339 257.961 li
clp
124.495 240.349 mo
123.276 241.568 122.806 243.207 122.641 244.208 cv
122.248 246.583 123.163 247.803 123.188 247.828 cv
123.403 247.79 li
123.694 247.497 123.911 246.571 123.759 246.266 cv
122.832 244.5 123.2 243.04 124.444 241.795 cv
126.133 240.106 li
125.854 242.622 127.188 245.122 129.65 249.261 cv
130.526 250.749 131.022 252.792 129.739 254.073 cv
128.749 255.065 127.188 255.305 126.083 254.202 cv
125.829 253.946 125.677 253.668 125.626 253.617 cv
125.587 253.579 125.499 253.516 125.385 253.629 cv
125.308 253.706 125.08 254.061 124.991 254.683 cv
124.952 254.95 124.94 255.217 125.536 255.815 cv
126.704 256.983 128.354 256.854 129.6 255.61 cv
130.679 254.531 131.099 252.893 131.188 251.737 cv
131.352 249.567 130.653 248.411 129.981 247.282 cv
128.609 244.97 126.907 242.049 126.794 240.032 cv
126.768 239.598 126.78 239.51 127.048 239.192 cv
127.58 238.583 127.581 237.719 127.44 237.581 cv
127.364 237.504 127.339 237.504 127.061 237.784 cv
124.495 240.349 li
0 0 0 1 cmyk
f
135.677 232.042 mo
135.818 231.901 136.03 231.688 135.818 231.476 cv
135.596 231.253 135.392 231.458 135.241 231.608 cv
129.96 236.889 li
129.818 237.031 129.606 237.243 129.819 237.456 cv
130.042 237.678 130.245 237.474 130.396 237.324 cv
135.677 232.042 li
f
grestore
gsave
75.0141 315.123 mo
122.743 267.393 li
109.662 254.312 li
61.9331 302.04 li
75.0141 315.123 li
clp
75.8481 307.351 mo
76.5073 307.732 77.2827 307.617 77.8276 307.072 cv
78.2729 306.626 78.2729 306.042 78.0698 305.435 cv
77.8276 304.761 77.2202 303.822 77.1938 303.795 cv
77.0669 303.668 76.9526 303.783 76.9136 303.822 cv
76.7866 303.949 76.8257 304.011 76.9644 304.228 cv
77.4985 305.117 78.1206 306.22 77.5874 306.755 cv
77.3208 307.021 77.0288 306.982 76.6099 306.563 cv
76.3315 306.285 75.8862 305.535 75.5435 304.989 cv
74.5278 303.262 li
74.3745 303.033 74.02 302.424 73.8804 302.183 cv
73.6519 301.826 73.2964 301.217 73.2202 301.142 cv
72.9917 300.912 72.6997 300.976 72.5093 301.167 cv
72.4448 301.231 72.1284 301.574 72.4585 302.107 cv
73.144 303.275 74.8081 306.054 75.3276 306.881 cv
75.3647 306.945 75.8735 308.468 74.9468 309.395 cv
74.2866 310.056 73.5874 309.611 73.1177 309.141 cv
72.4058 308.429 71.7593 307.072 71.2134 305.865 cv
70.9858 305.332 70.8706 305.09 70.6284 304.849 cv
70.0581 304.278 69.1821 304.214 68.5474 304.849 cv
67.3413 306.056 68.7114 308.366 68.8257 308.48 cv
68.9526 308.607 69.0796 308.481 69.105 308.456 cv
69.2319 308.329 69.2183 308.291 69.0796 308.024 cv
68.2925 306.601 68.3052 305.649 68.7886 305.166 cv
68.9019 305.052 69.1187 304.863 69.5249 305.269 cv
69.8286 305.573 70.0571 306.081 70.1724 306.347 cv
70.9585 308.074 71.48 309.128 72.1021 309.75 cv
73.3081 310.957 74.5015 310.398 75.188 309.711 cv
76.0259 308.874 75.9116 307.845 75.8481 307.35 cv
0 0 0 1 cmyk
f
72.5171 293.273 mo
72.437 293.051 72.3755 292.972 72.314 292.91 cv
72.0386 292.635 71.5776 292.669 71.3022 292.945 cv
70.9663 293.281 71.1353 293.663 71.2319 293.849 cv
73.8989 298.855 li
73.9976 299.042 li
74.103 299.148 74.4663 298.961 74.5376 298.89 cv
74.5991 298.828 74.5913 298.802 74.52 298.607 cv
72.5181 293.273 li
f
91.0054 285.312 mo
91.1958 285.122 91.436 284.881 91.1821 284.627 cv
90.9272 284.373 90.687 284.613 90.5093 284.791 cv
82.9038 292.396 li
82.7251 292.575 82.4839 292.816 82.7397 293.07 cv
82.9937 293.324 83.2339 293.083 83.4253 292.892 cv
91.0054 285.312 li
cp
93.48 287.762 mo
93.6577 287.583 93.8979 287.343 93.644 287.089 cv
93.3921 286.837 93.1519 287.078 92.9604 287.267 cv
85.3804 294.848 li
85.189 295.039 84.9478 295.281 85.2007 295.534 cv
85.4546 295.788 85.6968 295.546 85.8745 295.368 cv
93.48 287.762 li
f
105.281 273.5 mo
105.497 273.284 105.726 273.054 105.472 272.801 cv
105.218 272.546 104.989 272.776 104.773 272.992 cv
97.9038 279.861 li
97.687 280.078 97.4585 280.306 97.7134 280.56 cv
97.9663 280.814 98.1948 280.585 98.4116 280.369 cv
105.281 273.5 li
f
108.328 266.822 mo
109.761 265.388 li
111.222 267.685 111.653 268.346 112.503 269.197 cv
112.694 269.387 113.036 269.73 113.571 270.061 cv
114.257 270.493 114.472 270.428 114.661 270.238 cv
114.917 269.984 114.954 269.489 114.7 269.235 cv
114.624 269.158 114.599 269.134 114.345 269.032 cv
113.062 268.486 112.237 267.662 111.88 267.304 cv
111.208 266.632 110.612 265.858 110.091 265.058 cv
111.538 263.611 li
111.704 263.445 112.161 262.988 111.729 262.555 cv
111.423 262.25 111.155 262.517 110.916 262.757 cv
106.663 267.011 li
106.382 267.292 105.9 267.774 105.941 268.929 cv
105.99 269.869 106.244 270.783 106.308 270.847 cv
106.32 270.859 106.435 270.974 106.586 270.822 cv
106.689 270.72 106.663 270.644 106.637 270.466 cv
106.283 268.867 107.019 268.13 107.273 267.876 cv
107.998 267.152 li
109.126 269.094 109.978 271.317 110.599 273.005 cv
110.688 273.297 110.712 273.322 110.802 273.412 cv
111.044 273.653 111.349 273.55 111.513 273.386 cv
111.894 273.005 111.64 272.548 111.323 271.926 cv
110.917 271.165 110.892 271.14 110.421 270.339 cv
108.328 266.822 li
f
119.935 264.662 mo
119.097 263.823 118.284 263.646 117.79 264.14 cv
117.37 264.56 117.433 265.13 117.788 265.486 cv
118.132 265.829 118.714 265.906 119.134 265.486 cv
119.286 265.333 119.401 265.117 119.413 264.876 cv
119.44 264.775 li
119.452 264.763 119.478 264.761 119.655 264.94 cv
120.595 265.88 120.913 267.085 120.913 267.923 cv
120.911 268.203 120.938 268.229 120.976 268.266 cv
121.241 268.279 li
121.382 268.139 121.419 266.144 119.935 264.66 cv
f
grestore
gsave
60.2958 77.0278 mo
97.4189 114.151 li
110.501 101.07 li
73.3774 63.9467 li
60.2958 77.0278 li
clp
73.4009 75.1714 mo
74.0869 74.4849 73.9595 73.9526 73.731 73.7241 cv
73.4136 73.4067 72.7783 73.4321 72.499 73.7114 cv
72.334 73.8755 72.3213 74.0161 72.3218 74.2954 cv
72.3345 74.8159 72.1689 75.311 71.7124 75.7681 cv
71.1787 76.3013 67.4971 78.4341 66.0107 76.9478 cv
65.3633 76.3013 65.5151 75.5649 66.1758 74.9048 cv
66.8867 74.1938 68.1567 73.6089 69.604 72.9497 cv
69.9087 72.8218 70.1499 72.7075 70.3916 72.4653 cv
70.9629 71.895 71.0264 71.02 70.3911 70.3843 cv
69.1973 69.1899 66.8745 70.5483 66.7603 70.6626 cv
66.6333 70.7896 66.7603 70.9165 66.7856 70.9419 cv
66.9126 71.0688 66.9507 71.0562 67.2178 70.9165 cv
68.8677 70.0024 69.7061 70.2563 70.0742 70.6255 cv
70.1763 70.7271 70.3916 70.9419 69.9854 71.3481 cv
69.668 71.6665 69.1982 71.8813 68.8809 72.022 cv
66.8486 72.936 66.1001 73.355 65.5542 73.9009 cv
64.1826 75.272 65.0972 76.5933 65.6812 77.1772 cv
67.8145 79.311 72.7412 75.8306 73.4014 75.1704 cv
0 0 0 1 cmyk
f
81.2959 73.6841 mo
81.5181 73.603 81.5972 73.5415 81.6597 73.479 cv
81.9346 73.2036 81.8994 72.7427 81.625 72.4692 cv
81.2876 72.1313 80.9063 72.3013 80.7207 72.3989 cv
75.7139 75.0649 li
75.5283 75.1626 li
75.4219 75.27 75.6079 75.6323 75.6787 75.7036 cv
75.7407 75.7651 75.7671 75.7563 75.9614 75.686 cv
81.2969 73.6841 li
f
89.293 92.2056 mo
89.4834 92.397 89.7236 92.6372 89.9775 92.3833 cv
90.2334 92.1284 89.9922 91.8872 89.8145 91.7095 cv
82.209 84.104 li
82.0308 83.9263 81.7891 83.6841 81.5342 83.9399 cv
81.2803 84.1938 81.522 84.4351 81.7129 84.6255 cv
89.293 92.2056 li
cp
86.8428 94.6821 mo
87.0205 94.8599 87.2612 95.1001 87.5151 94.8462 cv
87.7686 94.5923 87.5278 94.3521 87.3374 94.1616 cv
79.7568 86.5806 li
79.5664 86.3911 79.3247 86.1489 79.0713 86.4028 cv
78.8174 86.6567 79.0591 86.8979 79.2368 87.0757 cv
86.8428 94.6821 li
f
97.8828 99.6274 mo
99.3174 101.063 li
97.0205 102.524 96.3594 102.956 95.5088 103.806 cv
95.3193 103.996 94.9756 104.339 94.6455 104.873 cv
94.2139 105.558 94.2773 105.774 94.4668 105.963 cv
94.7207 106.217 95.2158 106.256 95.4697 106.001 cv
95.5459 105.925 95.5713 105.901 95.6729 105.647 cv
96.2178 104.364 97.0439 103.539 97.3994 103.182 cv
98.0723 102.51 98.8486 101.914 99.6475 101.393 cv
101.095 102.84 li
101.261 103.005 101.718 103.463 102.149 103.032 cv
102.454 102.726 102.188 102.459 101.946 102.218 cv
97.6924 97.9644 li
97.4131 97.6841 96.9307 97.2017 95.7754 97.2407 cv
94.8359 97.2915 93.9209 97.5454 93.8584 97.6079 cv
93.8457 97.6216 93.7314 97.7349 93.8838 97.8872 cv
93.9854 97.9897 94.0615 97.9634 94.2393 97.939 cv
95.8389 97.5845 96.5752 98.3208 96.8291 98.5747 cv
97.5527 99.2974 li
95.6104 100.427 93.3887 101.28 91.6992 101.901 cv
91.4082 101.989 91.3828 102.014 91.2939 102.104 cv
91.0518 102.345 91.1533 102.65 91.3193 102.815 cv
91.7002 103.196 92.1572 102.942 92.7783 102.625 cv
93.542 102.218 93.5664 102.194 94.3662 101.723 cv
97.8828 99.6274 li
f
100.08 111.272 mo
100.918 110.434 101.095 109.622 100.601 109.126 cv
100.181 108.708 99.6104 108.77 99.2549 109.125 cv
98.9121 109.469 98.835 110.053 99.2549 110.472 cv
99.4072 110.625 99.623 110.739 99.8643 110.75 cv
99.9658 110.776 li
99.9785 110.79 99.9775 110.814 99.7998 110.992 cv
98.8604 111.932 97.6553 112.25 96.8164 112.25 cv
96.5381 112.249 96.5127 112.275 96.4736 112.313 cv
96.4619 112.579 li
96.6016 112.719 98.5947 112.756 100.08 111.272 cv
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.4
%%For: (Oscar B) ()
%%Title: (Fig9.eps)
%%CreationDate: 4/9/13 3:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6kB\U<ZRGb-!;?K%Z*B:^F)WHeLZP$\#&LW)!>B'Wm2tNF:R0Eqh/jjbH2%<04ar+hC:-[6UoKSM8ga/#@CtB4J)i]kXN,T`
%MlUSt<0as=CU%Dj^Nn5j];oIa?&*/4;<<)%.q^,)`#$p^_XmP'Yu;Tj2qioU?DlB<pC!NmVq5::(]ICgnWW5C4K6?h)m*0(ms)QH
%XaS0O\HBB?DRLJF:@GeUM"<rf_a7\.jG1u\rH.i5f''6V'qNBSYsOnlmR(4*/:PWK[;taG-'sV-!.#"QToEUAjSju&#F&h"R1ji?
%=&F*/'?M%c&-Vd&F1`^9;i_`SO(NmgWt(Shp@GQjZe+Gj=*n<$0[GSq,qeI:C0d]4Y8Z<S<cub38.m12,KBtU_b^0A;%pr@C97Ld
%jnKb?amb?BWpltnRT[m)@cOY(j6u[9H%?J&lC_CZ(sDRVQd,O3'_%:(EV,GY\JVan^$Bi_!1d,o8>kpJFR"i$e@49f\#KR0jH$c7
%Bn`U&n"VT;(?i,[Ll1l8AjQK\**<.sOKL\LE7Sm5Y<"V<YA:d!`C4*mo.VSaQdrSi96!6@!)sE;8@2dqp*X\q)o?42p/N6q3=tnc
%fDK<jf8\XdQ+^M1DA-4hiYqb<"3>0"s18"jm3rHi0PIhQScb/k:)Kke1+/D&^ssh%?+\g,iOFFf[5`2N*dFGcX:D8rELGF3pjV7q
%GlH$^d>oS6peMUo;c3$_fC?1D0M=hHrrm+6n.VFO,(5=o2;_:GXJI??92VpZU0oQA.@8:;FWKf33n==OeF@B]a'-'7[I>,a@]_rt
%CD@3OAta`N$3dM00&tE$=]+\UEZ(L9bOch/A(k;D*t",o`Ac')U)6P_-e?-hi@!3n0ps8_cYu;IM03c*pke#h0gX^91#XMZ_@b`S
%[RBXR>K.96-]T/G`DRZh_PGh[n?Eah$U:mk\Vt)HIB_lK`tXFG9DD*9Ua)eNVgYIkUX6:/-B64foKTF2j24Z/M,KFqRQdJ\_gep,
%NmFLT`<q#0a+p;^$V*_OO.WfB=G!/I$ce$pP_t\u-se?MKP9oVp>"^NP@h1O'^JkZim#CL*BELMp71i7_PJiRoV+4es0)uncK%Y=
%*PP6<9qUG?n.TS7rl4J*SBuKM'C4T?@S)ci:"c5-UC\htRlkNXMTK_fF35qr(JM@nBhInjHUk>9iDR<scV9:aA#"Im=se@F3dmVa
%VuP/9;otij9PI7A6X(t&s![p$dSA\V,u&*]--O5jc23a;9tn+4&)Xg@aHUe9asNEk3ae"B9]Feb2U&n(rAEQ^G3PJYc]S7s?`Fid
%j$,i&:[ESqIlMT0J+gYL^K=C"Bo2dArD-GXDu3o<T;L#nRV'FfN;moYqS`B"rg1s[htFhW^K@dDUa>`LoY4:\rjMj's)HV><1bE&
%n<;:cr\f8RIpm_V<060]Ois*7C9_$.EqlhAPQcFeW2*+`AN:3KdJl%J?Ap0V"eT1.I#8GTR\8XrI"M%Us7@Vc(9%B^`nU9Y_P:t3
%3Z>,QDpii$)l+J>6>n12$;sqaT5kQK:DW<RZ>J$YoPIL8jR/@;_T>os5ThqgT.iE4]qM9E*-PWJQY-5k2/1rVga^8]`A&CD=l7/M
%TF*/cO1%gB+D`#84=SW8%7gZ/O4ZfT7bJ]@B_IW,DM3'*Pk;u2J%6tnm8;<gRGTG?.;W[WA$JDTOpjI0-:HQKi<%Q.XYR*qZ^t:)
%hGDHU-l"2?5n*oP*75of4BfXM:0Q#8/Jo$IQD!E^h]qW3f%YK9D.?iG?.?!cMsgRA/;k^k+B$I;C"4e6R`1GcVm8UhZH4+lR;J.p
%-J>Mh]F(mdG'ijUZX5h5[NM%2B?Eo<drM-m_C'8ZcLI:7N?pp=P]hGDZmi:DT_s>4oVkZ+Zu"1)9IWHAN:N4\PFVI)BO,4s9YUl[
%;ndOX9XO$'Pjq52+m$AQ"j!\<N+15NN5Zqaa69iRDp_lJoGG<ePk%;u7J;/)-WZXCp7P*+:.JaCZY1p-GS2Pg#o;p4%(V(V)Z!PI
%9t_]Pga^t+dnD>$0M:tSG]$-_JPl97\##(!($F>A%3$Sr0o+Y3;]G#1DR)-_V.YAJkd[U82YEWo0*AANQcY.^bLAbRDW(at.p6BE
%=m2^u[-&-eL9W"BilR8oqBgJhUKg@cc/]+.cB,Yp4sq88r2(^ekYnWlC,#6BA%X+^9f*1rbNSi32Be<jAd7+Z9fN6IjqB5<2Z4)Q
%;J_aVqGF]a0Ab'lJmrH5ZE;6Z1.-,@;[#K$QrD-c"VKo;TqR#DZX(]&Q+UqZd,oDtRR"Cek:#3PX.sS7[0<M9)B<7#-`Yc$cDmS+
%1TR8ep@Gr!mnBiSq9j_,lU-lr8H0]VdD0(>E[l@DB_.;lQS1=<C<A)Q2eS,^Cr.n!RABq*7_^OeL"1GC[aCCQf;%@?ni!q94u%2a
%%<E":CZ[Hh</N[_@lC%O6?EcQ8RZ4=e`)J!WBZAC,c_[1e=L8(Zoj;U/H4S/2lRR&[(9YR,c]EH8Db2a[q4$C@<?8;ejjm8i"jk/
%D:.^*UQ.>b;-e!I#Q$pV29t1gdfM3mBA%DS#<HX0cUeWNgD7(O>/@!TVjL^[D$#qNC+G`V`2KRPj&JfWPBLutF$iaM)4a<sj-aHr
%=ZV;dgs6Ga,]Cu%S:f9a^*YX=d2IkYEgf"<>F(FdLFH!!O4\lHAC30d'?`QuBZ3014ZD_0;l>j_9Hp[.gh0`Zp2c4I9]%]j%OsQI
%kOp;M_6tdAAaJ(X27Opbo9i$%adDOQ%;Y5^CXcoo]%rqXZ&oFV1YXgs.4:OJ.l2?2nNSSN_Ug/tCgY8Y`59&t/`2isl5:j?m5i6%
%l*j"B)oKF=1ZEZ9la/\poU5BC4Lo8:L0Y]Y-,1t.*N7e1@mDhn8tK^]o@=HomI`NXmQp``'2.HPS[V)dVGS:SHHlJ)eDk1[^Z!4R
%4@Q".nZ-!("qA@dX%oPGln/N$=)M#bNAu=lDj$aT^Ys)I)t0?S\,A?>/[bUnZoVKi=f\@PY/bI]]l&)DkH/L2g5D/8X6&C(?gsiu
%R'PJTb9Adskk2Q<*:aH9iW9ZfJU%q1:j)7FcaOh[HJ`J,rcE=RQA)el=i15a0:qVAqk*DZ:8_Y\l[36NDA8:4XT./[`]8=<IFb8$
%)MM^$E'qe@#64(`5](uVnF426l\0)SebnW2]:[?:(BBNZ(*r`m*6.jHrRP[?qqj:r0dZ#5hOn"e2(nq$#EA2n`/U,K9i,jo@N8M5
%o'bk:p3GG@lW&;V7\KAs!T'=53q3.1YW6CL#jQe]EKrD1q-!)Ca=mgjAQ&-JC/D'`l=ZCZg00GrkM(s\hs4;.9pdfhj/M?f]D;tO
%rPL$eNf=gn\[W3sf40lHc'T*Qj>hc)3JisY:Z58Jj)k(>EI"_&JZlq#,Zinm?K,O&iDj4EF[!k/q#^JFh9VDk:>c:QOCBoe/)ZTT
%6;GT0"T]$?Te(4.08cJLb+^)[U*f/7?7^n$Yp>V]:?!QsOsF1.,ZW9gS<T?I&knZj)1!OGA5SY'=]T'5f&`ElQ]#lUi=oT1'N'u,
%=]#o.d?U5b<shPs.4JgC#,(PF(5f,fb,U'P@9$BMC0iL->d'ICZGpUk-GZ7P!D#r9'M[+79o$KRQIcII;(H?gUAu'S*<r9s\tfFU
%?-uZRV!E>%cbj*U0?!LW?@oqt?HrSoEdSA:SeL&n`fbs,kFclV!)IEQSc"TM2#/Z;?P390jKG((kIF\9n=Jg&5Cr`hjA-tL1AOki
%T1])>nu#]A3U;`\[.=I]YA!j!N5%.HMf%4M5a_Z+!?"3J$t6G0c=.)6ed5R5N8\B.I#R"nj:24d_dF#"K0]Wm7;O<m3S>Z)#m$R5
%j-pgbBEkg(jT72r>UD"31Q@!&'-hll3QL%u_ECZN0tG?_+(-1SJU#$sU;9+168=4M-l:QajMa]j`D&DP$\P4)Ta[6E=ZjYZHpp'=
%jt4_]PeU<1b;"BVr5ArZZ%#4*?Z]>i)lulAoE2-;*',:`-jc1OO:D+*J[0h3,=k/FK+Ud8&.CI91'4b4bm9OC9L]:r"d9ft<FREk
%P9%dUG+e\"NY.PNOsMNB+\E6!i%:h1fg7FG_T<M2R)KfKWo5M;(hF,D@1Shr(e0?:gu@B3K4g^U0Ve[I+#_1rItI2<)Lmo-fc`^E
%Zs1aA\[c?9?tVj)+X<aGUJ-Ut9Gn]#QVMYAQrl+U3Fl6&=4CDbU9PtO;@NnclraP4'Zl$*"!8;0s*3Ha)0em]:+H@+M838oVT44N
%9#*Y8n;E0^dWu5r/caiFTOT%]\.&48"RW)goAid+(V#&nOFXf?cn@DH$4;JrT`f\308`1I#-sqSZI2#>jGO1HlR\>p>Y->0f1RgT
%&lo!V[8\cE$SZ#MJ-.[eH_i9[V6X2=b']U-PtRrOYuH71,mR\TJYH-%AI07e8plHtpU:9"(B?i55\Vs'W;pH8\fa7.\3d`&Jo2<r
%HTC;e#+\a$13?`RcLV2LVQ(7;V>s!+_8%lEScXP/@&O,8R#AfY=b>$;!!bO"KEeN\J.P6o(]jsM#D,kU+Y&"1jT'3;?r$eC8q9J6
%,`r2N/:i`q5ZVqK[9=!CXT6Wm^q9[<c%2s_5irFsq`1=,#..6X65%X:!,?MH2+g-E!miS*<7HGa$;a\'\dC]./gcoN#8MgFGp'[.
%UfW*JA7,KOoG0*$;Ao+/&Juc(Cn_$<W5(/DkW0;&5@3?f1+9s_.)S/<].RhQd#eYhRfk8i!:+Vk)47W6XI'6Ye:B>Sd'GL3W<g_j
%$QNLX9j@f:c3#T_^sX^:[L=]>!itoTL_C=4,QP%XiW(A-iD;d9!&TKBY3c0A/,V%Nr%BSu0.XP86&I$?q&XdGiEL0`-;Yl2a-F0Y
%`Sl5mpG/&99_<5:+6/`JV7ccVDV+>;]ULQXI^\K4#KKiX>k5ZHFSZ,amLK6')Z<e3W879]9n(%4A#[LXj1RKi%A&pHfi)k@j69\>
%ZME<n29[OTr6.%<].+M"6q6lU/nT"oKcbg&a!#j+%7PaK%c\r,a(I#2LZ5q((hp]*bL.Nt7P(-brkZ?[,VX=e*21G5YI5@%6%eh.
%r%2r-h0ZEKW:0^92R5jM]G<TT>MV!,NC/Y7BTAq)a='W68Z9pUoFVO3@5IqU;%*oE$@NgOqJ,F*Vs=JNXSEeP"+N1DLlH0<&,gp#
%EdZT?2`r1"`)H\`\(^=rXZ@<kRW$)0UV@68#$#`X?M4=m'/O<oWE&h3[d(OqS(822f`T$Kob9UpIk\Ni:K*2=Ic[bJYJ1+4FpY:[
%5FbaRWj[Xo>qGIAeAIXlX_.4$n+cQ?'Kb\W]+G&uX\S8a;3-;HZY'%u40H%>a^sEUN")07Z8"<bK*WP@>C/j#T+Vfb+=8:l^KGu#
%252dR-rp9p$2XL*O[U:kreEKPLK>Gg#G(>`X=!i=pi*oR710Ca4:ncrm.dd-"n^ok;-3bs+Jo&2^],8!`rBI%kdR"gs67*se@:G[
%EG@U_dAXMOa84J&IXFVI0!",a<XB/.OoZA(#ohLRc2-?Sb-6h^s4L8;3PHYhq@dF*J,[oL0b]m@#4kV9^%*6e9K\g5F973eees!(
%E85[[d&bnKUDeRD^VSu,[,,A,fW-l#*r:A6p4kZn5M_%^`h6K?@qaSFkYq1b^2?=\U2UoIftkKA#)U+DN9j"e?>DF1nQH1b]mo%T
%`Wo&!_/60lP=E5Gr/TP-kSPVXDDu>2bCgDNnSp'/6FKA'b?!rl]gfakLtc5S06=![a;sL7P=GR.ISoJC)SP9_OiS.;c'Z@-`uA[/
%6$G9oGm?^#'\0A6p;h#bIutb;n[E86g9);VA)8%?cuHJl0uQeTkFF6n5tZLf+46O9]%),_C6Kk?]A!:*d@oIb$s^3?XepYrePo'3
%DDOY<,bq0dC%X#$k76L^iLj\SUZ#sM%)uh2pfG(+qs"1T53Q%IJ>u=/BQ_[X^YoYmZ7XU,=c[d-?,1-gq)rOoD:Aq/)YNlu=)I]D
%<T*o2++W%G6Z'/f(]r<V]%,ZqX]+W;JJVNU)?Crk)c#oDXVS1@O']^<_9fbV1M3B&Z7,V%jI$L4<b4<'>1`$>O3?0V9p6e0eb3A#
%rhY<=hEa@MDnWn(nZ0Yo"1!EZqUTI?#CfGDXi[G"STgM>D6Gq-`o7R@Q&>hZoWL`pe`l^DWpOEu'0(NlVp/n<M!%HF,-SdH@BH6:
%LtdJ"Kgr+CqIa38,ZE_#hmdCoS$`3^KBg5h1%#2FYc9>Gj$:BEFP.ha7Pnhl7e1*4B%p0^dLL+H8ip>b<HU;_6IB0X&"e)+#rOFI
%g@`HMQ]51H>p&O+EjO@.!CPMYT58t[=i6Z!fN(pLd+W5EK[_K=k)i5pc$3+>D]8&4K%p+%dHfdaKK0G3S=$"^C@L^3j""U>>i+h0
%UN5prJ*u`aG<#1'cFZ93p;5<<8V>:KHAu["N+:@?GKkB`=:Y0f6]2gt3VIj(E>"t:l:)W.@*VL]S,I6*qWF[.1M4jqfm'#/2*Vr$
%_OQ)$Eu0SmTIY#9JI?ekWcLI7;PJ=19cO^i.[[)cLj4sX)Xk!0bg$j.R3Y`e>Xi19n<H'`%pLVaVr%LG5^W"Mkd[98C63JkZfdN;
%-(=RuU-,J_R+%(4TR#*MlW.fPHm6[`Fj&<=,M2p.28X+'[(%W%^AU=b"Z-:U$uGNP/0RLe@hR/.:On%SJ0!XiZ,lI;8JL:>qg6(d
%.Ks1tTSbCQ)`BBeiLl(0;8@s]TN5o`BP'BQar%NN0aOK+=X]pqU55oi`9.7p2ZF-`Lu66XWD7f4#u$%2*.a]G8h<737Gt!B-=N]J
%eoZl^W+lho-#%[u;J4%8&p,k4nuWqP&q%K%=UlhB1DbUtct^!.nc#35q(cFjP,tX3K.!U<lD24M#@O'^el8$*eb5XR#C!+]7?`9p
%[8*p^W/iuHna't&i-=VX13k#QDN_QFK]K@7[kl+QUb<`uD_YH$?QpiiLo9Kf`5bO6QXbZBDhZ+"EQB"nS9-g-qf\\QSO^V>%e4B2
%GcZTcg+-QaTO:.n0%^HG8C]MK^m?V8E.53t/2g=AO,-i1rbRm46H8VuT?b'KT",<-:b5Ik7n+.m%`&fq0cHd"h,$d*X*LIteqo,3
%UHKF!Gh/R,GAQS$hJACS&=PYW,o@hI#-=mH[ESX<]OaWTeQ0k8FSkK>f>n?MO%->,rc!k5YMJ,?rNBi-%5@A7SEen[H4:^9^O`0E
%"kNl9]k)I:WDS;t?/HV[1SP?%=[tk%G2=oU/WSJCKP8,l]ep&P<V.LU9#FO`D"[5:pK-LZeS*Gon*_,4LGnKAhs08N:3Uh6Zo]3K
%p)@E%k4**A3AIf-e@m_hM[&JoH.=X_UtYR8!.ls@4+g=mTT6.'!CT9V2[KC'^;UABrh,OUdhW6?>&](_a4H:HG.9HQ45K`l4DqPO
%GH+l.gc4-8@(kNQe8Da.<"#?]e1mU8g]T+\Mk?X`Zf%_G^9uVD7UG\ee\hUe9FL3eBJg#8,PW_R;K0mP%:5<JHV*P/EfgE0"2/!$
%^\s!*HXJ5oJr,#[[+Y7f'N!&.2?-9"dK5m&0HNbMA$0RAdY>/#Uc2Cqef4SM8)#7dm&AXpN4#RV(.lKjHdhB&Gg@(PWZNH9D?i0k
%8)<HA:`b7)e2hFhr;]4`!Frs7f#7H?#;dA>-[=51eMH.Ri1\F+/alj4*DDXB:@Gq+G5%ud2$+[^]Ki-=A-/1FW:Q>n8b&q58*A?;
%/%"/?_.2i`\uj\YJ9cdsWO:RP96ZpmZc+P=pl#aIe>d]0nR0iSkW>1[)f=A*'VorX<ZcNQ8)dcOSa'on0VZ2^/3deX/5aOqZEGPS
%.NXRIV_/<1"%);&HC\qE'f65d?mLG*lS1KN_gp`]b?MC+&"o]HOKk^M#aGY=OM^9<F%c`&bO.iQb#UGFe7H5M,t7:i6)NKG<dD&I
%\+e`n#O+=OefVVongJh3W"0"/WtAap6]JQ%R`GM_mUt75O/a5Dp8N^o%bQ^<@'7=l0\s*ggM692>1JM^H.0O#l$laMeS#(n#qIk;
%(_UOMh^h0?[cXZfHKk6T\f&P/\&`gqKj$XK#=1Zr?8Xr0Hk!9*`[kdnID"cXf:ucPi0l@%"bO\f;:XX.qc)p(CB7Um<9OQ`S5cEt
%"!\<WRMT9@2D`-em"`n!Ut5FI>moR'>/uGER%+dE0p$UZmC'Q&_:rTM[DH/NnB#M&Oh/hCB&^:Z[s4SK^2uO;Pe+Lj4+CFos!<=X
%BB\&(-D/bPcC#CbB:=gZaS*?.oB&8sep4%bhAE5:H*`:b(4(@h.ng#jE50@(3,_Q4^k4D@#ERdm4LqN(2d8Q+q8^)`@!\lm8E7[i
%U=3k3Z;MXgA21T)59S'HG$!<t^>BiO)DH1]?gLUm;/=lXOEZ`O\5Qo"<V,0(1hEh7*>Df#)Hh)oO5OHBb%Ko+rFXjfLZI53oZ6pc
%W]Rk)FR^"+'RHn"#jF"CIl1!:/T#Z8NLVd9'bY@T4W^t66Xj&;HL]*E#[VP0XF"8)=0?koDd;`>Qjq9>GV@)<CC,tm\lk<:>cn,;
%&P(A6j1be@iM,kYFOj+;c'efG@Kh]\mDK17fQ$T;kVqLG^tmqT&N9b!EJ)4.ptq^'G._2\$di<ua&t0kJr!M*=DXKU<@h@$RkjO"
%5%tWnSW3U4%-&IZm<GNL#>L4S#\_rI8%%$iYUBT%*=$!'X)7'MI*f\VC5mJ%`)*N)<qQu@\Z0hbXX4dVG^iim`9nYQMo7'QS"\3_
%J>+4ZY4HO`Dt`5/p(ukoAqHE]j5PkiBY)c1G(XF?'DH("A'i9+Z5QJ=6E&pVq^]=Z'lOTN!kBs3cW]C9<<Xj*J5'gKP]oQQi4t.2
%7ch?o4+n:Jrc1hPf0Orj),b(Q-_5FYp=\bZ2i9j]RTD;NL(jWGDKgcSoQhlq"k5!a*FP`ET@ZsW7N@ZOfb.l_6FBIqL,Bo9An1K3
%P9IA&aFK5;9(;(tbont`ag%8E[uP1YHho];,EaHU)$g8ckjM:8b>O9rd$FhVorU9J(F2#=gL-`lCtI[FC$rM=*p$_3qT")I_<Mg*
%_a+,WXP-nY`kr:eL<$!'U!p0.:sqWMkhCK'RWaE]^SC0ap@^ba&`si]AIO7F,T>R)[koNS&+99<bDMlqT:IW)g'/QiGT-h[0VgtP
%+e/=LRU6?AD7&(VVWF(^/I6D8kU^5iNii+$Jn*Y$NOn1[^2"^7nAfut4@+i_UDSrGmVgu?`^"$qXs5))*0,g+$UMBTJn,"\b>Uf\
%(ig/'J/`!(kSD"?2$E*"feX[e$%O<lODr1WD?W%:4Er(nZWSbs!iJcs\ec1(5nV-):e*FX]Y[pTTa\'0>IB)KGSq7?oFa-4HDR;K
%!<EHaVW`YU%1ELYCIZ\8Sm.&kPG!<EEjH:O3[R(`3*c*'P!D1q;SVXdI9mB>(psCYENr38OFlRhRa4I9<;V=ckCFr37=(%%L,@+e
%1"(3Q"?kYtA`;Q4PD]n"M:h+Y[f!/.mbGHd\a8V'g?QuH5f@Sm[/"KCZl].N^6&X>im-'s?[UK"^@p_C[]7;jmXEo:.]dMn.%c?-
%EITLDQ<h(X,nm?6?^lo6dg&$urbTHHfCqsJFgumg8>"ZP'5QB[^h("C;Zsb'-nPC]qEk2b3`l6BG0XF'`OmO4b(K9`YdsI2m\mT=
%=1=fBqisVoQL+:Q\))/imci]uOl#!Hp,?nGjj&L#;sHM/E5dV'rDe+n[oMHiEba?Z+teg51r'qK>d#M$dPifaM)B-E9<?]"QT-H(
%b=[V5V(O-]RpW;9nfZi.Te3T<PL:9B/IrkIb)p+Klh_()m/b1hA4Z[;o28Ffg7Bh+.V5o6D,8fPhg^3LHS)D7G[E:_ESU$U2YoAG
%Vj;MEAYi%W<#\X&B(A^PrKTtUPklS"0QC^RXnQ(&g!,>ng2M1]0<o1(JcM&s(RJu'TJ+"Ab3,T/W&YW1DsLF&=m9su5[Tb2F$H>p
%o<#LgK/_0%`++;rk5H?nG`MIKf$a8<iUP8&kitW3g@PEGbg50/SB<IW#_deomN8rZ?9.T[3`l<_/[WKVF"a1kq7X6*$Zo7-mRoqt
%4iSu-f=AT.hS&YSb<OTFiT^kd.Wn3o](E[R!'O[m,!ZGKK;rDL-MpAb!_^7mS5aq'4Vr%^&a8d6.nS(8+EP6Y%CE`s(e_HUg-Cp%
%DI_N6BW_$'nTWhT:J3505K`K6"r^.g@/KQOI+]%orf5@f+2!.sbP/%VXm8n]TQB4p*)!lYZ;a!`Q1k<ZbU6srhXLVm?fB.uX",,;
%N.h;E\$38bh"\PU"M4>#]C?p+i`[O9d'WH;<H\Ymgi=t!?eS6K&a[Z]=SF?'VPL4t2pgT;dq8dHrE@?$;H;"Q*c.LbA*d;>o%`d0
%0@_$*_;%jK^9;7B5gNVnI:&YPjAG';S+[o(oXN%L*rcY^JKBY$a5uke_@u.`61_kr$?U9>]f]/p?N#Bi\Jss*pBGrV2Le`1XDE+^
%"V#PEZIS[ilV4BVl1tEDiGR7jnif<3X1,]EY<[WXP4#S=Up"*PJc;7Q3mRU&I8[T<lKbGd:uJUhe*H/JHL`o[M;X_e]8A8g:1G[E
%i<T".HS$6S#uK\;\#`p-F*E7D#@9ZB^!jB7"6c5alk5aeIAJ2eT[gThSdcC9Mp91dD^ZA\"IgG5HFB+8Gq%S:!mn'@H_ss7gntUS
%?i#WfB_)+Am[X?;-&)7[J)F9;(L64sE=[W'NN0kE205WD%,C%uQ%!?od%+,bD$'s4SF+Ll9D):P.u=Z"Kd3KFCohMgViM*?3snqY
%c>DD+mfUqSKF;H[aIdknTLbFB?Q%HtIs8=n?PM_Lp$o;..L-snrp5a2NSAqG0<e6+_084JDniiS=u3H<>YKtHn#lE>dP;*Q[bUA!
%g&kqHC&0q<ejX<EX@/\A9ZmrNh!qNqOJei\raCRD^=\SGT'!QCqN4+9`f_Ch$f">5<qC[M`1>Eg0)V;A\BDb@_"H3c@33nQjir1i
%kO$:uGI;d\np;j-f86,YpX@@i#P'WDW5eF+9sr='>UQuD;l?;IdmNQc@r99TkqRCoT]]"-NBTSgDO",9n*P2a@:"BUHhs4Y^3`t%
%4gd$<UiOerhpXc-5O$tHonM])FI0$V(#A%eV$CMPX;o>Gc`8L$Ihb_+T"`J@q8J]+hpY6tkh"U`0?.`Irq&isqRg*@k3mdA/UBXH
%?eSR#RtCr1N!]IS`7"3"Z)LXZae\VN1>U8&1Ae]<oVl'd$%l8f;`ajDrDZsL!Y)IbI/NP^rk,hQnU859/Zc'Z(`jc4[-_b2I^PX5
%oM;I[g>;*A):tt^eArT_dcHu2/_KCVnB'MQ@&Zu:g/7<qF'3l=D.]H".i7cE>+q&(*j*:pQX/XZf4589,>rapjEYa%=Q>1oeD7\'
%[N9;!R6AsO9Ai1o%>h\!b4U23nlb.^c)nHdOMJC>3'6Hh%V=Ic':-)Pf1]i?m)1XI,?PVXr4/!G9Q[pu9)!Q/5j-;_X:$H#@MW(K
%I$O`n!u)1(ZfXj0&*Rd/d(M<m1%3^1([#Y.^&IkChZ>8gJ84u0h<4<_$$<B45jqs8"Y*e1`0*%2hXHfVp];bsjoZ=18am^k]R`]L
%O2O\#_)`/*/bfAn^4S(8oGm-S:`,)mCr7?nG5COM+"5hf^?CP&d3>RbNV1m/<Thu_#'f^`i:HX"HDk82RN%AmPb*o1eQY58oh\j(
%S,ZT17Yi%Y>98Bg^@YM]\A*?P-h\W^/gb1IM;RFDf6l<KGVnVnfG$f.W6<?4lY7B.\6qXCgZOJ8llOmOQb0>.6L]bN1.aZkS@;7#
%bQ)Toor!V;A!p:Oi>q>'_5=p3F83;51d7p`7GGn-`TWucA!&E-p\/>@`Y^DYjm>sopdh$!.!DQ6DlR;o"MfQl#6J&@kHge?@M1X<
%rW/>?i=:H$AQA9b;S&*i*sOoS-89+[Y8$6=#Y6<b`qY?cmQ&#QKKVLS=,r6dqRBp=+:n="NI;F/^WI,$,bst\,BAK%.8sA;Ss4[@
%l_>][=</&XrlhU/Fu<i"8:oLMS([Q(]>:"Ko+g@tJ'R'1q76A.Qk.1ucMN.f0K+nA3?+J)h@7&L,Km'417]$-F._k]!*H"Ok$uMQ
%W):E?lnM4:?$<0<j[I%OIStH`*r,HLkQpBqnmUI:"C400=*hGt8L:FI]qplQ4s!)GiK'!D$n[ce%F-]8[JAaSd>u:mAoYGp]\2tt
%n_X(c/Eo)6fqV`HU[i$jQP.p6J)(;>.-=)Q([mGG_Wld;c0'FDM_85)jY7lW0foc]<;^BC(e\@XSMbZ4iah?3GW,9HpMJ-`.:u%m
%arT@[Oh3R2-c27aUs<E?6\!5qJiX11AS&@S[baU0dRg%RE_s;M(7p;,ZH+<>#eU[6n\aQQ%:YCh#)pm-"!(+4o-r*6i`Rru>P7A$
%pKkp'q@)r]Q^8G!;jUt;8J:9#KHso.06iKb<^#e##,Acqqb9bU2P\`1[&L\#d],\bSJ+q4qUYE9lGCtu"RF1</pORR<CE.E#Xd1o
%>:R-Uk_V[)K`$IOkhR]2Re&?"S6_QoQn*%57@61;T3htWL;eOrc-K9A`2"?)I]1;eQ0[*[`\i3(DS2D^F;_\FkCaK)01K0+2"nZU
%F#Pn6L"LP.%.\g0oe81\\MW$M(c*@?AfPEerSqp'L&BbbY7bk[a0ohY[AC4=+8a??500DiStPgtF_3j7O0JntVl]q$qO3n9<:8cb
%b0`2/o!/cP5PASYEFInkGUi'5]7$r'lr5a&_[-6OnPos,OK%7([FcLV7HmF3('s:5Y.i^lKW/tN/,#b`Z/hj%\GkMO71H^&!OJ>`
%B1S=F%53P@\Hr@@gUj[gFuUH;oD8Np5d_:HJ0V#OY[O.#mDM!L_bWOH+1TN)VoKV-.7]^/o2-6QF4\Zma;rJo!>*NUq]NHO#Thl2
%FieEH0UAu+*bHk2Guj34Rbu5p4/q4i?ci=#cX;/!:VjIkUW#9BHue_$p7?_\R3@k9%p=H-mY*4?$HA9"OYs"l4-8P<n;K)[3CNfB
%cmds<:0M=Q8R,AiRu7n&$&g0X*sVLcUENcPO5_R_nMF&R('k0Val88lc7_m0-M]h>GAaQYI"rJq'&X<;oH.t>n-50V6\'4+R<h-d
%3L,H;#"RntA3(\k21">n%m.NK@c[&g+?o=a6W^q?T9JHO,7RCHH>!2(i%h.JSa0h'Km[s&@\>G=8qZQZ=>;U)_`4'!kF)nk!kKsl
%^M31n9S:>i)&1kb?jV%<SC?D,o!3>M[6+nj'2Is:\Ym2ud:eilf7,*:o,]]\=>H8mS\-1AVuRYU3uXOU-;X\m(=ts0>r$R5qb2,r
%[Obn.3RNQ)6O:Z<Aj*$&-%J+m`%8mE[fVej^;J"88=aZuiU1a'oa,e@Hfs;1>#LU\/g+JSNEPf&5^A1tDhZ2_KeJTa7\Se=NQ!-m
%Q;aqe][uqqgK>Dp2kFgEUn-&(N/FlKVJ9`q6>p<FAj4XFAr90eleH@S]"C/j;Vk\R]u"/m(hh.TG>13U@)!\>51.sVHr4$R'V_Zr
%`>f(qO@B?(7:(.O1alRh@)gIOb".=7EHaRR7ROb;=ZMcO+/I;W.1_D-G=7D%Jcq'mV9uq--&bKT;p.?W`37BMp.'<kq!qO#4&L)j
%E%>IKnjX>d&`0"YY>^LRG\;0BjJ%dXQ3Y6,K9h1LV*k1%g,=g5G!RK8;cM-,=`JBFK!HeXLpH3D!07V;f:F3jAp62BOu;FFM&13+
%Z#D!.MlLB-U@*L";DXX*n(i2?^$,g"1ng@Z;j4D>$#R`7[.eFV3EKDO9Y1I[[UM8HJLg2_m6ocT'_@j1gl5#DX1%1X-ITL/'CXeX
%HT%tN*CoU56G.'mn_N$H_S1NjhmHipj,mtABIqNEpR2J<@^+M;K_@Q%;gqK5`@P&\4.42A#45)KqiD5BPGra;Ol#j<lI`dhiU--K
%ZXN?.kb2G[\[Cs?_go::4b\6bh6Z'dC.p:tB+nYR3q>6arV_i&;t`*X?R<(NnomS1.UsM$l*pKncGG7#mV&,_1cDdaqt>rhG$n8m
%8ComWV?BgQ(,`1N[(M6)AU:JM1*5=Y@-H<o4.T`F(liRR/]5QNb=NB<GP>mUC!!c(,"auNf1ERbR[2TsCS8^1p9(sHT>18F#GT6O
%/k6oD]oWQjNM:<X_PZAo\r=%CK8kR=EV'NnOM@Dl*66!:mm1JDq4>OXU,M-Ylu.<Uc*oSFQ7#!X7ZoD"LP=R$A^JC2"(K7/'9A&#
%=$50hTE30#gHPMiCY_r?`VKA7<7Vk/?clI)k9Z9W(JE%#LMet'K9"%jROX)Qh*a,h6-#Q00MN$_E!Dl(/N@#G*<Xe9K9"VF4B2ks
%E!@>P/N?H7?#U!R5doTQ3HW(TFDSDD1c]Zo)0F/?_9$c^JhuWS/2hnd?#TugEq1c%k^kVSkZGjJTlY*B%S1rQiWA9->F8^ZT7QYK
%Th>tA^!Na_NS>hO@,mdF+t1#Iq%I\$I4RF]?X\g_n+kC6Hcc6<p`>@=&CUc,1@rZD=Z3$:boA?;:_I*mIQXek^4=5?p0mcUc^cj)
%+`f:,ptV"4.?IjB:(sI0MNmoR(:ae9;V,V1O..sbL9>eN@J807d6m-qfcYMi#k]_mC^)=_ZSoj-8n;m>a/`T]:\1`_H1&6M9m.J"
%.u8tqO3)9L7uTqC<6Rc%P/<C<U2L5*eWt_&O3Jd\\KT&9;)>SRCr+hS'07`ZJqT"K1*<:UX>aQ)(*SO)A6PP)b_6_I1W@igO"Vo8
%ENHqn`ZTtc8?X73iY+:m"qK&/9fp6<H\duNF*GY=WG2>f)j?O&.1])kKUEK`jRKnla3$@JaQ%>D?ClFi.r<ST5;fS%Rfqb0V*jsl
%mfi*05J+-Db9?L6o(^)q^dl`2o@tM7k.Hb;a6/=fL+re`&`MVL8:jRcIM![t`dc6\lp6At&hm'jri6hK?n<T%Aiu$/dkp1qr6jUO
%*?1P?p/=NU9I*hch];;/bo!a?4^,R)J@=r]!9k-Ylk/LE6acO+^6c1hYn&aEZT$MCaoAS^B=e1W`mA++EVq.'%;bc!O/#RBhQ'(Z
%5FdBQb5"kiZ!d;r<^m/G0]-+s:N:O"IOI6$`u"Y_j'c)2,L`-CjamSt>QYnt46gpkK!t6JMEQ/aluW2:i.Z1ua3&*dqJ\2`SR[@*
%Q5Q_V,XF%NlhG*\\T\TZCleNYn<J6&e74Ud*q0kH>eThSff]!*@(bu(5j"GT'aIjVm8lbfJaglC8!g:j5s7:e<^\:-9=Q3U2Z+7'
%Og33uMUncs+u1c(aVk-7)Rq"IR$':#7)nAon&)+L1?-/sC;J)S@l6qJ\)D<(LlAOPs*ZkL6jAAmV>PO]6r-1.(m,+c:Pkm@9cK52
%,W*o6OZGcrjtK+i-5J0tcT`Te.65GU@1YM1V<8!LP/t4nAM_@V,S)bqZ$bWE6"6@S`:[I\7.g-]7eU)D44e5#eBnQbL)nr/BDqPr
%7N1!$<;si2QoBdA7GPHcQ9L%-(F!AtL?@$?/(n$X]XfNeUOe"i1*6V8DG`<J0\Gn'JN>gE:OZSRofu#"\^s]Pbb#c?SR(34%hn-D
%3INV<,Au*.E7:CC(+gU\N5oOo%nBFDF(`FNhbJ,S>kB&:e)\D$Fu#6n2sYk$ckA]XOq/A5)p0upB93YEhIP[jL,6u-UO1qT)0*".
%L\&XIS8g_tYV5.JXL!-"R6bFJ:2hA'aWp82KVnNX[Uk+TOjKIL"5*p,?Ue/&nh^H9SWMI00IKCA,<LOu?f<<u31]6ZhK["J839c5
%fTT>E+_9_-As$],*RDH4!.4*aO0mpb%.W^"[htF&$Gd"Dqt_LmiVc`2_O>JfpSG)m;ke2)?M\Y7::MA:h3u"K'02W5h\n.mD/C,Z
%d;EQ;)DGkQlti'qhCE;Q9JQ10`GT93L,ZhfU&Sh1^>#`-7ZIT]3t6$an?bY%hoMrE/0!?;p;ok-c<^2d?lTo4\$O:L]q&_(lKrCC
%;P/DMOHI]3Xj&+9(##'I7Oki&I7>]p15h)jb[(ZA#26JgcSp=]"=2pPe4?'fS2]S\Jf#6?8oO")(=b*41>LA@HG!/7fNBcJNZR@+
%UUojOB0jif(!`+;,8ooV8VNYdY8f&-cMn<I=f0'`*>'IZO]/0pOY]sDK'/;Qrn1N5="t9pQ;Ik6&tb[5,f3?1\*cl[TWe6+iJA(E
%UDWmu>Q>[(J;jFFGhR?TfJ*'f6\`Jp(OWR:0o7L!&l-g<]VruZABOMeHOWbgG'1oLd^PDbQsJ(THVeR34\niHn:8PcMk7L^:_W*>
%hj8R:qJe'C(Pl-*.n:P+,$hjk`='U;nH/6]`6)(T_/JL=Z]J9NWlSH=mRoDaUTMfXgLW2#jLd+*k$g&oV'F[\4Nk!3G3#4eQPMXK
%jf-O9\('0L`KsqdS[A;/PjJ+LjpRDYWpKmfR3u]GrY]l46-4!NfcMVKWbhbO8+5L0cTBlT49o,cp1sDS!U@6K%^2>pc*3Br=*AL`
%\pc)9pHco=+.N_;o00nOIK'_fjB)';bn"JF!9bK5*dAdaa5OZad)=DGEp\Y=FAR_J>kqdT79(&R2$0@s1GeQUognc$jr;T/]m_j%
%cF+>t>3l\K?gL)63+gnV[Gk\nkec*=P\WSpMB.Ij\K.q_cPO@P)s,lfeVR1NkWMsPhnYG"eAVA.X'O&HRXOp8q5<q>hU+*ipuN7V
%S*hU`B:"@USbBD$8^<69&Yj=.968Qm6e[[Za("h',E@2#!EY]"YE0-Q_MrPlSF?6imsPSUCa@0u]ZsEE3!D1^4X3gd*c_o]FEuj%
%O/8aFG[b0SrYNpa*oG2Il+Gf01#jr"ZK]%"!7*(K<7uA"\THfn_i1'Zk7nYh-"icCkES\qnhSs93\Sd8brhK@2ekM)Cc\bZ,ibC+
%&hTS*CldRlZK]$QBtW&(VobfWdZinBq6,`NRSDtYp,_MU3rb_4=_?,O4QgJ%CcZ1g]p27R\LKX?2P&H1'QXB`B9>pOeKnh8H:HS0
%?Fb/!2s*f%:$4r0lV,BfA^bo^AZYCH0Up?<Qd-ggABJ`"8MN,02I-U.As?$QPtO%_`ZesBH0*KMjB,-=:$6)5\oXpMc_g;336lja
%As#gN[9>opb*ckj3?)'/o3NfgVXpOgn&i_iflSd!bb^STq.7EZ3cDd](EF0$dkSqJ9M,7XY">ta]EZ<E60)[C@]-)F!6P*:H@I2c
%-WLR40nL%VbWbqg+:b()[)PZNT0fr>e%1pcI<?^a`Jj5cg\/.ZcHEeTL8WCfD&FZH&Ol_HiBiaeUTjfj3?32Um7K4`IJQaJSic=l
%DO1aCK%@8$,J-%A;c1In;O:&f1STU1^loC:_t\OGie%/pFa?H2DNAIQpQ7NCk&Xamo:ii'F4T]&Z/:"tLaIDcC[PY/,0!PgF%9[U
%@2I`g9Ve/ol.K!@F2qm4qHe7[4\a&]R_(:!MA'<;k8@-=?Z\5=Y0uMkG9\JdHX1_P_.F4F(RVhe-U$YXBSLdJh4rYner=cSs#"pO
%cVa1<$u75$BHj#!hSV)B=sM:i^*;a]GOM_^Vb6.VFoIjiU1U6a]BMYj[mf%>L:C)*EO,$B>E/lKjj^6(N1"pNM2q8J``hiId!Xom
%Y(5?mcqu5O,!O"a-t;eoAiCFGrL]P!!8gX36:JtCSAA)/BuOMbH;Hh846'"[^,rs2SV\V2U_RiW__Zuk>aeD+o06G5_@>l"`7j+.
%e4='9mmcME;Y7o2hi10.rd*4@UH?&\Z'@l&N1%;*;0ghAW#Y9?f:\rdYgu9f:uBVeDhDuMN"Yt;N9hOP/2QC6Q8]XecgD"TCKD^t
%KX-*V)9[L'c[8ug`gj8;$/F&k:-6ps&jY3>m'^Yas+9V@C`+.0Y:9g67j>hb/%f8:NJ\mDGpG.=&:pJ3L-*`Zb+#BLOD/HQpK!(*
%E#6b;TD""$-M,XVNk7#%DgZH4S*6`^Z1Eg"DT\GL$sbgI"eO$^+[77+%<jQ,`nZEY'A[UDoi1OrVk9q%]C;%sIP0\LMs-#*r1'\B
%aIYO34gC<F)t0)7hos,1K\VL4bXXJ$I@>5[83;s.=i#Hf83>9Herj(T>WI4Am;:dlE4\)2Ng&?aZFM=1Fa:%tj%a)&h->U.>M$\)
%QtK[Iqqed^0cW!+l&Mi%q9EI+BhUfaC2a*f46*ufW/`qrp).;NT\F>XQ:biW.tU_i87K.T^ADaEb"=>>JTq!V5',.u.MK%Q1"7n!
%72;IoJS@g<)MW0P^"!8i8nW-e)s4'KR01mn2s$$gj''P!n$B?#Ja4<NJ;g^HNi!`2fZ^LFI-]MpY^s@8&T!h$7ZB*;7_C2=XqL[K
%:qsC`E[0DaY'YgS"eFH]3QK[9hJN(am0V+3^i@-@'*\iLUlhHsW8D*.h\CV,-<=oM6VQerOPIR/GcWQ#Ug%qLbkU<k:$_KJABtI;
%SF!nDD,+3b^%:2@k8&L;iHiDnN.2H]5hQi8giq&Gg@qgsgob:$M*1uQrr(uMrei<$n,;n,([*&m=K2)sXo"um`KGZ:1k3W+eX;lW
%TDra&jhkg0gHQ)'ejs*BE6CofSon*QKA\>t(FWA9\PjTCb5B,q\+&A\1mZ(b"sb26Q2?_/d(T);NA&YT7S<Wd,?O:i]M&m`j!A'*
%^&I\J_@($.8TXoTT@^4c<,LhGGk0*%`,ah1rZ.ilbOE-gC)ES3b5BRYl0^+07JYEj4(F_t'UbkhbNQ<W7&7OeU+585c[UhX-FsK;
%-E/B\Yo`O>SB3&[7J+"1c5!Ca/OKOTcoGoKY?T5FFt2cHbgD+s<q?FLb/*927(%,pY&LPabq+u%8WUj;92OuGOMQ/[B5:L<<n`G7
%HSo,1RbnTLf/^O,ph@rX>/#?1E."@+d\CF1J__=p0@@,o6?]]S`orZeJN%)]b=9:LoX$QPHXiVL[Du^CjQ<XK\.YXrj(K[W@.2Qs
%BnBP!N0TuPK"&Tb?+2H2A<l>,D1;?V=D8Q62I[/h.D:q;CJA]rM\sg:d8AdP^lSX[UZDJFc5-l[>"X@XZm*K0S=<"CdC#N(i?rlo
%;)M%T4?FY\9q7,.L^8:qe[Z>_=cMdZ)=t'_5ZYZtph#&2B%BJ1WdJMdpU)dE!2GT<6;O9]c#*X,bt%"g8gL`E''jn\QJ375AD5Bf
%InZ&9obMSnJK6?fg<r3tc2X;d#hCtN.?+Hma%Z_JkiZ,EoZH'PSB;^qkKO;2r:]i3Bt_k]S]K%%Mf;a$oYu:M<NZ/;`bB7*NXrp-
%BJ.Uj(n9'D,LDhHb2jlc$V3f-8JcQOn4o>S(tCZhhN^!:(8+SUrGqs%:=U1+$ddQ3ru=;UrQ&J\!Ck<71c2tN$fopXGW4o5XG`(#
%"mD`H7WJJ2mmmo4!Xt])I.f%KPm-B(c]K3_TH#IhFGtXCT!sb#2%)*Q%\U"dI!4m?Wei@iS+&nU0e_Y[bt+DiV0jF`Kc+1=(Q5FQ
%VRVl:V8rS39DN7CFOD,tU0buT7cF@&9DO[iYZ(SiV0q=\?TH6)I%F1=lr:mo;GCU^e)#bK%E72ha518`MmK+iDtP&2PKW,q^Br2?
%Rc%L:hkA<QCaf0e^M3Bj7DIG-39tGdB1%f.rMDdu.a#GROn($#^=U]NN`RXHK9I[of5Eb?<kh`lK#qn=a8]J\nM7X%^":TT&^FVZ
%gcJL_^"4o^BS#nZNcD70n?%.<hZ.-@lPD[VfSo7k$eq@9RsY*c0>`Sma4PGKE3EWQoU=@@48ijJHi8OD3gVufn\'C3/P77sqFtr2
%Q/c2ci2oq_);XTpT$9!JHi8P7oc*?`56$!.`k.:MdX1q_Xgi<Bo/Wdmm!J^/\!'Z;Zan[@GX7&KZ0C`M$VX>>qo396-0B]XT0)La
%dX1qEf4f3\T>eKm_&KP*1K)9+f?Z)XN*/lB1@G5^$W.tMk]m\uTR6X3bPj?mqH8d>H)ohUp[O5gMMLYKI+.7A0XpmQQ-F=9l[$1/
%La2;qNGu(.nA\KZJ):mVamSg050q-\QY3mVrN)56cbsKT@jl["dHJ8miHf;Up\G'Nl8P40pqeq'7(nY"ikokSmr\j/qO+I1qpOMq
%hCs8Z?g(L;rYfC#Hi8PZ/Y7Ei?TJ(uI\,n;h<Hq9<a%=9LKUgNl<_551Pa)RTB]`I)r"\%\<G^g2guOFc[C2i7^H@/qFu/U?dpX^
%J3?sTp\IUQ$ub2P:49=<6OZJ&ocm:FE3Gn%biX>S+4XlMhs2)kd>:u01Uu$ifPNQ$2RAo$mp#aba"<i!F5Q:BZ!TNB]mbDkOP]7]
%UYUQVi*6.bVp/"bY@$e$I^*Dde'Lj&RkQ#:F%2bZ?GGE&rBfkUkR"MF\,%fk`Mr:uS%scHi*JWT8s0@JaP!sEp\I>3D`Rd0I_h3M
%7Ru:`6XqfbUHt=JjC$1>,<J)j^oh+`E:;EE=a+NqaoW9)nA]ffg*4Z$@/-_eMI?O*c3q)54'#EagFN\&RXgY)<LmnA%"(B?c5f<<
%7\SGg^1cqH#FgK/?G!lbQF>t6U^H6_mB9ie=*oebe*:BD"$qd?Qi55uB'XYYF^t;=?esMI\6lpaIW`.ul$&FDrE`^kb"'3eT_Zd%
%jtX@>94-_>%o+Y1nb;ncGLgMVEgJ/Jc<VGIDn,-4k<!n*%9hQ3bLVce?+W[J&*`CkmeL_fN-fi\Hfljpidc@jn!:K8PLQdBY?/m?
%qG3ZAhN2[5`0.fB78*<?e3u2#/d@]t\[9qhn"9!>lL2>DcOV+SQ,Vh?q1?'&asYLgpC8!(^QNYZHM00Qhl7t5,^o4LmIsn+F2^fU
%9FTBUl1C7&KVY3YP)3H>l70n-2!Rn`hXT)=#$jcKBto_nUrS>"r4U$R!GU=6\=RmfMkCD2[eFQC!d"j#\C\ulj^.CtD:K]na@N/h
%]@BVqBpU@5O7HQO]lqKaSXk6(k?jH4bZmjZn@!g=X'=<B,F9u`&i;!+(K\1F/**-`/pl/?]8S>>pc,GCHVJqCnQ'78p?Z;6q_ZcF
%0sSB:.OEZO9/i5X>>-R^[;7&#]Xs)5LPaPgF/PCKH\r>W&o0M4Sk,L/m3bq`k$b(9+3i_XH@;ZpML'>p?RbI`Z"0P2c13isb3m8h
%U.:#</dWmDI(Sb9l&UmBpic6rgj1UM24#J)M[TCUJE'Oq/GY,p0kGb0h,o4ep6R5@pSFK^+trho7_sCc%=bMu5E@+c$.&a+;XNd?
%kHaXZQi$1jpN&j6\'L]N#.i4,D0=N\5Xo-FfE*JFUZt0SbC!8kZQBJKL[,uP_*QY$!4LKLc?sTN>7Y%j@*'1Nh:l*VAH2m,=kJ(T
%ZsB5V]Q]G<I&C%R.XP?QG35-FkPjon4Lj=k:N>PY!C+nS=0)TU`'d#YT9n#/Ba(U)7\49,<.u6(dpih$dM\/?r%*bgjYWBMiTE(4
%G(gPVHi>F*:G0CMGkVQ,5JK4>:KIQ^k*sQN+0RC9HSqM0!o]E"[:6SU\[_Xd?Fhb-QDEDsb+oAen*V"X\=29T3VOT\VTO;:OSZ:s
%dF>1lLWbJ,04!<_mk-K#M?igVK]-"L\F+U*J$4OU@QHM#VtLW2K]Q6GhI*PaWalROb-KXRfc$S5%7jLRnFJ\VYl3;sa1iW:/0eHW
%*dMMnB&?pJD>c``^pg=WI]H,;$%oTl(So#-14@'d]<(Pjf-=pWHa1-K%Hc!sD+c@nl6>i`,p?=3Q0$%2iUu7ZBoM0>>9S;]b\Nr]
%d<JfC07582Z[>E8f9fCZG'V^adk2XP4l)?OVnkSR?H6U^G8Ud%c!ZjR$ch`+].*MUjiq^d_6+"VoEC1ln69r+#0-3_%rTN?bM+!$
%c.^rEq=Q#4P?CmjXRoN\E,S_\>!4C:V45*qgsI-$+#86`2T>3tF8qU`2FT5>??n.6E>lC*.u$]i'Q<FQbGPk"6Z3IdaZ[Q=TM'L3
%'$JPNG%.TPlNq^5mWEK"\Rpu[\u3[\KI3$0,%nDtTJDKVeK<:]pH?<sKZHbsi+HV/ZKD-!DLqaPD7OCp9>%1PTe5^p)/OXk=P?J3
%'>gO'QmRU_JCh>WODWh`1,PHM9WtW4@i=o@l-Lrf/+22_*fWu<+'es_[5XgbM$SW<27n7#-5mij80#fMG'.$&fe:!ejm!>XHH^C"
%gC_FPNd)D!-%Yu#r^R"KI%8$JdhQYGb;@&*1*>^X>)!ia;%6.i-MV5go<#QHRGV@%o@O%][gZ<prlt]4\R-kipbd1:m&>,SX)"3:
%\DsEuDqfCZ<o)&V])I)+U?D4bAJ_`8^9X0Q^Ri`CP(NAG:3!s,haeiRDY&jGh=iFK&Y9>rAURnA0'`l]otp=Zr;O_*"&/QMe@PbG
%?J.-Z!1[&bbER:T5^!/7S"[=6IQNeM_SY_el/ubd//0VFX2<%YC&bifn,DCR\`1GLZX5>npq1#f8B%H?`q<,e,7GFD_Z4H/.;XMT
%"ZkNoXYq7bF&t<0]o@d'qoW1S';+R9rl&lV>$]:8*pRg=7*GXg2P^D@loZ*2R)lQ\Zj.+d'_8A&b[`VMbE]n"^UnL\FV-`@&l5q@
%XO""d%i5m309?GP#457@%_n!u*m0aJ,."`';WcSl0*'adB)X<GqIN$S,stN=OEWUk(FOmKEO8Pi![rDB>@4qAUA-N&dKLeDcQ>P?
%q$_ObY`t:Do1MiNeC'YBo;u$BQ3Og`T#s9`_7LlY>Rbiac15=^pL`[XB=G5)].[76qt%A)O3M0"J[A7$s4+k,ZIhr80,;$DZ<[U4
%>lSBaH,SS^$f=gd*D80_?MWe4M/+=MCM,_86_A>UTOFQ)I0rH%--$q8f>,@102](rHl=FQ=Vp[0Ub4O9\[aWN/.S_-a.PmTO26h4
%3Qga4M&n(kiaohLm-j3cXd1U4?IiIA*ff"0H``dL-`HUW`KIjdIeT%bcs\7p-gWIG-Q_0DYYV*-\qNKMCT783bc"0_633a.6t)]W
%[fOLc#<]D3M^9SVfQXj@B\`h980iYiI9fu)GsS;T)pa>]2"&atdonA,_c^eJ[2qWb!6VZ`4i/0[S]C)"I!j#Rj.!a0&n)QFb%U<5
%ZuK_N.&t<*mO4imq'FIfV\sP,kp9J2o%8c+(/%E(=%M8NqND3m$k<tniH.21Y*L6Oc/fUQTmTI^0!F>i`7e/S&m`.[o^7at_-.?O
%@[Ao`#$'*.2/Va"l1&aqH&&tZQG7r4Ajjn0kRh1AEF(#0%(r[hSoMp])TVN/mJPZ5mW5oebHJIWNSg_p_4u#Ve4@jODXN`F<^c`'
%VEji2g$XFk;L3Z;h4ou?q51EDF0p&i1q6/B?Bqim00>&]53FaM[N=QY"Y/"O/%Z`rT9WmJijDj4heKnpZsaNEbD7"iHGTs0'S^*c
%I?(TTD=3F#4aCG)XB&,Un#0`fDAF23;Y$5FVZZBQ3EWLAYoeQ@a-,K[$01@'R<mkLQ'YP'Em7K?hC&#[`aX+]?ecZhE)I("!I/kK
%_I/K@1pZK,5WXXNmb+q]4G&:Oie;oh#0\>'WEl$$>#IACY1*ueJ4l\f]!ldLAbF[1#0n?(M<3?5c%mrPl68@uoj=.p-<1&=DI`^,
%],GO8R20hBqHEaLD?"-R!W9o"bV.AAekZ)Al23=)bXUanYQ4t=(Gs@\68:G:A*d3_@5%nNqRLBRMiC+/`^Ta-iqm2/*Y%<l5XDO3
%2/m'eh91VCb(OdB(JoT$nX>QYkoRgc_dLk7a-'qhf7_"0GH&hbRfqr[Bai#f_e"'DMKhiTk#cXTnX=FT%$*ghYDC&LbAoO+G&UjM
%IUr"Y+eR_HdV]!_1mdWN]=HY!drKG@<BeX'46oPYL[s@`\$*H9m_3%N2bLdH\$M&7r^JE`f8$3^c:UYZ?gXfdG3BI<5%jA'Ra@\1
%<>S<R3nj"5d".6?j#BKW#g&Hl.h:F^I=!ErJ)*UA<]'KgAf7N9)E>(hk$N(:9HPaMS1kX;>mto9YlCXb4aqcpU<&i.3L9T0$.!k"
%+g/bu)2%VThjj3kIe*89C>gn"Z*6%^Gs7Oti[*^+N9ljOI]5%MI&bMPLa)i)C?uY!5?A*<m?$c(TI]i^hU/9R[WA_EPe4O+r=V]2
%O`0Br^@`-3=ige:[uub3dHAZ;YLZ<+f;eh1j<]q,d*?C:T@dl5)#GH"+R$>j[Zi6u'9C=F&JCSP.?EGs[?\^`%C.QPaPTu&&ZfZO
%g\0MM]WmXp0,'q=h2K/LCP4'GO!Xg;_FItpR>13am,jn?IuWr-XRT"NGX?SJ@K'!<'4PIIpKo4o,RZMlnC4gh#0o^4:GFnumc-2Z
%Q?%p,dpZC9Uu.Q8Kb:-S*IINNdb=&O-sTi4d-]f(bUgFUGKL=B;DqUtbulPk2i\i'BEQG$"#*e/VOJl5'<?h@SW[iD$7Yp[Zq!C(
%k2s*rp.YLnZbh_DBg,TN-g_+W5KoXfFZ"/_GFl.0BVq0@#/Ya1!\(_JY4T*+-8'0uo&+^,e,8&qL*dFo18*N!L6R7co\?Y.?FZoI
%\T=r0E'$U$I!F\6Fg]Q%bnd?![BgP%e3<',o>f^j9CB*J5?E#H=/sL35F+trVfj,RTqg$W4Q)ch^"PC/1/->ilk<:sERC#njZ@iD
%Dlef!DR?QB=]W+0[ge;XQ]G1lHY`>I1NU=7M-SHOSo?3leXMkaGBsQE77"2.8KoDo#u<)bL6#s_'(28\=LG+(\anAdhb4`co*bs5
%&+p_P"dq7"?9#>/MM.5uJcsesS\bmf:%Ws47"GBg\@O&RUa-7:K".J'ALUGQ4o7!2+:S&OHpFGi=duhf&tNiq,,(@<J$b?"H<[n(
%o&55_'SFBcB&_@[8-Y+Y2R+7W7!JeaZ/i8dYfu#Q&$]Z,6nG76mDGA[.OSsT'4D_g&0t?,Z\e%U_r+X63>kcc@rWf,5Im7S097dB
%c3@<S%1kUH]I'N-0^5r?'2b`k?Lqo^@*HG#CbOR<A0Oi;h#3L1)%BPhc<Lt#oX%;Wk'S+%][uX"p^!hj'l[X"U]n(2A_n3+rnQ@-
%_#Z$t@b4gtM]:jANH=!/Z_!XP]Ql&A<7qSbNf1r`Sh)W$T4^;)"?l:r&tb_Z6#7UcEmkN9?gC,AZ)fWR*sdp=`GfPGQaTWrX0d`?
%[OaK9+G=DK@t"a$KTMe6%r71CGnOitR0XcE9*S6\Lgo.a.5%Y%DW2P%\6RrnmIn)l]TmYO)4.OMefRMtQcqg7?THpq<'LkBPOgAe
%ANL9T-7rHr2Oa0"gD'<.m$+$gbPJ)u[r^,6)_#?B?Y_u>^RccD9I.pj>`-ib)McEGDa`BkStjD!B"B%2_h0_;bL/0A#r_!b#C`hZ
%)G*UJ5tp-@UHbCJ%?ft^,VEnN^)G[!0=r=2Um[!a`-*u^[9p$@/*qmTo$)KBAfk:LFmD>JIION7c9U?U7r&J;TB:c)R_[)7*R@`f
%Z;ifRkp997*iuUW]'Doce#[[1Y^FS*a.;*hNfj191pk-7]d0_gJ$%-KDd=EllE<(ggK:-*16bZ1T<B[ICulI'quG+A[J_mZ?o2)7
%GiXk&`V]5+PljYM[tJ=(h*T=cL0Xq#>p`3YIJIGuK=b9jST*S?S#80,drRuS2R32TX)-9$^"SBi[E,UmVX/\[F7jjSVef^5V`FF\
%StZ7EjbM$4RGRaQ-RQR]lm41nlX+2\7)Re8bT[bq[npeo;XP<X%gP4.r*o%e2SQT%"lnA,nV-*gPa8?bj.#Oh=cBgFD4pI(9@o:J
%13g?18#WeT3Vmo1G[[uX\pS.1gB3qFqRTQ(D*<u>]ZAj^2eFVE[tt.m5iHFm=+cEY/+^$/40Q=>(QT%=QZa2L'9H/R5Rm&3X$u.V
%%W`d:0.)GZ%27rHQ:gtIE%R3d!gLZ`7u@UmYukjH2+=;&c$.G?L`*ld.pP6(MljNnmc*MGWV!X-H]*2b'=E[b#!;#u1eL&HAFt:]
%8*htBBZ*07+J#m!(XF!M'T5UgQRa?AQK5Og9nhOtcHoM!V(,ItNG8Vg]Upr[7IaJOS?2EcN'qc:/h7Xf*`n3L[IQ0+aOq>*<lj3%
%)KuD'mN!ku8%Qe'XOfI=3#;=?1\7(*5VDY-/hXafV(eZ!_pq\bFYdrVSI?_H3k>5\]$.(5=&B\PXVlt^+'[FXiF[jtb2j%qNW+m^
%I#Fjl\l9M=%\4%oO(F:?mHq'N(nMj-<'sIMQ.H"[Dk*N!pPuRl(?[,ZXRMtXZJ2fffUBWF\c8uV;ftZfCD)#*08?Sun#Y.=BXZsc
%fL@E]45fr#G.giB2&]PUIg3keD>;q#&)upFD!nTJE1k=l7]fU-`6%uNnuHN)^bm?-C@'S_Nui:WjWj,Y0>?b!?i0F2>Lh^pGJEP%
%kdN,2DrF1#$[RI$-<VupUd(?@\=YF,H,5iW7TN3aE@1h0p@UJuL^?:1.,PQ)CTli[H7O#Y<mQnq5>9j:Dn0uaoPjOqmr*"=S%"f+
%k<Z[.oq!57i^<P@Wk=VOWf`h+dDJnCFhcljC!JCJ=/'bNXZD6t42d0h4;Qor7_STVOm&;TM0TVT2%iop%lPR,.@-c.>]o$&M(56r
%Xa<E$k3jd17UIr>7"4F]c`AS,R.>'@9@8-/OMDU/";68ZRl^u6$Q1.o)=,8CV$s!7SXXNRPT;3lS/:,u.OM![Z$*R"e*M>l,jjH9
%<6d0.Sqeu2G%NOO?3C@ZDk37Xb:I1c0unPO$u?J4)m/1%6n3+SZ0e*%W4uAm6QGg&"d39=*`I"feh\BE@,u!n+0=/KG/G%^<6gO\
%oPB>[XZNa4cS%8BD]V+-q"'M($hD`C-[H'A$^kSTC,d?#>\-^A\3J.R:rYS3^n$@#+#IqdOnEHBQCPV,CQ=P"l`KhHmWrm5[IC.:
%F`UWpp+8Eu,6,1DK);a-;,Fm2-F55M@]rk!^2M&+k.CtG,/W)'L)q(,H7CPrDq2B;H@1B/-fMdn#B?AP5:.iVjI8Hh[h"mu%7(eW
%^907/RHB'8g(J[=*A=Y:Sgs;2'pq?3d,qg`MtiCXM<dH>lin]ZIB9b<X;T3QdB'Z62Hao;4D'F[!<(3Fcu5bY_c?Pml1a+',\9=A
%I^S8%NUlSPh^Z>fqc@0nDslCPoGe.@0>O77qiroFO(NEpfQ^.3=^]R>!`ZJ'lWAr"N-2_WVPQ4qkYVrVTC/-AkrRDc4Wa;hCdo15
%Ye<@SN>YhL_=e4Vngl>X@!fjp;kD]P$+<p*2k'Q4f#6j=OV9k5MMZK(\$EadhgaO!d4Zr>(4Va1I_Ab5\m_eO\T;K*+1Qs$FN3"L
%Vib(*>n"fGV>dmC!p;\X6M_fE\s>:cdcO]S=s<i%g;%[a\O*mB\Bdd5FLadj">]QLbFJub\i)>$r[NB?=CkX9%-Wkg`+*7S4mK(f
%WQ`9$:A)_=]u6nG#CATikBCc\Hs]uKMt^b[LUjSM?<T`_Rq?As*&)8<D!Z:%7"TdQ+?9-bU@GDUQh4c2iIs]%=m\).nA(auHGcHW
%O/6ij^u/`=$.[:!)[YM6Mq=?8I?;Uqpe/iT)*Uo`%>+@_GNcZM8psBFOkH37p<IMUHLbPlrs$QIQ-8kX9op#eK,Yppeq0C$mm`Cp
%TE^AH\u-E8V&,hV5cM[8/uKWm3REq(b=RKZl-E<@pFYa>&lG.fd7uVY9>+/\N@WiJpRSS=",pfeM5Tc`)Wn]l<`(3`,#dP"XlnLF
%[XeZb"4Vq1RV;>kg4QYYr]0IWC`#h;@=/M3'JB"&OmVa8+rh7^Z>n_W2bH[9hf]+WrlKT5M6Zq*Mg+TWhK%`@IE1l_pQZ!mEp)L<
%pD0C1TBW`.IDa;P(6:mqe,.I1"rZZX$Y*P8/2G4!g-[Mm,*,/67W22,A+A4ME,I^nJ!ci=T94j,PMJW9l/qTcZ%)7[.]l'UBPRHu
%@3VKXT0?H!liWecJhZ`geXqjHhV&)/`3[Q"f@s(8XlDDdG7B<ANPtSaPg2Z?;i`FAVEs+5[sUl4%*U<RqtBU5*P-3I7s:n.`,R^*
%7YDBgEL]b9&a9oBEL]b9&YT=r*+oq',kh`O6l]hQD`#c_ontfT-JiF.%I5$SS5$XNQ4/d5c6hC=ElJ2*NjFR$iZ>k-LuW=2NJ?fs
%7N?%SD^;l'!>3A.n]&4i%^WF4K'J00Dt?.Sd%&;O=P2oo+ed8_=m>&Rf3pJ6WD\\PZBU9P,?X),jJG3;fRhdO<`eKcMX&un\IOO$
%pW#BCHZtIF#N-cZ&$+ILS"=o>X1Ck)U[Qh#O.Q*-]YEes=b4CXlV<rOT3h@>q\J7fATlCQ5/=it8#o[WEN@h[Q^k3QJq,99?SnRF
%ISh'.p'U,M=P&]B>tpt84i!(I=2k!Kl]c"P&o/II]D!K-lM>57M!HYZRUJY3?:5C2a*692-EjIe1MYbA5MNH&=;'4./#@E[?%7eZ
%P>H;Q(_"#Y6*B8f+3jM!ohV>!j5]cmK0T95of+U<EC#oLLQ&(MDm:"U)s<RJ`rN<+c1M:[Ao5o][&^l)nT?Co4#t#=.)sm!Zu-'4
%DT#K#)m07MiR'D5H<-\oPo(=`_>e_/a+gi@kWf`/SAi!s.WYZ5+eu!IU5@q=-O9d$d5bNq8/L6mC5hjc^`S'aa!#j+%7PceGqOOY
%IsgD<F_q(%`[cF+j"rqPER4tEa1n<=b\3`F>=HT.8<@@G0'ZV0OB!lm,oh"meCBMR8NKeCA-<A<</\"M*%qUl*B>>P7Os(`@_38'
%;W@rOP/O=$.H1Mre582nr8qZ3ROXaj&W2eb6sd>Q85NZg^I:`DS0]X4o#=m7RE"jD8t)R&L&g,,\"!pVU7K2?3$M3IDj^cD7[>p?
%5g+*RDd\-^k^Wi![```l:.jH$:.doL(+bCh,_.!F]RpJ^7b2+NKND+i\=e0`n:4kK-d\8:>t/?Q),6D;^L\[N=b*`eN215iaY>7'
%3RSl,/QpCj]Zr>aCDfS%BE=1b!UW,ia3daU4J873!D>*r13-M"(3>]_9^&aV897fDH'Q+>b4]cMNi("F._<\=07e)(%W\:0#?c]\
%dgkZUAfsnnUXBnS-]FM$Ael):\;1c1^Huq8.OlaT.S2a:7b%fr!Omq]dD\\AVfbio5\msIDMgamBGZK;X$l(u3S?/oO\*a/VARP'
%gOq9hn/W@2CmRt-;@/Ki;)cLok_.E1c"$iXJZi$rAbq]u,&%rEd5[_`k`R80pi36rj&ju=*NJYr6$j/=?/FpJ/jHDm`mp]!_k@*h
%L)/gJ(.46W-HC\;pa3YuQ5j*TU+Vl\Z<rIeen=>-erK]dl1*8Dr9cId*?u]m0uYQ.KbEMo*OMg`k=%6QMSL4YIi/M8!oC"6/<LXr
%#bE?"%Z7G*A'0>"AOVG3/X[n#326Ie,=*WIXTZ]VFfPDApI#]VUom4Eh#k*Ep=!ct/?kfc-&#29b`FoZ]=LbRl5Y=Cp(.M'XeK=;
%8//-Lo0n]aqaEH%b^^dG"m."g+AV)FOmiH$&5d&^N_(*A8H`UVTag7V+Y"@$Pn^YpcG3[7)u@o2!u7oD[6X#&<?^X](Qc?R)*$SQ
%V'L(@og'JA6Q)32*9meXiAdBC,uk]H!ifXQeGW&ed'4Qcn5(<dP-[F$TnL-lQ"_6$HB":77%J<;m5CkV\u@_jSIQ,d\tLQe#q0&8
%LlGE/!ZUa"WB4g^Ag.E.1+H<kE>=HB-kSGgiIh>kB]q9=Ar;U?&L]ct/jmo>E%k/kCa9+na_]1cl&pq3G[MZ1<C1=kZNQ$l,Lof+
%ka3'(*)hc^_2(ADc'4$Wi,r3))P>Xs1:"I<:C2:T9-dB/3WMi8hH9nh:3@%NVI3c`&s:WW;PH^NDO8`E<*e"E[/b?hHQ%&2q]mYu
%!s7rrFqY^CQVDQ7:'@ms<ZNL%n%>CJ,m>JmJqR0t=[k-B&4He8K8?f99e""o!="_7[R>)GA8nb*.%8NeOD%gpaLVq,Q3_$0AP+4R
%V:."p#,!AU3&'-DG^rm6Uf)?I"CK(:.;U=,#%8N5<g8)q"*da%QpO]0@;m4?i/SG,r)Rq+3W'(*a9IA=HKTdZ%ec9eLJW()>p\Z=
%.TrU6\j1(D5i[&^7-dqYbKVLuNa6t+9+!u:E0;Y;6m"feD\HCZ&LLWDP6t8)6!fpBg%A;UFU8sNp3?<kp?pa\-)C"]:-uS^5!fMc
%arn$Xpm#5>;SY1Ur\04/0F1Y+_p_2^3t'2(P(q]CZXXZ4I8#gq.\G[!R"Qal,ZWroc<,l)q,"nedo<s1n`Yo20ldq*^rX`u$,NiV
%8A/Ks#,;HPB>ZQekMP2BFkpq:^Dlk@8$?*72VNdpUG$5+COCL=Q(fIqG9>.\`+Z]STH_<'&.td<X+<OJqi5A;4@dXR0K``h[VP#@
%ToJ14)T+mSbo3eqF>,p;mpt+Ona't&E7(V,H?I"155)cZp7bE$SQ#j-k!)ZcSgre2p'gk)%XO\L`moF6pJ!.T[#V&)p!-d:Ouq#F
%"Eca"dqViu^^Na&Pe_r;69'P?:I5p9]gG._/>Gs`5mBZ&RA\?$U<&N+.<s3IPCVkQ)H[+d&NTsk>aVo&:q+A(S[`g)6got(jUB/#
%W/uji".cO7FCHBoZt#l&L^I>h`U475%KS!A63`EO!Gt5p!<?1>fO675,na;m+u]t:#hksq4p.=q1QlP\pV^p0WHi+7Qm3n:!<sfW
%1e9"$#:G<g^K)4M#E:5?"2>1:VdNP8M$U9t4@<tV/OAq7k]Sr.3&&S0>+uUM`3pu?#D$QM!dRK`FTh2)BGF6,L4KC=M^+c<o=J.'
%,9<+)D!7fdb\\nn?p)^I<E%-9X>3Kd?17$n;5?SpN,J5*09BLl^!6'K)'$/]oKArP"s@oG&r$+d2>/nHcZFk!/dc9>@@U)TFAa;M
%ZN^jq!Y%:,6*uN08Wh"aW`92Y'js;f]aAk=D1lhn.3+Ha/DsJONb3i3SHZ>"T`_lVq5pB$;BuV%+mV!,#H]Z`*16E36D3p,^5?J'
%73qY+3Y4R'Fl6RC1u\TS8U$KA(g3iWS7UVf3XU\4N$Z'XWHLjmWYJhUlnVH_EtU'%7G:HKf-_Ts<D$I:K1[J*nMPmo*c-BYC:mPs
%08\2T15dQDF:Gi4,>2I@'M:?D5p4c-ciV%Q!,r6_EP-1@k=mk".;nMSn6_\3Z=]2a.2*tl^*doXBZPkF&BQ?!`L*?eF\KrP;p-WP
%?r`e?&P$8KKLT@CB]Gfj>=*Eq+p?t'VTN$%7Im$Sjil!V,<R+l#:LS>AB`A0k,4/Ag90f=8Ld5fMlob7f/PWAL7L`n7Ne7T92Hg%
%co&\G5W]-P(8E(bA>h3kQnp$4$,lu]m33Db*%_7(6VI/mW&b2<JJ7D`TEc$$&;[nVaoGAm._<jJRi%@I]Luf!YCt(rN\X%"i_2^O
%!C5\IT/?rsK,/84R28jnJLW/gSS<0qT#a\E)kaMJ/iV^e_>gDZ19NR?-"(uE%^KY..VL@F;!DAPJLkA?gUKF7/I7c]'BslT6:Kom
%'M28c,nt3$<$2hkNWksb>QGLhKUOI7Fp[knLLJ9(ZPEjQGaCrHK'+N`*`YcXL$0pTM8E6.f0J.?R`&5>%<W1-A1GS38Q?J:`#p?s
%1Kt4rHd:"OcK2\H*mEcZiiFD@]&lp8j(\pLbpkMG!"I&]Z[gY,(G8R?8g7IIpdl76$Znhe9qERu0EL4N)_'-YOd,>:DnMq,liJJH
%Jl&$P,U-XSC[qh#"$miI3kmF]\4hiK1!?d(";86T,a(ZS[RqeVFou_XOe`?dWC3JF=MdW:I1>fuOoT*-SqQA731fUC4p2UP,pZ`S
%I9/:'E0a&+bT$&11-)+&TRp#1J7Tre95krY$E0C*Gap=d8f5Mn1HN[5NZDM#A@23sHWHQ7JCn7dX@TXt6m><4PSe-E$/ha.l@M>p
%'Lei%MFa]OVC9G\Z&HTQ4lJ-nK%^bu*(*n?>g,Pk7@'=()H"5eiim4shtGp/a-I].chmtD5O=jDC]S8UcfCpep&G:40V7guC+pL3
%dlfhuG"S?lg;a&;a8<RmacDjjA5uW12mumK<On\q7PGYf*kikpnGUe>/,4!%\OT<8Zef/fF(-#%N-d5P*\?$gCD?FS's+b[6MOec
%W'e@C^N:ke%Zp.10rmU&N<*$Od2TOmWQ(E7;dSkq(2G3cl[<*kXEeppe?GXu*prs`FMk-1W4B<o<1ACeJpCc^$@4R&j.j?'P;u93
%:ibD=Cl$\JFr=t'997E7rV^"?W10W1ckgiH]dq]hV8]I[:=V6d:^ua&(`;Q%Kf7FL0h$4Xi`?02D:h,23<#B-nYFL&ZiB43?i8/E
%h8QlE9]?HI>)ac8n;tQEcNG-`@LpLgQ'hI-l98^imRM]^cOq?!3o=S:YQ(0&l5VbYdbaeZT4&hlZ(HD)5,IXi^H[0KrVZWN]ic3)
%Im\dB5O]+?m/%1D\2[N-;DAoaHb4u7KSr.3l8+:2V[arDUXZ5<J#B(e_BoGT(1%(USqAj*8JZTZ2%?VV/p4Y-%CIRe=TXJh7:,es
%TnVGu@D>h?KsHr;a6fbrhNuYGn<Ck<Ejg:P=U/JA;EX1Uhmi-rC^8KrC,^27DB_Xb/Y\D?/\BhM:T(lUhW-*D,[G`4K>Eo[^N5A1
%D*'#'8q:r37(*9\Wc?AUg2:X59#Dl-mQ!fj4NU=-dnTGXY_Y2k3e[B.(\F?G#`PWMSt!jD)U+[q,oi@9YhL&CE^bua@Lk&X2%Eu7
%fIk[;_QP(kVCk!6goCGb0k.`$H$bW1ND?!gYT=eFhAj0QH.^!>&Cn*4i=_7r*\;g9ed\RHj<qZ<js^NO8k")de9%8Y4B/BqHH)j!
%]?X%lOYW3XkP(0]M42AK,UiL*Hfu<a'Dnqh6Q\3!SoEbRgrm-sogT?.0;0-JI'q3(ko>YBUasd[EO4HS]2DA$[!TGUJspG\9g\;.
%TQ%'WT4no1VjRF4);?Rb8(>;5WT=PYs#d(-r-mT0TL]NF#?Y^-7jWe)?^?]n2Ko-8Xa*`"7sf@(UW92SNhduD4g3H!M!=8Q5"`Wq
%#Nh<iCDBPH*#ZHRG)KcB4*5V:lSFPk1!&!teej=<*_s>bQbqE)WWAeOpD]i-8e!_2>q=/]@*+1a`Ek=Bro1d)H4`<o4UV[*$K?X=
%;P\J"8A9DW8)%ijl[Zq249l&4+7]W9F>XnEqEd18&_*NbK"uo'/Kmk.OVm_$=+pP^1NDBu*J)3"!p[^Sc*/^?%pW,/3beO^@o>7D
%4-I3W3t5>F(4hF>%Wnir"_)8]phCQi&9ETIf,PrIVsOk8)Be'lp(FPHL]0_K^;sV+"CkFI,WH_C1tq_PpgRPnc\qrrm4g<c+BXh^
%V\[sV0(s68_OQ<\)lr6;ZtoXBeoWkq6]di^#p-B(^el#Y)jrH1%)j./8/^t?S5<e#RNb=Ze(e`7W!;-4IaF79MqgU+7'hCPb!Wk&
%6MEQn2')-DbRiT$^eo:oU+b(i=/gpG"TrmhZY1Fsp*Ca+MsT&"m:8%<-@tP'Ld%PcQk>j$Z5)q3Vb3+H$DVO6HD>Ui#YK"[0MK?%
%Ct%mc:.'&lVj$f&aPB>1]hoo01jfBRf&(2k'AQ%,]8gl6!4cIu4*'.%A:YQN6!hH8'\PhX:s]U:MVN4T[Aidl5SIrl#pN8M>MY3$
%],U/IZ7FtlM6,>D=aLXj_bUn^C3;'T9m5hhlJ.lE(sK_prt>j;8&`3\4YsnoOM,"j)1(sV3Vr2#.4mfil-oD9Z@5Iu@,OJNilN@3
%[rWY#lZlt"H4d*%pq@a,h'%Rr=eKd!!eJ-!Up`1`iY*@i@rTt9#-`1]_=X7k#GU0,q_(`$3kVZO2ILabhfBlP+Y>-=^m4Mm,pXiO
%RM0!NStNQsJEkY(XhlX<k2HBag*#E[Wf@lMQ\F.f06KK.2T6q-(:pp*oiicL=)YtkJY4h>=1S(XD&0C'Xj1:MYfi)M56kf6&?VBa
%(rVs3/<Y#&IKHg`f;c3FbY]OPKHf*3HSW?#O%n+lD1I#5*3OKR;[c4*0DsZmKm@f$HGG=rlcnUWhN;!jFGe]ZU[K<WX!aTP`UAAe
%p[Vj_q*aPj5JaZ&.715Rh=j)$_S3J&Aoi5Snp(;?mrE=JdsG=^dl]f(1\HNK!)SfGrRE]RY/-K($(GVLp55Dm0?#0a1Vf3QH2eFe
%^*R(hZ6'T"d\"9S,rR=AX%9_M-/$QXcNM5J!h.I;<WcD/LQLdREt8Wq1&G0@S=]RS->0F!*s$`jb$74KZNn8>l5F]'oN^D/K7su*
%.l:Jo!+un,D#OW=J!.do2@SjnLmmT8k^K@N@Bk11l7,etR\Uf1,[MZ<2r"6h\812.1jqO..[FBLh;2VF"$n,EoZ+mVWT.l[kYt2l
%h,-ctngU8<^ZmD:ln"%-MuUJ.Q?3srL4VqErH2NMn&\S!IYI2K*?+D(V6jVDC^[la'O+WqB+(02JT\-N#KcH=3(U`o/ObTRF1'Ok
%Cf15?QGGiDdeVYKYD+pS'qkd4Y;.+T&oI_Z)G'_AiPjk[D%h7fVlu][h7ONpfL/(Wj3Y9&p88KtWidZoaM&A_.GP/YZnuTO3jQGq
%L-5m!4*6f7A+YrnEu"8E]J%a7aCs4:7&YV$gf]\G,F;TRms-4,.b4A(a]=(_-Nri(I]:t!]\TO'9mMj+8]$d10bCo05:8<c.WM[&
%+b6`Fa%7]6=lb9riYZ#2D1Ji4efAVK\cX2^#YK$`BV+3T^UKbM_djc;8gn/O/=RuJ"I8Uj#L!K\fn,Y8%<lAoq?df/_"ZU#<XUje
%]s6Bb@PbE](/+.=VNJ#/4>0A2E7'R&);sZQouk1Q_s\$h6urU,F4haP&s!pNlO6sq@."tQOp>\9?6g!/"CI'3,u^8B=hQbc0]9]I
%L3oJD>sn!A7H&Es/@"*`s#A9k,%q8N>s\qu2s4*K)^?A8XS<5p^]RhqNAI=+cn<h5_I?\Ze-t:OJ;gpUDu&[LdHM[t`+'nG1t30=
%1bZfm;.sk*Q(<6/'O;Rs,2"\QL_bNM9;m0:NV&NEG*jn)ETOF8\Gm`iXj'Z#pca2u/G9m0p_'ib@_tM<A;HmDmYQ:Q(lN):TDY9D
%]igTta'HZHh"W9emRIS?a-ME#6lN;9h@8Zrr/BtXG_T8Y1>VtFBg'>VLW;k#7dVOAM(FjcUGIkn;)s2U,iq3IVRS\*=RDKNGU7$_
%4NS/;04Grb2Y$`#X78b9%m;5F!Lq>Gnj<9X'Ik^*ntZd;:YAN&S+mBe<Dc,@Es98gZhKM09<bs/9PC.4QrVJ7.UH>l\!LcK_F?1m
%lm3M)3KbXUFei]>GkLa6H&5$?=:8#TLi"hmO[>XJpM72ma:K8MMd3E&;JG18LJ)+jgoefTes1!-3hcd('4?HOS'a8&2f$tjXi]_N
%&IA)=.'nbW\AaWtko>O<lu9R0F(iGGYM2>TMXHd^)AWV;GU)\7)he!;D\NkW7S-[cJ;r]3"Mh0XD/*n!3@d!)b?5c@/Gj!o9:FCX
%OCL+OJ]gaVb/':HQ#q`L#t1oA&<YgV#*j2l?UZNV?hSoPA=#4]`'>_P<L`Lg2mEU7rSgr-Em-%>F8^Z4l$]miTng0A>g5_JN2bKQ
%V4pkRA_Fa,RW<fKDP(nVBS+(BCR8f,2!9Q20@\7@Tg@1$K5L:hI2>thc6!r;)+TSqDs[.0R7"YHl:*UiA2!12AHa"aq-X`RmcU'U
%eU>G\?1!LK3Ss"Mq^;1OI=`X>I=bORJU:oW50t6OJalEaq@unYCqKBTW[S6pZ%,*'5\k.DNcq*E1YWV$X>1ef3'T+4`^CV"N_/E+
%`QT7i+I";5DD?pVM->uXC;uTD`3-JgID=LR=V%,-?-XF``Z=,(?q1iX@RR'K%s(;Y9Rp%h#_haj[5:Bq2p.AF;A<tuK\ctK$O@k&
%*FIb,P5-B15C$(0963b1$e$L0`AAjN$r<m`^P[!7==r.:;YPW?JJ$s1,%,C&C'dCu"Y-o0T!W0?lbsd%ZNr6?d7/hUn:Z@QXP.20
%21KHG#;Xi:aPBLgQkI@mcC5&i)(VII?nXZomgrQ4JJ.<]Mo;.Bp#FDFFqEs8W)9a,"0(l^bJ>"+aVCqHK'3>+P9;=0*<qmI>dF_l
%G&]&_ONG>%U*P<^O9oS/%1.[H-VYecMiuHI^=6i-:0,H-FS5J&.d4jjh%0k<\S-32G*0S3$jrL_JV8/FAa_A^gbV\G_3:V4nu.;N
%\a!cA7p1r)-nPf"Ptn(AVMW8hC(ZA]iQ5Xuag#[N"KFZb7[Q'iN>"RB!M^&OMJgb=1je^,.@C[_W+3l@c*EYo(kpL"84b^-mK9I6
%C*>N!Y*>?knOi`3/k1HOmqrf\V.`t=%>#/FgU*\Y/Xql_XQCnXnDagM$kiUF)T$LQ7CL3=o)3SaXk5Y1T`\0uE`7<0Wu'Z,O>W&q
%e7tf3grS,'+>)_`'<c$25XuhR?&-KaecC"'5Keg2']0$;+bY5o`DO;E-E&koNclj2f3IUW_,,`&-E9OK5OcO$o\ST,=0HYDG;rCh
%F+MZ.,PMU#,cBE+^(1PVo:boMZVRl>a)]ooD!q9N1V<kG$S`nRHT23qMM)SRmPD<;r_faZ=@U3D%C[E=/A=,fJ!L2bR*Sb#r@,>C
%k8PKhM.AX7?mqfnR^DhN;?E[PCk`d]%fl0k%:J=-Yq.in(Z<,CFqrX4/>,Uoi-5r>`&&g$n3m&ST%4jB_SnX[mEZBG%UmnWN$;/D
%V+YEURrC)HmWP!;p-EB1;POC01gh>%NtV.b<e:-lQYjJb[Du:!%D/^jH_9n\jq`Ur%=RYQP+m2->.lRX4$uDj@%5<iAouM#H%))_
%S!l6fV"-oH&u;CUZt4,2kpidU/Zi&.m[/7g*SP5V*SV1EMib*aZ\Z+(#GFNd?OBb3$bY366_A^,BT\)OIh:K)`RP@Yg\a#K,[r.:
%Z\)'pb]U<r*7\qRTqY!I6*qC8BO^GfFBNWK>93>0.k=G?l:TD9KYJ``iZ+YgQYJ*AD[_eKl,pPIeJln,.bpK#C[T-FW@ILnF=g%B
%Yj+cP!T2':LG"HW*[d\=nO[-,$W(]b@b9:ub%2OcA;*q3SsC-m(dp*s"Z/JZlgZAj<ON.^GOr,Jbg57<c9>17pSXD:5N?Df>r<+G
%.4KYtgPP-qE=aV'AE8IuHP5V$m:TspUV<ng2-&RI9Il-orT%@W5:BCe9e[_00QS^]3F/$VjqTf=,DI*0Q->g4Dk;jPhSX6bgW:.=
%c4`>Z]H?lD=bomUGSF:K?/S9qh,MWcCoCK)3-Lp6`n,i>,\QkD5@7]kI??tLAJS]*S!PKCn9E)>;;h0rqbDUs2\HkJ.-7+3p7#\K
%U"9>SD.>p1_/.,dgl[-:?D^_pp6Z.)^FJ87#l5QTjp=,+RG;bnZqD,o4WK-t7G]Y4fYboLd<aHDTJL\CTa4gb7Z*eqftr^?\/=V=
%Bc'4PFnE/'n1q@Ap\BCb,dScY_Nb^'7u!rJVmClB?-*5Q$4T(AX''%Re$4A>-Ob>VhFM'Ed+-WSTJ`:7$ibt$GR$nt+r(7J;k^\:
%Le1l<UhD09*R83&]7R&L`-cSBH5u>9&BC_r@GJf0AdP(@_2F;?TgU9$MFaXiThAFSm-LD^R3f)[MN*b0[X'T=9nkPN81BV8Cb^)O
%#WA-/3gYEh(/aPK_K2'\PR@.Q'&"u`n2KeH2kE"1J+$=D%Ah6kQSc'8ZP<gi'6J3!/ZPKmRp1TbeGG9rOuX3+/aUH>VL]KUVRrbH
%YHJfA]6O@q?CngKms^`%`GB\$a5\d7oR"mlhtf:N<(t:S@gC)2FUiB:-ebUW#gsp*1["RNQ\p/p!"<l+JL"b6F:1^bI3F>8n$8VK
%Xb&ejAaTqI`mu5jqe[aepr2mqlYnS=I@%I$UtOD.ckg)KVnp:OR-FHDF<m_+TYjkRF$G!rL6;V4""nDo&3"l>P+'aAU_Nt-7*&A^
%p='2in[qedZM*.1hs57Q!+lN\S&<?W[?qmA^(LFckWM2>YN-``0T6+W$H$+Za+p%,clLQ"KOUfMjBf\Jgb+6b9tGM\q?^a6lcnjS
%NTQumI)\fE7)C#+becAb&Nq&M9XmtlP7k'@[Hrb9P/RJjL$D5is,9U%*V_gu?>E&a&G6>])!?8$f@_BZOfiuUh[Q2F@]=0H)nNT1
%cmoB:&-Pg?3/SOGAJ(n\qdk?c]%M0BV_J4g<0U(N^8*43;/-]B^^ef#jEno!-mXmX!d&#p;>_O@H(8.a+%/4^i9n!VoG`7On:>_X
%cS-=D.h$O6?KFmb%2o<,Wac\O0CBF5;AEt2M%-s%9.#,.Lk>3gA4$,Qek)5F+@Cu/-t;&&6d]BA4-1#[Js-LXD^KH/Dcb'n]?h`f
%`i(Pn*fTLEQMp=>ZDcHJBVAdMR,iD!g_ZE0\MlDP'%"C@liE\qmPgj/7D\?ChE5#gj+oiS>ufq<1IXXqUXUIr[,ZtMil0GXA(r]t
%<b%IS[0JEP`GEF;YHI9,e0=3N7dqaFYr8-Nn9E*)[^?a7227][;/=8-aV]D_JdIfn7'uI38>H^m]g9L^1td]E/ci%e$)9n7rP!LU
%f[nkrIDJl!Y7g?>kjCB?RkVR7QU20rkG<tQBM0o=bf9-QGB4El_B%Pjkm2/8Vp/]5mYSAeA^En/atWm,L1c8QOYJa<%!"#sFilm[
%PP&$I?Bs]/7R4Rba0^8"Ba/atrF0$k86TrOX>!?9>pLj%5JFCF8>t'T'bNmm](a<bk$]/KUSO,t;mG'=VfHRjVD/^Bm;InGe0VNm
%OJiTt@42g[ij?"2/BkZTCl7[_8@9Pc6(EkQP/:6UGQ;5M*]9EsIE_UIoAM#n2`$8i.lA#V(DgO62h],R,/$OR9Bk9Z^oW>kJDFN?
%6d93G-:dbHg'gOVoHn7;LNgnr!jI2L<H!/"Jm\r@I!7MePh[4's5#ri>`#%nn24Lf-$1[tfjcfhc,&&6qi&(s3YqX7][K*i>j2ck
%+g6H'*TI3V>Ju6Ed[0ARlt/pd('Jq5?^8s=.S;S]8psI=R):kIMK6/q2nW]R.iNmrSL@fg%?#bKILk,jnh/%#ri15kA,A,XS=>hL
%.\DDCGIRN=PA#_BVb^Bo8LO^>FTCmZf`.+IK>&PK;lfD2LsctSl*=aM^cg=ZeJH;=/V,u<)AK"6(:3))9s7fDn_e9tHWYTIm'lK`
%?0sWhdnEj3;D%M&RDh,dJbfK[W70]7W2c''C7\4[=E#kJH^/JQE)&>N8]lm&N^o"@a$F2Q="6e1M[n;MQ>3p?`l?VpSg;rrTRTJD
%1f)0>]=$@m)6mh<pr&Qq)t6JlWaH5>MRATul695c(,6t(2oZmi60i3W@gX3=8+bhS&l&1'p1:g_[WihHf:XW+h#Qo.@7@TUA:O4:
%a^<jC.2G_@_gD:93LF7<]&",X`\o;/H8n=g@5W8@+%30hO.!"s[M'BrM]q=k_L=<m9@4Y?UR`gYU'IA1O'R4V-l\%6+Yu*m6*XUu
%]E9;fR4'_S24XB:/Y!%6%QX+`YA1L`2@JWG%DoXnK?4]5+b/+uXO7-Ac\bge!*#'/dMl%n(6NGi:XuUIQK)#OLa!=r4eQW)NPX=a
%#$aO6+9kU_1ttJJ^,@mse'VT?QcbZ5</c&-EUuKanWW>(N5ZZef5(F)Vi$5hLm1FtcUh(HknoFI1hIsu#h*>U#d4[(^#!tBBOpHr
%3XXAV!ep'66sY*,\rKZW-KtrGME,^0h*fS&JgNtkNm__E4;#3/%D?^BQa-q)r8P_fV;UU,oe+M*T\h?C)osFu7N,`pV$GCRY`U_r
%aSG(J?C[ZZL[=Xj@D`HnakIU[bq@!NSa><;^8CaE<IKIBc-NlK@4:Bci8H!hI3YN.0NBpX"0%7<HZs,15e%f\+ALMh(eYa\H"9%0
%+gA0t"\3*H3sip3h:\&3$FdqMnN5RF]N8'N0a=poguQVY2]3#ROtsu=f^LD<?(<(XdbLUZe>Q:=.=%(c\,.bsaNO#:p?6<kar@8t
%B=;(O(6SrRcO41(/Jb`*J>T5g.i$)oI89+MLD\:cX)8S`aJ-Tn6OSp]bHdZ[-o@eS0\Q(a-rF.NrIhudAYZj<R4$/@.Y>G:R\XD>
%RUK&jeOGs?@U`5S6hGW"c@r?Vi(9R_K)=Bhn<5OR_1?9l['$_2+7>q+3+"pIBHU@`@Z/h9Fb7R,HinEKK*lZ&FZ./(TL325F7=4%
%cS@jn"SF>.iF7&a6<0AQ\:Hbp*0<=h-h9u<L8&fm[M6ZNUNRGkTk11U8R"F!c%\FB5pfeV"Mfbc)@2C0R*WC=H&"DkNMu"_'KukD
%+8hWWT_!`5PQ>2Lnq/Ver$&.RhrQ=&AWE$fhuo/.I_Tofp)]5L8_`37d1lY[K:(S^08UQr=-5&1Wk1m3ZnMDblOBpn7J=p-c.01a
%rlH]\dSVK\nJjBRs*MZePmk6"Mqh$aoYl`eOc7>/PbQRp6"i#IOr05p%kJqQ0Y2q2;f'g6HMhC!"*NWLATjhc$/c5Zc+Zn,gtT&5
%i`pFd1"4/bJ,T<[ULNRL)(GdZ;A7fE$(7LA-i,rhipUoS&g[`QE#e)0S!7H\*6@c""jLc*8tY=3cnufBRU/BL<jm^r'`E9K'Def/
%hI>:1n4GBo3/AP+-;cpDmWY?Ma,IsPF@"A\ea#/gBoTQn]22>F>'HZu@8)`O>o%&0Q/VZ3S7HAA&#>^c=[&qm@'80O<3>m5I4<df
%7Ik#LP^Im41dI:^?k6[OKZriO[k/!cKmco1>&r\!P35[_"9tc\O^/^B!;h.i'4DIZN).OD!;7fp4]."=&."2.N2#7S*B%s0ViJ@Z
%e+#j.B@s-CZ6a+h9@ed/&f1pOb5V4Rad\tZ(XqMt-hCUQEEKElh[uI5n-W'O2UaQ?O($t;LJT()1,CK9bQKq0QC(CP/Ld8#X[Ln9
%ASQ+iIaK]n&R3$^'^7$2B:ER^`\e4JD74Iul[(iimnr44@r?^*";Bom5>'28L^"V!oKq981.e^N(c]N15UR^28()RG*e:Q1l8k"_
%F>=/4_0Ei+UCUfgqFdBTR_WE,o<N7$p&47N?*B'V?s3sfGm]M6+6f$d7`6S>'*2c?4p,nRIf87C]G2h=?.X'ahH#iun:b@eG,66j
%7H+/Wc-e/%r"HBji#*KF0=6;Cl3t=QliDhP@7u4c$ID$"kSI`Vk4/(&F7i\>%*"R1=d?UR,BeDYegE:%T$7%!Go();rNmZgDLlG8
%,s,]1P;K3H(3t2R"-9AH1BS)6LV'C#('<,M?C&2<+TPnSYo!c<-p/k+.b'5d4B<G'>%HI8;?9'9:.<cD%l/m)h)1\`gO)b.)a%%l
%rKS.$pEOs/dLUj$'C,qH]`@#(K!,TgqBekl$KWGu%>G0u'@"rJ!8dp!055t(fXR!=O:mSLW6KPq$;,QXQ8cTPBo4(>fRo-D]dpt0
%[&3JS:t2<Ff/%aGm43J1OHsSmeW]Cq0%DPKM^Ji$"=UV@6N[\H24)F)Gi5F'g1A,Bm"c-LlD8ZML:OF1V<XdoVs&"T0r6.ng[M=W
%cd/i_MWG%(5:0RpTq((iO=njWR8LL-4)ti_foA48;1?uh'[mFQ-WBI%RF:<Y8gEG]0Q5/ZWe]4_Y#$u_H:hEbnUS_,bjlRtMok_'
%oVK-8[bR/EI2"-l]NnU%='#aOgg#;Y:qqX/N`d_<KP,(lFLe.gh2*6l^'qk#ebYNg9V`e*Sl$P!P*?oH3Y_K]3Z+lg/h-"'s/D]M
%bdnf">Q@ql&2d.,+_JC<8BIa"h'=QYT4`7'_1a.4KIb)6p'jNkVjN8)Km.;a8G?'pQ5nub9\&^]lp?UYWJEpj7L,,QXmm[5bcG_S
%U<o$fjiE^=O`a;DjhsI%'D`kdMHUE[G)"[uq;7P3s/:)gA_`b$Z9k'ZK1C87OJ)N'(:+^2(:$P""DR;.%&Y"l6'"I@U.&BKo.j8&
%;<i%[\qB/b8)T*YK%4(a4uKuN[!+nu-;!5k+(qZm0Zk);$\4I6poQADQ<)ode=0Sm=;NT\.1F#BX$oXsO3>ZSbCIp<_j6ncR]2Xb
%jm\r4Ri.ka.&Wbu!&@'\H9:\M*mu1FE7?ZmU#p$)[p_Ks'u_L#]$%O=`cqbPqGPEngeUK(_-"BeW6+K;jDLf.GEA8]G5"9paVhm2
%7"nO6I^*,G1eE1*#7da'\<I;3&Uie^n=&_6V"^Ie:C>;7h25!TeeISkVkZqJf"[#:q;l-h69=Z$R#\^MI!QGtE0_=T9*#YfH1C-L
%*VU0UG"i38c2=)*nYp.67,ggDa$#8B3t\BV$ms&:V=&N(6[h'I(T<[m_QuV-a&raRXO_b,Y_poUdbXA(Q76[9C,61^1L_P-O!OP>
%Kt+R9U82I,K\A#Gmnmc+EY4`e3tWsN/b"qV,#nCi?"M2U*O+tYcQu$I_fUZ,M@*8<8Pub1NpidBE"RXEpm.Y+_"MpZ7!l=iUD'GH
%\.k4p9,2$'Gtt4ZFgEOa`0H]HHBWKd/PCe);L9ca`R9U]0tSdRrL]9-KW^Z<%O?fn7&`+BHGCt%og#8$K:"([@()\8g=Ru&*RG!6
%Ks;;fhMg]+>cD7G"\Y(@P.Z(Q-l#D+L&Kg?V2f4n[j;%qdokPL;DIB5EMX`1Lo-\J9qH-83!j(:3GBu!GA;9K<01Vm8CCI5VDQgZ
%8Q--tD/ZR>c;'hNaUZ_>38&^lHGT&hl:7Y_)#GHa@XL++hj.N#na'.pjV4EM)F$J\2KLROSV-%;4NP+k9GQsLAb%"bmST5>#:=<B
%-GtF'+qt^Jp`t'qY+cp*7k#\K8riCi0>=#n=0N"pA97k-:PnT)>(rQ1fjC>M=0E`J[Y([YR4RZ;f6h5#?'s/;7dI#No`.*FYMM&(
%l8j3UEBmT.SSko_Gquc+]YCi#j]b'n2bY4=B"4e[\f&4=-m>R?:?H%.(k*C<;eCP2q]-E4l1KrZJQ:n%+<,W5;^3G>kjAhZ88Q'N
%d&"o0@3g&.h"m^e/W<D1g#?8V=bog@biFaYg`T9tX+MkQmQh[&!ffIcf`@9#7g?mp%eBeO:j%sIWPq1"e`Q7XAM"$-$0d86(cP[4
%XjfVfj*oDL.IM=HMsJ%n8Ct8@Oj`WZ*L$1L_GdVgPLtW@#i84d+#ULO*b:KIm@&hE)8\\$EhmJq7Aa6rGU@8giB++(9Xa+8B&L+S
%ZA$#A3K_0?3^V4F+q\jnAjEa:O8,jd,K;.rDm5U,>`<Z2=l_?(k2eZ`1cgC45W_[6SjM>6O4S$nOS$DS'1HnkBtm:U=i_f@>9T0l
%V0Ojr'3?ADkm6S.9ks7Wrk^1&;@ce["DFC=E.&S>*6%j-Z^u%L>&X,_rl[HCO:Y2tU2UXS5B'C&_]I,8.#\7+XddTRk<#8cIi1HW
%fF9Om-mVIloD(kq*41XOO9]BG#>mlQ*$[h<G+Hi&""$eMOCInH.H(<HmBZaHf&b`S/e4R>6H>i%rGk;<HuZNg<2$?!!$guL!)5hO
%[>;&ba"Eu[9>>kqb%*>dK*.X%-BY]u6AY&-1HZf!hq`o7b;:)!(b==Xd(Fp<^3Wh379XLoLp4rW)iVKB!WW[9LVbVRfN:;*:pmP"
%GZMg2KF]6Obd;tQH0ZZSVVi6(PW\"mB$\oEO4VBjf'B2O3?$#=QtBO0^E\$2Y_gShjI3\R@84u2V1aB;Njs6n7YMTE=b]@5OK/N$
%"#Z(Rkp_01^p]Hc/S(oFAFkCsR6+;4+Isl,k!eoe<3Wl1Kl\%4QbX[%j2^bZSeApr;3&<OQS>1L9_NE6IRZ<P5$ZoVCtJUhjCesb
%N-L#?Y"P4Cf\6;<#+0EF+XD8D30e$K-Nm>fg^Q$P-*Y!KFD!?3.KNBLR8$AV^BdL\ZBTpC<0=8PpS0J=-J4J8U\M[(mfa#_=6DIs
%M(h7&_U)PNHseJP3Ir=0'>>P"#(I]8k#D4>@]?k"PIJKEqBa0u[L!S#78tr!V&lJs7D^S6OsH!J4b?WFC*t%[fe;!j4N%RhF9aTJ
%ZD%Ep%gIcjSn'imW!SB92Y>(\o+$qg*Er[(<3sYNP<I!S#^4f&aVs:'0[VG;4p<q<rMLBUc[%NLEQ`T&^76DrO%QQ1G[9-S&o?fC
%Kt#]g*O36'm,D8_bbFnO@&XrY3`or1qu!s!#t7qHQ5%Z^\4huGZ%!@&]&l#+@I43^ic*h0`m3*#/1+^?V3#!u4gB"p#d%'4c[+@e
%PN[JdRSZ%_I:p`=!l7hn7FUqo6,]]2?jq;^6J3<TG/eCYX/g4BFWC)EXq9spqf@:4D:@!AK\C=3;qdKQBib_4]X#$>D=1;6s$-Wk
%<Lb5](O>,;h-87g9-NA32o8gBGt9Tma=CPaQpBd^26P`jPmX'(O5&=qfL=_!Jp:J"g"6\qF?CLomk\jI0>nOUF$^n\l7Jn$`[Nq2
%E"ZCDpNsel+BY7<.HHf@nK`u1h[qJo#tF,=Q)k[:&D/@=B_+PpJqHI,kJ:[Zm79j9oe*^KpSc=4^l#*p[03>Ph=LXq(?J?_TGY-/
%6Ro4&\1gu'AVNBI"o)Bk??0,g_0ag20`FP;Le'*JmMQ=CPQnOKNFmp"=@=6Q`.h]e_@/UFVu%@"8jL_VoR*HJp`Q9A,5P7QTQ_-f
%9T16S+:;\2>S0Y,0o;bt-JNL9WWI:P.ohKel0jCTV"M5>2A5+3:jc\IXQ,uR:W&Br0AUgu?,LD:9<C*)_W5GWf^`aMjiR\D4C$N>
%bYG`nm,]M:ZE5`6`p=1=+6`8fEa;.4'PZe]As,B2r_\.l[tLe3Um.uEA]FBr[_p=$BXGi2rH;qlrHp$u%=Lu`#.DeGh=)+i2C\s:
%q\dfZ>`(u4,LbMD.i?s@$1SGAp)Sg!4%;B[Xpi/aAe_7N%f-^@5)MeF\?q=SKW!g^jJ;Ig0usS*ZGhj)r"a:6#d&"8lK8+P.PNLk
%Y7nI)2rcHtEjWAn0`)ReJmmQZ>nBC<Y1L:;X\YU,.+8;NVJU!X`62Eu;GgeY6pIC(f7f=@L8^OgLn]DbXr.!9VN9jdEsK($_[;U#
%B+:[YAYT!LP5F+&a3V!d73)6@:E49MR5=lf+@TOkq+j!lT995gX%]dX204'$L"Zj?;4Ri5qhZK!(P:=hZnH;s6m@[kgJbC^i0i<0
%YI"QlpkVO&aiflCTM*7Am*JCp?.1]P&,hGD1G`7:?ddK.$[JC'9O_;F[SAaXL3rAlF$91digSen)S5fXOeagJ'>-HlKZ@$bWEp=s
%laI"R?'VpZ((Y>jLLC5n`X0X>L=S98^uOoXh4#VpWh;c1RjEoCBS?r6c7k5EGWVLU-@nHOZiH2O4m;/r$X$Q[Ci,dV'7RTC3>dHG
%mRiC*-_F3P5-ecdHrhbSLCR4TET%41G/H85I5=a>dATR;7jQ<qlG,O2+7,GmWW`fC-sr,Se4R'1RO^@X:QQDXa<VAWfo3W(:3kRn
%0YR<2S)E<J>0;n($n1_;e=a2:T#oA%=+^G?+QWqLW7ldTc7Xd*Jap..hWBR1&(uJ>-:<(H1/XbZGF9`2,(HqjW4b.t;:kK2bjYb,
%W<7+5OkpZWeU1GA#gG$[i>>7GUAU,fM8!iJ9boPPnD]D??0&.X'(#s!];HIRPG(^LV1GVgK,15h&O.,nA0slLi(sP_emR_L*off?
%$[Vbl0M3l]BJIb6kLl@^!^heg.WbsF]gFgsG]:G?&8#c(:9=btB:a'9arG<CIV5<K:-dSpHG[aV'54gOi8.aQ=CC<0.16Vp2LCH\
%2[[E=mQhJ^ifg;^ULkUEBIuOk:CWa=R;ndAK<9Z,60HG*+Ts3eOXB2@*/mJOQP>W9,5Y#8@NL4_,WK6FDr-VNG[%2V(hZ!<kd!-9
%odiZD;BUt!r<uf;2b\pB>Z'kX:YDnXaP;GbenqjrZ5K=TE3S'."_O7Phl!tmF([mFhoGjpSIgV^g=Bj$B$RV7;X[c;$g)"h<sE+8
%DDtWM.DI+L:ZjXa)6SE)C)-m?#r+eU1QEIkh4BgtS?e;LS:`kja&m)K'I"=%lY3A1HWK%ZH_3u0,'th5fY<5+pg@B"oQ\f.ce536
%dXT#`[+6gCk8'jj#EEBW?Nb)O#L)bqF+Q6)LkA:-,Y/$R5i,ri/.7f.#O./HN4&![[;nft4ILdXcQnUh6imI_P;"o(PAK1[b3c-o
%jk[=UA3J[KmNcKeVJ<O9;E.eNj%<1+jPt^:Q3L\g8PYljPGNP8SIfA`FV)^ukdiQbVEIOk$b??cLD15$)L!t.btsdNP;:+M&uKq0
%Kk[#N@2]D??qZlACJuD:KPC(X[KIgRRb!,UnWu4p8_\<+;O).ie%I`C?b40.Fmg@D7\>hm:>9Rl]Qg`0#OHV<Rb#aIb"L2;GF((4
%bpMb?K5b#gdPU*!\`+c,K0a^i*/'KP*JDkJK:"L?1J6,0).&&]PL9?G$-lLC_1c/49,]R>Bs>9A(@$,Oe$u'kl@`m@AIY@/G6JYH
%Q4@UI`a882c\ENXZ@@?Hg"5;aM(1)):rCjJb\L(ML;C'`V,O2PaZLb,<:[Y)P,dK`fs2ksWS74emsCD$rHtsJ\TqjJZ?Mbfhot42
%@iuLipud<Nb1A9OPL6;CdN\"+,]Ik(nd&Of6$?[D3Y<@jP_e]UYpLHL%J:N@@,6h'j[h-'foM%&'c;IA]"oA+8;F3eA<W_;Q:hgq
%:1bADNcXL8&=%?::T=Jd^OA1FTQAR/#l`)%X@\U.#g_NaC]dE([=DKL=W3TH>;:3(k?qKpP#p451<Wrqb:DE"K5O!p-/&XjT#t3:
%^ZdG*4Q\IIBgl>TC6@(BKS4q1f)j3EiZ+WGr2ZmJ[=U/dmV%c.b3g5%j1-)5\&5R>Q;,b;%l1$]=H(83][g":mCk_f[b=@'isAL&
%MkCNq2V+'TaHRBOf7\N$e<;T415OV3?^A)E9M#si@R0oNbaWI54q57;KQZl/S\Zq?8"/1h8Q8JG!IQ=B+9S>)2k%ZR"4riq+WZ-$
%D1qk5.=JA+:nD>N1s$-?+[u0u9Kg@2>+Dr,a'LH^$KV"<s1T1X&u.!d^fVPK2up:/l3W(]Dj%U.[q"]4AAXoW8,Eq]]COk&I)90(
%^>h+=$`muY7DTXRFB$_sQj'uIK6HP=f@o38AH;^Y[e[Z#h^:>?J,"<0g*S2j1`A5+85NdC4RrYSqs.m>LB!kH8U)@o[/^/5f@U'#
%KrG@j.5;&8;g=oE,8IcJCPM(nU8-:8]d[lO$n5GbF0S:+M#Yd@@eYjTQGrGk^<,9&6fENddGX3%V5S21+]YY%GY_>eQNPYbfD><H
%WTr4Gn6j&R!O(a^i!>K)a;9@"9B$0u^>^QVLPg("%W]>Hrr8&PL-F"Oih"Vq\!k#FdBVe+E=f]CJ:uPc?](BNp:-cb":2-r%mhWs
%k=bo"p[<*E6uXVc4&[]iS1.\l#h0eZ%NugBc:cWSU9WZlOa2uVX$^?Aq,2GmI4<TAb1n8J=]dW`)mqYX7iKQC\0G@<%$J!S040T*
%Q7p5HV='=Ni`m-qmJ]&^6CB?X&I)C4-Uf@1_d"^*::J;dUaZ0m77R]J>/tf^i2''RhN7jM`dgk.Ol@Lj-XFYN;RfWe+p$,ZpMU_s
%cGa0YD8F6V8<I>Rh(7@Y*"KNNNYH`mN$Kc@MPPgHN:Y5T@ZfnGOb5CO8--MNLEF:$cZZ+o7o4q!WA;;k-$_5S9]q6(4)qCDW;6Ya
%R_PL774upudo1G#;1Qd#M/F$km#inW)r2nr!iKCYF/'jFjP8idiCHiR`C6XC76F0W=e5&2(jM&DI>R)U0j1:)0&7q#oq2uKEcfC0
%+>2E.!b8sgaA12M!i1e1h@Yt#H,_BFa41jpr(T,-7@Y=9;2S7H?:ic-p,j.L>328&fIL@YM8D^qj+GE;K"I)>ckd`WOOSBH0ZIq<
%bDG4$FJ;lJ3`4OF-Sm--1AnQ(M1P^F,j@[Y<Jr$sV[l3'lLH!/!+]uNa\!K61=>+LoTR3M,9SY*c-p--L_7jEa]TXO:))92<@Gn3
%f:aK@hh!D2i'W&%#bSsjjCH2FNR_]V9iT&e3Di%ZYh4&ln.csOVOS+`c`YT9+d;E`%"$J!S#KWQ5ER]m28]q!:XlP(pk%5L*%2BL
%*7M<,YiqOP1GcHqde`q!@-kJGoUlK(:mDp8F$eWGksJ=T>U&C-$l*8:_-hluV?]O1Xpd2"Wh^>NFJ*:dR/]Q9$c.<:)[S9hVUs&q
%dsE8Y7E-)@<TlMagkhTZI$#Q=rG"#l-i>4:ET00nq@X4(p]P,QJ5*KZ@k#bf/D*P9P>n"rju*8?;HF3h*bJGK1t-t'Q_<+\k1)sU
%B8<,fA`c!pJ1a7=Bu1ENSd2L4TYlGB$]<J@SuaiBI7X@tY.gOl07bc221Fr<?XfbU<qCcQRhQbRBCo#`_U#bcJ/.tJ+cjS1.c4][
%9=23co9S%*VB<`t@VIkD]0Fd/=p8OF&*Q>>Jb_n\M9[S<<sa7f2n57@31I.$Om+>mLG*4V#l?s\PW8)BIM06u[L2iPn"bb$dnM%`
%*]#_]8#gB\Hlpd2U;XB;.6X2SDA"5*:Obb\R>Kqbga#FnH@d-Vi?\N%I+6V<Jn2#h<"+?]RFTYUipNLB,jO)Y&fA;]\&q8D%hc59
%+/dT),1B*bDq^O-4F97<\_5Zb0cc\/'j!B1\m(==$/6G[@RJF,@T=pjIWthq5lfh?dG,rjYMH!bE:+<G$ESUdHn-SD[dS?tL'Ggc
%,0,'.`pFdT^L,ej5>,,>>$_=$7@.cm#g[,.2'U(U]@fi&^X^k_HU]RE4<kV_Se8-"Gt+;l5?jTPO:Z)bW%ZI&h-ET&*LJnp8*X4W
%3@3c(J[9/D/">5hl0S:R"[CHf+sSIHNQs%`P%E,B'MoG(%0+-niWW)prrXqWfcnlm_UWZj&\I&0k^Q?>$TqoTrIkBub@#pgO,q'S
%+kY-o.Fe'H=NEYp7tTgl<&YhVP*LG=#HS5$S3Or$8&*9:qh^r-fn@U^6Y?gC7hXFR"^[dB_W**BFFT,8mh7Hd<QNRdFEQFO&9]e8
%q!rLA&XSg9NW`J+FRK[TF(S-dHUH^?C/88b6S.60+Vo.U&?_o+3BS['*6o+[FJRL&*Z$S@c4Gn-B8@8J;KRXQ#S/"&(>.H5+a?':
%oF`lC#85a?07`)nGD./r@Ced%?kSaX9Weqn#YpH+(P2meOgZnG`Y)'P0pjU^RKkr%2'9,<?c;b,*2T$BnN"/.[='4p4HE"q$ZV8R
%7OE)g&A&L%+aUMZF>7-YX"5rQ+jt=@bSS-%`knqVS!bqJ;(,61qKnC%6$0gP]*"o``'NSpiOa.,6F]p5$7)2T]!45%#b?sMo7`9B
%4H8_96%qX-(23UIWF^p'\O*Y:R4#p@bJaJ`F:OCb9Mp=QGT4g:!g7fi&Xe(Z+H1p7r#d+C)R27d#a"odFFnJ^),5A"(W23Ib73GR
%4ZVHU+C$(2EKKCaN0D1qH;?)V>'GE,#GJEg,0g_Y-q+5d?CX$5V]Q&6Y-l.XJqGTgk6I]3GWA!E7CF;V;2?8']FY0444&"0g`Y7$
%&]T!HcqDL+%3j-CV/q:1F.^&a*'ei7#Jj:(RSfo@R6k`$6#aakVpN&@jb"KTV2o;jF+^,f1RVCPH?mi=EeE<J)q2*-j;5[9\or.I
%kjM&G'7!mD*!XioO?#9_,=-UuSJq]6MUf7':d1DlG(ZIUW%$`HFFsR':6=QA6!^==H(,bk,23Q9TuWA2Hd4h*%H;`!N_Ll,-QS[O
%&H<pp4'Wo@FDUe=/Etf/J_2.bF+NhDS`p2q'V]@)3LS=#btQbH4Wk4GSN+df5O:-PQe?D_l2KV;@s!4Y3G"J=?bsI:3C!:cRI>b]
%,CT,QYiTAdfu'<F_a3M_E-.kc4rgEK`!)="rE_ZG>p$M*CcXF)!LX0k5j"I;AFt7'!M'@(oR)JB$co4*K9q\InKAAi,+FT'>L_1T
%Z\0-W9ui#pC:Z5a-W<Fq)'rGJpY^P)S!eqGH9F4oflVPme]d3m"1gU>$/'EGn.N%k]!*Jk#GHh;+=89'9G4Yqo.]95k4,YZAEN@=
%rghmU><XsY*P?c9H93\RfQ;;h6ETM=i!!Y5G0'W_(Q_@(#?N]2]%fU8m,2Gce(J.;aemh0QBHN&@^6*dG=<o.UTXc2InNVXR>itp
%1t,]Yc[rHpn*+5j`j"s[g.._EZk?^36,r]<Mh/r/l7"GHElYcQKB&5A7n;op7UCJSN'//U%2KI1#E)\<%`6F-+L\a;!ge`?fZA=k
%fg0kZKCF=CY24%4gahU]rJia*R'DI!i$W(.f"p":]ZrB0?oKl^1hs]Xa3pE84hEYprXi(.?F\Ne#%%8/fOYKDAIcSH]f[08J*(+l
%[-!)GP5t]Sn&St`G6IlaPM#F,JLFS+kVjrZ+._j+(kZ'7,eu0Eq2SjD@KG!'F+el^a:=O!#^9cP5r1Yo(3,ojY*:Q^7,IW]8UYoF
%i$VGmcG-W<>b3/_]d2c#_C+Y4Ibaund8tOba[l'sMapCS4WR&^\LEllF<".Zf>DT=1$:O%fQ%:D:58>mCmJM.F#h:'K@"UK&a)-Z
%Qua6e24$#COf2t.#q(US*2/>hEdf7sKhV4Y:JsjBDhP&CQ&6dpMEfod-?*99^'pQ%#afOD3fWXsb'(=c7b!c9Co<DJBH&sgEuJ3*
%3K7tZXW4q71d[a'm!UsTE5:KYF\X/$TmE>kjRs)=H`Y+tK_tYi\W#_c\=Ca`,0jc<Q'uV-(Iq(IpV[>"RLYYrIEogBN.B:GBtB7"
%=-TG')0$>4pH.X=15>4@B/0Ef\@N0WE3?ueiu(C!KP""8&jCn$rm(u<EN9)Z@jMH!m9Eq,nK?:DHa?0R^:SX=d0i@&DNh`5l,`)J
%9&29qeTKr0]muM7X-V+/<-(2S*2E%X1?BOR?\ZLj"P'/WW(3h[j?U5EEY`JcKYXcu*("D[TP=fgHI;!l?':G:AJ'%kNZYD8&o_Af
%LB5aaTO:`[2N]3Ki)rEKK4Iu0'99Cf<%T9JlVU9j\j0lR1(4buSX@b.D.Is/1pZ%uKI:4+/e8S"jq^fiAqjC>V4n,F\hD?Brf.]k
%TmDXIWbOBa`=&>>$j>lC!$s!G9ZEdM&m)Qh3#$/4fd=SuqejXj4WHW0`OZ7"F=R?KS+,Ccq+OG*,c[qQ6V*XdhjEG[NdcmL2X:W0
%7PC]Co-88JIL-B;-o)Ad3oDk1)Aq8rSjkaY9qO]c8E2%UG6S^$\ikYpbMm.]q3$gge9d@tks6$PC_E.?AXr*mW@H(uhN.I>2F0OI
%Bje4X>o-$Kf`I(8B;AoPDXfZLm`>B!6.rL8;!sHs+?s<"I6C,4HBf%Ia@ePQ]'MjQ3a$UY-Y:5t_-fW[P[_d&?Dj5t[fV,8CBs&n
%7eN^oY,tHoSRsONV(1MnQE@3a:\A8:33A1"-"en:'Cg\t;pb[AL9R_q`%p"u9Mtgj71d[6!0rakP=Cn@**QKQ3Sj?pAe[Ka`h&e?
%p[CK*D2PsK:NB#_Z.Lp-PdIU#H8rb#4s-s/qs-G_=X[RLT,1,5gM9'e=`jej(@a5<e[eKW)PokD;KW`uH')T4o^"ku&GiQh"ua%O
%aOQ7F2bHf$<o?Arht.m4^tK&\hi8Lj8!IlQb#3P"Mc'Uc#@<KbA!.mr1BMYF;8J_p3GbF=A$@^qa;1+TKVC>(>DuuUGbO!j8XOa;
%&_.gX%UZ6^AKp@A$.:q\jhle8\h>lO,/f9q1II0WMnIK#%5.Xlcja/or^'/W>3g/e^'!7:-Cja)64Y[6[eXTubqN2,0@Wl:5<pV@
%=1uT&iH^.knq=0RrllV2W&@,Ge30*eI7Isb7l$hPS&GGslp*4Qa;d4adklPeHtL>YEZo2D*JatI"E5G1CeSH;>Lfb&p8[_P)uMqk
%')Y>0m[(S*7['=k)eX(APnSSC2Xc"IVVjOkTOsPul]$]4&s4+N^/tLT[_l'8*/_9""St%?A$jG7o/0;!cTnpPc48B_r\mAQF"`Ur
%0X1Q[qCkOdXpgbCIo]no1,`p"UKd6kY?Z0i&$AHe+EChb6'LR%6[/1Ghkr45fot=866pHC7o!Y#YlW(g6h_Ufbe),dR8$n9gD,5a
%D_J7DQ/o4uVIMDg=WcH#=?P_V>qf.%=mI]d1&t:J!'oIneCdDoC64\81D`Ba.P`h=rV$F(4fK3\,*PWd>VOfE1<%K@\2+geUE=%[
%cI3j9<`2"dDT!';=2E#+"5V(L2@17i*;:1Z)"Hucpkbf:*\`BV/0U7I$Ti<DNI'&ar"-G(%Oh!,bO==N_n+_c9cJO+q+@s*^P<V!
%?_Db`5lbdup=n/o)NPL_=-g)GH46#,Pr9gf[(2dUE=l)K4&sp3QJoCiRGrBKCZ*Q*A0Pk0l1;?!_:IfERI9$oh_N10c7]b`aWO'W
%eV>EnrD#_bXuB3s<;0VVNMb2B0P!J2rth/k1_qm3Fl2^Mp)0a9eI4tR!k2/J>h$j)g69=:RE("oTIWdo,#p8C\je`0e&ZK[(V!)@
%?Z>4"qKu>'@PWk&@,9?F2/HR:!JV&Pi8ru$dls>I]/MTW744Xs+J8tP&"cXHf-kDELU\dSQWV!1k0OE@^8QJS7U`%E&]IaS:\b.;
%HTT1.XcD&KiLOICXV^arB'e(B?1>sZkhk._"jta2a6u:Aq)8ojH'el1VgADl"OIYojgEa>^rpS%`<"i:IcJre$#Cr7&1-Bj?+"Q8
%3SZDEn%I(ahn"[I\s%]3&'t2e4upJtKu(;P=L_V`/G:KG#GZ9Q7,GkL,j(2eD385Zhk4Fc$jT%R&B:Q>C3U/TX*,eLSNpd3(G]i&
%oUl?r'=mOGajP6X"=@lHC"6Z$Qf,$Q8@E&1PJ!mrN%3s_1!7j/Pc+iHP$ubD&T/q`*0L%FRE."\"\]MMO=<RXfYsp.RG*.J<>=@s
%HU^V)L)+paq_70uQ'EK_@=AcimB\JH`rA5$GOoPCBCQ]kf9]D7JZ#:d'qabCVB%4j1r\pQ0KZG$2;CksUNWVM=W3U)UF5q8S3-qX
%mi&nO1l_ID:pIA2rcYM:nkB,+TfiWZYi1]:5Z'4lK.(35mn8BD4*o[5*M3oPoj6gSRuBF?RURMVM%gapojI/XFjH"2?fW+n*LK8J
%Kfs(0nRR(5-&g6I9k1$!V]Dbcdc"R;IM+`Hn&:)Ue\5J+cD%7l1=&n]h@&.aa[2IGHnNm'GecIofl^Mk.o\!1*l\HYKVG,.1s[lF
%fIh:[7NdhL&b]q1bkr!C.?VK7OeN@Q1%QZj(JX;*$:Q;LK`[75!g#8T+"D2AE_g3K:StpZSN)/j962*$CAiUmSfE%;m)pG49$p4c
%_\MEK*AN,2l7H&)Gb!aFlpYJs%iCV?&?i6OK*Koo"`k`\b=5#@"?_kgKK349:B<,BZ7Ifi[/.7!$"DB^Z+=aaKUFV!;]JQrDt8bN
%2XQbHbRZ&G#uso?<=4"HbuZhCdj^NiaVpjEapBJL3G/5-O\L&!Tq1g3&p/@u2]K@?Y>)3U7^Efk/!\#6U6Y",bEE=K'F?_1I'*4h
%0[DNhb&LU#1NMS&qVp`i[FjM2k<3IMk)Jk9$84IDD0L&kn.OusZ$uV/n5?:kX:_#m')jY*X'EM7!.6"aSCT:K]T^1fW#gOP,\ZFK
%Gj3!X?90?W+Kc?jn<.iaY?n0K26FA4(@uPQ-8@G)M>!h5&mrW>A=)(cH.aJQYj_O\^JC/,^Fp8DPFkcq\UZiHKkU+/@1dmj0api>
%b05SX.'aS0P"TUg9&#NPDWXSbEk/uO>WO.PA[c@G96(==4dhL=@OI/Fl<A?:Q\=?dQh5a:gV5">n@fa;k`QFj??FkQ@fLiZ>BK+k
%A;n#*eE7n::0Vhn]56H^2[!d0i@d!oLH5E/?+0*?>k32\Z:gkYA=)^CAXDhoaY#N7lk7))P"^m/0f-<*&po5uA=*'s>MZU.EUh!-
%A=(po@I,Pu,s3uiQX.IX#:k]G?=Gi4]]]tiaifSpnZr$l%R@oZ-b[G&]S%lN`:(m+0DFoa^>-YI471o>?detW,qm!NbS:&%LbF7l
%%tUkJ>=o"9oMuV+cli'-=HX;X-r&ArEBna%@N*>0&<G%lBl8#5_O])]kBR9/QtE$@Q!%1.5^-C@RL`3nk<')Z@#ZTGnkheKIA8B:
%2MijgRTn^P9%d99X>p8%cN^+1\Xu;[`&&NBLo8B)E+k,o?sqGDZ?EU\lt4HGY,S,AoU9D(XRE8j!p\8_G\*_+;rfR[A6"7mCPae"
%-b/@"8E%$J4;f4@OrdkomT1XZP]&A]7sM[D[--?)*q<<G#A@2JeqlY=1K:/Zd2gm.e6iLDl><j3[[]Al4bsrnBHdkX?rqUYE9-#X
%c(g:E+h1.bg>[[,63^cWO+:h:,hE7.B2sjF\F9K!?"6QD,$I-.R*Y@`NMeX&d.Z5mm\OPP\=Q)+,M$cOa4&ZZ#P/7$Ka0PDL&s2^
%(6so1.fc_%HV$&Z7oFN#-0Cki]a)bC1kBp2E8,!Gr&rt`O1C&V9Fr9i-jMRRJJeV8NG"@;opXJ$$l"[pYP>=3:mk?nK6uKL4+E$e
%.j63TaUS!CK>.@2jtj+po+`U,c.pX4FaDYtB-oroYZL[IJ5K='@R@#T+:3Gk3.$%^1[,.>ohZf7`"o9p3"9n)LH83&E2[*#f^Wo<
%T<VDh@ghF+TcciL2NlHsUV8H&^HsDEp=Kdno7O;NpDJ$pJ,&I+<q'E1Qch$&#+!sB@a5]2,3,$(MI#rogNA#@mQ^8ir\9`Bdkied
%Ec!nu_FOI2lE16p-lB\teURP&$S#&/N.*F@5,6(`<QcF>Rm?8,kR,t,ND;p"q8VEJo(-*T_M>1Fo2_fs&CScFbK7E>G^lKnlE&"L
%1?JI'b53.VVn3bgm_tP#S`)K-0VX\>W&ESAW)SAY;.Y\ogDDO<h_#X->Ud=t+6kH/c)5;`BmdGJf_&:G<iPZK9(/A_:X*E@I[n&2
%"@p2%ri8"<#P\?LLX[;L#12\X7)HQ4I".]3hFiJfkhauj:qA=/hqtL'>,sri:jmhaqYjh$M%VRm!PeLE3.\q$%C0qbe3$R/aH/p:
%(qe-V.1K."-@'/cCakE39S\u!3!'\3[s[MS>G\hT^_=BP;@o!Le:X=u_/8UC`R8M]BT4]+PFrtK]B4L,;FkSbg8cSe.u<IBes%`^
%ZIghO9N-O`,0BZP1@&Q%K8:RWLEOUO]%T.];B.;Q#V0tX+WhfH\f)RboIIR*W\"M*>VDgt&T>UQ]'`8mH`tUb&B&VS^q5cLb$YsU
%+ITAt76.O=$_W7u+0OmqPS#)!W\W:+4b`IddB50u'dFdXJM$'L:%3m&-t((4K_-2QhjHMY-khop7mMVo&U><2AEZX+"&M-LBZG&u
%f<>BY+g]W8Ze^a/4-A,J#?"T>>c=t0G^uL^WE9[pBTs5me*^+LQq&`<+2.n,)iti'\PmOYQoOsA5e*);)h%U8e4L.sCP8[QpsMBY
%+K<rXQ\-T#"aLu?AD(MLbK,T[P-KdT7G[e,A2#5i!*).4l7os!8^LIL>CVl@`"I_`_V;d!HFm>$SdlRh`P.H`cbOit#ab;e4sa0K
%]RFkEq@rKoL:)-=mNum09'G6\<M`.`Fu#O$*4ZS17=>m^eRjtGf>XeT-e'4XK_Kih33'3\Akk9Y,BL\Mit+5t@j?*/TilB0D]c1U
%9WmmbBbP%#^rZ#2Mg;>O%S!EL5EH@tg-MZ7T1&!1_;'L(.Oh<&K[COdM?2f\mT6ca6)i0_N0_8Ldis4=ik;\4/2:FId%3t+M2QH-
%;2RP!!-CP4!*=&L/g#iES4i*&'U.UE>]^UN2X*qN;W]UkhPVNc1G0,HIs=B#Y$KT_AmM3&>>.s7C`5"<JeVt6&Y]M]i>8cRiTtrV
%\e7)B-mfL,"miaE5Ii.^?)Ub_C2bM4a)S/13&\tcbZPS=1H$[kXXboK"leQOCF\rAidl/J^;j+/AeL$GHo.8K9;B);ZM22QgkH1'
%pIMHeTu&U`lBQ*/m'=$O7b[(tGrGhK!`lGB6>fu,C9f!J!BHbgiO9WN><l4<=(mS4,r>Al)/'>l\c?dm]#ujE%_fgGK!p%^OS]pD
%;hB0JnaXG_1kSlHg>U,aT90q%9r#j=Z#=/.?<K-I'*m,2+H56YM:C0o.BXBSTm:,A1\/D3kh"pf:pUpl*QRQT[a)blAhNdr%,T1I
%<o(m34h9FiWQUP5dR"rJ2"m.$\`u@W.r2GD`2P+Gk;1K&gW;Fo:f,-p?O)/:q#h=K0t-+>LgM2p>^7k4%h,qZ/9HGZ6P(4th`J"^
%(a?C]2I-X/G>'MM$-l%HS"HHTJ>s+?54W;]TF2j\l7HU^7hsAXZ)0OVVe(P.U,Lnd6uej'o$+INb93P`)0IE:blYCDR+2tq;!'K=
%"]S#81b/XLn>]g5DT=S*]2Y+JP#nYLK]3p,0.O4XU'AD$!f^rs-Tqn)A=*aEW)N%'+C8Z\ZSST)`#/sB]7aHL'9OG404^1f$p+Jf
%p%a.r7,nHobY*ha3on[2(K?29b_pqbo:@OlCu^c$JY@lC%9Xf/]:8qc%>&&EWn(WF.;PDa=Dp/87(l9KOBY*t%.!I:Zq'mSNLJeu
%r!Y8^rl#tT8XR1d=n*H!N0,Gs*15UU[cl;aO?:Qn(mhJt%atJM_;U:2`u))N*KEO)7ZVkO11#AP(JQ7l`n>tZ<h$R.8mA5QBp=7)
%B-sQIgle^ch+otd'EAm$-<r!@X2'Ffp1N_$/;/n.3/2,qBO+1C!:4PoR*(?lNE>km4l'SJ%i2u>VWrWlSeBPB3bu'%<4&CG@o_;'
%7Kd`"jo*ro)Yj!_IZ\B=RSFls>M_J8R^]68BM%?AkW&Wthk:O*,\on[4B7c2%I$APMX"dXBfN\l6mD(M`o9WCJcJnS4:)sPe-f1!
%Dpmu^FH:;"eNM\?[2sNtl$]JBaDM@%mW=kZ%)*pWqBY!Z#CAE7c+C5\GHu-_Y4m<JmgZn6]<@IW([`>)]\gdC@o;a7_.45LppjtQ
%!=dU4&87t4M+j<Q0p"3W%'W>=A/i^5pOlhj-HIH(S]k\>4+>LChbM25fT@AAk!Im*><jcJNgO*aJTVi#\=l'c<M_JFJ@YD>@`5^c
%_1[H<7V"A*?bC3?62IGMkS8k4b2.c9+]5q)HojhIAn<1n30r>&Tj.UH+*jQ_+ciKGg&1]N41Pp"\lg6C$\(Ej'9kh4,[OrB[!)&4
%8cIiY6f!=#lY;of?K]])V&#b9r^hEpn*A@eLEpM(R]i5V0Fp15=c?I,Tk5>HT($!3g^_30d<qprYgadAot&8m/[!SI<$"-LUrbgc
%2<DSmUe2^7Jn/j/]^h$l.]-5ik`[2d44m57,ZTR(b9E3d2gh9nn=!)2[teT`JTeafL6!qGUfA!9jO3j,pAG`WfY\<.$P'IZpelp.
%:c(nR$`Ad6,T^,21?u^Q.B!r7m3%%:q3_Zlc]d]^"O^\r@F@pdg>niV(qmkO3_[Q,(]lKrpJE>mHr`ft6YMPbeE7W487-%m>&_bO
%8?tF!N(t!.+a#$^%J+bnN`K:`EZA\DE\"e]1;=>@cOh<`<DSdZFQX2n`W5YDdZr;c$q\FcEgb.iJlJua\Q*!O]p3.%^(nP_Bj*D6
%Dm46s?(GS:+SWfm_YPctXGd]15s<lq_.%k[_GgZ]Cb0q;:B.iFr*TZ%IhcoXBqt[nYQ*`Lrkn4)bMW<elbE;^^](:cf0?qHmsk'B
%^Hp7k>%>jBbs]\*^":%,G-cPL(a^JXY[Gf-6[N)Og2^[:ACK;)p[8EVe)DS-XQL'keH[#sSWk,!fSt*qs-e8P7:)r.^-Ash91=OR
%jtOj4&5+[./lDh,!tVCXA]"`4&J#mel=JZNCm[.iB]Wd2L7or,K?'2$K5('-]U=,5@lk,.^CkM<KN8R@^i(U$(M5p.GTHub%cBo8
%8DCr:CmT1\Y2flM'JI()J0esWdcm/&GE2%E#:UI$qrYZ<+1%sle8W&_H12o_NqdUBMbf?^rmhasS]prH&aLr,OL0'%."k@bF7H(B
%Yq%iO#C5"qecUC`RIiY&m+]i-[J&kBp5`A,OW&g@nF>ENc[=r7:E@6@?oSh[1`CINH1NF5#WBc;B=YM/oZr0Jnp^NH4%><rU((JL
%GR%]D)m766dlER/HYWY1mo4qN63ooD4:$`g-GmE]R[#9lB9V9=%$E#\U%M=LT'4j,c&e@`Ed(]+8dhjP_$X-bs$7EER^X"p*%.LI
%7XH\n]/.jf-M-3][,SrkEZYOU04ZSq,PTb2;3,t6d+4Kjd/_!2ins38mKVO_\5-:N1oh?ahL$F9i`5U[@PC'e1E$$Wl!sjCjflqI
%1/Mp`j-d[-(DSf*Wh`?Og*AfgNQO0#e'VSKo/u+2^*"IbO<J?AmalP<aG&hg1oe6dK\RpelD9`Q_H=,t\Ld%)_Uq9F.1[9FmS\G0
%VCTK_g9t@N+mW%1[kop<id<2`Bg]K?K@atG`o'>5.b`VtGIo[[Co`8H*;sPSnU'%"`;+GEI1MY[\pkmhac*krH'P!\KkUI9L)Oh_
%%!)V?QS+#>d[9(2(E.dZXh*D]>]65+5G?>.O<4&2h_j-m_,"h>H+dR\fn\ju1@MBi*IF/3I,dD<Ma]^)/qHlVQd0uh66n^N#'.U<
%Fd*fT-4AHH%Ka\3<H#.`FTJhsAHBBMqr?Cm,knq^=)3+\X,moCkQj*+OR[IFi0_[o&oUVY)5R>6:"DI8;RKP]/$$Tj4;`Z<Zf3#n
%b%`K&3"3t5qpIM>7S^7'Ah_5>\gQ3(?T*6Y8bBgZI:&\)W"O/L-F,qhDH54&j/s.C7n+C=;QlX%XHelmP:9)Q.Z8-OqsGMG%.%,2
%e(Q_-/r(WI=)'lP9PA`4#qpRG$e"?`gVh$.84L09)]OajDEuHW(/S'<qg+ZE;Zs^`l]d6fZm;V$RJ_o)=SgGAQP+<Io4Eg"ZsMq0
%cl+;GA-M`%2mZ;tF`!Ro=sh&4B+S6ber_s/R3D<6CIMY[EUGTVk#b)u>XTTHK@#leK\g/c8St!jmaE`)'8!#tKFp7`P3tb9m533q
%7GrkC-9HcAjH;'Z*6HC0atne5G4-%rqDQ-lPi=%@0,er8PR7(?_gSjqEj/3W1du_LqkVgT5OF9bc<^h:Sckh';OX/i(;%V!pj/#o
%V0VH+@4sApYL*"0;NBCp*4ZX#o>T7<88-W;fkW=aoeqBe6k-:.PJ"K8qbfo7PoPWj,WgmSrU=Mk0dpjQfan"(1@#]GXQpETXbF*6
%@IF9:X"Um%]$_dMO;Cto%m5n^Md>!=!_01->HB_Vo'4rs9,V_N>(eR$jaBAc?u7n#jqg%H[>`X`k-]X/XIF#):"V+UGql)62jOCL
%0djSn9+Z(Qeq6=bd+$WT$L*B.j]o`i5_oGH.9K\;Z+(+Y10CAl^Jq)=KEeVn<J6\GKgm(T?`*VB*n]M@XD'F,Zr*<3@;SA\Gg'-s
%>O6>+-l+j1o6j#*^f%d$rG`-dA3Sfpg@bbb?!O?u!NlOGE-6*MH+R[33&I<YCt+j3rUm1:^W+ld0CP+NB@hjn!tt)ifVS1BWRW`q
%8r,if7Tf>H*D9jNH_"RP/O5br(mb3ShD4++T*;CD#J%j>m!r]LRi,!>g&lA'>hmh79!=[#VH_),1og*U,Ifq_m;+`rg`SEc>)tV!
%?<,.\h^[1#Z&"63-.ksHmn!rG4f46ndE]OR&!F>A*C[k?3OHjKLl3F/FLM-$:!:m\q*MS:7F;J-cI(cuemh7RcXCK,Nn<k$jh6'<
%M<s(51c\gW<92:YjDZ^pg+h`FfrY)<an:+f'A<=VlMG1OrNp1/fDEN_A?fb.n`,K2_rE\0rkm/HAE4R^=jl(R?RFO>^Cj^uJl&P/
%TRG2-AMIpumk7<lT"%[86)8XNc&<=]W!rn_:r2$!Kj^,J!pKk@"8=_QNg*P`Eh@6$23L!BhEKTo4sFprAS-WOpO'&IpN/O(8%IR/
%%Zru9AS_u+f#XD,YjK;(0&EV@\-\:5Tn<7:"Vhmp"q1MM+RR!T-fdD#B8cX`@d==u48(KU)_u>=64O?[igBS.eH-6]Ys8bUh(2Ii
%%GGX<4I@380a._3F7R\:Z>Xp..tK9'M@rl@8ZrbZp@=2Jju1Lu]!,WF)-2LG(Xrgj4cj4\/4#@E1GQI%)M!-1\q+f?l[CT^6[X%Q
%\)CI4pe&a8MjOKg_jQquV!%Dm<I6.(KjH5t'.spY[RPjY#hR_)HO=>lAg]h(dtisVNk8\fZ33Ro2?m@l]p_9n@<U^4K3"9L@M[.=
%N`XTcAJ@/L@HL>DfCG<FgI1B6OPD"`.Zh?L`t<t0&XNh]i#I>.M^eE+%12fG=`O6TR1`P7G]iaYK)oVNO*D3L;oEFV?8>V5e`l`5
%:ni?HG^Mf7RpHgTZ._.XN&o%O$I(<-gQZ1qe!5e[Ar3Kre4OBiYGc6u3ok7f#t;eB&qV%lIY\'snmqIhiGJL"@T=rQXRT)TX_9PD
%pmq0Ea>\X2Q#Jpeg)a1Iq2L>FqI!"S%KeYe!XGDQ7`Lk)XmSKsI%$mDeKu2sSS5!hD:?cr:K+eIOt*jjOXa^%nD1g-0jY407=J2u
%3%).M?4DXi'U.O:HL4:.*0mf)JYi`g=2<iA#-jm#*]$3g9YFuT8M=6Vl-c\6=6$?l'`7^B=%X^O<USTXH-m(,4r":-?%]t2LpnA*
%)N/9.;5:Lf?7dND+&?CVcA"e[dhMYb->[SP=b0FN=:PRPG3Yo9<B8h$Y3-gX]q,pToPlIN03Y,ONK5LEK=M9m&[k$^OEH!jpWBqU
%bDiW")mmhmU+[e/mcod=#d%QHA>h\B9hOBn%8*WAS0hd)aK=^G1%bH[s7g3aa#/#.#&kMr0_hJ7$Q#=EjagH.pYp[KX3\uf1<oMs
%)#1":AjmM;lZVK;9P)0W/Qf1?aZu]B`??0W4JDOX!2!=FlAB0lC^l?Yr52_W&`;M=8CI$"_pTDAoiH?%jR6U8/Z<f*9oMsUIK5Nc
%=7Jm;-EG/m#uK;og&`-#W^u;/M`jf#<9T8lo+2st6&?^mA&q.s$D-=@6L:Y<c3hJ,5Tc9MG+_u0eA!j%s80f[I4nWT27XHp].]CR
%ck0h$#XIn<duO9n!I5PL.3bQu9sRX1(s3@qQOJlZPq+u(TF<GebdE0;$a2PMDpR0Dd@sWMXi$au8d^XSW`I-="D8T?e\YL<RD:gT
%&hG_/YZd!AKbdNRaH;Hn!e=\enUWH\$EA4p?_`o,2Z]\93(/_LE/"UK)&Tqd]ld`je-;jTicVKJ5m,!&2g@5mQ:$jL^J-paA^Q2;
%Q'oIk9D4-Vp'/q!a.[ript]#_XA=Rr/R1(X'&EW5G?;43fH[D;&OD:Y$S#n"979qc:L:!PaLp9((X<"X(mdpoUDJ,MfNIKTg0$dG
%cL.BDK4DPJ:ccWu[q\?lXADDa'1/Ekk"!48$c`=En!6,-\jCLa(^_ffJr>6-=VZUE?85d8+qfi`M-tm#gd#PRm`@WgX0.+ap$uW3
%q;GoD7rDo#8<)i0_$LlP#E[Gd2&M3@=C(JHA'ke>Q)V'WH=aeeps@+GD$D2&#F*(K!JKu%6)YR9_f_F*U'DP'nf*]sr_fasIc\YH
%#/V@'.aqBEPaZF<EF,@h"nqFBE!&BLAu^G^K7c<nMQ?XFXr$$^nlad1hsNXD'V"_h&U+=//[-Pi_7"'8h\p?J5'Zk`LkZ_(]LtIq
%mN5fNIfAmQZI7?[E[bhAh0s`Ipojh\=`#'WF9ngaJ/W%ad3E0_4CmEq:f!nq%3E;$#T@pf(K5Jl$QP%-lT.#5?mO];1]g#!rF&_R
%0]'_32<aO`FgW!i0pe<?>tq.>5?rHC_NmpJH0'*)#XUhEoTb>5bc4+l-J#3D[[!EX$MlYa>*l1Lds.#eTW<bT&:k4'MUEp^K\1FT
%1'QBm?V6NtG/krH.$V5KAa6p;Tn_+CHe,O(8+$W?,m7/r@d]ppBJX2N-.5f[*og3g_aLM8fk#RV9+@ba--uB<amQ['^!,=d3KmuX
%8eb91V0M:!_8_!gBW:]JJ`o6s`NhhDJ7Y^B[EJ7UPnrVGZm7Fk\X0OrH<IKt@3WPgkI>i9ePLdc]^D]=bK>37fVW+LnUcU/q8i31
%O?,%.e.nEM@1R0![93WBYaXoA<,Kfhpim<gMD8fY"k@4pGF(&:?qlf[LC?!:,-ri6G3hLJoi"*i70)%(gXFR5'c2X/O!ZW(,LtBZ
%R0T0)rd.en%%5+<!RV8DL1@u7k>mAXTqW;QJTE/PZ9AH(O"*F?3,-tY+PS%V>`E/;;r:T-\/6QNlo7*H][,ehOG@;/77OK%RKg9c
%6bR(R*b<*3/R6p?nO'-*Oa3W\O2EIZ0+QU2T+O>%RWK/F_T-ed$XItOhL_@m\CAYhUZ\+#rW1d0kNA<$G"l\FfQCGG)6UVdib@!1
%HP`D#Ph`7'Z>.F(Q\P4m(O`L79e#;.KGO4J/AMSL*QKXuY0hUpRd*EPMp;V:8[KVbcY\C9L1qb8msU.gkrHLm3Y+S.'[5Vgi-WUo
%U29G?`?7s%DKqS4rDM8#p?.h+6i0B\.mInP`9/,?FHMN@pSIt`lEiT)3]sc#NL?>`TKJA1Y[%kDiQ.-b22h")c_Rp_2WQm`6SVjN
%X[d#2f93396%)HRQ)m8r/@dUk@'``GEY?hB4[>[,JPEs>Z9^n_=<*djmVQkiZ/&cO:lhD$/2,:79Ekj/H8R4cbXTECM':&RhcB-u
%8n.l+aanP$nA$9Z<3KYP4J]f;Z-VaT]"GR+s.mnuR0bRt0idC(;4?Bu.O;HE>N*[\Z2^UoKtNpE3#=qS'r)DQ78m>T(PIT&O^_*b
%pW;YR+ohA*^,8MH!&&i)8N;1M`#U'BmCS<_$_fuEB3<eaM<MpRa;D4dRJE0oX>r6WK-Z6q'q%<iWabfnS,odU3(R]$k^D=pT=&*$
%9^/![pI7%4Rf_"m:N2dn?K=IIoF?^]Zri'h3.u>A%`Pa`8X8LCQ+25aN$lY4fNuL)M_2$s,#r81_CHeP_M7:s^6(;8D5E(&2Ac^J
%^guU"f&5sZaOGs:[0.#Me1`6\DREu58E-:WK``VF/7#\[4XeG@LJIX<K`/-'^lKGbddl5_'rK>`IPubs!FQ6eJiLV0i+H0Pct=`\
%rW-St0,EESE`(i(\6'o_0o$;Q4#>,38gSR\L)lqeeL3Qj6YjYYN`m,?,PcVOl]ur/e[@L-BS4Nkq$OYmQnkmI?&A/GK.OAYM/Qd$
%r\iTBRDS[G[2DX9j[ghIf!'l\"a=)O#uK<aaBWUH&.o+Ahl-LHpF7BJ0J>Ss6ob*s0L[bh+`Pc@^ND"CU_0>g$A_a#OioJ<]m>m*
%)MGFO#Xp":GL7!Bm,"lqm?nsA5j1tfUVN]VV)C-'0dTS51'o6ToO-sKO0]J;>laF#,N<38#VK^$K.qtS@FnN')]rUJ-h&6\+n>=e
%XPd6L'q.;(38HPj+S[j@Q;Pu(7:J1ckeW!1E]#P68<=3eS<aEPa=)n;*L1ur,)KR@h?\g"$n+Q0>VN?87-9KWg*ptO,(Gn>n"1h*
%-,dN/Ul'3Wr6J9*&`BTY-Urb4._/[TnQLPh*V$f8NU5LF,s<@3Fud`BT5g)D3lu=TT_DZ_:6oF]Sn8Pu-)DoKN$O$l!^$S5oDoKH
%Hl(M+JT2h6@h8nk?t]IOjS,;Q+W#4AmFBLBBXq.._c!Q$;32cj;V_TH^oF(BZ6_^fG&Tnl!i-04P4jD`T@m&6.>FXh'?,M$03]'2
%D))[B?+kob7n:ZRT*K*IRlstTP0@@h#u!@GW@<THfjKC>=X0aH7]sA$!`buKLqcZk7hZARdk4Oo.T[,o=9U-]R3Rd#/GOD!/;W&n
%4[8AaRn]*D\7PGP\l*_;,7G8M)@hFV9Ro$@gAo+c*Z<+E3iZ)VTYY_F3M/0md?+JLL1,W7hIKnWX%``Pl't<r5(^YSQ#>.V6U?"M
%BUKZ5PQf(+)h_'&!b9M/X+VfYWM#poqgq4K1ZUhr;XQ:[*XOA<d3OHfp=23aVbo6&U6C+<*"mKT8hN@qeD3+<<)4[-^_h".P9,nr
%*9>TVP3TEbTUc?+/4W7p$p1=CL\ou1BrKn3^M0MPQRY*k@NSt`YZ2IQE>.CUk[k\dUn$A@_^n.t9Os/'$OFX@dcf^R[_Ca!6;=U;
%$k<A,$p)dVeRA<g94CQF1Mt>^=TiZpW!5Xf"gsh.>i(I*(d@CfQ-I!%>AAaKWa-IY0eg3Q6P!T<\<el5$>e1u,4&3(d\IKSE4oU`
%Y)&W51p,4Uoo7"_$i5t'81TjpaSQ&,X\>@IKLgs7HZ)gsPo5mAo2CboLgdq^65pOd;4WaCC7^7a?R$,W^(Xms!@_N)6,cLIdM+5:
%=dYl8g@aHq%ZBp"/MdXfS"Sl>2nV]fD*4ZZZ4:j]ZUZ<$(e[R)RgQUp;P8'#?*fhm="c(k?t,3/H8:f`!a.*/JJ,==#d0O38@;CW
%EPLnd0"L.a8MfY.5,snTk+Zoc,K$5__$/U)nXE"9+>S=18si9c?lcH0FauG1kQsAQ64\4fP?Y`t@50i6l$4CYTn*RE5M.JW#K4>n
%[MiC)kD)J+f$Gu&WXGk@'Vh8j-me7-#eb.AWY@?mOY]%&PuVM5"d;1QXXZp!\r[%^*J+DNWa;Q5A4Qe67;]Vjndr$nh#p>pXi6a^
%F8)5<NFI\'U]qI49Y_K2Wj+LN84NQrd9Q%6LF0F&*hW8od!+1"SLGVbc[q8jPGV;.(%7,ge<j>4+&!&9FN3:/QKf(E5)9^dW7"$?
%"rLblVI)(Zehk<YI1CVJ5*tOlm+;#DibR!j*qDNNq>EiW"t4A&AV(F2&SKtAA=h'iN^X:C:QcHf*opXbeOs-e?WiFg1g$V]2pr3n
%PL.U4ojG;K@B[)'\tc9$+\NUX/PXWNd^L-L%^_'ADe,%7D[u]%:8*8BPAc/t50_H[Phr=<f95BnR?\[^IAnl.VA\=(j(BF=H$CL:
%!;HF7F5jI'c"o]bbpFj&DT`Y/KL6XZ6@(mNk-42sf^$NLqI`s.9Xtc<6c+Q[<X+AQK\)+K0[,ksBHX]kjNIcf:C'iVC.b9U8:+)+
%,9ZnNW_)kd$JH"%B#:=+1;Q3\]%*O67\M=ph#/"aZMd6nE/"TrCaHSD7[O=pP*[q8BTJPc!G1n;KdLqAJkob4_?;4p`!_4)9>]D#
%_8RkjWY>M^k_2eg!/b&/4#"pkP\;Xl\V_]UH8&&:c6m_<M,I@oV@eiQ`fqkb[FL.%\N"jdb,\BS"C8]0X/@t0MYK/B93bA'D[+fK
%M3dQE8W6l&We!8/aT`YJAQkY!N9q64*2088j60",W*7[lniDSeSL>,7Fk-@Qq"><uY[$E_%Vl_/,r:c]V.mZ!7'CB!O\/WJ&rCok
%e7$SS.C1I$UYkrf3FB^8/pRb<9LZ&eA#a5s`p8X6l.(@S1^$,uCg,46HE_p><W]lU!?c)VXr09&-d&DM8^0k^S!$K]`H%9="WTWM
%S3LE@MXrOf"`:fsG+.0;d6n:o?O^jWTa==oml+*JP9nC%[OgHQ0LTW2Rb0,qG6)7D?*Y*0T[pf5B_35lB#[-+?He*^@8*=bcRDQ#
%V/"&0;ra]j:Uh2=FMErXb2@X)aYfOu3sZj0@h/>;A4gdGH+&?F6cN#ol3k;H'<f?.*oqc)e`;7d3er,9>e;gRGVB6K8!,@J>iN#@
%;W0/U3f$59_qXJS#cI<J2P8VcnCUYcF(ZV&&p`c*d6n\XPK;E&c&"_oR]>=?"i)cte[2/=bMfsfqbr*CB0f>@j:_aQ+>"'B)]Wg5
%!Z!gZ?(ods]O7rL,O#4sYQ,A'X.u'F28P_FA9Cl&7Lbt/?(\',@#>=3\!*WN*!#3o\J'Q_SIn1C3q-V,V47VfPgk9"#)5BlYnTet
%RKs\.8:qm'0,F#H)e32&fZ9F<<GV[_SY@52cuK9"=(U,,VKn-:KbTXk:BKM6)CkqqS"Q:l,a^-L"[KiK8CgGs"S?CY$@N_F*8J&P
%<:UhnYD/[<%Q<X2JkAp.BdaL3U:*ue#.R:`YQguR#/3jHaI@97>ds&kXJ_&$6Gej-[jbmB`ck2@\YaIKXr?@J6Na`c7flumRb\Gu
%QB"ZDBK8Uk)HaRhi4B6;*#)[+qif*\W_1cZocW<Aj/F?L<AcE9ICIRbd-`BV/>%V;)%[k[/;q&ihA1Bo<q0VF7t\b6=gXA,9D1LP
%^6`<+&28ZhfE*<J:*iu3DD#<o+.[uik@,3`[)'N<>]qPm%2bqLM3;"g#=\)DgQ(jB;#.3A!)0*Q1]UH//[(FH6cqu[IE5"!Q<WJh
%JcLDjVT>W<)04a8Kmjooi5]2Sq:/jNqso7:]>+<jO5Km8^]"+<roKJRrTZWFk'+T=5CWX%s75Qd^]3l:^]2Q.qsE"mr9`D$._kqc
%pV2+Sh=#jjp]'`,^]3]Q^]/f`m_=D0<G(c.rT`;=YQ)e4rrK`lBp/~>
%AI9_PrivateDataEnd

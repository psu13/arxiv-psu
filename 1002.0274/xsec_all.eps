%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: xsec_all.pdf
%%Creator: Adobe Acrobat 8.0
%%For: maxim
%%CreationDate: 1/28/10, 2:01:37 PM
%%BoundingBox: -1 0 467 532
%%HiResBoundingBox: 0 0 466.3254 531.5459
%%CropBox: 0 0 466.3254 531.5459
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	1 index dup/ID get exch/Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.30 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.30 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.30 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get ne dup					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}				if				end		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} (% &end XMP packet& %) ReadBypdfmark_5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:08:23">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xap:CreateDate="2010-01-06T21:27:32Z"
   xap:ModifyDate="2010-01-06T21:27:32Z"
   pdf:Producer="Mac OS X 10.5.8 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedA 20 dict
dup /CreationDate (20000214120000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic Gray Profile) put
dup /ColorSpace (GRAY) put
dup /Copyright (Copyright 1998 - 2003 Apple Computer Inc., all rights reserved.) put
dup /ProfileID <6BB3906639AB3F5AF1033710E8D3D5ED> put
dup /MatrixA [1 1 1] put
dup /DecodeLMN [
{{0 0.00006 0.00012 0.00018 0.00027 0.0004 0.00056 0.00073 0.00093 0.00116
0.0014 0.00166 0.00195 0.00224 0.00258 0.00291 0.00327 0.00365 0.00404 0.00446
0.00488 0.00534 0.0058 0.00629 0.00679 0.00731 0.00784 0.00839 0.00896 0.00955
0.01015 0.01077 0.0114 0.01205 0.01271 0.0134 0.0141 0.0148 0.01553 0.01628
0.01704 0.01781 0.0186 0.01941 0.02023 0.02106 0.02191 0.02278 0.02365 0.02455
0.02547 0.02638 0.02733 0.02827 0.02925 0.03023 0.03122 0.03224 0.03327 0.0343
0.03536 0.03642 0.03751 0.03861 0.03972 0.04083 0.04198 0.04314 0.0443 0.04547
0.04668 0.04788 0.0491 0.05034 0.05159 0.05284 0.05412 0.05541 0.05672 0.05803
0.05936 0.0607 0.06206 0.06343 0.06481 0.06621 0.06761 0.06903 0.07047 0.07192
0.07338 0.07486 0.07634 0.07785 0.07936 0.08089 0.08243 0.08399 0.08554 0.08713
0.08872 0.09032 0.09194 0.09357 0.0952 0.09686 0.09853 0.10021 0.1019 0.10361
0.10533 0.10706 0.1088 0.11055 0.11232 0.11411 0.11589 0.11771 0.11952 0.12136
0.12319 0.12505 0.12691 0.12879 0.13068 0.13259 0.13451 0.13643 0.13837 0.14032
0.14229 0.14427 0.14626 0.14826 0.15027 0.1523 0.15433 0.15639 0.15845 0.16053
0.1626 0.16471 0.16681 0.16893 0.17107 0.17322 0.17537 0.17754 0.17972 0.18192
0.18412 0.18633 0.18856 0.1908 0.19306 0.19532 0.19759 0.19988 0.20218 0.20449
0.20681 0.20914 0.21149 0.21384 0.21622 0.21859 0.22098 0.22339 0.2258 0.22823
0.23067 0.23311 0.23557 0.23804 0.24053 0.24303 0.24553 0.24805 0.25058 0.25312
0.25566 0.25823 0.26081 0.2634 0.266 0.2686 0.27123 0.27385 0.27649 0.27915
0.28182 0.28449 0.28718 0.28988 0.29259 0.29531 0.29804 0.30079 0.30355 0.30631
0.30909 0.31188 0.31467 0.31749 0.3203 0.32314 0.32599 0.32885 0.33172 0.33458
0.33747 0.34037 0.34328 0.34621 0.34914 0.35209 0.35503 0.35801 0.36098 0.36396
0.36696 0.36997 0.37299 0.37603 0.37906 0.38212 0.38518 0.38825 0.39135 0.39445
0.39754 0.40066 0.4038 0.40693 0.41009 0.41325 0.41642 0.41959 0.4228 0.426
0.42921 0.43244 0.43568 0.43893 0.44218 0.44544 0.44872 0.45202 0.45531 0.45862
0.46195 0.46528 0.46863 0.47198 0.47535 0.47872 0.48211}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00006 0.00012 0.00018 0.00027 0.00041 0.00058 0.00076 0.00098 0.00121
0.00145 0.00172 0.00201 0.00233 0.00267 0.00302 0.00339 0.00378 0.0042 0.00462
0.00507 0.00554 0.00603 0.00652 0.00705 0.00758 0.00813 0.00871 0.00929 0.0099
0.01053 0.01117 0.01183 0.0125 0.01318 0.01389 0.01462 0.01535 0.01611 0.01688
0.01767 0.01848 0.01929 0.02013 0.02098 0.02185 0.02272 0.02362 0.02454 0.02547
0.02641 0.02736 0.02834 0.02933 0.03033 0.03136 0.03238 0.03343 0.0345 0.03558
0.03667 0.03778 0.0389 0.04004 0.04118 0.04236 0.04353 0.04474 0.04595 0.04717
0.0484 0.04965 0.05092 0.0522 0.0535 0.05481 0.05614 0.05747 0.05882 0.06018
0.06155 0.06296 0.06436 0.06578 0.06722 0.06867 0.07013 0.0716 0.07309 0.07459
0.07611 0.07764 0.07918 0.08074 0.08231 0.08389 0.08548 0.0871 0.08872 0.09036
0.09201 0.09367 0.09535 0.09703 0.09874 0.10047 0.10219 0.10393 0.10568 0.10745
0.10924 0.11102 0.11284 0.11466 0.11649 0.11833 0.1202 0.12207 0.12396 0.12586
0.12776 0.12969 0.13162 0.13358 0.13553 0.13751 0.1395 0.1415 0.14351 0.14554
0.14757 0.14963 0.15169 0.15376 0.15586 0.15795 0.16007 0.16219 0.16432 0.16648
0.16864 0.17083 0.17301 0.1752 0.17742 0.17964 0.18189 0.18413 0.18639 0.18866
0.19095 0.19326 0.19556 0.19788 0.20021 0.20256 0.20493 0.20729 0.20969 0.21208
0.21448 0.21691 0.21933 0.22179 0.22425 0.2267 0.22919 0.23168 0.23418 0.2367
0.23923 0.24176 0.24433 0.24689 0.24945 0.25205 0.25464 0.25725 0.25988 0.26252
0.26517 0.26783 0.2705 0.27318 0.27587 0.27857 0.2813 0.28402 0.28676 0.28951
0.29229 0.29506 0.29784 0.30065 0.30346 0.30628 0.30912 0.31196 0.31481 0.31768
0.32056 0.32346 0.32636 0.32927 0.3322 0.33513 0.33809 0.34105 0.34403 0.34701
0.35 0.35302 0.35602 0.35906 0.3621 0.36515 0.36822 0.3713 0.37438 0.37748
0.38059 0.3837 0.38685 0.38999 0.39313 0.39631 0.39948 0.40267 0.40587 0.40908
0.4123 0.41553 0.41878 0.42203 0.42531 0.42858 0.43188 0.43517 0.43848 0.44181
0.44515 0.44849 0.45185 0.45522 0.45859 0.46198 0.46538 0.4688 0.47222 0.47565
0.4791 0.48257 0.48603 0.48951 0.49299 0.4965 0.50001}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00005 0.00011 0.00015 0.00023 0.00035 0.00047 0.00063 0.00081 0.00099
0.00121 0.00142 0.00166 0.00192 0.0022 0.00249 0.00279 0.00313 0.00346 0.00381
0.00418 0.00456 0.00496 0.00539 0.00581 0.00626 0.00671 0.00719 0.00766 0.00816
0.00868 0.00922 0.00975 0.01031 0.01088 0.01146 0.01205 0.01266 0.01329 0.01393
0.01457 0.01524 0.01591 0.0166 0.0173 0.01802 0.01875 0.01949 0.02023 0.02101
0.02179 0.02257 0.02338 0.0242 0.02502 0.02586 0.02672 0.02759 0.02846 0.02934
0.03024 0.03116 0.03209 0.03304 0.03398 0.03494 0.03592 0.0369 0.0379 0.03891
0.03993 0.04096 0.04201 0.04306 0.04413 0.04521 0.0463 0.04741 0.04852 0.04965
0.05078 0.05193 0.05309 0.05426 0.05545 0.05664 0.05785 0.05907 0.06029 0.06152
0.06278 0.06404 0.06531 0.06661 0.06789 0.0692 0.07051 0.07184 0.07318 0.07454
0.0759 0.07727 0.07866 0.08005 0.08145 0.08287 0.08429 0.08572 0.08717 0.08864
0.0901 0.09158 0.09308 0.09458 0.0961 0.09761 0.09915 0.10069 0.10225 0.10382
0.10539 0.10698 0.10858 0.11019 0.1118 0.11344 0.11507 0.11673 0.11838 0.12006
0.12174 0.12343 0.12512 0.12683 0.12856 0.1303 0.13204 0.13379 0.13556 0.13733
0.13912 0.1409 0.14272 0.14453 0.14635 0.1482 0.15004 0.15189 0.15375 0.15563
0.15752 0.15941 0.16132 0.16324 0.16516 0.1671 0.16904 0.17101 0.17298 0.17494
0.17693 0.17893 0.18094 0.18296 0.18497 0.18701 0.18906 0.19112 0.19318 0.19525
0.19734 0.19944 0.20154 0.20366 0.20578 0.20792 0.21006 0.21221 0.21437 0.21656
0.21874 0.22094 0.22313 0.22535 0.22757 0.2298 0.23204 0.23429 0.23656 0.23882
0.24111 0.2434 0.2457 0.248 0.25032 0.25264 0.25499 0.25733 0.25969 0.26206
0.26444 0.26682 0.26921 0.27163 0.27404 0.27646 0.27889 0.28133 0.28379 0.28624
0.28872 0.2912 0.29369 0.29619 0.2987 0.30121 0.30375 0.30628 0.30883 0.31139
0.31395 0.31652 0.31911 0.32171 0.3243 0.32691 0.32953 0.33216 0.3348 0.33745
0.34011 0.34278 0.34546 0.34815 0.35084 0.35354 0.35625 0.35898 0.36172 0.36445
0.36721 0.36997 0.37273 0.37551 0.3783 0.38109 0.3839 0.38671 0.38953 0.39237
0.39521 0.39806 0.40093 0.4038 0.40667 0.40957 0.41247}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
<< /1 
[/CIEBasedABC 20 dict
dup /CreationDate (20020513120000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic RGB Profile) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright 2002 - 2003 Apple Computer Inc., all rights reserved.) put
dup /ProfileID <3ADD1135035813C9E25EBC56DE8F9627> put
dup /DecodeABC [
{{0 0.00012 0.00024 0.00037 0.00056 0.00084 0.00116 0.00153 0.00195 0.00241
0.00291 0.00346 0.00404 0.00467 0.00534 0.00604 0.00679 0.00757 0.00839 0.00925
0.01014 0.01107 0.01204 0.01305 0.01408 0.01516 0.01627 0.01741 0.01859 0.0198
0.02105 0.02233 0.02364 0.02499 0.02637 0.02779 0.02923 0.03071 0.03222 0.03376
0.03534 0.03695 0.03858 0.04025 0.04195 0.04369 0.04545 0.04725 0.04907 0.05093
0.05282 0.05473 0.05668 0.05866 0.06067 0.0627 0.06477 0.06687 0.069 0.07115
0.07334 0.07556 0.0778 0.08008 0.08238 0.08471 0.08707 0.08946 0.09188 0.09433
0.09681 0.09931 0.10184 0.10441 0.107 0.10961 0.11226 0.11493 0.11763 0.12036
0.12312 0.12591 0.12872 0.13156 0.13443 0.13732 0.14025 0.1432 0.14618 0.14918
0.15221 0.15527 0.15836 0.16147 0.16461 0.16778 0.17097 0.17419 0.17744 0.18071
0.18401 0.18734 0.19069 0.19407 0.19748 0.20091 0.20437 0.20786 0.21137 0.2149
0.21847 0.22206 0.22567 0.22931 0.23298 0.23668 0.24039 0.24414 0.24791 0.25171
0.25553 0.25937 0.26325 0.26715 0.27107 0.27502 0.27899 0.28299 0.28702 0.29107
0.29515 0.29925 0.30337 0.30752 0.3117 0.3159 0.32013 0.32438 0.32866 0.33296
0.33728 0.34163 0.34601 0.35041 0.35483 0.35928 0.36376 0.36826 0.37278 0.37733
0.3819 0.3865 0.39112 0.39577 0.40044 0.40513 0.40985 0.41459 0.41936 0.42415
0.42897 0.43381 0.43867 0.44356 0.44847 0.45341 0.45837 0.46335 0.46836 0.47339
0.47845 0.48353 0.48864 0.49376 0.49891 0.50409 0.50929 0.51451 0.51976 0.52503
0.53032 0.53564 0.54098 0.54634 0.55173 0.55714 0.56258 0.56804 0.57352 0.57902
0.58455 0.5901 0.59568 0.60128 0.6069 0.61255 0.61821 0.62391 0.62962 0.63536
0.64112 0.6469 0.65271 0.65854 0.66439 0.67027 0.67617 0.68209 0.68804 0.69401
0.7 0.70601 0.71205 0.71811 0.72419 0.73029 0.73642 0.74257 0.74875 0.75494
0.76116 0.7674 0.77367 0.77996 0.78627 0.7926 0.79895 0.80533 0.81173 0.81815
0.8246 0.83106 0.83755 0.84407 0.8506 0.85716 0.86374 0.87034 0.87696 0.88361
0.89028 0.89697 0.90368 0.91042 0.91718 0.92396 0.93076 0.93758 0.94443 0.9513
0.95819 0.9651 0.97204 0.979 0.98598 0.99298 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2271381704 0.1212687428 0.0074094887
0.176661326 0.3370753975 0.04522001
0.0783093004 0.0416634892 0.3598294927
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -531.546 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 531.546 li
466.325 531.546 li
466.325 0 li
cp
clp
[1 0 0 1 -152.529 0 ]ct
0 566.611 mo
800 566.611 li
800 -33.3887 li
0 -33.3887 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 colr
f
0 566.611 mo
800 566.611 li
800 -33.3887 li
0 -33.3887 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
gsave
-7.27488 -68.5569 mo
-7.27488 -102.277 li
885.902 -102.277 li
885.902 -34.8374 li
-7.27488 -34.8374 li
cp
clp
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
868.038 -34.838 mo
876.969 -34.838 li
876.969 -102.277 li
868.038 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 0.994141 colr
f
859.107 -34.838 mo
868.039 -34.838 li
868.039 -102.277 li
859.107 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 0.990234 colr
f
850.174 -34.838 mo
859.106 -34.838 li
859.106 -102.277 li
850.174 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0.998047 0.984375 colr
f
841.243 -34.838 mo
850.175 -34.838 li
850.175 -102.277 li
841.243 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0.998047 0.978516 colr
f
832.311 -34.838 mo
841.242 -34.838 li
841.242 -102.277 li
832.311 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.998047 0.974609 colr
f
823.38 -34.838 mo
832.311 -34.838 li
832.311 -102.277 li
823.38 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.998047 0.96875 colr
f
814.447 -34.838 mo
823.379 -34.838 li
823.379 -102.277 li
814.447 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.998047 0.962891 colr
f
805.515 -34.838 mo
814.446 -34.838 li
814.446 -102.277 li
805.515 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.996094 0.957031 colr
f
796.583 -34.838 mo
805.515 -34.838 li
805.515 -102.277 li
796.583 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.996094 0.953125 colr
f
787.651 -34.838 mo
796.583 -34.838 li
796.583 -102.277 li
787.651 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.996094 0.947266 colr
f
778.72 -34.838 mo
787.651 -34.838 li
787.651 -102.277 li
778.72 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.996094 0.941406 colr
f
769.787 -34.838 mo
778.719 -34.838 li
778.719 -102.277 li
769.787 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.996094 0.935547 colr
f
760.856 -34.838 mo
769.788 -34.838 li
769.788 -102.277 li
760.856 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.994141 0.929688 colr
f
751.924 -34.838 mo
760.855 -34.838 li
760.855 -102.277 li
751.924 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.998047 0.994141 0.925781 colr
f
742.991 -34.838 mo
751.923 -34.838 li
751.923 -102.277 li
742.991 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.994141 0.919922 colr
f
734.06 -34.838 mo
742.991 -34.838 li
742.991 -102.277 li
734.06 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.994141 0.914062 colr
f
725.128 -34.838 mo
734.059 -34.838 li
734.059 -102.277 li
725.128 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.994141 0.908203 colr
f
716.196 -34.838 mo
725.128 -34.838 li
725.128 -102.277 li
716.196 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.992188 0.902344 colr
f
707.264 -34.838 mo
716.195 -34.838 li
716.195 -102.277 li
707.264 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.992188 0.896484 colr
f
698.331 -34.838 mo
707.263 -34.838 li
707.263 -102.277 li
698.331 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.992188 0.890625 colr
f
689.4 -34.838 mo
698.332 -34.838 li
698.332 -102.277 li
689.4 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.992188 0.884766 colr
f
680.468 -34.838 mo
689.399 -34.838 li
689.399 -102.277 li
680.468 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.990234 0.878906 colr
f
671.536 -34.838 mo
680.468 -34.838 li
680.468 -102.277 li
671.536 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.990234 0.873047 colr
f
662.604 -34.838 mo
671.536 -34.838 li
671.536 -102.277 li
662.604 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.996094 0.990234 0.867188 colr
f
653.673 -34.838 mo
662.604 -34.838 li
662.604 -102.277 li
653.673 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.990234 0.861328 colr
f
644.74 -34.838 mo
653.672 -34.838 li
653.672 -102.277 li
644.74 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.990234 0.855469 colr
f
635.808 -34.838 mo
644.739 -34.838 li
644.739 -102.277 li
635.808 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.988281 0.849609 colr
f
626.877 -34.838 mo
635.808 -34.838 li
635.808 -102.277 li
626.877 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.988281 0.84375 colr
f
617.944 -34.838 mo
626.876 -34.838 li
626.876 -102.277 li
617.944 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.988281 0.837891 colr
f
609.013 -34.838 mo
617.944 -34.838 li
617.944 -102.277 li
609.013 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.988281 0.832031 colr
f
600.081 -34.838 mo
609.012 -34.838 li
609.012 -102.277 li
600.081 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.988281 0.826172 colr
f
591.149 -34.838 mo
600.081 -34.838 li
600.081 -102.277 li
591.149 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.986328 0.820312 colr
f
582.217 -34.838 mo
591.148 -34.838 li
591.148 -102.277 li
582.217 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.986328 0.814453 colr
f
573.284 -34.838 mo
582.216 -34.838 li
582.216 -102.277 li
573.284 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.994141 0.986328 0.806641 colr
f
564.353 -34.838 mo
573.285 -34.838 li
573.285 -102.277 li
564.353 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.986328 0.800781 colr
f
555.421 -34.838 mo
564.352 -34.838 li
564.352 -102.277 li
555.421 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.986328 0.794922 colr
f
546.489 -34.838 mo
555.421 -34.838 li
555.421 -102.277 li
546.489 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.984375 0.789062 colr
f
537.557 -34.838 mo
546.488 -34.838 li
546.488 -102.277 li
537.557 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.984375 0.78125 colr
f
528.625 -34.838 mo
537.556 -34.838 li
537.556 -102.277 li
528.625 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.984375 0.775391 colr
f
519.693 -34.838 mo
528.625 -34.838 li
528.625 -102.277 li
519.693 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.984375 0.769531 colr
f
510.761 -34.838 mo
519.692 -34.838 li
519.692 -102.277 li
510.761 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.984375 0.761719 colr
f
501.83 -34.838 mo
510.761 -34.838 li
510.761 -102.277 li
501.83 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.982422 0.755859 colr
f
492.897 -34.838 mo
501.829 -34.838 li
501.829 -102.277 li
492.897 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.982422 0.748047 colr
f
483.966 -34.838 mo
492.897 -34.838 li
492.897 -102.277 li
483.966 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.992188 0.982422 0.742188 colr
f
475.034 -34.838 mo
483.965 -34.838 li
483.965 -102.277 li
475.034 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.982422 0.736328 colr
f
466.101 -34.838 mo
475.033 -34.838 li
475.033 -102.277 li
466.101 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.982422 0.728516 colr
f
457.17 -34.838 mo
466.101 -34.838 li
466.101 -102.277 li
457.17 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.980469 0.722656 colr
f
448.237 -34.838 mo
457.169 -34.838 li
457.169 -102.277 li
448.237 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.980469 0.714844 colr
f
439.306 -34.838 mo
448.238 -34.838 li
448.238 -102.277 li
439.306 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.980469 0.707031 colr
f
430.374 -34.838 mo
439.305 -34.838 li
439.305 -102.277 li
430.374 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.980469 0.701172 colr
f
421.443 -34.838 mo
430.374 -34.838 li
430.374 -102.277 li
421.443 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.980469 0.693359 colr
f
412.51 -34.838 mo
421.441 -34.838 li
421.441 -102.277 li
412.51 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.978516 0.685547 colr
f
403.578 -34.838 mo
412.509 -34.838 li
412.509 -102.277 li
403.578 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.990234 0.978516 0.679688 colr
f
394.646 -34.838 mo
403.578 -34.838 li
403.578 -102.277 li
394.646 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.978516 0.671875 colr
f
385.714 -34.838 mo
394.645 -34.838 li
394.645 -102.277 li
385.714 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.978516 0.664062 colr
f
376.783 -34.838 mo
385.714 -34.838 li
385.714 -102.277 li
376.783 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.978516 0.65625 colr
f
367.85 -34.838 mo
376.782 -34.838 li
376.782 -102.277 li
367.85 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.976562 0.648438 colr
f
358.919 -34.838 mo
367.85 -34.838 li
367.85 -102.277 li
358.919 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.976562 0.640625 colr
f
349.987 -34.838 mo
358.918 -34.838 li
358.918 -102.277 li
349.987 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.976562 0.632812 colr
f
341.054 -34.838 mo
349.986 -34.838 li
349.986 -102.277 li
341.054 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.976562 0.625 colr
f
332.123 -34.838 mo
341.054 -34.838 li
341.054 -102.277 li
332.123 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.976562 0.617188 colr
f
323.19 -34.838 mo
332.122 -34.838 li
332.122 -102.277 li
323.19 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.974609 0.609375 colr
f
314.259 -34.838 mo
323.191 -34.838 li
323.191 -102.277 li
314.259 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.988281 0.974609 0.601562 colr
f
305.327 -34.838 mo
314.258 -34.838 li
314.258 -102.277 li
305.327 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.974609 0.59375 colr
f
296.394 -34.838 mo
305.326 -34.838 li
305.326 -102.277 li
296.394 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.974609 0.583984 colr
f
287.463 -34.838 mo
296.395 -34.838 li
296.395 -102.277 li
287.463 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.972656 0.576172 colr
f
278.531 -34.838 mo
287.462 -34.838 li
287.462 -102.277 li
278.531 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.972656 0.568359 colr
f
269.599 -34.838 mo
278.531 -34.838 li
278.531 -102.277 li
269.599 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.972656 0.558594 colr
f
260.667 -34.838 mo
269.598 -34.838 li
269.598 -102.277 li
260.667 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.972656 0.550781 colr
f
251.736 -34.838 mo
260.667 -34.838 li
260.667 -102.277 li
251.736 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.972656 0.541016 colr
f
242.803 -34.838 mo
251.735 -34.838 li
251.735 -102.277 li
242.803 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.970703 0.53125 colr
f
233.871 -34.838 mo
242.802 -34.838 li
242.802 -102.277 li
233.871 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.970703 0.523438 colr
f
224.939 -34.838 mo
233.871 -34.838 li
233.871 -102.277 li
224.939 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.986328 0.970703 0.513672 colr
f
216.007 -34.838 mo
224.939 -34.838 li
224.939 -102.277 li
216.007 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.970703 0.503906 colr
f
207.076 -34.838 mo
216.007 -34.838 li
216.007 -102.277 li
207.076 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.970703 0.493652 colr
f
198.143 -34.838 mo
207.075 -34.838 li
207.075 -102.277 li
198.143 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.96875 0.483643 colr
f
189.212 -34.838 mo
198.144 -34.838 li
198.144 -102.277 li
189.212 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.96875 0.473633 colr
f
180.28 -34.838 mo
189.211 -34.838 li
189.211 -102.277 li
180.28 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.96875 0.463135 colr
f
171.347 -34.838 mo
180.279 -34.838 li
180.279 -102.277 li
171.347 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.96875 0.452393 colr
f
162.416 -34.838 mo
171.347 -34.838 li
171.347 -102.277 li
162.416 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.96875 0.44165 colr
f
153.484 -34.838 mo
162.415 -34.838 li
162.415 -102.277 li
153.484 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.966797 0.43042 colr
f
144.552 -34.838 mo
153.484 -34.838 li
153.484 -102.277 li
144.552 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.966797 0.418945 colr
f
135.62 -34.838 mo
144.551 -34.838 li
144.551 -102.277 li
135.62 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.984375 0.966797 0.407227 colr
f
126.688 -34.838 mo
135.619 -34.838 li
135.619 -102.277 li
126.688 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.966797 0.39502 colr
f
117.756 -34.838 mo
126.688 -34.838 li
126.688 -102.277 li
117.756 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.966797 0.382568 colr
f
108.824 -34.838 mo
117.755 -34.838 li
117.755 -102.277 li
108.824 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.964844 0.369629 colr
f
99.8925 -34.838 mo
108.824 -34.838 li
108.824 -102.277 li
99.8925 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.964844 0.356201 colr
f
90.9601 -34.838 mo
99.8916 -34.838 li
99.8916 -102.277 li
90.9601 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.964844 0.342285 colr
f
82.0288 -34.838 mo
90.9603 -34.838 li
90.9603 -102.277 li
82.0288 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.964844 0.327881 colr
f
73.0964 -34.838 mo
82.0279 -34.838 li
82.0279 -102.277 li
73.0964 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.964844 0.312744 colr
f
64.164 -34.838 mo
73.0954 -34.838 li
73.0954 -102.277 li
64.164 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.962891 0.297119 colr
f
55.2327 -34.838 mo
64.1642 -34.838 li
64.1642 -102.277 li
55.2327 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.982422 0.962891 0.280273 colr
f
46.3003 -34.838 mo
55.2317 -34.838 li
55.2317 -102.277 li
46.3003 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.962891 0.262451 colr
f
37.369 -34.838 mo
46.3005 -34.838 li
46.3005 -102.277 li
37.369 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.962891 0.243408 colr
f
28.4366 -34.838 mo
37.368 -34.838 li
37.368 -102.277 li
28.4366 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.962891 0.2229 colr
f
19.5053 -34.838 mo
28.4368 -34.838 li
28.4368 -102.277 li
19.5053 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.960938 0.199951 colr
f
10.5729 -34.838 mo
19.5044 -34.838 li
19.5044 -102.277 li
10.5729 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.960938 0.174316 colr
f
1.64091 -34.838 mo
10.5724 -34.838 li
10.5724 -102.277 li
1.64091 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.960938 0.144287 colr
f
-7.29105 -34.838 mo
1.64042 -34.838 li
1.64042 -102.277 li
-7.29105 -102.277 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.980469 0.960938 0.105713 colr
f
grestore
grestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
/2 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: ZCXPMX+Times-Bold Initial
ct_T42Dict begin
0.016 -0.207 0.754 0.688
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZCXPMX+Times-Bold
Type42DictBegin
[<00010000000b000b000b000b63767420ae7599ae000000bc0000051c6670
676d81f39ab9000005d8000002c4676c7966d612561f0000135400000c7c
68656164f518aa640000089c00000036686865610c9e049f000008d40000
0024686d747830e501d1000008f8000000306c6f6361151c11ae00000928
0000001a6d617870083c02af00000944000000206e616d655a94936b0000
09640000002370726570fef218eb00000988000009c96764697200000000
00000000000000000568001c0568001f0568001803af001a0000ffd70000
ffe30000ffe3fe5afffd056d0021fecbffda03310000012d0000012d0000
00000034006a0084003100d0000300cc000500a500b200420145003400c4
001301210031005e005f013c00450158000d001a006300f00157006600ad
00ef008b020a006d00400145002d0033012d001c005500c700210069fffe
00490076008a008e00a8002d0051008effd0ffe000000031006a006f0086
008f011e003100ad00b900dd016cffc7001f0042006e00ab00d7013effa8
00000018001a0043042b0034003b0044004a004d0055005a005f0064008e
00a200a300d10179ff86ffc7ffd70007002100300035006300a600b600cc
00fb013301790342039a00070042004200d200d5010e0142ff53ffb3ffc9
001f0028003900550059008c008c0090009800a400b700ed00fe012f0151
01adff6bff72ffb70025005a0068008100880097009d00c300f9012b012d
0232026f02af0000001c002f002f004200420056008e009c00a200c400da
010a010c0156016e017901b401f7025903b6ff70ff9e0002002500320039
00ab00bd00c200c900d100e9010a010a011c0142016d01c702ad03130393
039e057605aeff23ffe8001f0043005200730086008900af00c900d800dd
00e300f700f8010e0118011a011f013001340135014b015a015a01a601af
0203028502a602ad02ed0308039d03c5040cfee3ffdefff600210026002b
00310035004300440045004c0059005a005f00720072009700a600bd00c1
00c700c900cc00d500dc00dc00e500ee010401130116010e011b011f0121
0124012901470147014b01560158017201a201a201df01e9020002000202
02b4034903910400048505340579ff22ff34ff37ff37ffceffe800030007
0017001c0035003d003e004d0055005c00680068006b0072008300850087
0088008e009f00a300b400c500c900ef00f100f200f400fb00fc01030105
0107010e0110011c01230128012f013001360136013701400149014b014b
014c0151015501570158015a015f016401800191019201b701b701be01c2
01c701e201e901f201fb020002000205020b0232024902510253027d0297
029702b202d3032703f2041e042b044004da04e4051a0537055a059505ab
060907b5fdecfeadfeb4ff04ff4cff8eff9effd3ffea000a00120033004e
005e00620068006f007200740080008f0093009300970097009f00a600a7
00ad00b600b700c000c200c700c700cb00cb00cc00db00dc00df00e300e4
00e400eb00ed00ed00f400f80105010a01160116011601160118011a011a
013001340139013e0144014b0153015301580166016d01700177017d017d
018e019a019f01a201a401a801b401b401c201c201c201c201c201c201c2
01cf01e001e001e601e801e901f401fb01fb0214022f022f024c02510253
025b027f028002800285029602ad02ad02c502c502f7031503320355035b
0379039803a803a903cb03ea04000466048a049e04be04d10500051f0548
056305790587059b05af05cc05d305e9062406ad078f079307e901280156
0123013900000000000000000000000000000013004c00a000bc00680276
02b40145001e0004006a00af017400fa020801530177011300c900790074
002f00b9005d017e001002300294012c020b02a3054b0397008e0095002d
003700d200dd004200490091003200d7004601c4025600e8001dffe30013
ffed0018ffea057405740002054b001d054b0018039700130000ffe30000
ffed0000ffeafe420000054b001dfebdffd6031e00000082003040272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807
060504030201002c4523466020b02660b004262348482d2c452346236120
b02661b004262348482d2c45234660b0206120b04660b004262348482d2c
4523462361b0206020b02661b02061b004262348482d2c45234660b04061
20b06660b004262348482d2c4523462361b0406020b02661b04061b00426
2348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b0
8d44235920b0ed51582320b04d44235920b09051582320b00d4423592121
2d2c20204518684420b001602045b04676688a4560442d2c01b940000000
0a2d2c00b9000040000b2d2c2045b00043617d6818b0004360442d2c45b0
1a234445b01923442d2c2045b00325456164b050515845441b2121592d2c
b00143632362b0002342b00f2b2d2c2045b0004360442d2c20b003255258
2359212d2c69b04061b0008b0c6423648bb8400062600c642364615c58b0
036159b002602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723
442d2c45b0112bb017458cb0172344b0177ae5182d2cb002254661658a46
b040608b482d2cb0022546608a46b040618c482d2c4b53205c58b0028559
58b00185592d2c20b0032545b019234445b01a23444565234520b0032560
6a20b009234223688a6a606120b0005258b21a401a4523614459b0005058
b219401945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21
187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b
525845441b2121592d2c0120b003252349b04060b0206320b000525823b0
02253823b002256538008a63381b212121212159012d2c4569b00943608a
103a2d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d00010000000000005789bbc25f0f3cf5
0101080000000000c76ab0c400000000c76ab0c40021fe57060e05870001
00090001000000000000000100000600fe0000000800fea5fe9207f60001
0000000000000000000000000000000c063900250556003404730023038d
002a038d002e0400002f047300210239002104730025038d002502aa0021
047300210000003400ae012801b00228032003be042004c8054005a4063e
000000010000000c005f0004007300060002001000100027000007e801ca
000600010000000100120001000000000006001100004c555a484c542b54
696d65732d426f6c6400b5900690070215b8028bb2471f14b8028ab2471f
13b80289b2471f12b80288b2471f11b80287b2471f10b80286b2471f0fb8
0285b2471f0eb80284b2471f0db80283b2471f0cb80282b2471f0bb80281
b2471f0ab80280b2471f09b8027fb2471f08b8027eb2471f07b8027db247
1f06b8027cb2471f05b8027bb2471f04b8027ab2471f03b80279b2471f02
b80278b2471f01b80279b2471f00b802784015471fdf4901cf4901202a01
2037019059019024018f412f0260000100100260001002620002009f0263
000100ff0264000100ef0264000100d00260000100cf0265000100bf0261
000100af02610001009f02630001008f02630001006f02660001004f0263
004f02670002001f02650001001f0267b2010840410b023401cc0071000d
01c40071000d01ab0071000d01074014710dcc710dba710da6710d80710d
3b710d36710d410a01d10037000d01b10037000d01650037000d0126400b
370da8370d76370d23370d410a01e70059000d014a0059000d011c005900
0d01174014590de4590dc1590d9f590d60590d56590d24590d4116018a00
28000d01830028000d01820028000d017a0028000d01680028000d015200
28000d012a0028000d01114011280dd8280d9e280d9b280d62280d38280d
bb010f00b4000d010a400eb40de3b40d27b40d1eb40db41b0dba01ca000f
010eb20f0009b901ca010eb40d1e1b6e1fb801f9b25c181fb801f4b25c18
1fb801f2b25c1d1fb801efb25c251fb801eeb25c261f411901e6005c0801
001f01e5005c0156001f01e200a00401001f01dd016b0201001f01dc016b
0401001f01da002a0125001f01d8b22abb1fb801d7b22abb1fb801d6b22a
bb1fb801d4b22a5a1fb801d0b22a281fb801cdb22a221fb801cbb22a221f
b801c8b22a1e1fb801c5b249201fb801c1b249261fb801c0b2492e1fb801
bfb2492f1fb801bbb249621fb801b8b249e41fb801b7b249e41fb801b3b2
2d6c1fb801b2b22d811fbc01b0002d02ab001f0180b25c191fb8017fb25c
1c1fb8017db25c361fb8017cb25c381f412d017700a00125001f017400a0
0401001f017300a0019a001f017100a00156001f0170008e0125001f016f
008e0401001f016e016b0125001f016d016b0156001f016a016b0801001f
01690040019a001f0167002a019a001f0163b22a4a1fb8015eb22a2c1fb8
0159b249311fb80158b249521f410d015500490401001f0154004902ab00
1f01530049019a001f0150b22dab1fb8014fb22de41fbc014d002d02ab00
1f014cb22dcd1f4109014b002f0101001f01490025019a001f0148b2259e
1fb80131b25c261f4119012f005c0156001f012d00a0019a001f012b008e
019a001f012900400201001f0127002a0401001f0125002a0156001f0123
b22abb1fb80122b22a931fb80121b22a471fb80120b22a291fb8011db22a
1e1fb80118b249261fb80116b2494a1fb80113b22d6c1fbc0110002d0156
001f010b4014259e1ffa5c1f1ff95c241ff8a0e41ff7a0e41ff4b9016b02
01b21ff12ab8012540171ff02ae41fee2a321fed2a311fec2a0a1fe52d23
1fd78ebb0401001f00d301254020151fd32a111fd249121fcd25e41fc45c
1d1fc35c9e1fc02a621fbf2a5a1faf40b80401400f1fad2a341fac490c1f
ab496c1fa949b8040140131f9c49121f9a49931f9425e41f8d2a6c1f8a25
b8040140131f82401a1f81492f1f775c9e1f722d1c1f702db8019ab61f6f
2d351f6d2fb8019ab21f6b25b80125b61f6a25931f6825b80801b21f638e
b80201400b1f5b2a111f5a492c1f5549b80201400a1f07062a1f03022a1f
05b80273b2471f0bb80272b2471f07b80271b2471f09b80270b2471f03b8
026fb2471f04b8025eb2471f00b8025eb2471f06b8025fb2471f02b8025e
b3471f472fb80201b61f4349221f3d8eb802abb21f3c25b80401b21f3949
b80801b21f332db80201b21f30a0b8012540351f2c2d281f1f490a1f55b1
0757073a07350734072e07260721071d071c071408120810080e080c080a
080808060804080208000814b8ffe0402400000100140610000001000604
000001000402000001000200000001000002010802004a4118028a000802
88000802860008028400080282000802800008027e0008027c0008027a00
080278000802760008028affe0b300000100b9028a027cb41000000100b9
027c027ab300000100b9027a0286b300000100b902860278b300000100b9
02780276b300000100b80276b302010802b80276b14a00b801ff85b0018d
1816763f183f123e113946443e113946443e113946443e113946443e1139
4660443e11394660442b2b2b2b2b2b2b2b2b2b2b18763f183f123e113946
443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b
5358b0ff1d594bb02953205c58b9023602344544b90235023445445958b9
01720236455258b9023601724459594bb04c53205c58b900a002354544b9
005c023545445958b9032200a0455258b900a003224459594bb08953205c
58b18ea04544b1a0a045445958b90598008e455258b9008e05984459594b
b0ab53205c58b9002a02364544b90040023645445958b9060a002a455258
b9002a060a4459594bb802ab53205c58b9016b00404544b1404045445958
b9190f016b455258b9016b190f4459594bb01653205c58b125254544b149
2545445958b12b25455258b1252b4459594bb02753205c58b125254544b1
2d2145445958b16b25455258b1256b4459594bb8020153205c58b1252545
44b12f2545445958b12125455258b125214459592b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2bb38be089a4456523456023456560234560b08b766818b080622020b189
e04565234520b003266062636820b003266165b0e0236544b089234420b1
8ba44565234520b003266062636820b003266165b0a4236544b08b2344b1
00a4455458b1a4406544b28b408b4523614459b34ea24c91456523456023
456560234560b089766818b080622020b14ca24565234520b00326606263
6820b003266165b0a2236544b04c234420b14e914565234520b003266062
636820b003266165b091236544b04e2344b10091455458b191406544b24e
404e45236144594569534273737373737373737373737375747473737373
73732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7300000000>
[3197 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 1 <00010034000005090568001700a340325805690576149714048915b804c8
04da1504021717000e08110e07126800020e0b1b0d0c08b0190120195019
6019a0190419b80263401140031b21bf02012f025f026f02af020402b802
6c4015070cd108a00dd111bf12012f125f126f12af120412b8026cb44016
1b2117b9026200182ff63d1aed181afc5d5d3cedfded3cfc5d5d181a3ded
1a18f65d5d003f3cf93c3ffd3c1139391112392f3c3130015d005d132113
2326272627111416331521353236351106070607233604d1023b1d894d99
4f7dfd26784f965093133b0568fe63dd4e2b04fbca714a34344b70043604
2b50db00>ZCXPMX+Times-Bold AddT42Char 
1 348 2 <00020023ffe3042a0568000d002300844048550855148915b617c614c615
c817e514f51409211424182b1d66086614661577149714081023011f231e
233b231c1d0d1f0f1c09031f1323000954130703251e190b06408f160116
b802634009250e0d2a1e401f011fb80260b125242fccf45d3cfd3c10f65d
ed003f3ced3fed3f12391112393901111239392b015d3130015d005d2417
163332363534262322061519023637363332121514002322262707231134
26273501b312245469574d70424f30294b57add3fef3c8527e37a11d2e3f
8f2446decba1e86115fde604a1fded2f182bfef2c5fefeed40347404dd40
2d093200>ZCXPMX+Times-Bold AddT42Char 
1 592 3 <0002002affe1036a03c9002500260097405526152b2029240356115a205a
21562356246a206a21bc15ba20c514c920fa230c141c56215b236621a614
050c210126071a1b16080d10af0501050516101025250716491f0b262602
2205050a0241401a21ef1b011bb80263b62813406f220122b80262b12827
2fccf65ded10f65d1ac91af4dd393d2f181112392f003fed3fed1112392f
5d1239391239393f313000715d005d015d00161514062322272635343635
34272623220615141233323736371706070623220235340033230291bd4b
3a271d3702191a215f509881513922322664864750c5fa0109dd2e03c97e
63354e122054092314361414d187c0fefc241538238b341b011acbd6012d
0000>ZCXPMX+Times-Bold AddT42Char 
1 864 4 <0003002effe3036303c9001a002100220077403f161425012a1855005501
5603590d591858196819bb120b121312130e1b2147090a0a0e1e1e250207
0e49170b220722221a091bed09220f1301af13ef130213b80263b5242122
0a401ab80262b124232fccf6fde410f65d71f4ed1112392f003f3fed3fed
1112392f3cfd3c1239390110c93130005d1a013332161716171615211617
1633323736371706070623222411252e0123220607132efbb165b230240e
07fdf607213c974840273a2f5f7d516997fef8023002344e503b048d02c2
01056a5e4771351c7b5aa92d1b401d9c3d27ee01056cb590a69f01870000
>ZCXPMX+Times-Bold AddT42Char 
1 1104 5 <0004002ffe5703d303c9000c001b0054005500f940a60f1b0e1c0c1d0b2b
0637004d1f1b1e1c1c1d1b2b1637104d85340d46285628574a6528762886
2b862c8c3789389428a62ba334aa37aa38b434b937f807f2341233203018
0f49481f1e044617433f3e03452627033a9f17013f17012f17010f170117
ed46224503253a30093a502d09252d070f25500f5507555536271f022a06
2013901302134c464c365706c0603601365741ad4723222a1b8154410cc0
a02ab02a022a57562fc4d65dedf4fd10f476fd184e1018d45d184ded1112
39762f18dd5d1112173911392f003f3fed3ffd11123912392fed7dde18e4
ed5d5d5d5d111239391217391112173912397c2f3d1acd3130005d015d00
171633323635342623220615021633323736353426232106070615263637
3526272635343637352e01353436333216172115231e0115140706232226
23060706151416171e01331716171615140706232227263501015a141e55
4d3a3d4a5136778780724a8b4f68feb0200e19b4495a3c1b3097486880e0
bf487821010ea6282bb7608f1f13131e2122221e0f621b85714d93dc74b0
9068ac01d00207395a87828a7e8781fc654812225b35351a1221251e5d0e
0e17182b48567a180e2a9c6f8cb61c0f6d27683dc0472602051b1c271f22
04020302021f3c9bc84b271c2f7104b6>ZCXPMX+Times-Bold AddT42Char 
1 1600 6 <00010021000004440568002800c0407a150b1520020b160b170209160917
062606271916191716261627291629175a165a1769166917682668279916
9917a916a917b916b9171610081f151b270316271a23131726000337001e
283b2404231e083b2311371e153623211a2323211a110a03061f28040d08
00201f011f490d07282716150a1b1a2a1011b80261b62a0922232a0403b8
0260b12a292fccf43cfde410f63cfd3c003f3c3c3c3fed5d3f1239111217
39011112392b2b2b00103c3cd401111239395d3130015d71005d373e0135
113426273521113e0133321615111416171521353e013511342726232206
151114161715212138352c41018c3f8b57769a2f37fe1f37280e18473571
2837fe1331072f4604133d310832fdc04c5389a5fe14452b0c31310b2643
01f046233f6212fddc43260b31000000>ZCXPMX+Times-Bold AddT42Char 
1 1916 7 <00020021000002090587000b001c0067403810151f1b020d0c10370c1e1c
362411231e15362317231e1b712317111003151c3f08012f080108400201
15061c1b0a0540200b010b22101eb80261b416172a1110b90260001d2ff4
3cfd3ce410f45ded003f3c3f3fed5d5d111217392b2b2b10d4015d313012
363332161514062322263503363736351134262735211114161715217b5d
42415d5d41425d5a36141e2a3e01892837fe18052a5d5d42425d5d42fb49
09121b46025a3e2d0b32fcf643260b31>ZCXPMX+Times-Bold AddT42Char 
1 2112 8 <00020025fe5a043103c9000d002e00c1407e141a231d2b215b0c551d551e
c619c61bc821d520e51de51ee320ea21f41d0f061d01071d271a391a481a
581a6505661d661e86059c0b961d961e0c10161f2d102e0311230e1e2e3b
2412231e163b2329371e2d8023290b0a09080503271129222e2618120b08
050d06541c0716060d54220b2e2d0e57030103408f1f011fb80263400a30
1722272a1240110111b80260b1302f2fccf45d3cfde410f65ded5d003f3c
3fed3f3fed1117391112393901111217392b2b2b015d3130015d00715d24
37363534262322061511141633013e013511342627352115363736333216
15140223222726271516171e0117152102c6271540624268633efdce4230
2d4001872a284870a1d5e5a4544b282b0101074551fdd055935198b0d174
1afe0e1e5ffe36072f410405402d09328746213af2f0dffedb311a30ad8a
11513c052a00>ZCXPMX+Times-Bold AddT42Char 
1 2448 9 <000100250000036303c70020008c405323103a0ca610b610c610d610e610
f61008050c011f1f10200220090323001e203b2405231e093b231b761e1f
ba2319161503111b031b20190b050317144010170117490e070906201f0a
111a220a221b2a0504b80260400960228022d0220322212fcc5df43cfde4
10e6003f3c3f3fed5ded11173911393901111217392b2b2b01103c5d3130
005d015d373e013f01113426273521153e01333216151406232226232206
15111416171521253b2e02022c4101854180543f654739415f1329533b58
fdde31072a3c3c022d402e0832a15564514e3c4e7a655efe7d6633083100
>ZCXPMX+Times-Bold AddT42Char 
1 2688 10 <00010021ffe5029e0509001e0064401f0b1c01154715110b4001210b0070
080906401c211149190b2040142115470bb80119400c400721080d2a1d00
401c211eb90260001f2ffc1ac81acc3cfd3c1a3dcd181ae476dc1ac81ac4
003fed1ac81a3fccfd3c1a3dcc181a111239762f3130015d133536373637
36373311331523111417163332363717060706232227263511211b28352f
5d4c34c3c30d142e28361b312432587f483668035539192231346675fea6
5afd982b1d2d39321854355d1b34890298000000>ZCXPMX+Times-Bold AddT42Char 
1 2888 11 <00020021ffe3044b03c90024002500b940462219014c0d4c0e023c0d3c0e
0209070819190719193b1d4a1d590769079a07a907ba07b616c616d616e6
160f100e10240222230a231e0eba2320231e243623143b1023131e14b801
0e40261740091842172018100a0905240e00062f050105491c1c170b2507
2525101f18220a092a0f10b80261b427012a201fb80260b127262fccf43c
fd10f63cfd3ce41112392f003f3f3c4d10ed5d3f3c3c1739101adcca1a10
f5edfc01f52b2b103dd418015d3130005d015d5d5d011114171633323736
3711342627352111141617150e0107350607062322263511342627352501
a30f1a4d312f1b29334d01983046be636d4930545b63ab2a3c020503affd
493e1d331f1128024540330332fd1f4031062f121122873f1a2e7ea10205
41280d321a000000>ZCXPMX+Times-Bold AddT42Char 
1 0 0 <000200250000060e0568000300070041401c05061f02010004071f03000a
05041f0303021a0906071f0100190809b8022eb3216750182b2b4ef43c4d
fd3c4e10f63c4d10fd3c003f3cfd3c3f3cfd3c3130331121112711211125
05e9c7fba50568fa98c703dafc26>ZCXPMX+Times-Bold AddT42Char 
ZCXPMX+Times-Bold /CharStrings get begin
/T 1 def
/b 2 def
/c 3 def
/e 4 def
/g 5 def
/h 6 def
/i 7 def
/p 8 def
/r 9 def
/t 10 def
/u 11 def
end
ZCXPMX+Times-Bold /Encoding get
dup 84 /T put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
reset_gvm
/YXPEUK+Times-Bold /ZCXPMX+Times-Bold findfont ct_VMDictPut/YXPEUK+Times-Bold*1 [84{/.notdef}rp /T 13{/.notdef}rp /b /c /.notdef /e /.notdef /g /h /i 6{/.notdef}rp /p /.notdef /r /.notdef /t /u 138{/.notdef}rp]YXPEUK+Times-Bold nfYXPEUK+Times-Bold*1 [37.5572 0 0 -37.5572 0 0 ]msf5.62439 -57.7348 mo(T)sh30.6933 -57.7348 mo(h)sh51.5136 -57.7348 mo(e)sh77.5744 -57.7348 mo(b)sh98.3947 -57.7348 mo(i)sh108.876 -57.7348 mo(g)sh137.061 -57.7348 mo(p)sh157.881 -57.7348 mo(i)sh168.362 -57.7348 mo(c)sh185.075 -57.7348 mo(t)sh197.539 -57.7348 mo(u)sh218.359 -57.7348 mo(r)sh234.364 -57.7348 mo(e)sh-340.35 19.5977 mo
-340.35 -673.327 li
1045.5 -673.327 li
1045.5 712.521 li
-340.35 712.521 li
1 gry
f
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
true set_gvm
%ADOBeginSubsetFont: RDDBAA+Helvetica-Bold Initial
ct_T42Dict begin
0.008 -0.215 0.77 0.738
 256 array 0 1 255 {1 index exch /.notdef put} for  /RDDBAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742066c328ec000000bc0000037c6670
676d3e898a130000043800000329676c79663a85587000000c4400000f74
68656164f527aab70000076400000036686865610cd104eb0000079c0000
0024686d74785b910799000007c0000000546c6f636128b02d2e00000814
0000002c6d6178700847034a00000840000000206e616d65bbd70db60000
086000000027707265706551528f00000888000003bb6764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
402a292827262524232221201f1e1d1c1b1a191817161514131211100f0e
0d0c0b0a090807060504030201002c4523466020b02660b004262348482d
2c452346236120b02661b004262348482d2c45234660b0206120b04660b0
04262348482d2c4523462361b0206020b02661b02061b004262348482d2c
45234660b0406120b06660b004262348482d2c4523462361b0406020b026
61b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8
015a51582320b08d44235920b0ed51582320b04d44235920b09051582320
b00d44235921212d2c20204518684420b001602045b04676688a4560442d
2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d6818b000
4360442d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c20b0032552582359212d2c69b04061b0008b0c6423648bb8400062600c
642364615c58b0036159b002602d2c45b0112bb0172344b0177ae5182d2c
45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d2cb0
02254661658a46b040608b482d2cb0022546608a46b040618c482d2c4b53
205c58b002855958b00185592d2c20b0032545b019234445b01a23444565
234520b00325606a20b009234223688a6a606120b0005058b21a401a4523
604459b0005258b219401945236044592d2cb9187e3b210b2d2cb92d412d
410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb918
7ec4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
456920b00943b0022660b00325b005254961b0805358b219401945236168
44b21a401a4523606a44b209191a45652345604259b00943608a103a2d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2c764520b003254523616818236860442d2c7645
b00325452361682318456860442d2c7645b0032545616823452361442d00
0000000100000001000095cafe075f0f3cf50101080000000000c76ab0c4
00000000c76ab0c40015fe42062805ef0001000900010000000000000001
00000629fe2900000800fea3feac08020001000000000000000000000000
0000001505c7009a02aa002f06aa009706390065055600a3055600550473
003b047300470473002f02aa001504e3004204e30087023900890239008b
04e3008704e3004204e3007d031d00820473004202aa00150473001a0000
0034005200d8012e0174021402b8032603ba0420049a04e4051805380588
05de063c0686070c075607ba00010000001500500003005b000600020010
0010002a000007e8028c0006000100000001001200010000000000060015
0000484147435a472b48656c7665746963612d426f6c6400b10840ba0190
00145df44009011f04000b1fd819eebe012e000d00e6012e000d00b0012e
400c0d000963833c1f63838348294109014b00370401001f014500240401
001f0144b224ab1fb8013eb224231fb8013db224231fb80102b2371d1fb8
0100400937241ffd37621ffc37b80801401b1ff824931ff724931ff6243f
1ff524311fd1371d1fd037471fcd41b80801b21fcb2ab80201b21fca24b8
0401400f1fc824811fb537291fb4373b1fb227b80401b21fb141b80401b6
1fa437811fa384b80401b21fa22ab80401b21fa124b8019ab21fa024b801
9ab61f9f243f1f9683b80401b21f9527b80401b21f8227b80401b21f7084
b80801b21f6fb3b80801b21f6eb3b802abb61f6d24261f6224b80101400b
1f5d246c1f5c24391f5441b80125b21f4d27b80401b61f4c27cd1f4b41b8
0401b21f4024b8019ab21f3683b80401b21f3524b80201b21f3224b8019a
b61f2c24bb1f2884b80801b21f2241b8040140131f20244c1f1d24261f2c
a0961f2c245e1f412ab801a8b748282a2448279636b801f4b21f4d27b801
f4b21f9527b801f4b21f6e27b801f4b21f6327bd01a700470029015a0025
0199b348296fb3b80190b21f83b3b8019ab348283725b803e840121fb327
482784274827362748272527482755b80154402c0797076407550733072b
072907260721071e071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b806008516763f18
3f123e113946443e113946443e113946443e113946443e11394660443e11
394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b18011d
b0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b2b4b5279b35279eb56456523456023456560234560b08b766818b0
80622020b1eb794565234520b003266062636820b003266165b079236544
b0eb234420b152564565234520b003266062636820b003266165b0562365
44b0522344b10056455458b156406544b25240524523614459b35045484e
456523456023456560234560b089766818b080622020b148454565234520
b003266062636820b003266165b045236544b048234420b1504e45652345
20b003266062636820b003266165b04e236544b0502344b1004e455458b1
4e406544b250405045236144592b2b456953420000>
[3957 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 1 <0001002f01b4026d02c2000300214012002203011a05df000100190405d5
217d46182b2b4ee45d10e64d002fed3130132111212f023efdc202c2fef2
>RDDBAA+Helvetica-Bold AddT42Char 
1 604 4 <000200a30000050b05c200080013003e401c97019706020c2a04040e032a
0f020e080837131a15030d250e191415b8011db3215256182b2b4ef44dfd
3c4e10f64ded003f3fed12392fed3130015d002623211121323635000423
211121112132041503da796dfee1011f6d790131fef8f5fec7fece0282de
0108046062fe4e6a73fefdd8fdee05c2e4ef0000>RDDBAA+Helvetica-Bold AddT42Char 
1 1064 6 <0003003bffde0438045f000e0039003a008f404f3b0235367901890104d8
1e0126f3e62ae7230e0d05020005131a2b24232204262e262e2a0d050200
041b0b221b162c3a1f072a0a0b2c320b3a134d004d2e3a352a3e261a3c1a
4d1b2d084d35193b3cbc01190021004801ae00182b2b4ef44dedf4ed4e10
f64de41139cde5e52f003fed3f3f3cfdcd39111217391239390111121739
111217392b3130015d005d010e010f010607061514163332363727363736
35342623220706072136373621321716151114171e011715212e01270607
0623222635343736371302de1b3730405a2742513a5c9b03ad4f223d5d5a
652a1e0afeed0947710113b38b8b02031c1cfeca0d0a033b4d5c7494c19b
55a57002121115090c1017275249416c8fef0a0f1a37433332253f8f5c90
4747c5fe0c344a38280d2a213a25402d35a99bc95a311501d4000000>RDDBAA+Helvetica-Bold AddT42Char 
1 1392 7 <00020047ffda0434045f001d001e006e40459916a81602871c0149155812
6812780a7912b815c713c81508180206041dd204241e1a07160e0a0c10b7
0c24140b1e10360f1f00361e171d1a20083617191f208721484e182b2b4e
f44ded4e10f64d1139fdf4ed2f003feded113939393f3ceded1139393931
30015d71005d012627262322070615141716333236372106070621200235
1000333204170103100821306590351c1c338d64540901230a5486fef9fe
f9f80112f1cd010518fe1b02bb3d31428f4c7e7849886c568274bb0138f9
01190138b8e901a40000>RDDBAA+Helvetica-Bold AddT42Char 
1 1612 8 <0003002fffdc043a045f00060021002200ab4049460887149701990a0406
0109050610051a4b05461049208601850f871f0a03160317131613174808
4c164c17491a5c165c175a1adc01db04e91de720f720104a014610880583
100402b8019540334f0e5f0e6f0e030e0e1b062422210717122c1b0b1603
02220336177b221e600c800c020c1a24021f0e951e1923249821484e182b
2b4ef44dfde44e10f65d4d1139e4ed2f111239003fedcd3f3ced12392f5d
fd313000715d01715d000607212e01233616171617160721161716333237
3637210607062322001110003b0101d06d0e01bb077b5b88da4740130b02
fd1606613b5358371e1701230b5a8cfcd0fec2011fe51403747c6a7175eb
666e61804b8da44229321b3061649f010c012e011b012e000000>RDDBAA+Helvetica-Bold AddT42Char 
1 2112 10 <00030042fe42045e045f000d002f0030005a40108a1e0111120524302f07
1206250d2429b8013f40201c202c180f30021f121f2527302c131a321c84
1b2d09362c19313298214845182b2b4ef44dedf4ed4e10f64d1139fdf4e4
2f003ffdcd3fed393f3f3ced11393130015d243635342623220706151417
1633121716173521111407062122242721161716333237363d0106070623
2202353412333702bd8a836e96391e203a960b3d68400115477afea6d1fe
f80e01360c1b2e6d9a3422292f5588d2fbf2de5bea97a59ba28d4b6e5f4a
8a0372192b739dfbf6d36bb8a4a332162767429c464623410127fcf3014b
03000000>RDDBAA+Helvetica-Bold AddT42Char 
1 2504 12 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>RDDBAA+Helvetica-Bold AddT42Char 
1 2672 14 <0002008700000461045f00160017004b402d0501150125013701580b680b
060112100609241716070e040a170536170f021a19110e270f191819be21
5045182b2b4ef44dfdc44e10f64d1139ed2f003f3c3f3ced3f3939313001
5d001615112111342726232207061511211121153637363327038ad7fedc
172a7691361cfee401133731588769045cb1cdfd220297562e547b4165fd
b204409f542542030000>RDDBAA+Helvetica-Bold AddT42Char 
1 2832 15 <00030042ffda049c0465000b00170018004d4028170301080c880c881003
170d180f660d0305241814070b240e0b1818080236171a1a08361119191a
b80176b321484e182b2b4ef44ded4e10f64ded11392f003fed3f3ced3130
017200727124363534262322061514163324002120003534002120001501
02eb86867d7d87877d022efeecfee7fee7feec0114011901190114fdd3c9
b2a4a4b1b1a4a4b266feab0155f0ec015afea6ec0240>RDDBAA+Helvetica-Bold AddT42Char 
1 3004 16 <0002007dfe53049a045a000d0020004a40291713080a1c1a022420071a06
0a24130b190e080d180d36101a22061f1b1f1827191921229821504e182b
2b4ef44dfdf4e44e10f64ded111239003f3fed3f3fed1139113912393130
002623220706151417163332363512001110002322272627112111211536
373633037473819b3a1e653c52777d1d0109fefdcc82562f2dfee601112e
345f83029fc2934e78be4d2db8990239fee6feeffee0fed2412445fdc805
efa1472949000000>RDDBAA+Helvetica-Bold AddT42Char 
1 3192 17 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>RDDBAA+Helvetica-Bold AddT42Char 
1 3340 18 <00020042ffdb04250461002b002c007e404f09100626190d030904210b0b
4b0a490b472144204829d703081d22200c0a04162b04161a2c2c1207042c
280b2c2c0f150a201d164d2207152d074d251a2e0c001d4d0f2d004d2b19
2d2e8721484e182b2b4ef44dedf4ed12394e10f64dedf41139ed11393911
12392f003fed3f3cfdcd10cd11173931305e5d5e015d0116171633323635
342726252627263534363332041721262726232206151417161716171615
140623202635010163091e358f54632828feffb94c4cedd7cc010113fee3
06192f715d4f2a2affaa5554f1fcfefff501fb015c4c203932323019193d
2e45448097d9a3c837203a3a27311617382851527ba2cdd9a8030300>RDDBAA+Helvetica-Bold AddT42Char 
1 3608 19 <00010015ffea027805680016004ab6102c0f1f0c2c11ba01710004015c40
1607005c0601061817171a0f06f4040927009203151718b8010eb3216066
182b2bd43ce4fd3cf43c4e456544ee4d003f3cfd3ced3ffdf4e431301335
3311211133152311141633323637150706272635111598011ab1b122570d
1d0e87ca4a30036dcb0130fed0cbfdc043210101d505074d3166029f>RDDBAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>RDDBAA+Helvetica-Bold AddT42Char 
RDDBAA+Helvetica-Bold /CharStrings get begin
/hyphen 1 def
/P 4 def
/a 6 def
/c 7 def
/e 8 def
/g 10 def
/i 12 def
/n 14 def
/o 15 def
/p 16 def
/r 17 def
/s 18 def
/t 19 def
end
RDDBAA+Helvetica-Bold /Encoding get
dup 45 /hyphen put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
reset_gvm
/YXPEUL+Helvetica-Bold /RDDBAA+Helvetica-Bold findfont ct_VMDictPut/YXPEUL+Helvetica-Bold*1 [45{/.notdef}rp /hyphen 34{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /.notdef /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t 139{/.notdef}rp]YXPEUL+Helvetica-Bold nfYXPEUL+Helvetica-Bold*1 [29.875 0 0 -29.875 0 0 ]msf5.62439 -56.7431 mo(P)sh25.5944 -56.7431 mo(r)sh36.6419 -56.7431 mo(o)sh54.9128 -56.7431 mo(t)sh64.8273 -56.7431 mo(o)sh83.0981 -56.7431 mo(n)sh101.369 -56.7431 mo(-)sh111.283 -56.7431 mo(p)sh129.554 -56.7431 mo(r)sh140.603 -56.7431 mo(o)sh158.874 -56.7431 mo(t)sh168.788 -56.7431 mo(o)sh187.059 -56.7431 mo(n)sh213.402 -56.7431 mo(s)sh229.973 -56.7431 mo(c)sh246.545 -56.7431 mo(a)sh263.116 -56.7431 mo(t)sh273.03 -56.7431 mo(t)sh282.945 -56.7431 mo(e)sh299.516 -56.7431 mo(r)sh311.13 -56.7431 mo(i)sh319.487 -56.7431 mo(n)sh337.757 -56.7431 mo(g)sh182.242 535.054 mo
625.159 535.054 li
625.159 -52.9537 li
182.242 -52.9537 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
grestore
gsave
251.923 499.308 mo
582.904 499.308 li
582.904 485.55 li
251.923 485.55 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman Initial
ct_T42Dict begin
0 -0.215 0.773 0.684
 256 array 0 1 255 {1 index exch /.notdef put} for  /FSFAAA+Times-Roman
Type42DictBegin
[<00010000000b000b000b000b637674209b3f3f0f000000bc0000041a6670
676d81f39ab9000004d8000002c4676c79664a96412800000fd800002404
68656164f520aa470000079c00000036686865610c6804d2000007d40000
0024686d74788cee0797000007f8000000946c6f63618e06975a0000088c
0000004c6d617870085502a3000008d8000000206e616d654f909ed90000
08f800000024707265707ec926810000091c000006bb6764697200000000
000000000000000005740002054b001d054b0018039700130000ffe30000
ffed0000ffeafe420000054b001dfebdffd6031e000000b4000000b402fe
3f3c0026001c007d00980003007d00de00350017002800e3013e000300b4
00d000df004c005a00c4004a00ab0147008a004e0039006d013d002401d2
00360045009e00be00170079006f00d000460091002100b400baffc20017
003600ab00b800f60009001d003d0058005a008c0099ffc400a000e800f5
ffa1ffea0033008500b800d5ffe2002f0080008c0002001a00250045006a
0070012d0274ff87003e004e009800ba00de0116ff3e00150034003c0044
00670068006d006e0084009800bd00d500d7011c0000002d0030003d0046
0057008b0093009700b000c6011f017b019d0409ff68ff6a0056005a006a
006d009200c400d000e700f1011101bf01c7ff1cffb4ffff000200230038
0042006d0092009c009d00a100a200b400ba00c700c700e400ed01530157
03230334ff0dff32fffbffff000f001c0040004b005c006d006d007c0085
009800c500cb00cb00df011f01280136015501700180018a01c702420313
0407054eff82000000080026003d003d004f006e0073008b00900095009e
00a800ad00ad00c300d300e3010901230241028002f40311034004510576
ff7fffafffbeffcf00030005000e0039004b004b004c0074007800880089
0092009200b600c200d800df00f000fd010701100117011f01b401dd01eb
020002110229028002ca036f038a03af0400049c04dd053e0587fea6fee4
ff67ff95ffcbfff8000200020007002500280037003700380039003f0051
0053005900640068006b007d0098009900af00b100b900d000d500da00dd
00fd00fe011e013601370142015a017a01a301c401cc01f702020210021f
022902290287029f029f02c002cc02d5031a031d03280331035e0396039f
03a8049305640571059405b106eb0788fe63fe64fe76fe7cfebcff4bff97
ffacffc0000700210028002d003000480049004c0051005400560066007a
007c0085008a008c009900af00b300b500b500b600b900bb00bc00cc00d0
00e100f400f600fc00fd0109011001170118011f01300139013c013e0142
014301440149014b014f01540155015701580161016a017d017e0184019c
019c019d01a101a301b401b401b901bb01cb01d001d701d701e401ec01ec
01f7020502070218022302260240024b024b025702570261026302680269
026d028d028d02a602af02b402b80300033e03460361036103b003c003d5
03d703df03f9041a0474047b04c104cc04da04e404f204f6051005300555
055606180639067606a406b3076b07ad07da00b200d500ae00bb00000000
000000000000000000630079029602fa007e0247009100c8000002ca0248
00da007d01b301a4002d00a5009c0034003400dc00dc0040004000310031
000a000a0082003000004027262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c20
45b0004360442d2c20b0032552582359212d2c69b04061b0008b0c642364
8bb8400062600c642364615c58b0036159b002602d2c45b0112bb0172344
b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0
177ae5182d2cb002254661658a46b040608b482d2cb0022546608a46b040
618c482d2c4b53205c58b002855958b00185592d2c20b0032545b0192344
45b01a23444565234520b00325606a20b009234223688a6a606120b00052
58b21a401a4523614459b0005058b219401945236144592d2cb9187e3b21
0b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41
d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c0120b0032523
49b04060b0206320b000525823b002253823b002256538008a63381b2121
21212159012d2c4569b00943608a103a2d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f5
00edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d0001
000000000000fc047d415f0f3cf50101080000000000c76ab0c400000000
c76ab0c40004fe420634057f000000090001000000000000000100000600
fe0000000800feaafeac07bb000100000000000000000000000000000025
05c700210200000002aa005e02aa003602aa005002000087023900040400
0012040000e30400003d0400005904000017040000410400004604000028
0400006d0400003d0483003d0556003305c7002104e3001704e3001c05c7
0021038d004b04000007038d002f038d002802aa00280239002806390021
04000021040000340400000902aa0009031d006802390019040000250000
00360036007e00cc00ea0114014201c0021e02ac033e039e044c04d4052a
060e06b206de07720800086608d8098e0a760af80b860c260c9a0d040df0
0e9a0f120fc21044111011721202000100000025005f0003007800070002
001000100027000007e801b9000600010000000100120001000000000006
001200004e424f4358562b54696d65732d526f6d616e400f09cf54010f54
013fd029019f540140410d01fb0001003001fb0001002001fb0001001001
fb0001000001fb400b01002001900701900601f0414f0204000100ef0203
000100c00201000100b001ff00b0020100bf0208000300af020100af0208
0002009f0202009f02080002007f0200007f0202007f0208008f0200008f
020200800205008f02080007006f0200006f0202006f0205006f02080004
005f020200500203005f02080003004f0202004f0204004f020800030030
0202003f0204003002080003002f0201002f0204002f02080003001f0208
b2010840ba01e5014d0152b50f1fc2710e1fbc014b014d0062001f0131b2
864f1fbe01a60020000d018f0020000d0182400e200dde200dda200d8f20
0d7f200dbe018b0050000d016c0050000d0101400e500dd8500d43500d3f
500d3a500dbb013b0028000d01034014280dbd280db8280da7280d7c280d
76280d2d280dbe01b1004a000d01a7004a000d019440204a0df74a0dc84a
0d984a0d854a0d7a4a0d664a0d214a0d621c0d241c0d1b1c0db8017eb60f
920f900f0009b8017eb4900d92900db801f5b3312f1f41b801f3b5331f2b
2c361fb80189b2542c1fb80183b254ab1f4115018100290401001f018000
290201001f017c00440201001f017901300201001f017801300401001f01
77b22f291fb80173b23e9e1fb80171b23ee41fbc016b002e0401001f016a
b233e41fb80138b2545e1f4109013300290401001f013200440801001f01
2db23e931fb8012ab22ccd1f41110127002e0125001f012400330801001f
012300330401001f012200330401001f0106b254261fb80105b4542c1fff
29b80101b21ffe88b80201b61ffb2f521ff62eb80401b21ff52eb80801b2
1fe129b802abb21fdd2fb802ab40171fdb2f5e1fd93e4a1fc454261fc354
e41fbf2f6c1fba2cb80401b21fa944bc0401001f00a80130019a400b1fa5
2f931fa42f891fa23eb80401b21fa033b80801b21f9654b80801b21f9529
b80401b61f8954261f732eb80156b21f7233b802ab400b1f6b2f6c1f6a2c
4b1f632eb8019a400f1f2e2c371f532fbb1f512f721f4f2cb80401b21f49
44b80401b21f482fba0401001f01f3400d411d1f412f1d1f3d3ecd1f3b44
b80201b21f392eb8019ab21f343eb80401b21f322eb80201b61f313e4c1f
2b2eb80404b61f2a54311f2233b80201402d1f5567075f07550737073507
3007260725071e071d071408120810080e080c080a080808060804080208
000814b8ffe0402b00000100140610000001000604000001000410000001
001002000001000200000001000002010802004a00b801ff85b0018d1676
3f183f123e113946443e113946443e113946443e113946443e1139466044
3e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb03553205c58b901e701e54544
b901e601e545445958b9012101e7455258b901e70121445959184bb04c50
58b801e64569b801e7456961b0405258b901e601e645b040614459594bb0
5653205c58b9002901e64544b9005401e645445958b902360029455258b9
002902364459594bb08953205c58b9002f01e74544b9004401e745445958
b902e4002f455258b9002f02e44459594bb0cd53205c58b188294544b129
2945445958b9052e0088455258b90088052e4459594bb8020153205c58b9
0130002f4544b12f2f45445958b90ab00130455258b901300ab04459594b
b01d53205c58b133334544b13e3345445958b13233455258b13332445959
4bb02f53205c58b133334544b12c3345445958b15233455258b133524459
594bb05b53205c58b133334544b12e3345445958b1a033455258b133a044
59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb35b9b819c45
6523456023456560234560b08b766818b080622020b1819b4565234520b0
03266062636820b003266165b09b236544b081234420b15b9c4565234520
b003266062636820b003266165b09c236544b05b2344b1009c455458b19c
406544b25b405b4523614459b3868d7145456523456023456560234560b0
89766818b080622020b1718d4565234520b003266062636820b003266165
b08d236544b071234420b186454565234520b003266062636820b0032661
65b045236544b0862344b10045455458b145406544b28640864523614459
2b2b2b2b4569534273737373737373737373737373737373737373737475
755e73735e0000>
[9221 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 468 5 <000100dcffe801bf00cb000b00264013052a0b0b0d17171a082a02190c0d
c321788e182b2b4ef44dfd4e456544e6003f4ded31300426353436333216
15140623011e42432f2f42413018432f2f42422f2f430000>FSFAAA+Times-Roman AddT42Char 
1 644 7 <00020012ffed03b10560000e001e00924022ac01eb0ce51403c500d600e5
000331003505390d034c0806a01e050ea0160d028812b80208b3200a881a
b80207b1201f2fccf4ed10f6ed003fed3fed313043794038001d0c261825
142608251c26102504260d170a35000015023501071d0a3500050f023501
0b190e350001130e3500091b06350103110635012b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b8101715d005d241211342702232203061514171633121716
15140702212227261110373633027d6e213eaaaa3f212240b0e37f653e75
fee0c57f885b7bff2501420131f391010efeea94f2e388fe053bf1c3fdc7
b0feb5b3bf01480102bafd00>FSFAAA+Times-Roman AddT42Char 
1 896 8 <000100e300000325055e0016006f4019761486140226143614020cfd6208
e02203f96207e02314e00db8016eb2136214b8017e40110d0c0302040815
0508070c1817171a0203b80130b50c0c0d191718bc0178002101a5015d00
182b2b4ef43c4d10fd3c4e456544e6003f3c3f1217394df5edfc01f52b2b
313000715d001615111416171521353e0135113426232206073525330262
015270fdcc794a18281a5324016f0c05590509fb4c4d2a041c1e06365a03
9e30321d101cbb00>FSFAAA+Times-Roman AddT42Char 
1 0 0 <0002002100000597054b000300070043b40201490506b80156401c000407
4903000a0504490303021a090607490100190809eb214652182b2b4ef43c
4dfd3c4e10f63c4d10fd3c003f3cfd3c10f43cfd3c313033112111271121
11210576b8fbfa054bfab5b803dbfc250000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/period 5 def
/zero 7 def
/one 8 def
end
FSFAAA+Times-Roman /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
pop
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman /FSFAAA+Times-Roman findfont ct_VMDictPut/YXPEUM+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one 206{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf266.217 496.448 mo(0)sh272.29 496.448 mo(.)sh275.328 496.448 mo(1)shgrestore
gsave
353.585 499.308 mo
582.904 499.308 li
582.904 485.55 li
353.585 485.55 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf367.879 496.448 mo(1)shgrestore
gsave
447.563 499.308 mo
582.904 499.308 li
582.904 485.55 li
447.563 485.55 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf461.857 496.448 mo(10)[6.10236 0 ]xshgrestore
gsave
203.682 489.124 mo
582.904 489.124 li
582.904 475.367 li
203.682 475.367 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 486.264 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 481.083 mo
582.904 481.083 li
582.904 472.864 li
221.728 472.864 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 408 4 <00010050018e0247020e00030020400a003d03011a0500190405b801afb3
218356182b2b4ee410e6002f4ded3130132115215001f7fe09020e800000
>FSFAAA+Times-Roman AddT42Char 
1 2472 14 <00010028ffed0397054b000c0072401c7b0a8708a30703690774088a0784
09040809080c0009080905040303b8012d4017120202010403020309010e
00010405a4000c0403020c00bb0208000e00090209b10e0d2fcce410e600
3f3c3f3c4dfd3c3901111239121739872e2b7d10c5001239390111123939
10c93130005d015d011501230121220607273e01370397fe4e840195fe4c
61554123411f19054b21fac304c7406610a04b420000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/hyphen 4 def
/seven 14 def
end
FSFAAA+Times-Roman /Encoding get
dup 45 /hyphen put
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one 5{/.notdef}rp /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 479.341 mo(-)sh232.448 479.341 mo(7)shgrestore
gsave
203.682 461.43 mo
582.904 461.43 li
582.904 447.672 li
203.682 447.672 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 458.571 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 453.39 mo
582.904 453.39 li
582.904 445.171 li
221.728 445.171 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 2200 13 <00020046ffea03be057800170025009040235b0f013508090a1725101b14
4f6f1b011b461b02400a21090522a0020d258800170117b80208b427101f
8805b80207b127262fccf4fd7dc41810f65ded003fed3f1a3dcd1a181239
762f185ded113901111239393130437940262024151a000419261a152535
0121031f3500230125350118161b350120042235002400223500002b2b2b
012b2b2b2b818181005d00022322001110253621170e01070e0107363736
33321615262726232207061514123332363503beebbcb0fedf0118fa0138
057db5474980183e2d50519fd8b72a46a89b331e8b96776c0110feda014a
01120161fdd421174f4748de6d261220dccc3867ac5c367ea3fec8cb8800
0000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/six 13 def
end
FSFAAA+Times-Roman /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one 4{/.notdef}rp /six /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 451.646 mo(-)sh232.448 451.646 mo(6)shgrestore
gsave
203.682 433.557 mo
582.904 433.557 li
582.904 419.801 li
203.682 419.801 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 430.698 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 425.518 mo
582.904 425.518 li
582.904 417.299 li
221.728 417.299 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 1852 12 <00010041ffea037f057f002c00ce4027861b013508141501000229170514
2214150b0c090f171a100f0f73121b1b1a1b1a100f0405292cb80132401e
2509a41b1b021a191aa440152111100402f6250d056b22b6a015b0150215
bb0208002e00290207b12e2d2fcce410f65df4ed003fed3f3c1ac41afd3c
1112397d2f18ec10ed0111121739870e2e2b057d10c50011391112393911
33011239113912173910c9313018437940261c24030820211f211e211d21
04060726081c053501032405350106210935011c1b0423023500002b103c
2b012b2b2b2a8181015d361633323635102526232226273e013713213236
3717070e01232107161716171e011514002322272635343633d2b93273ac
feec9984160b08020302da01ad20231c104e042415fe7d55a44c7d54484a
fec5f1623c642b2db781cb940103723f0309080b0501de161e0eb90905af
1c192a5247b163ddfed8131f501e2d000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/five 12 def
end
FSFAAA+Times-Roman /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one 3{/.notdef}rp /five /six /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 423.775 mo(-)sh232.448 423.775 mo(5)shgrestore
gsave
203.682 405.864 mo
582.904 405.864 li
582.904 392.107 li
203.682 392.107 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 403.005 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 397.824 mo
582.904 397.824 li
582.904 389.605 li
221.728 389.605 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 1660 11 <00020017000003c7055e0002000d0085401f780301050d06040902030d00
010173120d0d03010d000c03040a000103060dbb01740007000c0197b50a
03050a0c0ab8011e400900a4093004e0040204b80136b720064006a00603
06bb020a000f000c0209b10f0e2fcce410f65df45d3cfde4003f3f10f43c
f53c1139390111123911123939872e2b047d10c5001112390f3130015d09
012113331133152311231121350255fe1501eb425fd1d19ffdc00490fd4a
0384fc7c85feab0155850000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/four 11 def
end
FSFAAA+Times-Roman /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one 2{/.notdef}rp /four /five /six /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 396.082 mo(-)sh232.448 396.082 mo(4)shgrestore
gsave
203.682 377.993 mo
582.904 377.993 li
582.904 364.235 li
203.682 364.235 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 375.133 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 369.953 mo
582.904 369.953 li
582.904 361.733 li
221.728 361.733 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 1368 10 <00010059fff10376056a002f0095403c49195b070207241624290739074b
076a076a0879077b08a919c6240b172118181700032c0122100d18170213
0c02f52940220d21c0090109092f1313b80173400f1b052f88290d106b1e
056ba0260126bd02000031000d0136002c0209b131302fccf4e410f65de5
d4ed003fed3fed1112392f5d3d1add7dcc181a10fd111217390111123939
121739101a18c93130015d005d36163332363534272623220607273e0135
34262322070607273e013332161514070607161716151400212226353436
33d6b53f8c88375ddd0d181002a0b8915d6e542e351f28da8f99a7452752
603a6dfed5feec7b632125ae72bd6f6b518901021a3a967b6d72512c5c07
98b6a86e61512e39293769a1befede492a1a30000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/three 10 def
end
FSFAAA+Times-Roman /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /.notdef /three /four /five /six /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 368.209 mo(-)sh232.448 368.209 mo(3)shgrestore
gsave
203.682 350.298 mo
582.904 350.298 li
582.904 336.542 li
203.682 336.542 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 347.44 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 342.258 mo
582.904 342.258 li
582.904 334.04 li
221.728 334.04 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 1084 9 <0001003d000003cb0564001b00b8404c2512016c006e016913036402960f
f60ff61404050f0614150f2514042b08142100000118190a0b010b0a0303
001a0318191119180b0a01050614066b0e051514a41a4000211b0c038811
bc19bb0208001d00000207b11d1c2fcce410f6f4ed003f1a3dcc181a3cfd
3c3fed111217390111123912391112173910c910c90705101ac531304379
401c04100825070d0a3500090a0c0b050f033501090c0635010410063501
002b2b012b103c103c2b2b8101715d005d71370801353426232207060727
3e0133321615140201213236371703213d016e0106a06f89552f2b2b32ef
89a9d1e2fe8601cb604e311a6ffce117017c0164a9949b64377209e6b3d5
9aa4fed0fe7b2e590cfee9000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/two 9 def
end
FSFAAA+Times-Roman /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 340.515 mo(-)sh232.448 340.515 mo(2)shgrestore
gsave
203.682 322.427 mo
582.904 322.427 li
582.904 308.669 li
203.682 308.669 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf217.976 319.567 mo(10)[6.10236 0 ]xshgrestore
gsave
221.728 314.387 mo
582.904 314.387 li
582.904 306.168 li
221.728 306.168 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf230.126 312.643 mo(-)sh232.448 312.643 mo(1)shgrestore
gsave
206.005 294.733 mo
582.904 294.733 li
582.904 280.975 li
206.005 280.975 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 291.874 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 286.694 mo
582.904 286.694 li
582.904 278.474 li
224.051 278.474 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 284.95 mo(0)shgrestore
gsave
206.005 266.861 mo
582.904 266.861 li
582.904 253.104 li
206.005 253.104 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 264.001 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 258.821 mo
582.904 258.821 li
582.904 250.602 li
224.051 250.602 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 257.078 mo(1)shgrestore
gsave
206.005 239.168 mo
582.904 239.168 li
582.904 225.411 li
206.005 225.411 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 236.308 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 231.127 mo
582.904 231.127 li
582.904 222.908 li
224.051 222.908 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 229.385 mo(2)shgrestore
gsave
206.005 211.296 mo
582.904 211.296 li
582.904 197.538 li
206.005 197.538 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 208.436 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 203.255 mo
582.904 203.255 li
582.904 195.037 li
224.051 195.037 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 201.512 mo(3)shgrestore
gsave
206.005 183.601 mo
582.904 183.601 li
582.904 169.845 li
206.005 169.845 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 180.743 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 175.562 mo
582.904 175.562 li
582.904 167.343 li
224.051 167.343 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 173.819 mo(4)shgrestore
gsave
206.005 155.73 mo
582.904 155.73 li
582.904 141.972 li
206.005 141.972 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 152.87 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 147.69 mo
582.904 147.69 li
582.904 139.471 li
224.051 139.471 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 145.946 mo(5)shgrestore
gsave
206.005 128.037 mo
582.904 128.037 li
582.904 114.279 li
206.005 114.279 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 125.177 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 119.997 mo
582.904 119.997 li
582.904 111.777 li
224.051 111.777 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 118.253 mo(6)shgrestore
gsave
206.005 100.164 mo
582.904 100.164 li
582.904 86.4067 li
206.005 86.4067 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 97.3043 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 92.124 mo
582.904 92.124 li
582.904 83.9056 li
224.051 83.9056 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 90.3807 mo(7)shgrestore
gsave
206.005 72.4709 mo
582.904 72.4709 li
582.904 58.7135 li
206.005 58.7135 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 69.6112 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 64.4309 mo
582.904 64.4309 li
582.904 56.2125 li
224.051 56.2125 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 2644 15 <0003006dffea03880563000b00180033012b40aa8a079a1d951e9521972b
962d992e9533a51ea92ba62da533f32d0d052d162d022b043d043a063a31
3a32430647174627453147325a035d046c0469057b04730c760d75167317
751874258c048b0585179725b503b504b605b721d928f6041f2804241835
03030a040a27190d19243c043a263c275a055b195b1a5b336a046a056a19
6a1a6a3310440833261805040f1533261805040b12a01f050ba02c0d0f6b
22b7026b0029a0290229b80208400b35156b1cb6086bbf2f012fb80207b1
35342fccf45dedf4ed10f65dedf4ed003fed3fed11173901111217393130
437940322a2e1d211014090a00010a2d083500002b023501131e15350011
200f3501092e0b3500012a0b3500141d1235011021123501002b2b2b2b01
2b2b2b2b8181818181015d00715d01715d2436353426270e011514163312
37363534262322061514161704272635343633321615140706071e011514
0623222635343736370276767dc2564e8d6d6b243e75775c788d73fee230
4adbafa1be61387daa93d9b6a3e95135832280606d878936ac5089a2033e
2d4d6d5f8574535ea1470a3f607484b8ae73755d35457ebb7f90c4b5947f
613f58000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/eight 15 def
end
FSFAAA+Times-Roman /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 199{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 62.6876 mo(8)shgrestore
gsave
206.005 44.5984 mo
582.904 44.5984 li
582.904 30.841 li
206.005 30.841 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf220.299 41.7398 mo(10)[6.10236 0 ]xshgrestore
gsave
224.051 36.5583 mo
582.904 36.5583 li
582.904 28.34 li
224.051 28.34 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 3100 16 <0002003dffd003af0563000e002b00b94050e618e619f518f51904461c56
1d771b771c871b871c9a10961b951caa10ba29ca29da10da290e2e081918
18192820030103050b1925182003010308254f5f0e010e490e1808a02b05
180d058800110111b80208b32d0b8828b80207b12d2c2fccf4ed10f65ded
003f3fed1239762f5d18ed12173911123901111217391239390010c93130
43794022262a06100d260b3500092a0b3500070f0535010c270e35000a29
08350106100835012b2b2b012b2b2b8181005d015d0036373e0135340223
2206151416331a01151402070607060727363736373e0137070607062322
26353412330243910a04068c8762797194c0f0726d7fc36da60a68457c4b
6a7f10234a64342baac7edb9023d4c1a0a8128d00104b2b192f80326fea1
d898fec67b8e45271528181b314765f9541a38150cf1a7d501140000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/nine 16 def
end
FSFAAA+Times-Roman /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf232.448 34.815 mo(9)shgrestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
0.893338 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
244.597 480.548 mo
244.597 477.51 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
@
252.28 480.548 mo
252.28 477.51 li
@
258.712 480.548 mo
258.712 477.51 li
@
264.43 480.548 mo
264.43 477.51 li
@
269.433 480.548 mo
269.433 477.51 li
@
273.899 480.548 mo
273.899 474.473 li
@
303.022 480.548 mo
303.022 477.51 li
@
320.174 480.548 mo
320.174 477.51 li
@
332.323 480.548 mo
332.323 477.51 li
@
341.615 480.548 mo
341.615 477.51 li
@
349.297 480.548 mo
349.297 477.51 li
@
355.907 480.548 mo
355.907 477.51 li
@
361.446 480.548 mo
361.446 477.51 li
@
366.449 480.548 mo
366.449 477.51 li
@
370.915 480.548 mo
370.915 474.473 li
@
400.038 480.548 mo
400.038 477.51 li
@
417.191 480.548 mo
417.191 477.51 li
@
429.34 480.548 mo
429.34 477.51 li
@
438.809 480.548 mo
438.809 477.51 li
@
446.492 480.548 mo
446.492 477.51 li
@
452.924 480.548 mo
452.924 477.51 li
@
458.642 480.548 mo
458.642 477.51 li
@
463.465 480.548 mo
463.465 477.51 li
@
467.932 480.548 mo
467.932 474.473 li
@
497.234 480.548 mo
497.234 477.51 li
@
514.206 480.548 mo
514.206 477.51 li
@
526.356 480.548 mo
526.356 477.51 li
@
535.825 480.548 mo
535.825 477.51 li
@
244.597 480.548 mo
535.825 480.548 li
@
244.597 480.548 mo
250.672 480.548 li
@
244.597 472.15 mo
247.634 472.15 li
@
244.597 467.326 mo
247.634 467.326 li
@
244.597 463.752 mo
247.634 463.752 li
@
244.597 461.073 mo
247.634 461.073 li
@
244.597 458.929 mo
247.634 458.929 li
@
244.597 457.142 mo
247.634 457.142 li
@
244.597 455.534 mo
247.634 455.534 li
@
244.597 454.105 mo
247.634 454.105 li
@
244.597 452.854 mo
250.672 452.854 li
@
244.597 444.456 mo
247.634 444.456 li
@
244.597 439.454 mo
247.634 439.454 li
@
244.597 436.059 mo
247.634 436.059 li
@
244.597 433.379 mo
247.634 433.379 li
@
244.597 431.056 mo
247.634 431.056 li
@
244.597 429.27 mo
247.634 429.27 li
@
244.597 427.662 mo
247.634 427.662 li
@
244.597 426.232 mo
247.634 426.232 li
@
244.597 424.981 mo
250.672 424.981 li
@
244.597 416.585 mo
247.634 416.585 li
@
244.597 411.761 mo
247.634 411.761 li
@
244.597 408.187 mo
247.634 408.187 li
@
244.597 405.506 mo
247.634 405.506 li
@
244.597 403.363 mo
247.634 403.363 li
@
244.597 401.576 mo
247.634 401.576 li
@
244.597 399.968 mo
247.634 399.968 li
@
244.597 398.539 mo
247.634 398.539 li
@
244.597 397.288 mo
250.672 397.288 li
@
244.597 388.891 mo
247.634 388.891 li
@
244.597 383.888 mo
247.634 383.888 li
@
244.597 380.494 mo
247.634 380.494 li
@
244.597 377.813 mo
247.634 377.813 li
@
244.597 375.492 mo
247.634 375.492 li
@
244.597 373.703 mo
247.634 373.703 li
@
244.597 372.096 mo
247.634 372.096 li
@
244.597 370.667 mo
247.634 370.667 li
@
244.597 369.417 mo
250.672 369.417 li
@
244.597 361.019 mo
247.634 361.019 li
@
244.597 356.195 mo
247.634 356.195 li
@
244.597 352.621 mo
247.634 352.621 li
@
244.597 349.942 mo
247.634 349.942 li
@
244.597 347.797 mo
247.634 347.797 li
@
244.597 346.01 mo
247.634 346.01 li
@
244.597 344.403 mo
247.634 344.403 li
@
244.597 342.973 mo
247.634 342.973 li
@
244.597 341.722 mo
250.672 341.722 li
@
244.597 333.326 mo
247.634 333.326 li
@
244.597 328.322 mo
247.634 328.322 li
@
244.597 324.928 mo
247.634 324.928 li
@
244.597 322.247 mo
247.634 322.247 li
@
244.597 319.925 mo
247.634 319.925 li
@
244.597 318.139 mo
247.634 318.139 li
@
244.597 316.53 mo
247.634 316.53 li
@
244.597 315.101 mo
247.634 315.101 li
@
244.597 313.851 mo
250.672 313.851 li
@
244.597 305.453 mo
247.634 305.453 li
@
244.597 300.629 mo
247.634 300.629 li
@
244.597 297.055 mo
247.634 297.055 li
@
244.597 294.376 mo
247.634 294.376 li
@
244.597 292.232 mo
247.634 292.232 li
@
244.597 290.445 mo
247.634 290.445 li
@
244.597 288.837 mo
247.634 288.837 li
@
244.597 287.408 mo
247.634 287.408 li
@
244.597 286.157 mo
250.672 286.157 li
@
244.597 277.76 mo
247.634 277.76 li
@
244.597 272.757 mo
247.634 272.757 li
@
244.597 269.362 mo
247.634 269.362 li
@
244.597 266.682 mo
247.634 266.682 li
@
244.597 264.36 mo
247.634 264.36 li
@
244.597 262.573 mo
247.634 262.573 li
@
244.597 260.966 mo
247.634 260.966 li
@
244.597 259.535 mo
247.634 259.535 li
@
244.597 258.285 mo
250.672 258.285 li
@
244.597 249.887 mo
247.634 249.887 li
@
244.597 245.064 mo
247.634 245.064 li
@
244.597 241.491 mo
247.634 241.491 li
@
244.597 238.81 mo
247.634 238.81 li
@
244.597 236.666 mo
247.634 236.666 li
@
244.597 234.879 mo
247.634 234.879 li
@
244.597 233.271 mo
247.634 233.271 li
@
244.597 231.842 mo
247.634 231.842 li
@
244.597 230.592 mo
250.672 230.592 li
@
244.597 222.194 mo
247.634 222.194 li
@
244.597 217.191 mo
247.634 217.191 li
@
244.597 213.797 mo
247.634 213.797 li
@
244.597 211.117 mo
247.634 211.117 li
@
244.597 208.794 mo
247.634 208.794 li
@
244.597 207.008 mo
247.634 207.008 li
@
244.597 205.399 mo
247.634 205.399 li
@
244.597 203.969 mo
247.634 203.969 li
@
244.597 202.72 mo
250.672 202.72 li
@
244.597 194.322 mo
247.634 194.322 li
@
244.597 189.498 mo
247.634 189.498 li
@
244.597 185.924 mo
247.634 185.924 li
@
244.597 183.245 mo
247.634 183.245 li
@
244.597 181.1 mo
247.634 181.1 li
@
244.597 179.314 mo
247.634 179.314 li
@
244.597 177.706 mo
247.634 177.706 li
@
244.597 176.276 mo
247.634 176.276 li
@
244.597 175.025 mo
250.672 175.025 li
@
244.597 166.629 mo
247.634 166.629 li
@
244.597 161.625 mo
247.634 161.625 li
@
244.597 158.231 mo
247.634 158.231 li
@
244.597 155.55 mo
247.634 155.55 li
@
244.597 153.229 mo
247.634 153.229 li
@
244.597 151.442 mo
247.634 151.442 li
@
244.597 149.834 mo
247.634 149.834 li
@
244.597 148.404 mo
247.634 148.404 li
@
244.597 147.154 mo
250.672 147.154 li
@
244.597 138.756 mo
247.634 138.756 li
@
244.597 133.932 mo
247.634 133.932 li
@
244.597 130.359 mo
247.634 130.359 li
@
244.597 127.679 mo
247.634 127.679 li
@
244.597 125.536 mo
247.634 125.536 li
@
244.597 123.747 mo
247.634 123.747 li
@
244.597 122.14 mo
247.634 122.14 li
@
244.597 120.711 mo
247.634 120.711 li
@
244.597 119.461 mo
250.672 119.461 li
@
244.597 111.063 mo
247.634 111.063 li
@
244.597 106.061 mo
247.634 106.061 li
@
244.597 102.665 mo
247.634 102.665 li
@
244.597 99.9859 mo
247.634 99.9859 li
@
244.597 97.6631 mo
247.634 97.6631 li
@
244.597 95.8761 mo
247.634 95.8761 li
@
244.597 94.2686 mo
247.634 94.2686 li
@
244.597 92.8393 mo
247.634 92.8393 li
@
244.597 91.5881 mo
250.672 91.5881 li
@
244.597 83.1904 mo
247.634 83.1904 li
@
244.597 78.3665 mo
247.634 78.3665 li
@
244.597 74.7938 mo
247.634 74.7938 li
@
244.597 72.1134 mo
247.634 72.1134 li
@
244.597 69.9688 mo
247.634 69.9688 li
@
244.597 68.183 mo
247.634 68.183 li
@
244.597 66.5743 mo
247.634 66.5743 li
@
244.597 65.1449 mo
247.634 65.1449 li
@
244.597 63.895 mo
250.672 63.895 li
@
244.597 55.4972 mo
247.634 55.4972 li
@
244.597 50.494 mo
247.634 50.494 li
@
244.597 47.0995 mo
247.634 47.0995 li
@
244.597 44.4202 mo
247.634 44.4202 li
@
244.597 42.0974 mo
247.634 42.0974 li
@
244.597 40.3105 mo
247.634 40.3105 li
@
244.597 38.7029 mo
247.634 38.7029 li
@
244.597 37.2724 mo
247.634 37.2724 li
@
244.597 36.0224 mo
250.672 36.0224 li
@
244.597 480.548 mo
244.597 36.0224 li
@
grestore
gsave
528.143 489.124 mo
582.904 489.124 li
582.904 475.367 li
528.143 475.367 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 486.264 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 481.083 mo
582.904 481.083 li
582.904 472.864 li
546.188 472.864 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 479.341 mo(-)sh556.908 479.341 mo(7)shgrestore
gsave
528.143 461.43 mo
582.904 461.43 li
582.904 447.672 li
528.143 447.672 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 458.571 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 453.39 mo
582.904 453.39 li
582.904 445.171 li
546.188 445.171 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 451.646 mo(-)sh556.908 451.646 mo(6)shgrestore
gsave
528.143 433.557 mo
582.904 433.557 li
582.904 419.801 li
528.143 419.801 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 430.698 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 425.518 mo
582.904 425.518 li
582.904 417.299 li
546.188 417.299 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 423.775 mo(-)sh556.908 423.775 mo(5)shgrestore
gsave
528.143 405.864 mo
582.904 405.864 li
582.904 392.107 li
528.143 392.107 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 403.005 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 397.824 mo
582.904 397.824 li
582.904 389.605 li
546.188 389.605 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 396.082 mo(-)sh556.908 396.082 mo(4)shgrestore
gsave
528.143 377.993 mo
582.904 377.993 li
582.904 364.235 li
528.143 364.235 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 375.133 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 369.953 mo
582.904 369.953 li
582.904 361.733 li
546.188 361.733 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 368.209 mo(-)sh556.908 368.209 mo(3)shgrestore
gsave
528.143 350.298 mo
582.904 350.298 li
582.904 336.542 li
528.143 336.542 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 347.44 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 342.258 mo
582.904 342.258 li
582.904 334.04 li
546.188 334.04 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 340.515 mo(-)sh556.908 340.515 mo(2)shgrestore
gsave
528.143 322.427 mo
582.904 322.427 li
582.904 308.669 li
528.143 308.669 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 319.567 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 314.387 mo
582.904 314.387 li
582.904 306.168 li
546.188 306.168 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 312.643 mo(-)sh556.908 312.643 mo(1)shgrestore
gsave
528.143 294.733 mo
582.904 294.733 li
582.904 280.975 li
528.143 280.975 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 291.874 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 286.694 mo
582.904 286.694 li
582.904 278.474 li
546.188 278.474 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 284.95 mo(0)shgrestore
gsave
528.143 266.861 mo
582.904 266.861 li
582.904 253.104 li
528.143 253.104 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 264.001 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 258.821 mo
582.904 258.821 li
582.904 250.602 li
546.188 250.602 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 257.078 mo(1)shgrestore
gsave
528.143 239.168 mo
582.904 239.168 li
582.904 225.411 li
528.143 225.411 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 236.308 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 231.127 mo
582.904 231.127 li
582.904 222.908 li
546.188 222.908 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 229.385 mo(2)shgrestore
gsave
528.143 211.296 mo
582.904 211.296 li
582.904 197.538 li
528.143 197.538 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 208.436 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 203.255 mo
582.904 203.255 li
582.904 195.037 li
546.188 195.037 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 201.512 mo(3)shgrestore
gsave
528.143 183.601 mo
582.904 183.601 li
582.904 169.845 li
528.143 169.845 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 180.743 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 175.562 mo
582.904 175.562 li
582.904 167.343 li
546.188 167.343 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 173.819 mo(4)shgrestore
gsave
528.143 155.73 mo
582.904 155.73 li
582.904 141.972 li
528.143 141.972 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 152.87 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 147.69 mo
582.904 147.69 li
582.904 139.471 li
546.188 139.471 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 145.946 mo(5)shgrestore
gsave
528.143 128.037 mo
582.904 128.037 li
582.904 114.279 li
528.143 114.279 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 125.177 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 119.997 mo
582.904 119.997 li
582.904 111.777 li
546.188 111.777 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 118.253 mo(6)shgrestore
gsave
528.143 100.164 mo
582.904 100.164 li
582.904 86.4067 li
528.143 86.4067 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 97.3043 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 92.124 mo
582.904 92.124 li
582.904 83.9056 li
546.188 83.9056 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 90.3807 mo(7)shgrestore
gsave
528.143 72.4709 mo
582.904 72.4709 li
582.904 58.7135 li
528.143 58.7135 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 69.6112 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 64.4309 mo
582.904 64.4309 li
582.904 56.2125 li
546.188 56.2125 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 62.6876 mo(8)shgrestore
gsave
528.143 44.5984 mo
582.904 44.5984 li
582.904 30.841 li
528.143 30.841 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [12.328 0 0 -12.328 0 0 ]msf542.436 41.7398 mo(10)[6.10236 0 ]xshgrestore
gsave
546.188 36.5583 mo
582.904 36.5583 li
582.904 28.34 li
546.188 28.34 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUM+Times-Roman*1 [7.32538 0 0 -7.32538 0 0 ]msf554.585 34.815 mo(9)shgrestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
0.893338 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
244.597 36.0224 mo
244.597 39.0593 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
@
252.28 36.0224 mo
252.28 39.0593 li
@
258.712 36.0224 mo
258.712 39.0593 li
@
264.43 36.0224 mo
264.43 39.0593 li
@
269.433 36.0224 mo
269.433 39.0593 li
@
273.899 36.0224 mo
273.899 42.0974 li
@
303.022 36.0224 mo
303.022 39.0593 li
@
320.174 36.0224 mo
320.174 39.0593 li
@
332.323 36.0224 mo
332.323 39.0593 li
@
341.615 36.0224 mo
341.615 39.0593 li
@
349.297 36.0224 mo
349.297 39.0593 li
@
355.907 36.0224 mo
355.907 39.0593 li
@
361.446 36.0224 mo
361.446 39.0593 li
@
366.449 36.0224 mo
366.449 39.0593 li
@
370.915 36.0224 mo
370.915 42.0974 li
@
400.038 36.0224 mo
400.038 39.0593 li
@
417.191 36.0224 mo
417.191 39.0593 li
@
429.34 36.0224 mo
429.34 39.0593 li
@
438.809 36.0224 mo
438.809 39.0593 li
@
446.492 36.0224 mo
446.492 39.0593 li
@
452.924 36.0224 mo
452.924 39.0593 li
@
458.642 36.0224 mo
458.642 39.0593 li
@
463.465 36.0224 mo
463.465 39.0593 li
@
467.932 36.0224 mo
467.932 42.0974 li
@
497.234 36.0224 mo
497.234 39.0593 li
@
514.206 36.0224 mo
514.206 39.0593 li
@
526.356 36.0224 mo
526.356 39.0593 li
@
535.825 36.0224 mo
535.825 39.0593 li
@
244.597 36.0224 mo
535.825 36.0224 li
@
535.825 480.548 mo
529.752 480.548 li
@
535.825 472.15 mo
532.789 472.15 li
@
535.825 467.326 mo
532.789 467.326 li
@
535.825 463.752 mo
532.789 463.752 li
@
535.825 461.073 mo
532.789 461.073 li
@
535.825 458.929 mo
532.789 458.929 li
@
535.825 457.142 mo
532.789 457.142 li
@
535.825 455.534 mo
532.789 455.534 li
@
535.825 454.105 mo
532.789 454.105 li
@
535.825 452.854 mo
529.752 452.854 li
@
535.825 444.456 mo
532.789 444.456 li
@
535.825 439.454 mo
532.789 439.454 li
@
535.825 436.059 mo
532.789 436.059 li
@
535.825 433.379 mo
532.789 433.379 li
@
535.825 431.056 mo
532.789 431.056 li
@
535.825 429.27 mo
532.789 429.27 li
@
535.825 427.662 mo
532.789 427.662 li
@
535.825 426.232 mo
532.789 426.232 li
@
535.825 424.981 mo
529.752 424.981 li
@
535.825 416.585 mo
532.789 416.585 li
@
535.825 411.761 mo
532.789 411.761 li
@
535.825 408.187 mo
532.789 408.187 li
@
535.825 405.506 mo
532.789 405.506 li
@
535.825 403.363 mo
532.789 403.363 li
@
535.825 401.576 mo
532.789 401.576 li
@
535.825 399.968 mo
532.789 399.968 li
@
535.825 398.539 mo
532.789 398.539 li
@
535.825 397.288 mo
529.752 397.288 li
@
535.825 388.891 mo
532.789 388.891 li
@
535.825 383.888 mo
532.789 383.888 li
@
535.825 380.494 mo
532.789 380.494 li
@
535.825 377.813 mo
532.789 377.813 li
@
535.825 375.492 mo
532.789 375.492 li
@
535.825 373.703 mo
532.789 373.703 li
@
535.825 372.096 mo
532.789 372.096 li
@
535.825 370.667 mo
532.789 370.667 li
@
535.825 369.417 mo
529.752 369.417 li
@
535.825 361.019 mo
532.789 361.019 li
@
535.825 356.195 mo
532.789 356.195 li
@
535.825 352.621 mo
532.789 352.621 li
@
535.825 349.942 mo
532.789 349.942 li
@
535.825 347.797 mo
532.789 347.797 li
@
535.825 346.01 mo
532.789 346.01 li
@
535.825 344.403 mo
532.789 344.403 li
@
535.825 342.973 mo
532.789 342.973 li
@
535.825 341.722 mo
529.752 341.722 li
@
535.825 333.326 mo
532.789 333.326 li
@
535.825 328.322 mo
532.789 328.322 li
@
535.825 324.928 mo
532.789 324.928 li
@
535.825 322.247 mo
532.789 322.247 li
@
535.825 319.925 mo
532.789 319.925 li
@
535.825 318.139 mo
532.789 318.139 li
@
535.825 316.53 mo
532.789 316.53 li
@
535.825 315.101 mo
532.789 315.101 li
@
535.825 313.851 mo
529.752 313.851 li
@
535.825 305.453 mo
532.789 305.453 li
@
535.825 300.629 mo
532.789 300.629 li
@
535.825 297.055 mo
532.789 297.055 li
@
535.825 294.376 mo
532.789 294.376 li
@
535.825 292.232 mo
532.789 292.232 li
@
535.825 290.445 mo
532.789 290.445 li
@
535.825 288.837 mo
532.789 288.837 li
@
535.825 287.408 mo
532.789 287.408 li
@
535.825 286.157 mo
529.752 286.157 li
@
535.825 277.76 mo
532.789 277.76 li
@
535.825 272.757 mo
532.789 272.757 li
@
535.825 269.362 mo
532.789 269.362 li
@
535.825 266.682 mo
532.789 266.682 li
@
535.825 264.36 mo
532.789 264.36 li
@
535.825 262.573 mo
532.789 262.573 li
@
535.825 260.966 mo
532.789 260.966 li
@
535.825 259.535 mo
532.789 259.535 li
@
535.825 258.285 mo
529.752 258.285 li
@
535.825 249.887 mo
532.789 249.887 li
@
535.825 245.064 mo
532.789 245.064 li
@
535.825 241.491 mo
532.789 241.491 li
@
535.825 238.81 mo
532.789 238.81 li
@
535.825 236.666 mo
532.789 236.666 li
@
535.825 234.879 mo
532.789 234.879 li
@
535.825 233.271 mo
532.789 233.271 li
@
535.825 231.842 mo
532.789 231.842 li
@
535.825 230.592 mo
529.752 230.592 li
@
535.825 222.194 mo
532.789 222.194 li
@
535.825 217.191 mo
532.789 217.191 li
@
535.825 213.797 mo
532.789 213.797 li
@
535.825 211.117 mo
532.789 211.117 li
@
535.825 208.794 mo
532.789 208.794 li
@
535.825 207.008 mo
532.789 207.008 li
@
535.825 205.399 mo
532.789 205.399 li
@
535.825 203.969 mo
532.789 203.969 li
@
535.825 202.72 mo
529.752 202.72 li
@
535.825 194.322 mo
532.789 194.322 li
@
535.825 189.498 mo
532.789 189.498 li
@
535.825 185.924 mo
532.789 185.924 li
@
535.825 183.245 mo
532.789 183.245 li
@
535.825 181.1 mo
532.789 181.1 li
@
535.825 179.314 mo
532.789 179.314 li
@
535.825 177.706 mo
532.789 177.706 li
@
535.825 176.276 mo
532.789 176.276 li
@
535.825 175.025 mo
529.752 175.025 li
@
535.825 166.629 mo
532.789 166.629 li
@
535.825 161.625 mo
532.789 161.625 li
@
535.825 158.231 mo
532.789 158.231 li
@
535.825 155.55 mo
532.789 155.55 li
@
535.825 153.229 mo
532.789 153.229 li
@
535.825 151.442 mo
532.789 151.442 li
@
535.825 149.834 mo
532.789 149.834 li
@
535.825 148.404 mo
532.789 148.404 li
@
535.825 147.154 mo
529.752 147.154 li
@
535.825 138.756 mo
532.789 138.756 li
@
535.825 133.932 mo
532.789 133.932 li
@
535.825 130.359 mo
532.789 130.359 li
@
535.825 127.679 mo
532.789 127.679 li
@
535.825 125.536 mo
532.789 125.536 li
@
535.825 123.747 mo
532.789 123.747 li
@
535.825 122.14 mo
532.789 122.14 li
@
535.825 120.711 mo
532.789 120.711 li
@
535.825 119.461 mo
529.752 119.461 li
@
535.825 111.063 mo
532.789 111.063 li
@
535.825 106.061 mo
532.789 106.061 li
@
535.825 102.665 mo
532.789 102.665 li
@
535.825 99.9859 mo
532.789 99.9859 li
@
535.825 97.6631 mo
532.789 97.6631 li
@
535.825 95.8761 mo
532.789 95.8761 li
@
535.825 94.2686 mo
532.789 94.2686 li
@
535.825 92.8393 mo
532.789 92.8393 li
@
535.825 91.5881 mo
529.752 91.5881 li
@
535.825 83.1904 mo
532.789 83.1904 li
@
535.825 78.3665 mo
532.789 78.3665 li
@
535.825 74.7938 mo
532.789 74.7938 li
@
535.825 72.1134 mo
532.789 72.1134 li
@
535.825 69.9688 mo
532.789 69.9688 li
@
535.825 68.183 mo
532.789 68.183 li
@
535.825 66.5743 mo
532.789 66.5743 li
@
535.825 65.1449 mo
532.789 65.1449 li
@
535.825 63.895 mo
529.752 63.895 li
@
535.825 55.4972 mo
532.789 55.4972 li
@
535.825 50.494 mo
532.789 50.494 li
@
535.825 47.0995 mo
532.789 47.0995 li
@
535.825 44.4202 mo
532.789 44.4202 li
@
535.825 42.0974 mo
532.789 42.0974 li
@
535.825 40.3105 mo
532.789 40.3105 li
@
535.825 38.7029 mo
532.789 38.7029 li
@
535.825 37.2724 mo
532.789 37.2724 li
@
535.825 36.0224 mo
529.752 36.0224 li
@
535.825 480.548 mo
535.825 36.0224 li
@
grestore
gsave
244.597 480.726 mo
536.004 480.726 li
536.004 36.0225 li
244.597 36.0225 li
cp
clp
0.536003 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
395.75 480.548 mo
395.75 480.012 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
@
grestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
0.536003 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
395.75 477.688 mo
395.75 477.152 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
@
395.75 474.829 mo
395.75 474.294 li
@
395.75 471.972 mo
395.75 471.436 li
@
395.75 469.112 mo
395.75 468.576 li
@
395.75 466.253 mo
395.75 465.718 li
@
395.75 463.396 mo
395.75 462.86 li
@
395.75 460.536 mo
395.75 460 li
@
395.75 457.677 mo
395.75 457.142 li
@
395.75 454.819 mo
395.75 454.284 li
@
395.75 451.96 mo
395.75 451.424 li
@
395.75 449.102 mo
395.75 448.566 li
@
395.75 446.243 mo
395.75 445.708 li
@
395.75 443.384 mo
395.75 442.848 li
@
395.75 440.526 mo
395.75 439.99 li
@
395.75 437.667 mo
395.75 437.131 li
@
395.75 434.808 mo
395.75 434.272 li
@
395.75 431.95 mo
395.75 431.414 li
@
395.75 429.091 mo
395.75 428.555 li
@
395.75 426.232 mo
395.75 425.696 li
@
395.75 423.374 mo
395.75 422.838 li
@
395.75 420.515 mo
395.75 419.979 li
@
395.75 417.656 mo
395.75 417.12 li
@
395.75 414.798 mo
395.75 414.262 li
@
395.75 411.939 mo
395.75 411.403 li
@
395.75 409.08 mo
395.75 408.544 li
@
395.75 406.222 mo
395.75 405.686 li
@
395.75 403.363 mo
395.75 402.827 li
@
395.75 400.504 mo
395.75 399.968 li
@
395.75 397.646 mo
395.75 397.11 li
@
395.75 394.787 mo
395.75 394.251 li
@
395.75 391.928 mo
395.75 391.392 li
@
395.75 389.07 mo
395.75 388.534 li
@
395.75 386.211 mo
395.75 385.675 li
@
395.75 383.352 mo
395.75 382.816 li
@
395.75 380.494 mo
395.75 379.958 li
@
395.75 377.635 mo
395.75 377.099 li
@
395.75 374.776 mo
395.75 374.24 li
@
395.75 371.918 mo
395.75 371.382 li
@
395.75 369.059 mo
395.75 368.523 li
@
395.75 366.2 mo
395.75 365.664 li
@
395.75 363.342 mo
395.75 362.806 li
@
395.75 360.483 mo
395.75 359.947 li
@
395.75 357.624 mo
395.75 357.088 li
@
395.75 354.766 mo
395.75 354.23 li
@
395.75 351.907 mo
395.75 351.371 li
@
395.75 349.048 mo
395.75 348.512 li
@
395.75 346.19 mo
395.75 345.654 li
@
395.75 343.331 mo
395.75 342.795 li
@
395.75 340.472 mo
395.75 339.937 li
@
395.75 337.614 mo
395.75 337.078 li
@
395.75 334.754 mo
395.75 334.219 li
@
395.75 331.896 mo
395.75 331.361 li
@
395.75 329.038 mo
395.75 328.502 li
@
395.75 326.178 mo
395.75 325.643 li
@
395.75 323.32 mo
395.75 322.784 li
@
395.75 320.462 mo
395.75 319.926 li
@
395.75 317.602 mo
395.75 317.067 li
@
395.75 314.744 mo
395.75 314.209 li
@
395.75 311.886 mo
395.75 311.35 li
@
395.75 309.026 mo
395.75 308.491 li
@
395.75 306.168 mo
395.75 305.633 li
@
395.75 303.309 mo
395.75 302.773 li
@
395.75 300.45 mo
395.75 299.915 li
@
395.75 297.592 mo
395.75 297.057 li
@
395.75 294.733 mo
395.75 294.197 li
@
395.75 291.874 mo
395.75 291.338 li
@
395.75 289.016 mo
395.75 288.481 li
@
395.75 286.157 mo
395.75 285.621 li
@
395.75 283.298 mo
395.75 282.762 li
@
395.75 280.44 mo
395.75 279.905 li
@
395.75 277.581 mo
395.75 277.045 li
@
395.75 274.722 mo
395.75 274.186 li
@
395.75 271.863 mo
395.75 271.329 li
@
395.75 269.005 mo
395.75 268.469 li
@
395.75 266.146 mo
395.75 265.61 li
@
395.75 263.287 mo
395.75 262.751 li
@
395.75 260.429 mo
395.75 259.893 li
@
395.75 257.57 mo
395.75 257.034 li
@
395.75 254.711 mo
395.75 254.175 li
@
395.75 251.853 mo
395.75 251.317 li
@
395.75 248.994 mo
395.75 248.458 li
@
395.75 246.135 mo
395.75 245.599 li
@
395.75 243.277 mo
395.75 242.741 li
@
395.75 240.418 mo
395.75 239.882 li
@
395.75 237.559 mo
395.75 237.023 li
@
395.75 234.701 mo
395.75 234.165 li
@
395.75 231.842 mo
395.75 231.306 li
@
395.75 228.983 mo
395.75 228.447 li
@
395.75 226.125 mo
395.75 225.589 li
@
395.75 223.266 mo
395.75 222.73 li
@
395.75 220.407 mo
395.75 219.872 li
@
395.75 217.549 mo
395.75 217.013 li
@
395.75 214.69 mo
395.75 214.154 li
@
395.75 211.831 mo
395.75 211.296 li
@
395.75 208.973 mo
395.75 208.437 li
@
395.75 206.114 mo
395.75 205.578 li
@
395.75 203.255 mo
395.75 202.72 li
@
395.75 200.397 mo
395.75 199.861 li
@
395.75 197.538 mo
395.75 197.002 li
@
395.75 194.679 mo
395.75 194.144 li
@
395.75 191.821 mo
395.75 191.285 li
@
395.75 188.962 mo
395.75 188.426 li
@
395.75 186.103 mo
395.75 185.568 li
@
395.75 183.245 mo
395.75 182.709 li
@
395.75 180.386 mo
395.75 179.85 li
@
395.75 177.527 mo
395.75 176.992 li
@
395.75 174.669 mo
395.75 174.133 li
@
395.75 171.81 mo
395.75 171.274 li
@
395.75 168.951 mo
395.75 168.416 li
@
395.75 166.093 mo
395.75 165.557 li
@
395.75 163.234 mo
395.75 162.698 li
@
395.75 160.375 mo
395.75 159.84 li
@
395.75 157.517 mo
395.75 156.981 li
@
395.75 154.658 mo
395.75 154.122 li
@
395.75 151.799 mo
395.75 151.264 li
@
395.75 148.941 mo
395.75 148.405 li
@
395.75 146.082 mo
395.75 145.546 li
@
395.75 143.222 mo
395.75 142.688 li
@
395.75 140.365 mo
395.75 139.829 li
@
395.75 137.506 mo
395.75 136.97 li
@
395.75 134.646 mo
395.75 134.112 li
@
395.75 131.789 mo
395.75 131.253 li
@
395.75 128.929 mo
395.75 128.393 li
@
395.75 126.07 mo
395.75 125.536 li
@
395.75 123.213 mo
395.75 122.677 li
@
395.75 120.353 mo
395.75 119.817 li
@
395.75 117.494 mo
395.75 116.96 li
@
395.75 114.637 mo
395.75 114.101 li
@
395.75 111.777 mo
395.75 111.241 li
@
395.75 108.918 mo
395.75 108.384 li
@
395.75 106.061 mo
395.75 105.525 li
@
395.75 103.201 mo
395.75 102.665 li
@
395.75 100.342 mo
395.75 99.8077 li
@
395.75 97.4837 mo
395.75 96.9478 li
@
395.75 94.625 mo
395.75 94.0892 li
@
395.75 91.7664 mo
395.75 91.2305 li
@
395.75 88.9077 mo
395.75 88.3719 li
@
395.75 86.0491 mo
395.75 85.5132 li
@
395.75 83.1904 mo
395.75 82.6545 li
@
395.75 80.3317 mo
395.75 79.7959 li
@
395.75 77.4731 mo
395.75 76.9372 li
@
395.75 74.6144 mo
395.75 74.0786 li
@
395.75 71.7557 mo
395.75 71.2199 li
@
395.75 68.8971 mo
395.75 68.3612 li
@
395.75 66.0384 mo
395.75 65.5026 li
@
395.75 63.1797 mo
395.75 62.6439 li
@
395.75 60.3211 mo
395.75 59.7852 li
@
395.75 57.4624 mo
395.75 56.9266 li
@
395.75 54.6038 mo
395.75 54.0679 li
@
395.75 51.7451 mo
395.75 51.2092 li
@
395.75 48.8864 mo
395.75 48.3506 li
@
395.75 46.0278 mo
395.75 45.4919 li
@
395.75 43.1691 mo
395.75 42.6333 li
@
395.75 40.3105 mo
395.75 39.7746 li
@
395.75 37.4518 mo
395.75 36.9159 li
@
grestore
gsave
244.597 480.726 mo
536.004 480.726 li
536.004 36.0225 li
244.597 36.0225 li
cp
clp
0.536003 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
482.225 35.6648 mo
482.225 36.2007 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
@
grestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
0.536003 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
482.225 38.5235 mo
482.225 39.0593 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
@
482.225 41.3822 mo
482.225 41.918 li
@
482.225 44.2408 mo
482.225 44.7767 li
@
482.225 47.0995 mo
482.225 47.6353 li
@
482.225 49.9581 mo
482.225 50.494 li
@
482.225 52.8168 mo
482.225 53.3527 li
@
482.225 55.6755 mo
482.225 56.2113 li
@
482.225 58.5353 mo
482.225 59.07 li
@
482.225 61.3928 mo
482.225 61.9286 li
@
482.225 64.2514 mo
482.225 64.7873 li
@
482.225 67.1113 mo
482.225 67.646 li
@
482.225 69.9688 mo
482.225 70.5046 li
@
482.225 72.8274 mo
482.225 73.3633 li
@
482.225 75.6873 mo
482.225 76.222 li
@
482.225 78.5448 mo
482.225 79.0806 li
@
482.225 81.4034 mo
482.225 81.9393 li
@
482.225 84.2633 mo
482.225 84.7979 li
@
482.225 87.1207 mo
482.225 87.6566 li
@
482.225 89.9806 mo
482.225 90.5164 li
@
482.225 92.8393 mo
482.225 93.3751 li
@
482.225 95.6967 mo
482.225 96.2326 li
@
482.225 98.5566 mo
482.225 99.0924 li
@
482.225 101.415 mo
482.225 101.951 li
@
482.225 104.273 mo
482.225 104.809 li
@
482.225 107.133 mo
482.225 107.668 li
@
482.225 109.991 mo
482.225 110.527 li
@
482.225 112.85 mo
482.225 113.385 li
@
482.225 115.709 mo
482.225 116.244 li
@
482.225 118.567 mo
482.225 119.103 li
@
482.225 121.426 mo
482.225 121.962 li
@
482.225 124.285 mo
482.225 124.82 li
@
482.225 127.143 mo
482.225 127.679 li
@
482.225 130.002 mo
482.225 130.538 li
@
482.225 132.861 mo
482.225 133.396 li
@
482.225 135.719 mo
482.225 136.255 li
@
482.225 138.578 mo
482.225 139.114 li
@
482.225 141.437 mo
482.225 141.972 li
@
482.225 144.295 mo
482.225 144.831 li
@
482.225 147.154 mo
482.225 147.69 li
@
482.225 150.012 mo
482.225 150.548 li
@
482.225 152.871 mo
482.225 153.407 li
@
482.225 155.73 mo
482.225 156.266 li
@
482.225 158.588 mo
482.225 159.124 li
@
482.225 161.447 mo
482.225 161.983 li
@
482.225 164.306 mo
482.225 164.842 li
@
482.225 167.164 mo
482.225 167.7 li
@
482.225 170.023 mo
482.225 170.559 li
@
482.225 172.882 mo
482.225 173.418 li
@
482.225 175.74 mo
482.225 176.276 li
@
482.225 178.599 mo
482.225 179.135 li
@
482.225 181.458 mo
482.225 181.994 li
@
482.225 184.316 mo
482.225 184.852 li
@
482.225 187.175 mo
482.225 187.711 li
@
482.225 190.034 mo
482.225 190.57 li
@
482.225 192.892 mo
482.225 193.428 li
@
482.225 195.751 mo
482.225 196.287 li
@
482.225 198.61 mo
482.225 199.146 li
@
482.225 201.468 mo
482.225 202.004 li
@
482.225 204.327 mo
482.225 204.863 li
@
482.225 207.186 mo
482.225 207.722 li
@
482.225 210.044 mo
482.225 210.58 li
@
482.225 212.903 mo
482.225 213.439 li
@
482.225 215.762 mo
482.225 216.298 li
@
482.225 218.62 mo
482.225 219.156 li
@
482.225 221.479 mo
482.225 222.015 li
@
482.225 224.338 mo
482.225 224.874 li
@
482.225 227.196 mo
482.225 227.732 li
@
482.225 230.055 mo
482.225 230.591 li
@
482.225 232.914 mo
482.225 233.45 li
@
482.225 235.772 mo
482.225 236.308 li
@
482.225 238.631 mo
482.225 239.167 li
@
482.225 241.491 mo
482.225 242.026 li
@
482.225 244.348 mo
482.225 244.884 li
@
482.225 247.207 mo
482.225 247.743 li
@
482.225 250.067 mo
482.225 250.602 li
@
482.225 252.924 mo
482.225 253.46 li
@
482.225 255.783 mo
482.225 256.319 li
@
482.225 258.643 mo
482.225 259.177 li
@
482.225 261.5 mo
482.225 262.036 li
@
482.225 264.36 mo
482.225 264.896 li
@
482.225 267.219 mo
482.225 267.754 li
@
482.225 270.076 mo
482.225 270.612 li
@
482.225 272.936 mo
482.225 273.472 li
@
482.225 275.795 mo
482.225 276.329 li
@
482.225 278.652 mo
482.225 279.188 li
@
482.225 281.512 mo
482.225 282.048 li
@
482.225 284.371 mo
482.225 284.905 li
@
482.225 287.228 mo
482.225 287.764 li
@
482.225 290.088 mo
482.225 290.624 li
@
482.225 292.947 mo
482.225 293.483 li
@
482.225 295.805 mo
482.225 296.341 li
@
482.225 298.664 mo
482.225 299.2 li
@
482.225 301.523 mo
482.225 302.059 li
@
482.225 304.381 mo
482.225 304.917 li
@
482.225 307.24 mo
482.225 307.776 li
@
482.225 310.099 mo
482.225 310.635 li
@
482.225 312.957 mo
482.225 313.493 li
@
482.225 315.816 mo
482.225 316.352 li
@
482.225 318.675 mo
482.225 319.211 li
@
482.225 321.533 mo
482.225 322.069 li
@
482.225 324.392 mo
482.225 324.928 li
@
482.225 327.251 mo
482.225 327.787 li
@
482.225 330.109 mo
482.225 330.645 li
@
482.225 332.968 mo
482.225 333.504 li
@
482.225 335.827 mo
482.225 336.363 li
@
482.225 338.685 mo
482.225 339.221 li
@
482.225 341.544 mo
482.225 342.08 li
@
482.225 344.403 mo
482.225 344.939 li
@
482.225 347.261 mo
482.225 347.797 li
@
482.225 350.12 mo
482.225 350.656 li
@
482.225 352.979 mo
482.225 353.515 li
@
482.225 355.837 mo
482.225 356.373 li
@
482.225 358.696 mo
482.225 359.232 li
@
482.225 361.555 mo
482.225 362.091 li
@
482.225 364.413 mo
482.225 364.949 li
@
482.225 367.272 mo
482.225 367.808 li
@
482.225 370.131 mo
482.225 370.667 li
@
482.225 372.989 mo
482.225 373.525 li
@
482.225 375.848 mo
482.225 376.384 li
@
482.225 378.707 mo
482.225 379.242 li
@
482.225 381.565 mo
482.225 382.101 li
@
482.225 384.424 mo
482.225 384.96 li
@
482.225 387.283 mo
482.225 387.818 li
@
482.225 390.141 mo
482.225 390.677 li
@
482.225 393 mo
482.225 393.536 li
@
482.225 395.859 mo
482.225 396.394 li
@
482.225 398.717 mo
482.225 399.253 li
@
482.225 401.576 mo
482.225 402.112 li
@
482.225 404.435 mo
482.225 404.97 li
@
482.225 407.293 mo
482.225 407.829 li
@
482.225 410.152 mo
482.225 410.688 li
@
482.225 413.011 mo
482.225 413.546 li
@
482.225 415.869 mo
482.225 416.405 li
@
482.225 418.728 mo
482.225 419.264 li
@
482.225 421.587 mo
482.225 422.122 li
@
482.225 424.446 mo
482.225 424.981 li
@
482.225 427.304 mo
482.225 427.84 li
@
482.225 430.163 mo
482.225 430.698 li
@
482.225 433.022 mo
482.225 433.557 li
@
482.225 435.88 mo
482.225 436.416 li
@
482.225 438.74 mo
482.225 439.276 li
@
482.225 441.598 mo
482.225 442.133 li
@
482.225 444.456 mo
482.225 444.992 li
@
482.225 447.316 mo
482.225 447.852 li
@
482.225 450.174 mo
482.225 450.709 li
@
482.225 453.032 mo
482.225 453.568 li
@
482.225 455.892 mo
482.225 456.428 li
@
482.225 458.75 mo
482.225 459.285 li
@
482.225 461.608 mo
482.225 462.144 li
@
482.225 464.468 mo
482.225 465.004 li
@
482.225 467.326 mo
482.225 467.861 li
@
482.225 470.185 mo
482.225 470.721 li
@
482.225 473.044 mo
482.225 473.58 li
@
482.225 475.902 mo
482.225 476.438 li
@
482.225 478.761 mo
482.225 479.297 li
@
0.893338 lw
429.34 66.2178 mo
432.198 66.0384 li
435.235 66.0384 li
438.094 65.8602 li
440.953 65.682 li
443.989 65.682 li
446.848 65.5037 li
449.885 65.3255 li
452.742 65.1461 li
455.601 65.1461 li
458.638 64.9679 li
461.497 64.7897 li
464.355 64.6115 li
467.392 64.6115 li
470.251 64.4332 li
473.11 64.255 li
476.146 64.0756 li
479.005 64.0756 li
482.22 63.8974 li
484.901 63.7191 li
487.759 63.5409 li
490.618 63.5409 li
493.655 63.3627 li
496.512 63.1845 li
499.55 63.0051 li
502.408 63.0051 li
505.267 62.8268 li
508.303 62.6486 li
511.162 62.6486 li
514.021 62.4704 li
517.058 62.2922 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
370.915 68.8971 mo
373.774 68.7188 li
376.811 68.5406 li
379.67 68.5406 li
382.528 68.3624 li
385.565 68.1842 li
388.424 68.0048 li
391.281 68.0048 li
395.749 67.8266 li
397.178 67.6483 li
400.037 67.6483 li
403.074 67.4701 li
405.932 67.2919 li
408.969 67.1137 li
411.827 67.1137 li
414.685 66.9342 li
417.722 66.756 li
420.581 66.5778 li
423.439 66.5778 li
426.476 66.3996 li
429.335 66.2213 li
@
370.915 412.297 mo
373.774 408.723 li
376.811 405.329 li
379.67 402.113 li
382.528 398.897 li
385.565 395.86 li
388.424 393.001 li
391.281 390.144 li
395.749 386.213 li
397.178 384.784 li
400.037 382.282 li
403.074 379.781 li
405.932 377.28 li
408.969 374.958 li
411.827 372.813 li
414.685 370.492 li
417.722 368.347 li
420.581 366.204 li
423.439 364.059 li
426.476 362.095 li
429.335 360.13 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.501953 0 1 colr
@
429.34 360.125 mo
432.198 358.16 li
435.235 356.374 li
438.094 354.409 li
440.953 352.622 li
443.989 350.835 li
446.848 349.049 li
449.885 347.442 li
452.742 345.655 li
455.601 344.047 li
458.638 342.44 li
461.497 340.832 li
464.355 339.225 li
467.392 337.616 li
470.251 336.008 li
473.11 334.579 li
476.146 333.151 li
479.005 331.542 li
482.22 330.113 li
484.901 328.685 li
487.759 327.255 li
490.618 325.826 li
493.655 324.575 li
496.512 323.146 li
499.55 321.716 li
502.408 320.466 li
505.267 319.216 li
508.303 317.787 li
511.162 316.536 li
514.021 315.286 li
517.058 314.036 li
@
grestore
gsave
244.597 480.726 mo
536.004 480.726 li
536.004 36.0225 li
244.597 36.0225 li
cp
clp
0.893338 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
370.915 527.536 mo
373.774 515.208 li
376.811 504.131 li
379.67 493.948 li
382.528 484.836 li
385.565 476.439 li
388.424 468.757 li
391.281 461.61 li
395.749 451.963 li
397.178 448.746 li
400.037 443.029 li
403.074 437.491 li
405.932 432.489 li
408.969 427.664 li
411.827 423.019 li
414.685 418.553 li
417.722 414.443 li
420.581 410.513 li
423.439 406.761 li
426.476 403.188 li
429.335 399.615 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.501953 0 1 colr
@
grestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
0.893338 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
429.34 399.79 mo
432.198 396.396 li
435.235 393.179 li
438.094 390.143 li
440.953 386.927 li
443.989 384.069 li
446.848 381.388 li
449.885 378.531 li
452.742 376.029 li
455.601 373.349 li
458.638 370.848 li
461.497 368.525 li
464.355 366.024 li
467.392 363.703 li
470.251 361.558 li
473.11 359.415 li
476.146 357.27 li
479.005 355.127 li
482.22 352.804 li
484.901 351.018 li
487.759 349.053 li
490.618 347.088 li
493.655 345.123 li
496.512 343.337 li
499.55 341.55 li
502.408 339.763 li
505.267 337.977 li
508.303 336.19 li
511.162 334.583 li
514.021 332.796 li
517.058 331.188 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.501953 0 1 colr
@
370.915 380.851 mo
373.774 376.026 li
376.811 371.56 li
379.67 367.63 li
382.528 363.878 li
385.565 360.484 li
388.424 357.447 li
391.281 354.589 li
395.749 350.479 li
397.178 349.229 li
400.037 346.906 li
403.074 344.584 li
405.932 342.262 li
408.79 340.118 li
411.827 337.974 li
414.685 335.83 li
417.722 333.865 li
420.581 331.722 li
423.439 329.757 li
426.476 327.612 li
429.335 325.647 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0 0 colr
@
429.34 331.003 mo
432.198 328.144 li
435.235 325.464 li
438.094 322.784 li
440.953 320.283 li
443.989 317.782 li
446.848 315.281 li
449.885 312.959 li
452.742 310.636 li
455.601 308.314 li
458.638 305.991 li
461.497 303.848 li
464.355 301.705 li
467.392 299.56 li
470.251 297.595 li
473.11 295.451 li
476.146 293.486 li
479.005 291.521 li
482.22 289.378 li
484.901 287.77 li
487.759 285.805 li
490.618 284.018 li
493.655 282.231 li
496.512 280.445 li
499.55 278.658 li
502.408 277.051 li
505.267 275.264 li
508.303 273.656 li
511.162 272.049 li
514.021 270.441 li
517.058 268.833 li
@
370.915 158.41 mo
373.774 157.337 li
376.811 156.266 li
379.67 155.194 li
382.528 154.122 li
385.565 153.051 li
388.424 152.157 li
391.281 151.085 li
395.749 149.656 li
397.178 149.12 li
400.037 148.227 li
403.074 147.334 li
405.932 146.262 li
408.79 145.369 li
411.827 144.476 li
414.685 143.583 li
417.722 142.69 li
420.581 141.796 li
423.439 140.904 li
426.476 140.011 li
429.335 139.117 li
@
429.34 139.114 mo
432.198 138.22 li
435.235 137.328 li
438.094 136.434 li
440.953 135.719 li
443.989 134.827 li
446.848 133.933 li
449.885 133.219 li
452.742 132.326 li
455.601 131.612 li
458.638 130.718 li
461.497 130.003 li
464.355 129.111 li
467.392 128.396 li
470.251 127.681 li
473.11 126.788 li
476.146 126.074 li
479.005 125.359 li
482.22 124.466 li
484.901 123.93 li
487.759 123.037 li
490.618 122.323 li
493.655 121.608 li
496.512 121.072 li
499.55 120.358 li
502.408 119.642 li
505.267 118.928 li
508.303 118.213 li
511.162 117.499 li
514.021 116.784 li
517.058 116.249 li
@
370.915 255.962 mo
376.811 254.175 li
382.528 252.388 li
388.424 250.781 li
395.75 248.638 li
400.037 247.388 li
405.933 245.601 li
411.829 243.814 li
417.724 242.206 li
423.442 240.419 li
429.337 238.633 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0 1 colr
@
370.915 270.434 mo
376.811 268.648 li
382.528 267.039 li
388.424 265.254 li
395.75 263.288 li
400.037 262.039 li
405.933 260.252 li
411.829 258.644 li
417.724 256.857 li
423.442 255.25 li
429.337 253.463 li
@
429.34 239.525 mo
435.235 237.559 li
440.953 235.774 li
446.848 233.808 li
452.745 232.021 li
458.64 230.056 li
464.358 228.27 li
470.253 226.483 li
476.149 224.697 li
482.224 222.911 li
487.762 221.303 li
493.658 219.516 li
499.554 217.909 li
505.271 216.122 li
511.167 214.514 li
517.062 212.907 li
@
429.34 254.711 mo
435.235 252.746 li
440.953 250.781 li
446.848 248.817 li
452.745 246.852 li
458.64 245.065 li
464.358 243.1 li
470.253 241.314 li
476.149 239.527 li
482.224 237.74 li
487.762 235.954 li
493.658 234.167 li
499.554 232.56 li
505.271 230.773 li
511.167 228.986 li
517.062 227.378 li
@
370.915 284.191 mo
376.811 276.867 li
382.528 270.256 li
388.424 264.003 li
395.75 256.857 li
400.037 252.747 li
405.933 247.566 li
411.829 242.742 li
417.724 238.098 li
423.442 233.63 li
429.337 229.522 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0 0 colr
@
370.915 231.306 mo
376.811 235.594 li
382.528 239.882 li
388.424 244.169 li
395.75 249.529 li
400.037 252.745 li
405.933 257.033 li
411.829 261.143 li
417.724 265.43 li
423.442 269.539 li
429.337 273.649 li
@
370.915 393.715 mo
376.811 398.181 li
382.528 402.649 li
388.424 407.115 li
395.75 412.475 li
400.037 415.869 li
405.933 420.335 li
411.829 424.623 li
417.724 428.911 li
423.442 433.199 li
429.337 437.486 li
@
429.34 229.519 mo
435.235 225.411 li
440.953 221.48 li
446.848 217.906 li
452.745 214.155 li
458.64 210.761 li
464.358 207.366 li
470.253 203.972 li
476.149 200.935 li
482.224 197.72 li
487.762 194.861 li
493.658 192.003 li
499.554 188.966 li
505.271 186.286 li
511.167 183.428 li
517.062 180.927 li
@
429.34 274.186 mo
435.235 278.116 li
440.953 282.404 li
446.848 286.514 li
452.745 290.623 li
458.64 294.733 li
464.358 298.842 li
470.253 302.773 li
476.149 306.881 li
482.224 310.991 li
487.762 314.921 li
493.658 319.031 li
499.554 322.962 li
505.271 327.07 li
511.167 331.001 li
517.062 334.931 li
@
grestore
gsave
244.597 480.726 mo
536.004 480.726 li
536.004 36.0225 li
244.597 36.0225 li
cp
clp
0.893338 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
429.34 443.027 mo
435.235 447.315 li
440.953 451.603 li
446.848 455.891 li
452.745 460 li
458.64 464.287 li
464.358 468.575 li
470.253 472.685 li
476.149 476.973 li
482.224 481.26 li
487.762 485.369 li
493.658 489.479 li
499.554 493.588 li
505.271 497.698 li
511.167 501.45 li
517.062 505.022 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 0 0 colr
@
grestore
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
true set_gvm
%ADOBeginSubsetFont: BJEBAA+Symbol Initial
ct_T42Dict begin
-0.012 -0.176 0.602 0.809
 256 array 0 1 255 {1 index exch /.notdef put} for  /BJEBAA+Symbol
Type42DictBegin
[<00010000000b000b000b000b637674206e538304000000bc000002146670
676d61177010000002d00000008d676c7966e4bc7c1200000c1c00000164
68656164f3a1ab960000036000000036686865610cca01d2000003980000
0024686d74780e050091000003bc0000000c6c6f6361005800d4000003c8
000000086d61787008080186000003d0000000206e616d65da2e92180000
03f00000001f707265705ea932a8000004100000080c6764697200000000
000000000000000000ee00cd003b00870289003f005600c1005e01ec00b2
0193008b012d008900ee003b00ae00b200c700b20037002d006003a600c1
00fc00d300b800d3025c00cb00c100660031021900c1004e005400b2009c
0202021d007500c1019600c1020e023f01ac009e029c017f00a0005a001f
042700c100f4005803b4006d003302a8005e046a02850700007302a20075
01100073005e0242024e0902009804f600370546005c00bc00b000a6036d
02e7075e004401f80075006800dd00e1003502370062008d0262008900be
01d301b601d701e3025200cf01c301fc01cd054805480548056600000017
00ee05c100b6021b007100b60000001b003f030405480548054805480000
001f0029004e0029004e0066019305cb019e008b015000ee00ee0031009a
0091004e009a054800b000310398002d036d003300e9004a004a00290398
039800330583004a00c3008f005205d3005a019c0075067d006003980398
03b601b200330398058301c70398039803980000001201e5061d00390421
0227065e008700e905b0023d02d70077008302f6058301b400df058d02a6
00750112059c02830162005e0242024e004e0552008b058d001404f60021
058d005c002d001f05f4005201ba022d001003a601aa0075006800dd00e1
05c902e7020c0646006405ec01ee01f8062f062501b205f80200008301c1
0635003d01fc063301be0639060e00680083006200be7b857fff00820030
4007060504030201002c2010b002254964b040515820c859212d2cb00225
4964b040515820c859212d2c20100720b00050b00d7920b8ffff5058041b
0559b0051cb0032508b0042523e120b00050b00d7920b8ffff5058041b05
59b0051cb0032508e12d2c4b505820b80107454459212d2cb00225456044
2d2c4b5358b00225b0022545445921212d2c45442d000000000100000001
0000b57a90f45f0f3cf50101080000000000c76ab0c400000000c76ab0c4
ffe3fe9604d5067d00000006000100000000000000010000059cfd9c0000
0856feaafbdc088100010000000000000000000000000000000304cd0066
0464ffe304d3004800000022005800b2000100000003007a0002001b0002
0002001000400007000007e800ae00010001000000010012000100000000
0006000d000058474c5354552b53796d626f6c0041ff0280010500fe0003
010400fe00030103007d0003010200fe0003010100fe0003010000fe0003
00ff00fe000300fe00fe000300fd00fe000300fc00fe000300fb00fe0003
00fa00fe000300f800fe000300f700fe000300f600fe000300f500fe0003
00f400fe000300f300fe000300f200fe000300f100fe000300f000fe0003
00ef00fe000300ee00fe000300ed00fe000300ec00fe000300eb00000003
00ea00fe000300e900e80064000500e900fe000300e80064000300e700fe
000300e600fe000300e500fe000300e400fe000300e300fe000300e200fe
000300e100fe000300df00fe000300de00fe000300dc00fe000300db00fe
000300da00fe000300d900fe000300d800fe000300d700fe000300d60084
001d000500d60023000300d200fe000300d20023000400d100fe000300d0
00fe000300d00023000400cf00fe000300ce00fe000300cc00fe000300cb
00c8000300ca00fe000300c900fe000300c800fe000300c700fe000300c6
0064000300c500fe000300c400fe000300c300fe000300c100fe000300bf
00fe000300be00fe000300bd00fe000300bc00fe000300bb00fe000300ba
00b9004f000500ba00fe000300baffd0000400b9004f000300b800b7000e
000500b80016000300b80080000400b700b60006000500b7000e000300b7
0040000400b60006000300b50032000300b40082000341ff00b300a00033
000500b3005c000300b30040000400b200fe000300b10064000300b000af
00ba000500b000fe000300af00ae0076000500af00ba000300af00800004
00ae00a00033000500ae0076000300ae0040000400ab004b000300aa00fe
000300a900fe000300a800fe000300a70064000300a6003a000300a50064
000300a400fe000300a3005c000300a20064000300a100a00033000500a1
003f000300a10040000400a000330003009f003a0003009e00410003009d
00d20003009c00fe0003009b004b0003009a00fe0003009900fe00030098
007d0003009700380003009600fe0003009500fe00030094003a00030093
007d00030092007d0003009100640003009000fe0003008f00fa0003008e
003a0003008d007d0003008c007d0003008b00c80003008a00fe00030089
00fe00030088002800030088fff00004008700fe0003008600fe00030085
0084001d00050085003e00030084001d00030083008200330005008300fe
00030083ffd000040082003300030081008000dc0005008100fe00030081
00c000040080007f008c0005008000dc0003008000800004007f007e003c
0005007f008c0003007f00400004007e003c0003007d00fe0003007c00fe
0003007b007a003c0005007b00fe0003007bffd00004007a003c00030079
00fe0003007800fe0003007700fe0003007600640003007541ff00fe0003
0073007200450005007300fe00030073ffd0000400720045000300710070
00ba0005007100fe00030070006f00760005007000ba0003007000800004
006f006e00260005006f00760003006f00400004006e00260003006b00fe
0003006800fe0003006700fe0003006500fe0003006300fe0003005f00fe
0003005e00fe0003005d00fe0003005c00fe0003005b005a00640005005b
00fe0003005a00640003005900fe0003005800fe0003005700fe00030056
00fe0003005500fe0003005400fe00030053007d0003005200fe00030050
00fe0003004f00fe0003004e00fe0003004d00fe0003004c00fe0003004b
00fe00030048ffe00004004700640003004600fe00030044002300040043
00fe0003004200fe0003004100fe0003004000260003003f00fe0003003e
00fe0003003d00fe0003003c00fe0003003b00fe0003003a00fe00030039
00430003003800fe0003003700fe0003003400fe0003003300fe00030032
00fe0003003100340003003000fe0003002f00fe0003002e00fe0003002d
00fe0003002c00480003002b00fe0003002a00fe0003002900fe00030028
0027003a0005002800fe00030027003a0003002600fe0003002500fe0003
0024000f00030023001b0003002200960003002100fe0003002000550003
001f003a0003001e00fe0003001d003a0003001c003a0003001b41760064
0003001a00640003001900480003001800fe0003001700fe0003001600fe
0003001500fe00030015001000040014001100250005001400fe00030013
0012004b000500130096000300120011002500050012004b000300110025
0003001000fe0003001000100004000f00fa0003000e00fe0003000d00fe
0003000c00fe0003000b00fe0003000a00fe0003000900fe0003000800fe
0003000700350003000600ce0003000500fe0003000400fe0003000300fe
00030002001d00030002001000040001006400030060001b0060001d0080
000d0090000d00a0000d00b0000d00c0000d00070001014c858d01732b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b1d00>
[357 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 176 2 <00020048ffe904d503dd000b0024003b401e0c220309b212221b1e03b218
b01273251e1f0f0c06001f00190f0619152510d4e4d4e4c4111239111239
310010e4f4ecc4d4c410ee11123930013402232206151412333236031e01
15140023220035340033320433323637330e012322260398bf9e8a9ac09a
9493177271fed8f0e2fede012cf932010f545251032d034a61143f0185e7
0113c2b1d8fef1af02673ab97fd4fef4010ccee101120e1a1b644c050000
>BJEBAA+Symbol AddT42Char 
1 0 0 <00020066fe96046605a400030007001740090400060108050204002fccdc
cc310010d4ccd4cc301311211125211121660400fc73031bfce5fe96070e
f8f2720629000000>BJEBAA+Symbol AddT42Char 
BJEBAA+Symbol /CharStrings get begin
/.notdef.g0002 2 def
end
BJEBAA+Symbol /Encoding get
dup 33 /.notdef.g0002 put
pop
end
%ADOEndSubsetFont
reset_gvm
/YXPEUN+Symbol /BJEBAA+Symbol findfont ct_VMDictPut/YXPEUN+Symbol*1 [33{/.notdef}rp /.notdef.g0002 222{/.notdef}rp]YXPEUN+Symbol nfYXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf281.761 400.504 mo(!)shgsave
275.686 406.222 mo
582.904 406.222 li
582.904 398.181 li
275.686 398.181 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica Initial
ct_T42Dict begin
-0.016 -0.219 0.93 0.734
 256 array 0 1 255 {1 index exch /.notdef put} for  /NMOBAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b637674208d953e20000000bc000003626670
676de644d5e30000042000000322676c79661b3f77c500000cac00002204
68656164f633aaa60000074400000036686865610cca05280000077c0000
0024686d7478c0140e73000007a0000000b06c6f6361b2f2aacc00000850
0000005a6d617870085f0222000008ac000000206e616d655e7c757f0000
08cc00000022707265702482325a000008f0000003bb6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030000040292a292827262524232221201f1e1d1c1b1a1918171615
14131211100d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b0004361
7d6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2c20b0032552582359212d2c69b04061b0008b
0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0112b
b0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0
172344b0177ae5182d2cb002254661658a46b040608b482d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019236a4445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005258b21a401a4523614459b0005058b219401945236144592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442d2c4569b014b0324b505821b0205961442d0000
0001000000000000b91144af5f0f3cf50101080000000000c76ab0c40000
0000c76ab0c4ffdafe3b077105e500000009000100000000000000010000
0629fe290000081ffeaafeb307f400010000000000000000000000000000
002c05c700a10239000002aa008e02aa0044023900af0239000004730040
047300c404730040047300340473004204ac004c04ac000e05c7005a05c7
00a5055600af0639006305c700a10473009c06aa00970639005004e30021
05560034078d002504e3002f04730052047300760400003b047300380473
00480239001c0473003d0473008401c7008401c7ffda06aa008404730084
0473003b0473007602aa008904000042023900170400000b0473fffb0000
00340034007c00be00de010201700196022202700304032c03780408046a
04ae0556058e05b6064206fc072a0788085408a0096a09d40a560ac20b8c
0bd80c800cd00cfe0d3c0db80e140e8c0efe0f441024107410e611020000
00010000002c00530003005b0006000200100010002b000007e801610006
00010000000100120001000000000006001000004642595555562b48656c
76657469636100004118008001a6009001a600a001a600030069018b0079
018b0089018b0099018b00040089018b0099018b00a9018b00b9018bb204
0840ba0179001a014a400b041f5414191f180a0b1fd2b80106b49e1fd918
e3bb0119000d00e10119b20d0009410a01a0019f0064001f01a50025017a
00480028019ab3296c1f60410a01a9007001a9008001a90003008001a900
0101a9b21e321fbe012c00250401001f0126001e0401b61fe7312d1fe531
b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1fbf1d671fbe1d
671fab27b80401b21faa29b80401b61fa91d6c1f931eb8019ab21f921db8
0101b21f911db80101b21f751db80201b61f6d29961f6431b8019ab21f4c
96b802abb21f391db80156400b1f3638211f351de41f2f27b80801400b1f
2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c1d931f3a1d4c
1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba019b0025017ab3
49293896b8017bb348283125b8017a403648289629482725294c1f252946
272729482756c80784075b07410732072b072807260721071b0714081208
10080e080c080a08080807b801acb23f1f06bb01ab003f001f01abb30806
0805b801aeb23f1f04bb01ad003f001f01adb70804080208000814b8ffe0
b40000010014b801abb41000000100b801abb606100000010006b801adb3
00000100b801ad401f040000010004100000010010020000010002000000
01000002010802004a00b0018db806008516763f183f123e113946443e11
3946443e113946443e113946443e113946443e11394660443e1139466044
3e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b
2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a6645652345602345
6560234560b08b766818b080622020b16a704565234520b0032660626368
20b003266165b070236544b06a234420b176664565234520b00326606263
6820b003266165b066236544b0762344b10066455458b166406544b27640
764523614459b36242725d456523456023456560234560b089766818b080
622020b172424565234520b003266062636820b003266165b042236544b0
72234420b1625d4565234520b003266062636820b003266165b05d236544
b0622344b1005d455458b15d406544b262406245236144592b2b2b2b4569
53427374b8019a2045694b20b02853b049515a58b020615944b801a62045
6944750000>
[8709 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 5508 29 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>NMOBAA+Helvetica AddT42Char 
1 6652 34 <0002ffdafe50013805bd00030011003a401e041d0e0e01e5020008061317
171a00090a2904010708191213aa216242182b2b4ef43c4dc4c4fd3cc44e
456544e6003f3f4ded3fed01313001233533013e01351133111407062322
26270138b4b4fea27931b4263fb00d1d1f04edd0f93404235c04b6fb3775
3a620203>NMOBAA+Helvetica AddT42Char 
1 8264 41 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>NMOBAA+Helvetica AddT42Char 
1 0 0 <000200a10000052f05bd00030007003e402105062f02010004072f03000a
05042f0303021a0906072f01001908098821637b182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c31303311211127112111a1048eb8
fce205bdfa43b8044dfbb3000000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/e 29 def
/j 34 def
/t 41 def
end
NMOBAA+Helvetica /Encoding get
dup 101 /e put
dup 106 /j put
dup 116 /t put
pop
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica /NMOBAA+Helvetica findfont ct_VMDictPut/YXPEUO+Helvetica*1 [101{/.notdef}rp /e 4{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf288.371 404.614 mo(j)sh290.158 404.614 mo(e)sh294.088 404.614 mo(t)shgrestore
gsave
274.077 403.185 mo
582.904 403.185 li
582.904 389.427 li
274.077 389.427 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 104 2 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>NMOBAA+Helvetica AddT42Char 
1 2260 15 <000200af000004ed05bd000b000c004e4024071e04040b031e0100020908
1e0a0b080c020c0c02000669023b091a0e03082500190d0eb8010bb32195
89182b2b4ef44dfd3c4e10f64df4e41112392f003f3f3cfd3c3f3ced1239
2ffd313013211521112115211121152101af042ffc93032bfcd5037cfbc2
021f05bdb4fe42aafe0eaf05bd000000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/parenleft 2 def
/E 15 def
end
NMOBAA+Helvetica /Encoding get
dup 40 /parenleft put
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [40{/.notdef}rp /parenleft 28{/.notdef}rp /E 31{/.notdef}rp /e 4{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf296.053 400.201 mo(\()sh300.163 400.201 mo(E)shgrestore
gsave
295.697 406.222 mo
582.904 406.222 li
582.904 398.181 li
295.697 398.181 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 3576 21 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/T 21 def
end
NMOBAA+Helvetica /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [40{/.notdef}rp /parenleft 28{/.notdef}rp /E 14{/.notdef}rp /T 16{/.notdef}rp /e 4{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf308.381 404.614 mo(T)shgrestore
gsave
299.985 395.145 mo
582.904 395.145 li
582.904 387.104 li
299.985 387.104 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf312.67 393.537 mo(j)sh314.457 393.537 mo(e)sh318.388 393.537 mo(t)shgrestore
gsave
298.376 403.185 mo
582.904 403.185 li
582.904 389.427 li
298.376 389.427 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if

1 0 1 <> NMOBAA+Helvetica AddT42Char 
1 1624 12 <0001001cffed04ad04280006006c40425800580368038803040020120302
030620120303040420120506050220120101000306040200030501050506
010a03000106001a08010405030219070888215fb5182b2b4ef4173c10f6
3c1112393d003f3f111217392f044d8710182b10872b87102b87102b3130
015d0901350901350104adfb6f03bbfc45049101b6fe37b4016a0169b4fe
3600>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/space 1 def
/greater 12 def
end
NMOBAA+Helvetica /Encoding get
dup 32 /space put
dup 62 /greater put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft 21{/.notdef}rp /greater 6{/.notdef}rp /E 14{/.notdef}rp /T 16{/.notdef}rp /e 4{/.notdef}rp /j 9{/.notdef}rp /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf320.353 400.201 mo( )sh323.747 400.201 mo(> )[7.14655 0 ]xshgrestore
true set_gvm
%ADOBeginSubsetFont: BJEBAA+Symbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BJEBAA+Symbol gcheck setglobal} if
1 68 1 <0001ffe3ffd704c1067d000a0034401d08060504040b0700ad09070209ac
0b050609080704030201070b00060b10d4c41117391239310010e4d4c410
e61112173930012301230107272509013304c175fdae42fec17d19011b01
000204bf061df9ba03732d5062fd3b057300>BJEBAA+Symbol AddT42Char 
BJEBAA+Symbol /CharStrings get begin
/.notdef.g0001 1 def
end
BJEBAA+Symbol /Encoding get
dup 34 /.notdef.g0001 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUN+Symbol*1 [33{/.notdef}rp /.notdef.g0002 /.notdef.g0001 221{/.notdef}rp]YXPEUN+Symbol nfYXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf334.289 400.504 mo(")shgsave
318.388 403.185 mo
582.904 403.185 li
582.904 389.427 li
318.388 389.427 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 248 3 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>NMOBAA+Helvetica AddT42Char 
1 444 5 <000100000000026a05bd0003002b4017070117019701030102021c120303
0002030a0100020003192f18d4003f3c3f3c05872e2b7d10c4015d013301
2301d298fe2e9805bdfa4300>NMOBAA+Helvetica AddT42Char 
1 1092 9 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>NMOBAA+Helvetica AddT42Char 
1 7816 40 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/parenright 3 def
/slash 5 def
/four 9 def
/s 40 def
end
NMOBAA+Helvetica /Encoding get
dup 41 /parenright put
dup 47 /slash put
dup 52 /four put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 4{/.notdef}rp /four 9{/.notdef}rp /greater 6{/.notdef}rp /E 14{/.notdef}rp /T 16{/.notdef}rp /e 4{/.notdef}rp /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf340.364 400.201 mo(s)sh346.617 400.201 mo(/)sh350.011 400.201 mo(4)sh356.8 400.201 mo(\))shgrestore
gsave
450.422 110.17 mo
582.904 110.17 li
582.904 91.7664 li
450.422 91.7664 li
cp
clp
469.361 110.169 mo
501.343 110.169 li
501.343 91.7664 li
469.361 91.7664 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 3516 18 <00020033ffde051005630023002400ac401ad91ce617e318035918691802
28081617051b067e40081b210707b801414022067e4002a12616070f1617
120c2e242303122e1b0924241f07619f17bf17cf170317b80206b3260f54
1fb80205b126252fccf4ed10fe5de412392f003fed3f3ced113939011112
39001a3de81a18f4ed01101a3ded181af4ed0010c931304379401c1c220d
111d252126111c0f37000d220f3700101e1237000e200c37012b2b012b2b
2b2b8181005d015d00163332363733132326272623220011100033323736
3717060706232027261110373621220365ea0e1d340a2b132f29427ed5d7
feef011fdc9f864d5c264465acc9feb6c2b3bdc7013f070563422022fe34
89549efeacfed6feeefeb94c2b572656416ed3c30124012bcbd5>FSFAAA+Times-Roman AddT42Char 
1 3812 19 <0001002100000597054b002b00994059461b4627020d211b09282219211b
152822234a1b1f2822034a001b2b282404211b08282310211b1428231a21
1b1e282326211b2a282326231a0304252b19100d0404080f0e2c2425251e
15140908022b2a1f1e08102329191ab80204b52d0d26290403b80203b12d
2c2fccf43cfd3c10fd3cfd3c003f3c3c3c3f3c3c3c12392f3c4dfd3c1117
39111217392b2b2b2b2b2b2b2b31300071373e0135113426273521150e01
151121113426273521150e0115111416171521353e013511211114161715
2121783c437102397144026d4272023971434371fdc7793bfd934471fdc7
250d3f8503776e4208262608426efe71018f6e4208262608426efc71703f
0a25250c4085018efe5a70400925>FSFAAA+Times-Roman AddT42Char 
1 4096 20 <00010017000004c9054b001a0071403d6519751986199519a519b519060d
211b092d220321001b1a282404211b082823191716030e031614040d0818
af142e1a0908021a080018201850180318b8020ab51c0d0e290403b80203
b11c1b2fccf43cfd3c10f65d003f3f3c4d10eded11393911393901111739
2b2b2b3130015d373e0135113426273521150e0115111416171e01332036
3733032117714342720243714d17271733460111c05a3464fbb2250c3974
038f6d43082626063e66fc2822270503025ab9fe9d000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/C 18 def
/H 19 def
/L 20 def
end
FSFAAA+Times-Roman /Encoding get
dup 67 /C put
dup 72 /H put
dup 76 /L put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 179{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [16.4374 0 0 -16.4374 0 0 ]msf469.361 106.297 mo(L)sh479.009 106.297 mo(H)sh490.622 106.297 mo(C)shgrestore
gsave
346.259 109.276 mo
582.904 109.276 li
582.904 90.8729 li
346.259 90.8729 li
cp
clp
365.198 109.276 mo
423.086 109.276 li
423.086 90.8729 li
365.198 90.8729 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0.501953 0 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 4300 21 <0001001c000004b8054b00170095403e06c8031b02af01af02029f019f02
025f015f02021f011f0202114a1b0d2d2208211b0c2d2313c8161b021713
110006010808110d06132e0100020d0c0819b8020ab2024b01b80108400e
070829121f115f119f11af110411b80108b2004b17b9020900182ff4f4f4
5d3cfd3cf4f4e6003f3c3f3c4dfd3c1139390111123911123900dc3c01ed
ec2b2b015d5d5d5d10edec3130132113232e012b01111416171521353e01
351123220607232804850b31246fb2724a7dfdab824072aa7b1f32054bfe
a4a463fbe877390925250a4285040062a500>FSFAAA+Times-Roman AddT42Char 
1 4892 23 <0003004bfff1038903b4000b00400041010c4066ea26fb26020727460602
0c239a0a9a39a90aa90ba80dbc09ca09cb2fcb30dc09dc30da31ec09ed30
0f57082c312a171c1f141f00330f0f010f49322e3639312c0f0a00061408
143325072e3e360b083e3d0b4107413927100b2f412a403179292f2aaf2a
022ab80200400a4318271b442242044440b80201b143422fccf4edf4fde4
10f65d3ce6111239fd3ce42f003f3fed3fed3fed11121739111239762f5d
18edcc111239390111123931304379403b3e3f23280c17010702250d2606
261226010e042600073e041e001524171e0016171326101e012728030c00
260101000e0f053f081e001127141e01002b2b103c103c2b01103c2b103c
2b2b2b2b2b2b2b81818181005d01715d0106070615141716333236352437
362535342726232207061514161514070623222635343633321716151114
17163332363715060706232226270607062322263501024b734b903c2730
4279fe00915c011314226b332e2e0a25151d2d30ada7c24525080d29171e
252025383a443d034c365b52567e017d022a262e59715b2b1c4a396b613c
67556628431a1b2f0c390838160d3b2446997e4584fe6f3a16270e1b3427
1926583d422036795d02ed000000>FSFAAA+Times-Roman AddT42Char 
1 5900 26 <00030028ffe8035e03aa0013001c001d00d9405d69086a0c6f126c157b07
79087a0c7d117f127d147d15fc0ef60f0d550866086011c404c712d404e6
09e20f083d08090a171803090a02090a03061739100301034703061c1c63
1d13079206a2060206410d0b1d18fe02421d10cf0a010ab80202b31f03db
10b80201b11f1e2fccf4ed10f65d1239f4ed2f003fed5d3f3ced11123976
2f5d18fd111239390111123911123910c931304379402a0e1b000515251a
261412171e0016171b00181e011918050e03260016111c1e0119011c1e01
040f062600002b2b2b012b103c2b103c2b2b2b8181005d015d001615211e
0133323637170e0123220235341233060706072126272623370262d4fd85
0abe8269903d2329e1a3bccdeebfac3c200e01a60b1b31732d03aac3b3e8
d46e650c7fd8011cb9c901244965365264315849>FSFAAA+Times-Roman AddT42Char 
1 7136 30 <00020021000003e303ae0033003400b74059191a4d1a02960ea60e021a08
1f2110321f332f213f2105253f1c2120220343001c3320241c3a1c202023
2e3a1c3220230c20043a0b1c0c900f2e2d251c1304030733120f293e1727
0f07333221200a34073426252f34041b1cb80200b73612272e2f030304b8
01ffb136352fccf43c10fde410f63c1239fd3c2f003f3f3c3c3c3ff4ed11
3911173910f5edfc01f52b2b2b2b055d043130437940102728181a281826
1e01191a2719291e012b01103c2b8181005d71373e013511342726232206
0735363f0132161d013637363332171615111416171521353e0135113426
2322070607111416171521012547390c133b09130e29995e07035c344e54
44386c3a44fe55493a40563b3d22364045fe4b01dc1c09355c01fb401a26
0202230c321f0a0993562031274cc3fe2d4840011c1c0a3d6601ab567128
1735fdd04831021c03ae>FSFAAA+Times-Roman AddT42Char 
1 7476 31 <00030034ffe103c203aa000b001800190092402cc609e5090296109916a0
10ab16f50a05160014041717550a5410053a0818331902071233080b1915
44190b05b80202b61b0f440f0b010bb80201b11b1a2fccf45ded10f61239
ed2f003fed3f3ced31304379402c00170d250c010f260017031526011109
0f260013071526010e001826011604182601100a12260014061226002b2b
2b2b012b2b2b2b2b8100715d015d1a013332001514022322003500070615
1412333236353402233734fdc7c60104fcc8c0fef601593a64a18f70799a
922502970113fefcd8c7feda011ad5019e345bdfb2fecccea7ad01323c00
>FSFAAA+Times-Roman AddT42Char 
1 8068 33 <00010009000002b103af00290088404cc41e013722011f29010343001c29
202424431c2820230b20043f0a1c0b9210221f1e032b2424220403042914
1d1320801d01201d301d021d951d1027170729280a801a011a2b1327242f
0403b801ffb4af2b012b2a2fcc5df43cfde410c45d003f3c3f4de4cced71
5d1239113912173901111217390010f5edfc01f52b2b015d3130005d015d
373e013511342623220607353e0137363732161d013e0133321615140623
222623220615111416371521095c3c25310a211239781732350703407740
33403125264d162366505dfe132108315001c36355050421142a0913180a
10a459643d2e293846713cfe3d56430221000000>FSFAAA+Times-Roman AddT42Char 
1 8736 35 <00010019ffed023b04a100220057402a0911011b22021402391e2206400b
210a47073e0f0b400a210b24401e210022022f141b1840112c1424232fcc
dc1ac81adc3dc41810fdc4cc1ac81a10d61ac81a003ffd76d41a18c81a3f
ccfd3c111239313001005d011523031417163332363717070e0123222726
3511232e01353436373e013732161d010209cc020d18462435221a163474
36762a176d05050918453d710d05039a48fdc04c27452225161e463a6939
65025e0306050a0b14394798040df600>FSFAAA+Times-Roman AddT42Char 
1 8932 36 <00010025ffed03d003a1002300a5405e270b2715370b3715580857105711
5717591d591e6808671067116717681d77097716781e87098716881e9900
99011708070809093912161716081716070753121e1e1d1e070916080519
2222101303011c110006190b2508070909160212b801fcb647171e072302
1db801fcb54790230123242fc65d76fc18171139dd76fd181739111239c6
003f3f3cfd173c111217390705102b10083c0705102b10083c3130015d01
150e01151416171b013e0135342726273521150e0107010e012322262701
262726273501b8342b090bd0b40d17251626011c312b29fedf080a090a0e
08fece252a193003a11f061422101d1cfdfb01ca214813271109031f1f04
3967fd30130e171102dc592012061f000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/T 21 def
/a 23 def
/e 26 def
/n 30 def
/o 31 def
/r 33 def
/t 35 def
/v 36 def
end
FSFAAA+Times-Roman /Encoding get
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 8{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t /.notdef /v 137{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [16.4374 0 0 -16.4374 0 0 ]msf365.198 105.403 mo(T)sh375.024 105.403 mo(e)sh382.171 105.403 mo(v)sh390.031 105.403 mo(a)sh397.178 105.403 mo(t)sh401.644 105.403 mo(r)sh407.004 105.403 mo(on)[8.07074 0 ]xshgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf354.477 375.134 mo(!)shgsave
348.404 380.851 mo
582.904 380.851 li
582.904 372.811 li
348.404 372.811 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf361.089 379.242 mo(t)shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf253.71 461.788 mo(!)shgsave
247.635 467.505 mo
582.904 467.505 li
582.904 459.464 li
247.635 459.464 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 2732 17 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>NMOBAA+Helvetica AddT42Char 
1 6064 31 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>NMOBAA+Helvetica AddT42Char 
1 6560 33 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/H 17 def
/g 31 def
/i 33 def
end
NMOBAA+Helvetica /Encoding get
dup 72 /H put
dup 103 /g put
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 4{/.notdef}rp /four 9{/.notdef}rp /greater 6{/.notdef}rp /E 2{/.notdef}rp /H 11{/.notdef}rp /T 16{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf260.32 465.897 mo(H)sh265.501 465.897 mo(i)sh266.931 465.897 mo(gg)[3.94498 0 ]xsh274.791 465.897 mo(s)shgrestore
gsave
256.211 464.468 mo
582.904 464.468 li
582.904 450.71 li
256.211 450.71 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 2924 19 <000100970000061705bd001300cb405944014b03020601090316011903d7
010513011c03140b1b0c57015803d401db03d40bdb0c0a040a040d450286
02045102970202290a280d380a380d4702570276020725640d0a02031203
01020b0c120306081517171a040405b8019b400d0a1f030b06fd0c0102fd
0d1f12b8019bb6130019147670182b4e10f43c4dfde419f43939f4393918
e4fd3c4e10456544e6003f173c3f3c1217394b5279b10d0cb801aab40201
020a0bb801aab202020387054d2e7afd047dc487052e7afd047dc4313000
5d727101725d71132109012111231134363501230115141615112397011d
01a601a3011abd04fe5dc5fe5a05be05bdfb2604dafa4303632dd077fb29
04d72d36dd34fc9d0000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/M 19 def
end
NMOBAA+Helvetica /Encoding get
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash 4{/.notdef}rp /four 9{/.notdef}rp /greater 6{/.notdef}rp /E 2{/.notdef}rp /H 4{/.notdef}rp /M 6{/.notdef}rp /T 16{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf278.187 461.484 mo(\()sh282.297 461.484 mo(M)shgrestore
gsave
279.795 467.505 mo
582.904 467.505 li
582.904 459.464 li
279.795 459.464 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf292.48 465.897 mo(H)shgrestore
gsave
275.686 464.468 mo
582.904 464.468 li
582.904 450.71 li
275.686 450.71 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 516 6 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>NMOBAA+Helvetica AddT42Char 
1 1248 10 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>NMOBAA+Helvetica AddT42Char 
1 1544 11 <0002005c00de046f03360003000700274015012000cd07200604001a0907
021908095c213f52182b2b4ef43c10f63c002f4dedfdfd31300115213501
152135046ffbed0413fbed0336a8a8fe53abab00>NMOBAA+Helvetica AddT42Char 
1 2396 16 <00020063ffd905a105e50022002300d1403e1b0686018502031d011f0586
01891cb6200540080f04151603106d167e16020f16110d04862210111e13
121215073a220315080d3a1a0923022323031e12b8014b4010030431033b
1025131a250a311e192425b80167b3216a70182b2b4ef44ded4e10f64ded
f4fd10ed1112392f003f3fed3f3fed12392f3cfd3c10ed111239395d0111
123939123931304379402c1b21000c1c25202601250c1b0a320008210a32
000600043201020305040b1d0d3200091f0732010502073201002b2b2b01
103c103c2b2b2b2b2b2b81815d015d00171613232e012322001110122132
24132135211123270607062320272611103736212703e697db31c524e2ac
ccfee9e60104c7010503fe3402858030654e83cafefbbccdc8be012e2105
e35073fee0a193fecefed1fefafeb7e70102a5fceebd6f2b4aa9d4017201
71dad0020000>NMOBAA+Helvetica AddT42Char 
1 3668 22 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd000000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/zero 6 def
/five 10 def
/equal 11 def
/G 16 def
/V 22 def
end
NMOBAA+Helvetica /Encoding get
dup 48 /zero put
dup 53 /five put
dup 61 /equal put
dup 71 /G put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero 3{/.notdef}rp /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V 14{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf297.662 461.484 mo( )sh301.056 461.484 mo(= )[7.14651 0 ]xsh311.598 461.484 mo(500 )[6.78738 6.78741 6.78738 0 ]xsh335.359 461.484 mo(G)sh345.008 461.484 mo(e)sh351.797 461.484 mo(V)sh360.015 461.484 mo(\))shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf351.441 275.617 mo(!)shgsave
345.366 281.333 mo
582.904 281.333 li
582.904 273.293 li
345.366 273.293 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 4264 24 <0002002f000004b405bd0009000a00634036170518060201050606251200
0001010603040501021e0403020700061e0809080a030a0a030705041a0c
03690900190b0ca0218edc182b2b4ef43c4de44e10f63cc412392f003f3f
3c4dfd393c3f3cfd3c390111123939872e2b877dc43130015d3701213521
1501211521012f0385fcbd0443fc76038afb7b0264a50469afabfb9daf05
bd00>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/Z 24 def
end
NMOBAA+Helvetica /Encoding get
dup 90 /Z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero 3{/.notdef}rp /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V 3{/.notdef}rp /Z 10{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf358.051 279.725 mo(Z)shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf257.104 301.523 mo(!)shgsave
251.03 307.24 mo
582.904 307.24 li
582.904 299.2 li
251.03 299.2 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf263.716 305.631 mo(j)sh265.503 305.631 mo(e)sh269.433 305.631 mo(t)shgrestore
gsave
249.421 304.202 mo
582.904 304.202 li
582.904 290.445 li
249.421 290.445 li
cp
clp
YXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf271.398 301.218 mo(\()sh275.508 301.218 mo(E)shgrestore
gsave
271.04 307.24 mo
582.904 307.24 li
582.904 299.2 li
271.04 299.2 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf283.725 305.631 mo(T)shgrestore
gsave
275.328 296.163 mo
582.904 296.163 li
582.904 288.123 li
275.328 288.123 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf288.014 294.554 mo(j)sh289.801 294.554 mo(e)sh293.731 294.554 mo(t)shgrestore
gsave
273.721 304.202 mo
582.904 304.202 li
582.904 290.445 li
273.721 290.445 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 736 7 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/one 7 def
end
NMOBAA+Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one 2{/.notdef}rp /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V 3{/.notdef}rp /Z 10{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf295.697 301.218 mo( )sh299.091 301.218 mo(> )[7.14655 0 ]xsh309.632 301.218 mo(100 )[6.78738 6.78745 6.78738 0 ]xsh333.394 301.218 mo(G)sh343.043 301.218 mo(e)sh349.832 301.218 mo(V)sh358.05 301.218 mo(\))shgrestore
gsave
182.195 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
182.195 -33.3887 li
cp
clp
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf253.71 424.446 mo(!)shgrestore
gsave
247.635 430.163 mo
582.904 430.163 li
582.904 422.124 li
247.635 422.124 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf260.32 428.555 mo(H)sh265.501 428.555 mo(i)sh266.931 428.555 mo(gg)[3.94498 0 ]xsh274.791 428.555 mo(s)shgrestore
gsave
256.211 427.126 mo
582.904 427.126 li
582.904 413.368 li
256.211 413.368 li
cp
clp
YXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf278.187 424.142 mo(\()sh282.297 424.142 mo(M)shgrestore
gsave
279.795 430.163 mo
582.904 430.163 li
582.904 422.124 li
279.795 422.124 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf292.48 428.555 mo(H)shgrestore
gsave
275.686 427.126 mo
582.904 427.126 li
582.904 413.368 li
275.686 413.368 li
cp
clp
YXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf297.662 424.142 mo( )sh301.056 424.142 mo(= )[7.14651 0 ]xsh311.598 424.142 mo(150 )[6.78738 6.78741 6.78738 0 ]xsh335.359 424.142 mo(G)sh345.008 424.142 mo(e)sh351.797 424.142 mo(V)sh360.015 424.142 mo(\))shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf351.262 259 mo(!)shgsave
345.188 264.717 mo
582.904 264.717 li
582.904 256.677 li
345.188 256.677 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 3856 23 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/W 23 def
end
NMOBAA+Helvetica /Encoding get
dup 87 /W put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one 2{/.notdef}rp /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V /W 2{/.notdef}rp /Z 10{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf357.873 263.109 mo(W)shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf274.257 230.592 mo(!)shgsave
268.182 236.309 mo
582.904 236.309 li
582.904 228.269 li
268.182 228.269 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf280.868 234.701 mo(j)sh282.654 234.701 mo(e)sh286.585 234.701 mo(t)shgrestore
gsave
266.573 233.271 mo
582.904 233.271 li
582.904 219.514 li
266.573 219.514 li
cp
clp
YXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf288.55 230.288 mo(\()sh292.66 230.288 mo(E)shgrestore
gsave
288.192 236.309 mo
582.904 236.309 li
582.904 228.269 li
288.192 228.269 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf300.878 234.701 mo(T)shgrestore
gsave
292.48 225.231 mo
582.904 225.231 li
582.904 217.191 li
292.48 217.191 li
cp
clp
YXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf305.166 223.624 mo(j)sh306.953 223.624 mo(e)sh310.883 223.624 mo(t)shgrestore
gsave
290.873 233.271 mo
582.904 233.271 li
582.904 219.514 li
290.873 219.514 li
cp
clp
YXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf312.849 230.288 mo( )sh316.243 230.288 mo(> )[7.14651 0 ]xshgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf326.784 230.592 mo(")shgsave
310.884 233.271 mo
582.904 233.271 li
582.904 219.514 li
310.884 219.514 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 812 8 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/two 8 def
end
NMOBAA+Helvetica /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /.notdef /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V /W 2{/.notdef}rp /Z 10{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [11.9707 0 0 -11.9707 0 0 ]msf332.859 230.288 mo(s)sh339.112 230.288 mo(/)sh342.507 230.288 mo(20)[6.78738 0 ]xsh356.085 230.288 mo(\))shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf353.048 163.413 mo(!)shgsave
346.974 169.13 mo
582.904 169.13 li
582.904 161.09 li
346.974 161.09 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 4820 26 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
0000>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/b 26 def
end
NMOBAA+Helvetica /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /.notdef /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V /W 2{/.notdef}rp /Z 7{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef /i /j 8{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf359.659 167.522 mo(b)shgrestore
YXPEUN+Symbol*1 [10.5414 0 0 -10.5414 0 0 ]msf348.582 72.1134 mo(!)shgsave
342.507 77.8307 mo
582.904 77.8307 li
582.904 69.7906 li
342.507 69.7906 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 7208 37 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/o 37 def
end
NMOBAA+Helvetica /Encoding get
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 5{/.notdef}rp /slash /zero /one /two /.notdef /four /five 7{/.notdef}rp /equal /greater 6{/.notdef}rp /E /.notdef /G /H 4{/.notdef}rp /M 6{/.notdef}rp /T /.notdef /V /W 2{/.notdef}rp /Z 7{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef /i /j 4{/.notdef}rp /o 3{/.notdef}rp /s /t 139{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [7.1467 0 0 -7.1467 0 0 ]msf355.193 76.222 mo(t)sh357.158 76.222 mo(o)sh361.088 76.222 mo(t)shgrestore
gsave
257.641 16.0118 mo
582.904 16.0118 li
582.904 -2.3913 li
257.641 -2.3913 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if

1 0 1 <> FSFAAA+Times-Roman AddT42Char 
1 108 2 <0001005efe93026f056800110045401c0c0d04030d080c1304040c0d0311
0d131317171a04ae084811191213b8010bb3218352182b2b4ef44dfdf44e
456544e6003f3f1239390111123912393900c910c9313012133637170607
06111017121707262702115ed080ae13a145792e51e01a7b8fed035e0107
a162218079d3fea1fefca9fed893213bac011d016b000000>FSFAAA+Times-Roman AddT42Char 
1 252 3 <00010036fe93024705680014004a40200902010f100706100706030b0f07
0f06101106131617171a14480bae0f191516b8010bb3214d56182b2b4ef4
4df4fd4e456544e6003f3f12393901111217390010c910c93130005d0002
0706070607273637361110270227371617121102474e4b4f84573b139a47
7e3a51d41a9e88d10163fef6767e6d481d21757ad80163011fb601019321
58b2feeefeac>FSFAAA+Times-Roman AddT42Char 
1 5616 25 <0002002fffed034b03af0022002300a940498b17a408c411d611d618e211
e61e07350b450b560b6a096a0a691569167a09790a7a157a160b28081718
070a10171802171813070a0d050d3323220793130113411c0b230242231f
18b80202b32510441fb80201b125242fccf4ed10f61239e42f003fed5d3f
3cfdcc1139391139390111123912393910c931304379401b1d210a120001
121d1026000e211026000a111e1326000f200d2601002b2b01102b2b8181
81015d005d00161514062322262f01262726232206151416333237363717
0607062322263534003323027ab52e3023350c0c0d202136729dad936851
2e3a1c393f799f9cf00106c82c03af814d2139302e30351615c7a597f044
275511784686f6d3cf012a000000>FSFAAA+Times-Roman AddT42Char 
1 6452 28 <000200280000020e0574000b0025005d4026230c0f3f0c1c252024232020
18201050171c18921c201f100f041c25089502001c0725240a27b8020040
0a200b9505271f20dd100fb901ff00262ff43cfd3cf4ed10e6003f3c3f3f
4ded1112173910f5edfc01f510f52b103c31301236333216151406232226
35033e013511342726232206073537363736331615111416171521a83c2c
2b3d3d2b2c3c806b38090f300b15322baf451c08023761fe1a05363e3d2c
2b3d3d2bfb110a357501dd411929040e1f0e391d0c0708fd32723a081c00
0000>FSFAAA+Times-Roman AddT42Char 
1 7716 32 <00020009fe4203c203b1000c003300c440593609362196199925aa25a527
e427f527080a2505274a2503a62401452401220810430d1c33da242e431c
32de2318201150171c18921b0c0b0a03052e102e29332d1f110c0a05021e
1b083e23071b070263290b33320e054426b80202400a351e272e2f11c010
0110b801ffb135342fccf45d3cfde410f6ed003f3c3fed3f3fed11391117
391112393901111217390010f5edfc01f52b2b3130437940182428030703
280526010724052601042702260006250826012b2b012b2b818101715d00
715d24163332363534262322061511013e01351134262322060735373637
32161d013637363332161514022322272627111416171521016167466c99
9f694a7afec25e3325330b13125f05c4050542325a5f8ac7efb538294036
426ffe117443d7c0b8b65b2cfe09fdab06444903c04c2b0203211f014409
0687422038ebccc8feba0e1538feb9652e0823000000>FSFAAA+Times-Roman AddT42Char 
1 8328 34 <00020068ffed02c903b10031003201034021130013011602290d390d680c
690d790b790c880c0a2908301c31d140011c210000b80191b331d1402db8
0121400f222a181c19d1401b1c211a1f1a011ab80191b319d14015b80121
402b21120d000a082226230d0a04051f3332120705332a0b320f1a01ef1a
ff1a021a4608413200302701273422b801f340100027700fa00fc00f030f
4600340134332fcc5d76d4185de4ed10d45d1239ed76c45d71182f003fed
3f3ced11173901111239123900103d1aec181af4e55d01103d1aed181af4
ed00103d1aec1a18f4e501101a3ded1a18f4ed31304379401c2829202110
1106070629081e012011221e000728051e0021101f1e01002b2b012b2b81
818181005d13331617163332363534262f012e0135343633321633323637
33132326272623220615141f01161514062322262322060723016a211727
46874b57323f707b74a079357f0812100618071f14223e7546508a84d5b1
8f3c980e0c12051a0125013b723d7053422a4e254042865b7090280a0bfe
e9613664563a5c4847749a769628110c03b9>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/space 1 def
/parenleft 2 def
/parenright 3 def
/c 25 def
/i 28 def
/p 32 def
/s 34 def
end
FSFAAA+Times-Roman /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 99 /c put
dup 105 /i put
dup 112 /p put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [16.4374 0 0 -16.4374 0 0 ]msf276.578 12.1393 mo(p)sh284.618 12.1393 mo(r)sh289.978 12.1393 mo(o)sh298.017 12.1393 mo(t)sh302.485 12.1393 mo(on )[8.07077 8.0708 0 ]xsh322.673 12.1393 mo(- )[5.21054 0 ]xsh331.965 12.1393 mo(\()sh337.324 12.1393 mo(a)sh344.47 12.1393 mo(n)sh352.51 12.1393 mo(ti)[4.50385 0 ]xsh361.444 12.1393 mo(\))sh366.803 12.1393 mo(p)sh374.843 12.1393 mo(r)sh380.203 12.1393 mo(o)sh388.242 12.1393 mo(t)sh392.709 12.1393 mo(on )[8.07074 8.07077 0 ]xsh412.898 12.1393 mo(c)sh420.045 12.1393 mo(r)sh425.405 12.1393 mo(o)sh433.445 12.1393 mo(ss )[6.27924 6.27924 0 ]xsh450.061 12.1393 mo(s)sh456.313 12.1393 mo(ec)[7.18317 0 ]xsh470.606 12.1393 mo(ti)[4.50385 0 ]xsh479.54 12.1393 mo(on)[8.07074 0 ]xsh495.62 12.1393 mo(s)shgrestore
gsave
182.195 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
182.195 -33.3887 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
YXPEUN+Symbol*1 [0 -14.1147 -14.1147 0 0 0 ]msf203.029 290.624 mo(!)shtrue set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 5356 24 <00020007ffed03bd057400180025008d402af50c01060c019a0d01230801
da1550001c01902306250723211b06150b0300213e0b071b63110b1e440e
b80202400a272527062f14c0150115b801ffb127262fccf45d3cfde410f6
ed003fed3fed3f123939111239390111123900f5edfc01f5313043794018
1c200c10200c1e26011c101e26011f0d2126011d0f1b2600002b2b012b2b
8181005d01715d13353e0133161511363736333216151400232226351134
2623001633323635342623220615110772b607021a345c7893d0fef2dc6f
d6203a01098a348c877e8d478804f8221a400606fd9f302b4bf8c6d4fed2
582c04213a31fb612dd29595fd5743fe02000000>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/b 24 def
end
FSFAAA+Times-Roman /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [0 -16.4374 -16.4374 0 0 0 ]msf202.669 281.87 mo(  )[-4.10934 0 ]ysh202.669 273.651 mo(\()sh202.669 268.292 mo(nb)[-8.07077 0 ]ysh202.669 252.211 mo(\))shYXPEUN+Symbol*1 [14.1147 0 0 -14.1147 0 0 ]msf360.552 522.06 mo(")shgrestore
gsave
349.833 525.611 mo
582.904 525.611 li
582.904 507.526 li
349.833 507.526 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 4528 22 <00010021ffe80592054b001f00fd40436a196a1a02171977198619c71ec7
1fd61ed61ffa13fa140909130914191319142813281406080909070a0b0b
090049000907132d18124712090b1411011e1b1f7c1b40b8ff864031091a
19201819192c1209090b1b1a1a29120909071b1a1907041f0b1813091b18
0b0907051a1f131200021a19090f210121b8020ab39b130113b801b9b39b
090109b8014e400d20501f801f02401f01001f011fb9020900202ff45d5d
5d1a19fd5dfd5d18e65d003f3c3f3c3c3c1217390111123939121739874d
2e2b0e7d10c505872e182b0e7d10c52b1a1810f500fd3c3c3c0111123976
2f180110f501111239762f1887100e3c87100e3c313001715d005d011506
07061514161709013e013534272627352115060706070123012e01273502
424d1c312330014001231314331e4501a3411f2f2efe3b1ffe07404d4a05
4b2601091031195a6afd3703043346163b150c022623091a2776fb800466
8f460523>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/V 22 def
end
FSFAAA+Times-Roman /Encoding get
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 7{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [16.4374 0 0 -16.4374 0 0 ]msf368.772 522.056 mo(s )[6.27921 0 ]xsh379.135 522.056 mo( )sh383.244 522.056 mo( )sh387.353 522.056 mo(\()sh392.713 522.056 mo(T)sh402.539 522.056 mo(e)sh409.686 522.056 mo(V)sh421.298 522.056 mo(\))shgrestore
gsave
182.195 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
182.195 -33.3887 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0.501953 colr
true set_gvm
%ADOBeginSubsetFont: FSFAAA+Times-Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FSFAAA+Times-Roman gcheck setglobal} if
1 552 6 <00010004ffde022f05680003003e40180003034f12020201020304010000
03020b011a0500190405ba012a002101a8b19d182b2b194ee410e618003f
3c3f3c01123939874d2e2b7d10c531300133012301cb64fe3b660568fa76
0000>FSFAAA+Times-Roman AddT42Char 
1 3428 17 <0002003d00f10447031a00030007002eb506310f070107b8010c40110331
0205001a0906021908098c214d52182b2b4ef43c10f63c002fed4dfd5ded
313001152135011521350447fbf6040afbf6017d8c8c019d8c8c0000>FSFAAA+Times-Roman AddT42Char 
1 6220 27 <00010028000003100576002600774037370a010809190a290a030626033f
001c26de24213f1c25de2303210526131618119518330b011f05391e1d07
060626250a031e20280128b8020440090e1d212f072f030103b901ff0027
2ff45d3cfd3cccf55d3910003f3c3f3c3c3cfd3c3feded11393911123939
2b2b011810c4183130015d005d373e013511233533343736333216151406
2322262f012e01232207061d01331523111416171521286a43abab2b52db
588b30221d2a1d110e26224c1b0ffbf93d81fdeb1c05456f0282439e6dd1
463b2134232c1a151d4b2841ed43fd7e713f091c0000>FSFAAA+Times-Roman AddT42Char 
1 6664 29 <000100210000063403a8004e00fa401c36193420021120a70e024f294f3c
02103b104d1f4e033f372d431c29be01fb002200400101001c003c01fb40
4c22043a001c4e2024243a1c282023373f1c3b2023493a1c4d20230c2005
500b1c0c920f43491b37404948434037362d241b1405040c454e130f3245
3e17323e1f1f170f074e4d3c3b29280a50b80200400b23242f2e8f2dd02d
02482db80147400d464036372f418f40d040024840b80147b74604132749
2f0504b901ff004f2ff43cfde41076f4765d183cfd3c1076f4765d183cfd
3ce6003f3c3c3c3c3c3f3c3c4d10ed10ed11123911121739011112391239
0010f5edfc01f52b2b2b2b2b2b112e015d5d3130005d015d373637363511
34262322060735373e013332161d013e0133321716173637363332171615
111416171521353e0135113427262322070607111416171521353e013511
34272623220607111416171521214e1a28272d15150e4827b20505026390
4c673d20154a375f63a1361f3f52fe3d573715256c41402536395cfe355f
3414216b3d762d3559fe391a07131d5702054a2e040523180d440a0e875a
454626414b243e834aa0fe614733081a1c08365301af612e522b1937fe00
5154031a1a0c448501189a3a624336fddd4c3a011a00>FSFAAA+Times-Roman AddT42Char 
FSFAAA+Times-Roman /CharStrings get begin
/slash 6 def
/equal 17 def
/f 27 def
/m 29 def
end
FSFAAA+Times-Roman /Encoding get
dup 47 /slash put
dup 61 /equal put
dup 102 /f put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUM+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 5{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 7{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /b /c /.notdef /e /f 2{/.notdef}rp /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]YXPEUM+Times-Roman nfYXPEUM+Times-Roman*1 [0 -12.328 -12.328 0 0 0 ]msf578.17 331.539 mo(e)sh578.17 326.357 mo(v)sh578.17 320.462 mo(e)sh578.17 315.28 mo(n)sh578.17 309.206 mo(t)sh578.17 305.812 mo(s)sh578.17 301.166 mo(/)sh578.17 297.772 mo(s)sh578.17 293.127 mo(e)sh578.17 287.946 mo(c )[-5.38733 0 ]ysh578.17 279.548 mo( )sh578.17 276.511 mo(f)sh578.17 272.223 mo(o)sh578.17 266.328 mo(r )[-4.10516 0 ]ysh578.17 259.181 mo( )sh578.17 256.144 mo(L )[-7.1748 0 ]ysh578.17 245.961 mo(= )[-6.81732 0 ]ysh578.17 236.134 mo(10)[-6.10236 0 ]yshYXPEUM+Times-Roman*1 [0 -7.32538 -7.32538 0 0 0 ]msf571.424 224.159 mo(33)[-3.58942 0 ]yshYXPEUM+Times-Roman*1 [0 -12.328 -12.328 0 0 0 ]msf578.17 217.37 mo( )sh578.17 214.334 mo(c)sh578.17 208.974 mo(m)shYXPEUM+Times-Roman*1 [0 -7.32538 -7.32538 0 0 0 ]msf571.424 199.861 mo(-)sh571.424 197.538 mo(2)shYXPEUM+Times-Roman*1 [0 -12.328 -12.328 0 0 0 ]msf578.17 194.322 mo( )sh578.17 191.285 mo(s)shYXPEUM+Times-Roman*1 [0 -7.32538 -7.32538 0 0 0 ]msf571.424 186.819 mo(-)sh571.424 184.496 mo(1)shYXPEUM+Times-Roman*1 [0 -12.328 -12.328 0 0 0 ]msf578.17 181.28 mo( )shgrestore
gsave
158 525.611 mo
582.904 525.611 li
582.904 -33.3887 li
158 -33.3887 li
cp
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.199951 0.5 0 colr
true set_gvm
%ADOBeginSubsetFont: RDDBAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RDDBAA+Helvetica-Bold gcheck setglobal} if
1 164 2 <000100970000062805c2001200c040900900070808090511160819092900
27082b0924112a12370735083c0938126a00651179007511890086119a00
9611a800a611c700f708f8091c05080a09160818090407121a071a0a1712
220023112f123d073f0a3f127a12b909b612c7120e0f070f0a020a0f1211
090800050e070203120a07030e1100020e0803081417171a020403270212
0f0d0e270f19135279182b4e10f44dfd3c1910dcdc18fd3c104e456544e6
003f3c3c3f3c121739011112391217391139313000715d01715d01211121
113436350121011416151121112101046d01bbfee102fee9fed5feeb02fe
e101c0010c05c2fa3e03e52b9b2afb2b04d52a9b2bfc1b05c2fb7900>RDDBAA+Helvetica-Bold AddT42Char 
1 432 3 <00030065ffd705ea05ef000b001b001c00414027160c16121914191a971a
0505411c17030b410f091c02371c131b1a1e083713191d1edf21eb56182b
2b4ef44ded4e10f64d1139ed2f003fed3f3ced3130005d24123534022322
0215141233240706212027261110373621201716110103dfd7d7b7b7dada
b702c2dfa7fec4fec4a7e0e0a7013c013ca7dffd3edc010ef9f8010ffef2
f9f9fef27ad3acacd3018d0195cbacaccbfe6b030c00>RDDBAA+Helvetica-Bold AddT42Char 
1 744 5 <00020055ffda050e05ef002e002f00a3406a080f07210726190b190f1721
1726660c650d6922e52d0b29102915281a26273a15381ab915ca15dc15d2
2ceb13eb16f913fa16f92d0f0e00110b22181f25170825220e0b04182ed4
2b18d41c412f140304412b092f18962f11174f0896281a311f3611570036
2e193031b8011eb321ad56182b2b4ef44dedf4ed4e10f64dedf41139ed2f
003fed3f3ceded10ed11173901111239111239391112393130015d005d01
16171633323736353427262f012627263534002132041721262726232206
151417161f011617161514002120003501017b0e294bb66d44814040899c
e6589501200117e9014908fed8086c486b778e462d93fea75584fecbfee6
fee0feb6025101c765325b182e7d4928271e23343d66d9c60106f7eb8538
2560564f271a233d284368c5cafef50107e60428>RDDBAA+Helvetica-Bold AddT42Char 
1 1908 9 <000100150000028b05d100170081412f00150003002c0002001f004f0004
005f000400020004002c00170001000b0010005c001200090006000e000a
001900170017001a000a001f0003000d0015001600090027000e001f0013
00920010001900180019010e00210060006600182b2b4ef44df4e4fd3939
3cd4f44e456544e6003f3f3c4dfd3c3fed5df4ed393130001617152e0106
151415331523112111233533353437363302322c2618712bbbbbfee49f9c
3b3eed05d10303e803033520203cc9fc91036fc946af4262>RDDBAA+Helvetica-Bold AddT42Char 
1 2356 11 <000100870000045e05bd0017003f402505022702580e680e04141712000c
24170710070a0836051a1913102711191819be215045182b2b4ef44dfd3c
4e10f64ded003f3c3fed3f11393130015d0016171e011511211134272623
22061511211121113e01330343a5352d14fedd1e276d7175fee4011c3ea3
5a045e46483d8192fd80029758364c978cfdb205bdfdf75f4b000000>RDDBAA+Helvetica-Bold AddT42Char 
1 2608 13 <0001008b000001a805c20003002540130200010a0517171a002701190405
b2215045182b2b4ef44dfd4e456544e6003f3f31302901112101a8fee301
1d05c200>RDDBAA+Helvetica-Bold AddT42Char 
1 3756 20 <0001001a0000045704420006009e404f270654066406a506b50605040601
1002470457047a0274037704064701880087059705a705b705c803e701f7
01090320040427120505060220010127120006000602050401000603020a
0802020001b8010cb2030506b8010cb6041907656066182b19764e10f418
4dfd3939fd39391910c618003f3c3f3c3c3c123905872e2b7d104b51587a
59c4872e182b7d104b51587a59c43130015d7100715d0121012101211303
250132fe77fed3fe790140e30442fbbe0442fcdc>RDDBAA+Helvetica-Bold AddT42Char 
RDDBAA+Helvetica-Bold /CharStrings get begin
/M 2 def
/O 3 def
/S 5 def
/f 9 def
/h 11 def
/l 13 def
/v 20 def
end
RDDBAA+Helvetica-Bold /Encoding get
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 102 /f put
dup 104 /h put
dup 108 /l put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUL+Helvetica-Bold*1 [45{/.notdef}rp /hyphen 31{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]YXPEUL+Helvetica-Bold nfYXPEUL+Helvetica-Bold*1 [9.99907 0 0 -9.99907 0 0 ]msf16.2465 517.727 mo(S)sh22.9034 517.727 mo(v)sh28.4271 517.727 mo(e)sh33.9509 517.727 mo(n)sh40.0412 517.727 mo(-)sh43.4404 517.727 mo(O)sh51.2303 517.727 mo(l)sh54.063 517.727 mo(a)sh59.5868 517.727 mo(f)sh65.8175 517.727 mo(M)sh74.174 517.727 mo(o)sh80.2643 517.727 mo(c)sh85.6464 517.727 mo(h)sh<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
true set_gvm
%ADOBeginSubsetFont: NMOBAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NMOBAA+Helvetica gcheck setglobal} if
1 380 4 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>NMOBAA+Helvetica AddT42Char 
1 1776 13 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>NMOBAA+Helvetica AddT42Char 
1 2064 14 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>NMOBAA+Helvetica AddT42Char 
1 2844 18 <0001009c0000044b05bd000500314013000203021e040508031a07010225
0500190607b80153b321765e182b2b4ef43c4dfd3c4e10e6003f3c4dfd3c
3f31301333112115219cc702e8fc5105bdfaf2af>NMOBAA+Helvetica AddT42Char 
1 3204 20 <00020050ff8b05e805e50015002700e4406b69036a1579038513961bc71b
064a1c591b5a1c64157515781cb719c81a083808181b021b191901151a1b
1a1a1a0001190100191e121a1a00191a191a1b18150206240001111e1500
02050d191a1b18042127213a0d03273a0105091e31111a29243109192829
d8216a66182b2b4ef44ded4e10f64ded003f33ed3fed1112173911123939
39011112393912173908872e2b087d10c50187102b3c2b3c87102bc42b3c
313018437940281f2606100b260f250725220c243200200e1e3201260624
3200230a2132011f102132012508273200002b2b2b012b2b2b2b2b2b8181
015d005d2507270e01232027261110371221201716111407060704363727
371736123510002322001110002105dc64e352bf71feaac2ab94be017401
85bb9223357efe576c28a164c05b41fef1ebeefeea010b01020479ad2d36
e0da0148012ad40110fac3fed08e83c87e1a11197e7b9568010276010301
3cfed1fec5fef7fec6000000>NMOBAA+Helvetica AddT42Char 
1 4416 25 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>NMOBAA+Helvetica AddT42Char 
1 5032 27 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>NMOBAA+Helvetica AddT42Char 
1 5292 28 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>NMOBAA+Helvetica AddT42Char 
1 5912 30 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>NMOBAA+Helvetica AddT42Char 
1 6400 32 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc8000000>NMOBAA+Helvetica AddT42Char 
1 6776 35 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>NMOBAA+Helvetica AddT42Char 
1 7024 36 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>NMOBAA+Helvetica AddT42Char 
1 7448 38 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>NMOBAA+Helvetica AddT42Char 
1 7676 39 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>NMOBAA+Helvetica AddT42Char 
1 8424 42 <0001000b000003e1042f000b00a8405eaa080177077808a705a907a609a8
0b060202030101271200000b0203032712040504080708090927120a0a0b
08070727120606050205080b04060001030403000607090a03060a0d1717
1a04010203050708090b0806d4000a190c677e182b194e10f418c44dfd17
39c4194e456544e618003f173c3f173c1112173901874d2e2b3d1004c087
052e182b3d1008c0058710182b3d1004c087052e182b181008c03130015d
005d13331b0133090123090123011ee9f6f9dcfe960179e6fef6fefee401
79042ffe870179fdf6fddb0192fe6e022500>NMOBAA+Helvetica AddT42Char 
1 8652 43 <0001fffb01ed047602800003001d400f001c03011a0500190405d5215f8b
182b2b4ee410e6002f4ded31300321152105047bfb8502809300>NMOBAA+Helvetica AddT42Char 
NMOBAA+Helvetica /CharStrings get begin
/period 4 def
/C 13 def
/D 14 def
/L 18 def
/Q 20 def
/a 25 def
/c 27 def
/d 28 def
/f 30 def
/h 32 def
/m 35 def
/n 36 def
/p 38 def
/r 39 def
/x 42 def
/endash 43 def
end
NMOBAA+Helvetica /Encoding get
dup 46 /period put
dup 67 /C put
dup 68 /D put
dup 76 /L put
dup 81 /Q put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 104 /h put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 120 /x put
dup 208 /endash put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/YXPEUO+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five 7{/.notdef}rp /equal /greater 4{/.notdef}rp /C /D /E /.notdef /G /H 3{/.notdef}rp /L /M 3{/.notdef}rp /Q 2{/.notdef}rp /T /.notdef /V /W 2{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d /e /f /g /h /i /j 2{/.notdef}rp /m /n /o /p /.notdef /r /s /t 3{/.notdef}rp /x 87{/.notdef}rp /endash 47{/.notdef}rp]YXPEUO+Helvetica nfYXPEUO+Helvetica*1 [9.99907 0 0 -9.99907 0 0 ]msf583.069 517.727 mo(E)sh589.726 517.727 mo(x)sh594.683 517.727 mo(p)sh600.207 517.727 mo(e)sh605.731 517.727 mo(c)sh610.688 517.727 mo(t)sh613.52 517.727 mo(a)sh619.044 517.727 mo(t)sh621.877 517.727 mo(i)sh624.143 517.727 mo(o)sh629.667 517.727 mo(n)sh635.191 517.727 mo(s)sh643.122 517.727 mo(a)sh648.646 517.727 mo(t)sh654.168 517.727 mo(L)sh659.692 517.727 mo(H)sh666.916 517.727 mo(C)sh676.972 517.727 mo(f)sh679.804 517.727 mo(r)sh683.204 517.727 mo(o)sh688.727 517.727 mo(m)sh699.775 517.727 mo(h)sh705.299 517.727 mo(a)sh710.822 517.727 mo(r)sh714.222 517.727 mo(d)sh722.577 517.727 mo(Q)sh730.367 517.727 mo(C)sh737.59 517.727 mo(D)sh747.505 517.727 mo(\320)sh755.86 517.727 mo(p)sh761.1 517.727 mo(.)sh763.933 517.727 mo(2)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.29 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: eplot.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips eplot
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.22:2050
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (eplot.dvi) @start
%DVIPSBitmapFont: Fa cmsy10 17.28 2
/Fa 2 113 df<1D1E1D3FA38A1D1FA38A1D0FA28A1D078A1D038A1D018A777EA21E7F8B
1E3F787E787E8B787E787E787E787EF77FC0797EF71FF8797E79B4FC007FC112E0C212F8
21FCA221F86C20E0D200071300F70FFC555AF73FE0555A55C7FC545A545A545A545A6754
5A545A1E7F9CC8FC1EFEA2535A661D03661D07661D0F66A21D1F66A31D3F9BC9FCA31D1E
7E4C78C98F>33 D<1F07F70F801F1FA21F3F2000671F7E1FFE671E01671E03671E07671E
0F671E1F671E3F9CC7FC661E7E1EFE661D01661D03661D07661D0F661D1F661D3F9BC8FC
A2651D7E1DFE651C01651C03651C07651C0F651C1F651C3F9AC9FC641C7E1CFE641B0164
1B03641B07641B0F641B1F641B3F022096CAFC027060D901F0187E497E010719FED91FFC
60013F1801496C60D801FF1803486D60D807CF1807D81F0F6D5FD83E07180F007C6200F0
6E161F486C6100006E163F6D96CBFC6F5E6D187E6F16FE027F5F6F1501023F5F19036F5E
021F16076F5E6E160F705D6E161F705D6E163F7092CCFC6E5E197E826E16FE705C037F14
01705C033F1403705C031F1407705C6F140F61EF801F6F5DEFC03F6F92CDFC715A6F147E
EFF0FE6F5C17F9047F5B17FBEFFFF08260826082608295CEFC825FA2705AA216005F7190
768578>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 12 1
/Fb 1 1 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr17 17.28 14
/Fc 14 103 df<4AB712F8A491C76C01E0C9FC040F90CAFCA2705AAC93383FFF80030FB5
12FE037FECFFC0912703FFE7FE13F891260FFC07EB07FEDA7FE0913800FFC0DAFF80ED3F
E0902603FE00ED0FF8D907F8EE03FCD91FF070B4FC4948707F4948717E4948717E4890C7
707E4848727E0007864848727EA24848727EA24848721380A2007F1BC0A2498400FF1BE0
AA007F1BC06D60A2003F1B80A26C6C4E1300A26C6C4E5AA26C6C4E5A0003626C6C4E5A6C
6D4D5A6D6C4D5A6D6C4D5A6D6C4C90C7FCD907F8EE03FCD903FEEE0FF8902600FF80ED3F
E0DA7FE0EDFFC0DA0FFCDA07FEC8FC912603FFE7EBFFF8DA007FB612C0030F4AC9FCDB00
3F1380DC07FECAFCAC4C7EA2047F13E04AB712F8A453627AE160>8
D<150E151E153C157815F0EC01E0EC03C01407EC0F80EC1F00143EA25C5C13015C495A13
075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3485AA3485AA3120F5BA3121F5B
A3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA57EA27FA3121FA37F120FA37F12
07A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F8013078013036D7E801300147C
80A280EC0F80EC07C01403EC01E0EC00F01578153C151E150E1F8F73EA33>40
D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E801307801303801301
80130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F01403A315F8A31401A215
FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715E0A3140F15C0A3EC1F
80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49C7FC5B133E5B5BA248
5A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I<4AB4FC021F13F0027F13FC903901
FF01FF903A03F8003F80D90FE0EB0FE049486D7E49486D7E49C76C7E017E140049157E00
01167F49810003178049151F000717C049150F000F17E0A3001F17F0491507A2003F17F8
A54848ED03FCA700FF17FEB3A8007F17FCA56D1507A3003F17F8A4001F17F06D150FA200
0F17E0A36C6CED1FC0A2000317806D153F000117006D5D6C6C15FE017E5D017F14016D6C
495A6D6C495A6D6C495AD903F8EB3F806DB448B4C7FC9039007FFFFC021F13F0020190C8
FC37607BDD42>48 D<EC01C014031407140F143F147FEB03FF130F90B5FCB6FCEBFC7F13
F01300C7FCB3B3B3B3A24A7EA2010713FCB812E0A42B5E74DD42>I<EC0FFE91387FFFE0
0103B512F8010F14FE903A1FE00FFF8090263E000113E001FC6D6C7ED801F06E7E4848EC
0FFC496E7E48486E7E48C81480000E81001E6F13C0121C003CEE7FE012380078EE3FF012
70A3B46CED1FF813E0A27FA66C5A6C5A0006C913F0CA123FA318E0177FA2EFFFC0A21880
5E18004C5A16075F4C5A5F161F4C5A4C5A5F4CC7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8
FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E4A15385C495A495A49481570495A49C9FC
131E5B4916F05B484816E0484815014848150348B8FCA25A5A5AB912C0A4355E7ADD42>
I<007FBD1280BE12C0A36C1C80D1FCB3A3007FBD1280BE12C0A36C1C805A1F7AB267>61
D<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FEDB3FFCC7007F
1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A48ED0078DA3FF0EE3C3F4A
48161E4A48EE0F7F4949EE07FF4990CA7E495A4948834948835C013F197F4948183F495A
1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA2123F1B015BA2127F98C8FCA3
5B12FFB06C7EA24EB712E0A3123F95C7000FEBF0006D06015B64001F857FA2120F7F1207
A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E6D6C5F6D7E6D6D5E6D7F6E6CEE07BFDA3F
F8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC0F020001F0913801F807DB3FFEEC0FE092
260FFFF09038FF8003030390B538FE0001DB007F02F81300040F02C091C7FC040001F8CA
FC5B667AE368>71 D<B600FC057FB5FCA4C60280050F13F0D93FFECB000313804A953801
FE00011F62755A130F6E61010762806D4F5AA2816D4F5AA26F17076D97C7FC81027F180E
A26F171E023F181C811B3C021F183881020F60A26F17F0020760811A016E60826E4D5AA2
7015076E95C8FC82037F160EA282033F5E821A3C031F163882030F5EA27015F003075E82
19016F5E836F4B5AA27113076F93C9FC83047F140EA283043F5CA271133C041F14388304
0F5CA27113F004075C831801705C188170EB8380A218C77091CAFC18E7EF7FEEA218FE71
5AA3715AA2715AA3715AA3715AA260647FE163>86 D<B512F0A500F8C7FCB3B3B3B3B3B3
B3A7B512F0A5148F72EA24>91 D<B512F0A5EA0001B3B3B3B3B3B3B3A7B5FCA5148F7FEA
24>93 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0923807FFFC031F13FF92
397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02DE157F02FC6F7E4A824A
6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A0060A461180361A21807616E5E
180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E0780495A6E6CEB0FF09026
3C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C8138041657DE349>98
D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49
C76C7E496E7E49140348488148481401000782491400000F8283485A1880123F49153FA2
007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C
6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D9
03FC495A902700FF803FC7FC91383FFFFC020F13F00201138032417CBF3A>101
D<ED0FF0ED7FFC4AB5FC913907F81F8091390FE00FC091381FC03F91393F807FE0EC7F00
5C495A5C0103EC3FC0A24948EB0F0093C7FCA2495AB3A5B712F0A426000FF0C8FCB3B3B0
497EEB3FFE003FB6FCA42B657EE428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 12 9
/Fd 9 57 df<0103B612FCA390C701F0C8FC6F5A6F5AA8913801FFF0023FEBFF80903A01
FF3FDFF0D907F0EBC1FCD91FC0EBC07FD93F00EC1F8001FEED0FE048486F7E48486F7E48
486F7E48486F7E001F834982003F1880007F18C0A249163F00FF18E0A8007F18C06D167F
A2003F1880001F18006D5E000F5F6C6C4B5A6C6C4B5A6C6C4B5A6C6C4B5A013FED1F80D9
1FC0027FC7FCD907F0EBC1FCD901FFEBDFF0D9003FB51280020101F0C8FC9138003FC0A8
4B7E4B7E0103B612FCA33B447BC346>8 D<16C04B7EB3AB007FBAFCBB1280A26C1900C8
D801E0C9FCB3AB6F5A41407BB84C>43 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A
78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848
EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FF
B3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D13
0F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>
48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<ED0380A21507150FA2
151F153FA2157F15FFA25CEC03BF153F14071406140C141C141814301470146014C01301
1480EB03005B13065B131C13185B1370136013E0485A5B120390C7FC1206120E120C5A12
3812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFFC0A32A437DC231>52
D<EC07FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01
FC01FE1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA290
38007F80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB
03F04914F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120F
ED03F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFF
F8010313E00100138028447CC131>54 D<14FF010713E0011F13F890387F00FE01FC133F
D801F0EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D
130116F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF878
39007FFEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E0
0313E048486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF
167F48153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03
E06C6CEB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>
56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 17.28 5
/Fe 5 116 df<93B8FC030F17C0153F92B9FC1403140F4A1880027FEFFE009126FFFC01
01F8C8FC499038E0003F4901806D7E4948C7120F49486E7E49481403495A49486E7E5C49
5A4890C9FCA2485AA2484883120F5B96C8FC485A5F123F5BA25F007F5F5BA2170760485A
170F60A24D5AA24D5AA2007F4C5A604DC9FCA2003F4B5A4C5A6D4A5A001F4B5A6D4A5A00
0F4B5A6C6C4A5A6C6C02FECAFC6C6CEB03FC6C6CEB0FF090397F807FC0011FB5CBFC0107
13FC010013C04A3F7BBD50>27 D<92B66C073FB512C04A5314E09DB6FC6E20C0DB007F6D
4E91C7FC041E1CF8040E973803BFF0041EF2077FA2041C080E5B1F1C93263C7FE019FF55
5B043862A204781AE1690470F101C1F603819326F03FF01883E4070390C8FC04E0190EA2
0301505A0C385B16C0716C177003031B0F0CE05B0480F001C0A20307963803801FE30700
5B1600716C160E4B1B3F535C030E61A2031E4F137F535C031C6D7E525A033C4E4813FF68
03384EC7FCA20378060E5B525D03706D7E6403F04E5B9DC9FC4B60A202014E485B51485C
4B6D7F51C7FC0203060E140F674B5F6302071B1F716D495D92C8FC634A4D48143F67020E
4D5A50C8FC021E1B7F95267FE00E5E021C5FA2023C4D15FF6702385F620278DB3FF05DDF
F1C05E0270EEF380A202F004F7C85A9CCAFC4A16FE610101041F5E01034D5E61497E010F
4D150FD93FF84C151F48B597B57E007F02FC6E4849B712E0B66096C7FC4B020E618B6279
E188>77 D<030FBA12F85DA24B19F00680C7120105F0C814E094C94813C0DB7FFC4C1380
04F04C13004C4C5ADBFF804C5A93CA485A4B17FF4B604A484C5B505B4B4C5B4A484C90C7
FC505A4B4C5AA24A484C5A505A92C9485B4A4C5B4F5B020E4C90C8FC61021E5F021C4C5A
4F5A02184C5A91C9485B4E5B4E5B6097C9FC4E5A4E5A4E5A4E5A4D5B4D5B5F614D90CAFC
4D5A4D5A4D5A4D5A4C5BA24C5B4C5B4C90CBFC4C5A4C5A4C5A16FF5F4B5B4B49150C4B49
150E4B90C9121E4B48161C4B5A037F173C4C16384B5A4A4916784A5B4A4916704A90CA12
F04A5A023F604B16014A5A4A484C5A495B4949160749494C5A4990CAFC1A1F4948173F49
4895C8FC49485F49485F4849EE03FE4849160748181F4AEE7FFC4890C9EA01FF4848160F
48484BB55A48BAFCA2BBFC6C615D6278E160>90 D<4BB47E030F13F0037F13FC4A48C67E
DA07F8EB1F80DA1FE0130FDA7FC0EB07C04AC7EA03E049481401EB07FC495A495A133F49
5A495AA2484914034817C091C8120748178049150F000FEE1F00177E48485DEE07F0003F
ED7FE049D93FFFC7FC90B612FC16C04802C0C8FC01F0CAFCA4485AA55BA4127FA3183018
78123F18F06DED01E0001FEE03C0EF07806C6CED0F00173E6C6C5D0003ED01F06DEC07E0
6C6CEC1F80D8007F02FEC7FC90393FC01FF8010FB512E0010391C8FC9038007FE035407A
BE41>101 D<ED03FF033F13F092B512FC913903FC00FEDA0FE0131FDA1F80EB07804AC7
EA03C0027EEC01E05C4A14000101150F4948141F173F0107157F5CA2130F18C06EEC3F80
EF0C006E91C7FC80806E7E15FC6DEBFFC016FC6D14FF6D15C0836D6C806E80020F801403
DA001F7F1500EE1FFF1607828282A2D807E081EA1FF0487E007F167EA35F485AA2494A5A
D87F805D0070C8120300784B5A4C5A6C4B5A6C4BC7FC6C6C14FED807E0EB03F8D803FEEB
3FE0C6B61280011F49C8FC010313C0334079BE42>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi12 14.4 2
/Ff 2 73 df<191C193C193E197E19FEA21801A218031807A2180F8560183D18391871A2
18E1170118C1DD03817FA2EF07014D7E170E5FA25F177817704D80A24C5A0403147F5F4C
C7FCA2160E161E161C4C81A25E04F0143F5E4B5AA24B5A150793C8FC030E82A2031FB7FC
5DA25D0370C8121F5D14015D4A4882A24AC9FC4A160F140E5CA25C147814704A83A2495A
01031707495AA2130F133F496C4C7E2603FFE0EE3FFFB500FE031FB6FCA260A250557CD4
58>65 D<020FB600E090B612FEA4DA00070180C8387FF8006F90C96C5A4C5F0307177F64
5EA2030F17FF645EA2031F5E99C7FC5EA2033F5E635EA2037F1607635EA203FF160F635E
A24A171F6393C9FCA24A173F6393B8FCA25C6303FCC9127FA2020F17FF635DA2021F5E98
C8FC5DA2023F5E625DA2027F1607625DA202FF160F625DA249171F6292C9FCA249173F62
5CA20107177F625CA2010F17FFA2D93FFE03037F007FB60107B612F0B75BA24B5F5F527A
D161>72 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr12 14.4 2
/Fg 2 62 df<023FB612FEA4DA000701F0C8FC030113C06F5BAA030713E092B6FC020F15
F0DA3FFCEBBFFC902601FF80903881FF80902607FE009038807FE0D90FF8ED1FF0D93FE0
ED07FC49486F7E49486F7E4890C76E13804848EF7FC04848EF3FE0000F19F04848EF1FF8
A24848EF0FFCA2007F19FE491707A200FF19FFA8007F19FEA26D170F003F19FCA26C6CEF
1FF8A26C6CEF3FF0000719E06C6CEF7FC06C6CEFFF806C6D4B13006D6C4B5A6D6C4B5AD9
0FF8ED1FF0D907FEED7FE0902601FF80903881FF809026003FFCD9BFFCC7FC020FB612F0
020092C8FC030713E003001380AA4B7F030713F0023FB612FEA448527AD155>8
D<007FBB12F8BC12FCA36C1AF8CFFCB3007FBB12F8BC12FCA36C1AF84E1D7AAB5B>61
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black -20 1975 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 350 300 M 63 0 V 4117 0 R -63 0 V 350 454 M 31 0 V 4149
0 R -31 0 V 350 658 M 31 0 V 4149 0 R -31 0 V 350 763 M 31 0 V 4149
0 R -31 0 V 350 812 M 63 0 V 4117 0 R -63 0 V 350 967 M 31 0 V 4149
0 R -31 0 V 350 1171 M 31 0 V 4149 0 R -31 0 V 350 1275 M 31 0 V 4149
0 R -31 0 V 350 1325 M 63 0 V 4117 0 R -63 0 V 350 1479 M 31 0 V 4149
0 R -31 0 V 350 1683 M 31 0 V 4149 0 R -31 0 V 350 1788 M 31 0 V 4149
0 R -31 0 V 350 1837 M 63 0 V 4117 0 R -63 0 V 350 1992 M 31 0 V 4149
0 R -31 0 V 350 2196 M 31 0 V 4149 0 R -31 0 V 350 2300 M 31 0 V 4149
0 R -31 0 V 350 2350 M 63 0 V 4117 0 R -63 0 V 350 2504 M 31 0 V 4149
0 R -31 0 V 350 2708 M 31 0 V 4149 0 R -31 0 V 350 300 M 0 63 V 0 2345
R 0 -63 V 1186 300 M 0 63 V 0 2345 R 0 -63 V 2022 300 M 0 63 V 0 2345
R 0 -63 V 2858 300 M 0 63 V 0 2345 R 0 -63 V 3694 300 M 0 63 V 0 2345
R 0 -63 V 4530 300 M 0 63 V 0 2345 R 0 -63 V 1.000 UL LTb 350 300 M
4180 0 V 0 2408 V -4180 0 V 350 300 L 3.000 UL LT0 852 300 M 0 1542
V 41 240 V 42 70 V 42 43 V 42 30 V 42 24 V 41 19 V 42 16 V 42 14 V
42 13 V 42 11 V 41 10 V 42 9 V 42 8 V 42 8 V 42 7 V 41 7 V 42 6 V 42
6 V 42 5 V 42 5 V 41 5 V 42 5 V 42 4 V 42 5 V 42 4 V 41 3 V 42 4 V
42 4 V 42 3 V 42 3 V 41 4 V 42 3 V 42 2 V 42 3 V 42 3 V 41 3 V 42 2
V 42 3 V 42 2 V 42 2 V 41 3 V 42 2 V 42 2 V 42 2 V 42 2 V 41 2 V 42
2 V 42 2 V 42 2 V 42 1 V 41 2 V 42 2 V 42 1 V 42 2 V 42 1 V 41 2 V
42 1 V 42 2 V 42 1 V 42 2 V 41 1 V 42 1 V 42 2 V 42 1 V 42 1 V 41 1
V 42 2 V 42 1 V 42 1 V 42 1 V 41 1 V 42 1 V 42 1 V 42 1 V 42 1 V 41
1 V 42 1 V 42 1 V 42 1 V 42 1 V 41 1 V 42 1 V 42 1 V 42 1 V 42 1 V
41 0 V 42 1 V 42 1 V 3.000 UL LT2 880 300 M 13 231 V 42 211 V 42 128
V 42 92 V 42 72 V 41 59 V 42 50 V 42 43 V 42 38 V 42 34 V 41 31 V 42
28 V 42 26 V 42 24 V 42 23 V 41 20 V 42 20 V 42 18 V 42 18 V 42 16
V 41 16 V 42 15 V 42 14 V 42 14 V 42 13 V 41 12 V 42 12 V 42 12 V 42
11 V 42 11 V 41 10 V 42 10 V 42 10 V 42 9 V 42 9 V 41 9 V 42 9 V 42
8 V 42 8 V 42 8 V 41 8 V 42 7 V 42 8 V 42 7 V 42 7 V 41 6 V 42 7 V
42 7 V 42 6 V 42 6 V 41 6 V 42 6 V 42 6 V 42 6 V 42 5 V 41 6 V 42 5
V 42 5 V 42 6 V 42 5 V 41 5 V 42 4 V 42 5 V 42 5 V 42 5 V 41 4 V 42
5 V 42 4 V 42 5 V 42 4 V 41 4 V 42 4 V 42 4 V 42 4 V 42 4 V 41 4 V
42 4 V 42 4 V 42 4 V 42 3 V 41 4 V 42 3 V 42 4 V 42 3 V 42 4 V 41 3
V 42 4 V 42 3 V stroke grestore end showpage
 
@endspecial 1849 498 a Fg(\010)32 b(=)i
Ff(A)1839 77 y Fg(\010)f(=)g Ff(H)2260 1104 y Fe(M)2396
1125 y Fd(\010)2511 1104 y Fc(=)43 b(120)g(GeV)2144 928
y Fe(\033)5 b Fc(\()p Fe(e)2345 876 y Fd(+)2425 928 y
Fe(e)2490 876 y Fb(\000)2612 928 y Fa(!)40 b Fe(Z)10
b Fc(\010\))43 b([fb])1732 1869 y Fa(p)p 1852 1869 67
6 v 103 x Fe(s)1961 1973 y Fc([GeV])3682 1840 y Fd(220)-844
b(218)h(216)f(214)g(212)h(210)84 48 y(100)133 476 y(10)181
903 y(1)105 1330 y(0.1)57 1757 y(0.01)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: plots.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips plots
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.21:1639
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (plots.dvi) @start
%DVIPSBitmapFont: Fa cmr12 12 9
/Fa 9 57 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>46
D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848
EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FE
A56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F
806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<14FF010713E0011F13F890387F00FE01FC133FD801F0EB1F80
4848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116F07F6C
6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007FFEF090
383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E048486C
13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48153FA2
161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0
D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>56
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10 1
/Fb 1 73 df<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F61
5DA2021F151F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60
A202FCC7120101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F
153F605CA2017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>72
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 17.28 1
/Fc 1 34 df<1D1E1D3FA38A1D1FA38A1D0FA28A1D078A1D038A1D018A777EA21E7F8B1E
3F787E787E8B787E787E787E787EF77FC0797EF71FF8797E79B4FC007FC112E0C212F821
FCA221F86C20E0D200071300F70FFC555AF73FE0555A55C7FC545A545A545A545A67545A
545A1E7F9CC8FC1EFEA2535A661D03661D07661D0F66A21D1F66A31D3F9BC9FCA31D1E7E
4C78C98F>33 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr17 17.28 7
/Fd 7 113 df<B91280A4310478D142>22 D<150E151E153C157815F0EC01E0EC03C014
07EC0F80EC1F00143EA25C5C13015C495A13075C130F5C131F91C7FC5B133E137E137C13
FCA2485AA3485AA3485AA3120F5BA3121F5BA3123FA390C8FCA25AA5127EA312FEB3A712
7EA3127FA57EA27FA3121FA37F120FA37F1207A36C7EA36C7EA36C7EA2137C137E133E13
3F7F80130F8013078013036D7E801300147C80A280EC0F80EC07C01403EC01E0EC00F015
78153C151E150E1F8F73EA33>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F
133F7F6D7E80130780130380130180130080147C147EA280A3EC1F80A3EC0FC0A315E014
07A315F01403A315F8A31401A215FCA51400A315FEB3A715FCA31401A515F8A21403A315
F0A3140715E0A3140F15C0A3EC1F80A3EC3F00A3147EA2147C14FC5C13015C13035C1307
5C130F5C49C7FC5B133E5B5BA2485A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I<
B512F0A500F8C7FCB3B3B3B3B3B3B3A7B512F0A5148F72EA24>91
D<B512F0A5EA0001B3B3B3B3B3B3B3A7B5FCA5148F7FEA24>93 D<EB03C0EA07FFB5FCA4
1201EA007FA2133FB3AAEE7FC0923807FFFC031F13FF92397F007FC003F8EB0FF0DAC3E0
6D7EDAC780EB01FC02CFC87E02DE157F02FC6F7E4A824A6F7E180F4A82727E5C727EA285
1801A285A3841A80AD1A0060A461180361A21807616E5E180F6E4B5A6E5E02B8153F023C
4B5A6E4BC7FC6E4A5A90263E0780495A6E6CEB0FF090263C01F0495ADA007EEBFF806FB4
48C8FC0138010F13F890C8138041657DE349>98 D<D903C0EB7FC0D807FF903807FFFCB5
011F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F80001D9C7806D7E26007FCFC76C7E02DE
6E7ED93FFC6F7E4A6F7E4A82181F4A82727E5C727EA2727EA3727EA41A8084AC4E1300A5
4E5AA2611807A24E5A6E5E181F6E4B5A6E5E187F6E4B5A02DE4A90C7FC02CF4A5ADAC780
495ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF806FB448C8FC030F13F80300138093CA
FCB3A3497E497EB612F0A4415B7DBE49>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 17.28 4
/Fe 4 113 df<93B8FC030F17C0153F92B9FC1403140F4A1880027FEFFE009126FFFC01
01F8C8FC499038E0003F4901806D7E4948C7120F49486E7E49481403495A49486E7E5C49
5A4890C9FCA2485AA2484883120F5B96C8FC485A5F123F5BA25F007F5F5BA2170760485A
170F60A24D5AA24D5AA2007F4C5A604DC9FCA2003F4B5A4C5A6D4A5A001F4B5A6D4A5A00
0F4B5A6C6C4A5A6C6C02FECAFC6C6CEB03FC6C6CEB0FF090397F807FC0011FB5CBFC0107
13FC010013C04A3F7BBD50>27 D<92B700F80107B712C07318E04A4C4916C06E84DB007F
01E0C8000391C7FC041F90CA13F87048715A041F18FFA24D60A2043F5F665FA2047F5F66
5FA204FF5F9BC8FC5FA24B60655FA24B181F655FA24B183F6594CAFCA24B187F655EA203
1F18FF655EA2033F5F6593BAFCA25D6504F0C91203A203FF5F9AC9FC5EA24A60645EA24A
181F645EA24A183F6493CAFCA24A187F645DA2021F18FF645DA2023F5F645DA2027F5F64
5DA202FF5F99CAFC5DA24960635DA249181F49183F013F01F04BB57E007FB600FC0103B7
12E0B75CA24C60736279E174>72 D<953801FFE0063F13FF4DB612E0943A0FFE007FF8DD
3FF0EB07FE932601FF80EB01FFDC07FEC813C0DC0FF8ED3FE0DC3FE06F7EDCFFC06F7E4B
90C96C7E4B48707EDB0FFC834B487013804B48824B4818C04B48EF7FE04A5B4A90CBEA3F
F04A5A4A4819F84A5A023F191F4A4819FC4A5A495B1DFE4949180F5B4990CCFC5C011F1B
FF5C133F495AA2495AA25A5C48635C5AA25C481CFE1C3F91CDFC5AA34848F27FFCA44848
F2FFF8A35113F0A25B5113E0A200FF1CC0631D80A2511300A2515A127F515AA2515A641B
FF505B003F63505BA2001FDB07F84A90C7FC6DDA1FFE4A5A4C6C4A5A000F9226FC0F805C
922701F003C0495A6C6C49486C6C495ADC80004A5A6C6C01076E485B4BC7D8700390C8FC
6CD9800E4B5A6C4E5ADAC01E9138781FF090267FE01C4B5A013F933838FFC0D91FF00339
90C9FCD90FF8ED3FFED907FEED7FF8D901FF16E06D01DEECFF80DA3FFFD907FEC8124002
0F9026807FFC15E0020390B5FCDA007FD9FE7C1401030701C05E92C8FC1B03A206FE4A5A
1B0F51C7FCA2725C1BFEF180019638C007FCF1F03F96B55AA26363725CA2637291C8FC62
725B7213F07213C0060190C9FC608179E46F>81 D<DA07E0EC3FC0DA1FFCECFFF8DA7FFE
010313FE913BF87F800FC07F903D01F03FC03F003FC0DAE01F017CEB1FE0D903C06D4813
0F0280D9E1E0EB07F0010790260FF3C014F80200EBF7804902FFC7EA03FC010E495A4C15
FE131E011C5C5E033F16FF133C01385CA20178137F137001305C90C7FC03FF5DA25EA24A
5E1AFE93C8FCA24A161F1AFC5DA20207163F1AF85D1AF0020F167FA24B16E019FF021F17
C04E13805D4E1300023F5E1807614E5A4A6C4A5A616F4A5A4E5ADAFFDE4AC7FC03DF495A
038F495A923987C00FF049903983E03FC00381B5C8FC9238007FFCEE1FE04991CAFCA25C
A21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA248487E007FEBFFF8B6FCA25D
485B84BE47>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy10 14.4 1
/Ff 1 113 df<1D701DF8A21C011DF01C031DE01C071DC01C0F1D801C1F1D00641C3EA2
1C7E1C7C1CFC641B01641B03641B07641B0F641B1F99C7FC631B3E1B7E1B7C1BFC631A01
63A21A03631A07631A0F631A1F98C8FC621A3E1A7E1A7C1AFC6219016219036219074960
D90780160F010F60131FD97FC0161F01FF95C9FC486D5E0007183E486D167ED81F3F177C
007C6D16FCD8F81F5F00F0170100406D5ED8000F16036E5E010716076E5E6D160F6F5D6D
161F6F92CAFC6D5E183E6F147E027F157C81023F15FC6F5C021F14016F5C020F14036F5C
02071407606F130F6E5DEE801F6E92CBFC705A6E143EEEE07E037F137CEEF0FC033F5B16
F1EEF9F0ED1FFBEEFFE081A26F5BA26F5BA26F90CCFCA25E15005E167C16785D78778464
>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr12 14.4 12
/Fg 12 102 df<B812C0A42A0478C53B>22 D<14075C5C147F5C1307133F000FB5FCB6FC
13F913C1EAF0011200B3B3B3A7497F010F13E0B712FEA4274F75CE3B>49
D<160F5EA25E5EA25E5DA25D5DA25D151E151C153C5D157015F04A5A5D14035D4A5A5C14
0E5C143C14385C14F05C495A13035C130749C7FC130E131E5B133813785B5B1201485A5B
120748C8FC120E121E5A123812785AB912F0A4C8000190C7FCAF4B7F4B7F020FB612E0A4
34507DCF3B>52 D<ED3FE0913803FFFC020F13FF91393FE01F8091397F0007C0D901FCEB
01E04948EB00F0495A494813034948EB0FF84948131F49C7FC13FEA2485A120349EC0FF0
0007ED03C093C7FC485AA2121F5BA2123FA3127F5BEC0FFF023F13C04A13F03AFFC1F003
FC9039C3C000FED9C780137F91C7EA3F8001CE15C001DCEC1FE0160F01D815F001F8EC07
F85B17FCA24915FE1603A317FF5BA3127FA66C7EA317FE121FA216076C6C15FCA2000716
F86D140F000316F06DEC1FE012016C6CEC3FC06DEC7F806D6CEBFF006D6C485A90390FF8
0FFC6DB512F0010114C06D6C90C7FCEC0FF830517BCE3B>54 D<EC1FF891B5FC010314C0
90390FF00FE090391FC003F890397F8001FC01FEC77E0001157F4848EC3F805B0007ED1F
C0484815E0001F150F4915F0123F1607007F16F85BA217FC12FFA2160317FEA617FFA35E
127FA37F003F5DA2121F6D5C000F151B0007153B6D14336C6C1473000115E36C6C130101
7FEB03C3903A3FC00F83FE90390FFFFE03010313FC010013F091C7FC160717FCA317F8A2
160F17F0A2161FD803C015E0EA0FF0486CEC3FC01780167F170016FE150149495AD80FC0
495A90C7485A6C6C495A01E0495A2703FC01FFC7FC6CB55A6C6C13F8011F13E0010390C8
FC30517BCE3B>57 D<007FBB12F8BC12FCA36C1AF8CFFCB3007FBB12F8BC12FCA36C1AF8
4E1D7AAB5B>61 D<DC1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE
133E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F049018015
794990C9123D4948161F4948160F49481607495A494816034A160113FF484916004890CB
FC1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4B
B612FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C
7F137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE91
3803F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E031F02F81306
030302E090C7FC9226001FFEC9FC4F567AD35C>71 D<003FBB12C0A449C79038F0000701
F06E48130001C0183F48C8EE0FE0007E1907007C1903A200781901A400701900A500F01A
F0481A70A6C91700B3B3AC4C7E030313FC027FB712E0A44C517CD055>84
D<B600FC030FB512E0A4C691CAEBFC00D97FFCEF3FF06D48EF1FC0011F616E71C7FC130F
1A0E6E171E0107181CA26E173C6D1838816D60A26F16F06D6081027F4C5AA281023F4C5A
A26F1507021F94C8FC81020F160EA26F151E0207161CA26F153C6E1638826E5EA27014F0
6E5E821801037F5D82033F4A5AA2701307031F92C9FC82030F140EA270131E0307141CA2
70133C6F143817806F5CA2EFC0F06F5C17E017E1047F5B17F193383FF380A217FF7090CA
FCA2705AA3705AA3705AA2705AA3705A53547ED158>86 D<B512C0A500F8C7FCB3B3B3B3
B3B3A2B512C0A5127874D921>91 D<B512C0A5EA0007B3B3B3B3B3B3A2B5FCA512787ED9
21>93 D<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E48
48EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B16
0312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D15
E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F80101
B512E06D6C1380DA07FCC7FC2D367DB434>101 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi12 14.4 6
/Fh 6 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C768B21>58
D<020FB600E090B612FEA4DA00070180C8387FF8006F90C96C5A4C5F0307177F645EA203
0F17FF645EA2031F5E99C7FC5EA2033F5E635EA2037F1607635EA203FF160F635EA24A17
1F6393C9FCA24A173F6393B8FCA25C6303FCC9127FA2020F17FF635DA2021F5E98C8FC5D
A2023F5E625DA2027F1607625DA202FF160F625DA249171F6292C9FCA249173F625CA201
07177F625CA2010F17FFA2D93FFE03037F007FB60107B612F0B75BA24B5F5F527AD161>
72 D<020FB56C0503B512C06565A2DA00076D4D90C7FCDB03BF61F53BFC030719776604
3F18E7F401C7030F19CF706C9338038FF0150EF4070F031EF00E1F66031C181C1C38033C
193F706C04705B15381CE00378943801C07F660370EF0380A203F094380700FF090E91C8
FC4B6C7E6302014E5A6503C01770A20203F0E003E001C05B4B6C7EF20380020794380700
07650300160EA24A4D130F505C020E6D7E62021E4D131F65021C4C5AA2023C4C48133F4F
C75B02386D7E190E02784C147F6502705EA202F04C14FF4F92C9FC4AEC7F80F081C00101
61DE83805C4A0387C7FCA20103048E1403069C5D5CEF3FF8010719074E5D010F5EA2011F
4C140FD97FC05D2601FFF0F03FFC007FD9FFC06DC7007FB512FEB694B6FC171E4B011C5F
72527AD171>77 D<49B4FC0003B5FC5C5AA2EA00075C13031307A25CA2130FA25CA2131F
A25CA2133FA25CA2137FA25CA213FFA291C9FC15FE48903803FFC0020F7F9039FE3F03F8
91387C01FC00039038F000FE6D48137E4A137F4AEB3F804890C7FC5B4915C05B120FA25B
A2121FA25BA2003F157FA25BA2007F15FF17805BA25D170048C7FCA24B5AA25E1507485D
4B5A127E007F4A5A5E153F6C4A5A4BC7FC6C6C5B4A5A390FC007F06C6C485A3903F03FC0
6CB5C8FC38007FFCEB1FE02A547BD232>98 D<EDFFC0020713F8023F13FE91387F003FD9
01FCEB0F80D903F0EB03C04948EB01E0495A16034948130F161F49C7FCA34915C06EEB0F
8093C7FC808014FCECFFE06D13FE6F7E6D14E06D806D800101806D6C7F140F9138007FFF
150F15038181000781EA1F80EA7FC0A200FF157EA3495CA248C7485A00F04A5AA200784A
5A6CEC1F80001F027FC7FC390FF003FE0003B512F8C614C0D91FFCC8FC2B357AB337>
115 D<EC01C0EC07F0140FA2141FA25DA2143FA25DA2147FA25DA214FFA292C7FCA25BA2
5CA2007FB612F0B7FC16E0A2260007FCC7FCA25CA2130FA25CA2131FA25CA2133FA25CA2
137FA25CA213FFA291C8FCA25AA25BA21203ED03805B150700071500A2495B150E151E5D
15384913785D6D485A0003495A4A5A2601FC1FC7FC3800FFFEEB3FF8EB0FE0244C7ECA2A
>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black -35 2447 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 350 300 M 63 0 V 2137 0 R -63 0 V 350 593 M 31 0 V 2169
0 R -31 0 V 350 764 M 31 0 V 2169 0 R -31 0 V 350 885 M 31 0 V 2169
0 R -31 0 V 350 979 M 31 0 V 2169 0 R -31 0 V 350 1056 M 31 0 V 2169
0 R -31 0 V 350 1122 M 31 0 V 2169 0 R -31 0 V 350 1178 M 31 0 V 2169
0 R -31 0 V 350 1228 M 31 0 V 2169 0 R -31 0 V 350 1272 M 63 0 V 2137
0 R -63 0 V 350 1565 M 31 0 V 2169 0 R -31 0 V 350 1736 M 31 0 V 2169
0 R -31 0 V 350 1857 M 31 0 V 2169 0 R -31 0 V 350 1952 M 31 0 V 2169
0 R -31 0 V 350 2029 M 31 0 V 2169 0 R -31 0 V 350 2094 M 31 0 V 2169
0 R -31 0 V 350 2150 M 31 0 V 2169 0 R -31 0 V 350 2200 M 31 0 V 2169
0 R -31 0 V 350 2244 M 63 0 V 2137 0 R -63 0 V 350 2537 M 31 0 V 2169
0 R -31 0 V 350 2708 M 31 0 V 2169 0 R -31 0 V 350 300 M 0 63 V 0 2345
R 0 -63 V 900 300 M 0 63 V 0 2345 R 0 -63 V 1450 300 M 0 63 V 0 2345
R 0 -63 V 2000 300 M 0 63 V 0 2345 R 0 -63 V 2550 300 M 0 63 V 0 2345
R 0 -63 V 1.000 UL LTb 350 300 M 2200 0 V 0 2408 V -2200 0 V 350 300
L 3.000 UL LT0 350 2236 M 625 1985 L 92 -77 V 122 -98 V 244 -182 V
-30 22 V 214 -146 V 183 -114 V 31 -17 V 213 -120 V 214 -105 V 214 -96
V 214 -85 V 214 -76 V 3.000 UL LT2 350 2455 M 570 2227 L 790 2020 L
220 -177 V 220 -166 V 220 -162 V 220 -132 V 220 -134 V 220 -126 V 220
-119 V 2550 893 L stroke grestore end showpage
 
@endspecial 1032 1446 a Fh(H)9 b(t)1182
1424 y Fg(\026)1180 1446 y Fh(t)1024 1027 y(H)g(b)1176
996 y Fg(\026)1180 1027 y Fh(b)1015 475 y Ff(p)p 1114
475 56 5 v 1114 561 a Fh(s)34 b Fg(=)f(14)38 b(T)-10
b(eV)775 392 y Fe(\033)5 b Fd(\()p Fe(pp)39 b Fc(!)h
Fe(H)11 b(Q)1548 355 y Fd(\026)1513 392 y Fe(Q)q Fd(\))43
b([pb])908 2435 y Fh(M)1021 2453 y Fb(H)1141 2435 y Fg([GeV])2016
2312 y Fa(300)-605 b(250)g(200)f(150)h(100)166 609 y(1)90
1419 y(0.1)41 2229 y(0.01)2247 2447 y @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 400 300 M 31 0 V 2119 0 R -31 0 V 400 435 M 31 0 V 2119
0 R -31 0 V 400 540 M 31 0 V 2119 0 R -31 0 V 400 626 M 31 0 V 2119
0 R -31 0 V 400 699 M 31 0 V 2119 0 R -31 0 V 400 762 M 31 0 V 2119
0 R -31 0 V 400 817 M 31 0 V 2119 0 R -31 0 V 400 867 M 63 0 V 2087
0 R -63 0 V 400 1193 M 31 0 V 2119 0 R -31 0 V 400 1384 M 31 0 V 2119
0 R -31 0 V 400 1519 M 31 0 V 2119 0 R -31 0 V 400 1624 M 31 0 V 2119
0 R -31 0 V 400 1710 M 31 0 V 2119 0 R -31 0 V 400 1783 M 31 0 V 2119
0 R -31 0 V 400 1845 M 31 0 V 2119 0 R -31 0 V 400 1901 M 31 0 V 2119
0 R -31 0 V 400 1950 M 63 0 V 2087 0 R -63 0 V 400 2277 M 31 0 V 2119
0 R -31 0 V 400 2468 M 31 0 V 2119 0 R -31 0 V 400 2603 M 31 0 V 2119
0 R -31 0 V 400 2708 M 31 0 V 2119 0 R -31 0 V 400 300 M 0 63 V 0 2345
R 0 -63 V 830 300 M 0 63 V 0 2345 R 0 -63 V 1260 300 M 0 63 V 0 2345
R 0 -63 V 1690 300 M 0 63 V 0 2345 R 0 -63 V 2120 300 M 0 63 V 0 2345
R 0 -63 V 2550 300 M 0 63 V 0 2345 R 0 -63 V 1.000 UL LTb 400 300 M
2150 0 V 0 2408 V -2150 0 V 400 300 L 3.000 UL LT0 400 1835 M 615 1705
L 830 1579 L 215 -123 V 215 -120 V 215 -117 V 215 -115 V 1905 991 L
2120 881 L 2335 771 L 2550 664 L 3.000 UL LT2 400 2346 M 615 2150 L
830 1966 L 215 -175 V 215 -168 V 215 -161 V 215 -155 V 215 -152 V 215
-145 V 2335 867 L 2550 730 L stroke grestore end showpage


@endspecial 3463 1184 a Fh(H)9 b(b)3615 1153 y Fg(\026)3619
1184 y Fh(b)3471 1667 y(H)g(t)3621 1645 y Fg(\026)3619
1667 y Fh(t)3394 478 y Ff(p)p 3494 478 V 86 x Fh(s)33
b Fg(=)g(1)p Fh(:)p Fg(96)38 b(T)-10 b(eV)3164 371 y
Fe(\033)5 b Fd(\()p Fe(p)14 b Fd(\026)-80 b Fe(p)39 b
Fc(!)h Fe(H)11 b(Q)3937 335 y Fd(\026)3902 371 y Fe(Q)q
Fd(\))43 b([pb])3212 2435 y Fh(M)3325 2453 y Fb(H)3444
2435 y Fg([GeV])4299 2312 y Fa(200)-506 b(180)h(160)g(140)g(120)f(100)
2365 854 y(0.01)2316 1757 y(0.001)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

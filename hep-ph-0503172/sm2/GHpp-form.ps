%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: plots.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips plots
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.20:2158
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (plots.dvi) @start
%DVIPSBitmapFont: Fa cmr17 17.28 2
/Fa 2 42 df<150E151E153C157815F0EC01E0EC03C01407EC0F80EC1F00143EA25C5C13
015C495A13075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3485AA3485AA3120F
5BA3121F5BA3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA57EA27FA3121FA37F
120FA37F1207A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F8013078013036D7E
801300147C80A280EC0F80EC07C01403EC01E0EC00F01578153C151E150E1F8F73EA33>
40 D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E80130780130380
130180130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F01403A315F8A31401
A215FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715E0A3140F15C0A3
EC1F80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49C7FC5B133E5B5B
A2485A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr12 12 10
/Fb 10 57 df<B612C0A61A067F9721>45 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A0A78891B>I<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
48EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815
FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D
130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131
>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F
13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8
A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0
EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC1503
16FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F800
38140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0
010190C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF15
3F14071406140C141C141814301470146014C013011480EB03005B13065B131C13185B13
70136013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000
ADEDFFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D
5D5D15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137E
D807C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F48
7EA416F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F
006C6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07
FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE
1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F
80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F049
14F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F8
6C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF80103
13E00100138028447CC131>I<14FF010713E0011F13F890387F00FE01FC133FD801F0EB
1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116F0
7F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007FFE
F090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E048
486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F4815
3FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB
07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>56
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi12 12 4
/Fc 4 88 df<1618163C167CA2167816F8A216F01501A216E01503A216C01507A2168015
0FA2ED1F00A2151E153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D140FA2
92C7FC5CA2141E143EA2143C147CA25CA25C1301A25C1303A25C1307A25C130FA291C8FC
5BA2133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5AA212
1E123EA2123C127CA2127812F8A25A126026647BCA31>61 D<91B6D8E003B61280A30200
01E0C70003EB8000DB7F806E48C7FC03FF1503A293C85BA219075C4B5EA2190F14034B5E
A2191F14074B5EA2193F140F4B5EA2197F141F4B5EA219FF143F92B8C8FCA3DA7FC0C712
014B5DA2180314FF92C85BA218075B4A5EA2180F13034A5EA2181F13074A5EA2183F130F
4A5EA2187F131F4A5EA2013F16FFA24A93C9FCD9FFE002037FB6D8E003B67EA351447CC3
51>72 D<EE03FF047F13F0923901FC01FC92390FE0007FDB3F80EB1FC003FEC76C7EDA01
F8EC03F0DA07F0814A486E7EDA1F806E7E027FC9FC02FE167F495A4948EE3F8013074948
17C04A161F495A013F18E0495AA249CAFC485A1AF012035B12075B120F5B001F19E0193F
5B123FA34848EF7FC0A31A8019FF485A1A0060A24E5AA2614E5AA2007F4D5AA24E5A4E5A
61003F021F147F6DD9FFC049C7FC913A01E0E001FE001F90260380705B913A07003003F8
260FE00690383807F00007010E9038180FE0D9F00CEC1F80D803F84BC8FC0001011CEB1C
FE2600FC18EB1DF8017EEC1FF0D93F9C14C0D90FEC017FC9FC902703FE03FC14600100B5
FC91260FFE1C14E091C7001E5C1801A24E5A043F1307180FDD803FC7FC71B4FCEFFFFE70
5BA26060705B60040390C8FCEE00FC44597CC54D>81 D<B6D88003B500FC0107B5FC5E03
005D000301C09026001FFEC8EA7FE06C90C8D80FF8ED3F80F41F001C1E1C1C17076C1B18
64050F16701C60051F5EA205374B5AA205674BC7FC17E705C71506DC0187150E72140C6E
D903075DA2017FDA06035DA2040C5E041C16E004185E04304B5AA204604BC8FCA204C015
06150104805DDB03005D84DAC0065E1701013F495EA24B5E4B1501624B4BC9FCA24B1506
A2DAC1805D02C3161C92C7141802C66F5A14E602EC5E83D91FF85EA24A5E4A93CAFCA24A
5DA24A5DA291C95AA2011E5E011C5E010C166060467BC35C>87 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi12 17.28 2
/Fd 2 66 df<027FB8FC49B912C01307131F5B5B90BA128048F0FE004848C700F0C9FC13
F8D807E0495A485A5B48C71203123E003C5D5A0070140712F05A484A5AC8FCA2151FA293
CAFC5DA4157EA315FEA25D1401A44A5AA31407A34A5AA3141FA25DA2143FA34A5AA45D92
CBFC143E423F7BBD3D>28 D<F203C0507EA21A0FA21A1FA21A3F1A7F871AFFA26161A261
A2F10F7F191F191E073C7FA21978F1F83F19F0F001E0A2F003C018071980DE0F007FA218
1E063E131F183C60A2601701604D4880A24D5A050F140F95C7FC171EA25F177C177817F8
4D814C5A16034D8016075F4CC8FCA2161E163E043C835EA293B9FC5DA25D04C0C812034B
5A150F93C9FC031E84A25D037C8215785DA24A5A14035D4A4884A24ACAFC4A83141E5C14
7C147814F813014948851307497E011F60D97FFC4D7F0003B5051F13FE007F02F0030FB6
12FEB6FCA21DFC5F667BE569>65 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr10 10 2
/Fe 2 51 df<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C
3879B72A>49 D<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi10 10 4
/Ff 4 88 df<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C014
07A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495A
A25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207
A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>61
D<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F615DA2021F15
1F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60A202FCC712
0101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F153F605CA2
017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>72 D<4BB4FC031F13F09238
FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948
EC01F8495A4948EC00FC495A013F16FE49C9FC13FE187F485A12035B12075B120F4916FF
121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8A218F0170F18E0171F18C0EF3F807E
EF7F0017FEDA07C05B6C90391FF001F8903980383803001F496C485A9139E00C0FE0260F
C0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB07F8D801F95C3A007FC00FC0903A3F
E07F0003903807FFFE0100018F5BDA000F1306170E171E705A177CEEC1F816FF5FA25F5F
6F5B6F48C7FCED00F8384B7CBA42>81 D<277FFFFC01B500F890B51280B5FC60000390C7
D807FCC7380FF80001FC4BEC03E000016204035E98C7FC621A0604075DA2040F5DA2041B
5D6216336D02735D1663000003C34A5A83DB01834AC8FC04815CDB0301140603075D1506
030C5DA203185D1970033015606115606D01E04A5A15C090267F01804AC9FC17FEDA0300
14060400130E0206150C020E5D140C4A5DA24A5D18E04A5D715A5C4A92CAFCA26DC85AA2
013E157C1778133C1770133801301560513B7CB84E>87 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi12 14.4 2
/Fg 2 66 df<0103B712FC010F16FF133F5B90B9FC4817FE4817F82707F8001EC8FCEA0F
C0495B48C7FC123E003C147C5A4814785A15F8C8FCA24A5AA31403A25D1407A44A5AA314
1FA25D143FA44AC9FCA35CA3495AA45CA2EB00F038347CB233>28
D<191C193C193E197E19FEA21801A218031807A2180F8560183D18391871A218E1170118
C1DD03817FA2EF07014D7E170E5FA25F177817704D80A24C5A0403147F5F4CC7FCA2160E
161E161C4C81A25E04F0143F5E4B5AA24B5A150793C8FC030E82A2031FB7FC5DA25D0370
C8121F5D14015D4A4882A24AC9FC4A160F140E5CA25C147814704A83A2495A0103170749
5AA2130F133F496C4C7E2603FFE0EE3FFFB500FE031FB6FCA260A250557CD458>65
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr12 14.4 6
/Fh 6 110 df<15E01401EC03C0EC0780EC0F00141E5C147C5C495A13035C495A130F5C
131F91C7FC133E137EA25BA2485AA25B1203A2485AA3120F5BA2121FA25BA2123FA290C8
FCA35AA5127EA312FEB3A3127EA3127FA57EA37FA2121FA27FA2120FA27F1207A36C7EA2
12017FA26C7EA2137EA2133E7F80130F8013076D7E8013016D7E147C143C8080EC0780EC
03C0EC01E014001B7974D92E>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E7F1200137C13
7E133E133F7F6D7E80A26D7EA26D7EA2130180A26D7EA380147EA2147FA280A21580A214
1FA315C0A5140FA315E0B3A315C0A3141FA51580A3143FA21500A25CA2147EA214FE5CA3
495AA25C1303A2495AA2495AA25C49C7FC5B133E137E137C5B12015B485A485A5B48C8FC
121E5A5A5A5A1B797AD92E>I<B7FCA439007FFE006D5A6D5AB3B3B3B0497E497EB7FCA4
20527BD12A>73 D<B812C017FEEFFFC018F026007FFCC713FC6D48EC0FFF011F03017F94
38007FE0727E727E727E180785727EA28684A286A762A26097C7FCA24E5A614E5A4E5A4E
5AF0FFC04D90C8FCEF0FFEEFFFF891B712C04DC9FC839126F8000113C09338003FF0EF0F
FC717EEF01FF85717F727EA2727EA2727EA985A81B0785180FA21B0F0607140E496C8249
6C6F141EB76EEB801C72EBC03C96387FE0F896381FFFF0CC000713E09638007F8050547B
D156>82 D<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E
4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B
160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D
15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F801
01B512E06D6C1380DA07FCC7FC2D367DB434>101 D<01FFD907FEEC03FFB590261FFFC0
010F13E0037F01F0013F13F8912701F80FFC9038FC07FE913D03C003FE01E001FF000390
260700019038038000C6010E6D6C48C76C7E6D48DA7F8E6E7E4A159CA24ADA3FF86E7E02
605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8B6D8C07F9026FFE03FB512F0A45C34
7CB363>109 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black -35 2447 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 300 485 M 63 0 V 2187 0 R -63 0 V 300 856 M 63 0 V 2187
0 R -63 0 V 300 1226 M 63 0 V 2187 0 R -63 0 V 300 1597 M 63 0 V 2187
0 R -63 0 V 300 1967 M 63 0 V 2187 0 R -63 0 V 300 2338 M 63 0 V 2187
0 R -63 0 V 300 2708 M 63 0 V 2187 0 R -63 0 V 300 300 M 0 63 V 0 2345
R 0 -63 V 639 300 M 0 31 V 0 2377 R 0 -31 V 837 300 M 0 31 V 0 2377
R 0 -31 V 977 300 M 0 31 V 0 2377 R 0 -31 V 1086 300 M 0 31 V 0 2377
R 0 -31 V 1175 300 M 0 31 V 0 2377 R 0 -31 V 1251 300 M 0 31 V 0 2377
R 0 -31 V 1316 300 M 0 31 V 0 2377 R 0 -31 V 1374 300 M 0 31 V 0 2377
R 0 -31 V 1425 300 M 0 63 V 0 2345 R 0 -63 V 1764 300 M 0 31 V 0 2377
R 0 -31 V 1962 300 M 0 31 V 0 2377 R 0 -31 V 2102 300 M 0 31 V 0 2377
R 0 -31 V 2211 300 M 0 31 V 0 2377 R 0 -31 V 2300 300 M 0 31 V 0 2377
R 0 -31 V 2376 300 M 0 31 V 0 2377 R 0 -31 V 2441 300 M 0 31 V 0 2377
R 0 -31 V 2499 300 M 0 31 V 0 2377 R 0 -31 V 2550 300 M 0 63 V 0 2345
R 0 -63 V 1.000 UL LTb 300 300 M 2250 0 V 0 2408 V -2250 0 V 300 300
L 3.000 UL LT0 300 1383 M 16 -1 V 57 -4 V 54 -4 V 51 -5 V 49 -5 V 47
-5 V 44 -5 V 42 -6 V 41 -6 V 39 -7 V 37 -7 V 36 -8 V 35 -8 V 34 -8
V 32 -9 V 32 -10 V 30 -11 V 30 -11 V 28 -12 V 28 -13 V 27 -13 V 27
-15 V 25 -16 V 25 -18 V 25 -19 V 23 -21 V 24 -23 V 22 -26 V 22 -29
V 22 -33 V 21 -38 V 21 -45 V 20 -55 V 20 -71 V 20 -103 V 19 -302 V
21 51 V 21 53 V 21 55 V 20 56 V 20 57 V 19 56 V 19 56 V 19 55 V 18
54 V 18 53 V 18 51 V 17 50 V 17 49 V 17 48 V 16 46 V 16 44 V 16 43
V 16 41 V 15 40 V 15 39 V 15 37 V 15 36 V 14 35 V 15 33 V 14 32 V 14
31 V 13 29 V 14 29 V 13 27 V 13 27 V 13 25 V 13 25 V 12 24 V 13 22
V 12 22 V 12 21 V 12 20 V 12 20 V 12 19 V 11 18 V 12 17 V 11 17 V 11
16 V 11 15 V 11 15 V 11 15 V 11 14 V 10 13 V 11 13 V 10 13 V 10 12
V 11 11 V 10 11 V 9 11 V 10 10 V 10 10 V 10 10 V 9 9 V 10 9 V 9 9 V
9 9 V 9 8 V 9 8 V 9 7 V 9 7 V 9 7 V 9 7 V 9 7 V 8 6 V 9 6 V 8 6 V 9
6 V 8 6 V 8 5 V 8 5 V 9 5 V 8 5 V 8 5 V 7 4 V 8 5 V 8 4 V 8 4 V 7 4
V 8 4 V 8 4 V 7 3 V 8 4 V 7 3 V 7 3 V 8 3 V 7 3 V 7 3 V 7 3 V 7 3 V
7 3 V 7 2 V 7 3 V 2 1 V 3.000 UL LT1 300 2708 M 16 0 V 57 0 V 54 0
V 51 0 V 49 0 V 47 0 V 44 0 V 42 0 V 41 0 V 39 0 V 37 0 V 36 0 V 35
0 V 34 0 V 32 0 V 32 0 V 30 0 V 30 0 V 28 0 V 28 0 V 27 0 V 27 0 V
25 0 V 25 0 V 25 0 V 23 0 V 24 0 V 22 0 V 22 0 V 22 0 V 21 0 V 21 0
V 20 0 V 20 0 V 20 0 V 19 0 V 21 -367 V 21 -148 V 21 -110 V 20 -88
V 20 -73 V 19 -62 V 19 -53 V 19 -45 V 18 -39 V 18 -33 V 18 -29 V 17
-24 V 17 -20 V 17 -18 V 16 -14 V 16 -11 V 16 -9 V 16 -7 V 15 -6 V 15
-3 V 15 -2 V 15 -1 V 14 1 V 15 2 V 14 2 V 14 4 V 13 4 V 14 5 V 13 6
V 13 6 V 13 6 V 13 7 V 12 8 V 13 8 V 12 8 V 12 8 V 12 8 V 12 9 V 12
9 V 11 9 V 12 9 V 11 9 V 11 9 V 11 10 V 11 9 V 11 10 V 11 9 V 10 9
V 11 10 V 10 9 V 10 9 V 11 10 V 10 9 V 9 9 V 10 9 V 10 9 V 10 9 V 9
9 V 10 9 V 9 9 V 9 8 V 9 9 V 9 8 V 9 9 V 9 8 V 9 9 V 9 8 V 9 8 V 8
8 V 9 8 V 8 7 V 9 8 V 8 8 V 8 7 V 8 8 V 9 7 V 8 7 V 8 8 V 7 7 V 8 7
V 8 7 V 8 7 V 7 6 V 8 7 V 8 6 V 7 7 V 8 6 V 7 7 V 7 6 V 8 6 V 7 6 V
7 6 V 7 6 V 7 6 V 7 6 V 7 6 V 7 5 V 2 2 V stroke grestore end showpage
 
@endspecial 808 997 a Fh(Im\()p Fg(A)1083
954 y Ff(H)1083 1027 y Fe(1)1161 997 y Fh(\))1427 1461
y(Re\()p Fg(A)1699 1417 y Ff(H)1699 1490 y Fe(1)1778
1461 y Fh(\))427 348 y Fd(A)532 296 y Fc(H)532 384 y
Fb(1)625 348 y Fa(\()p Fd(\034)737 370 y Fc(W)846 348
y Fa(\))1080 2422 y Fg(\034)1131 2440 y Ff(W)2041 2312
y Fb(10)-1011 b(1)-1025 b(0.1)124 223 y(0)92 531 y(-2)92
840 y(-4)92 1148 y(-6)92 1457 y(-8)43 1766 y(-10)43 2075
y(-12)2280 2447 y @beginspecial @setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 300 300 M 63 0 V 2187 0 R -63 0 V 300 701 M 63 0 V 2187
0 R -63 0 V 300 1103 M 63 0 V 2187 0 R -63 0 V 300 1504 M 63 0 V 2187
0 R -63 0 V 300 1905 M 63 0 V 2187 0 R -63 0 V 300 2307 M 63 0 V 2187
0 R -63 0 V 300 2708 M 63 0 V 2187 0 R -63 0 V 300 300 M 0 63 V 0 2345
R 0 -63 V 639 300 M 0 31 V 0 2377 R 0 -31 V 837 300 M 0 31 V 0 2377
R 0 -31 V 977 300 M 0 31 V 0 2377 R 0 -31 V 1086 300 M 0 31 V 0 2377
R 0 -31 V 1175 300 M 0 31 V 0 2377 R 0 -31 V 1251 300 M 0 31 V 0 2377
R 0 -31 V 1316 300 M 0 31 V 0 2377 R 0 -31 V 1374 300 M 0 31 V 0 2377
R 0 -31 V 1425 300 M 0 63 V 0 2345 R 0 -63 V 1764 300 M 0 31 V 0 2377
R 0 -31 V 1962 300 M 0 31 V 0 2377 R 0 -31 V 2102 300 M 0 31 V 0 2377
R 0 -31 V 2211 300 M 0 31 V 0 2377 R 0 -31 V 2300 300 M 0 31 V 0 2377
R 0 -31 V 2376 300 M 0 31 V 0 2377 R 0 -31 V 2441 300 M 0 31 V 0 2377
R 0 -31 V 2499 300 M 0 31 V 0 2377 R 0 -31 V 2550 300 M 0 63 V 0 2345
R 0 -63 V 1.000 UL LTb 300 300 M 2250 0 V 0 2408 V -2250 0 V 300 300
L 3.000 UL LT0 300 1396 M 16 1 V 57 4 V 54 3 V 51 4 V 49 5 V 47 4 V
44 5 V 42 5 V 41 6 V 39 6 V 37 6 V 36 6 V 35 7 V 34 8 V 32 8 V 32 8
V 30 9 V 30 9 V 28 10 V 28 10 V 27 11 V 27 12 V 25 13 V 25 14 V 25
14 V 23 16 V 24 17 V 22 19 V 22 20 V 22 22 V 21 25 V 21 28 V 20 31
V 20 37 V 20 45 V 19 61 V 21 91 V 21 67 V 21 47 V 20 30 V 20 16 V 19
5 V 19 -5 V 19 -13 V 18 -20 V 18 -24 V 18 -29 V 17 -32 V 17 -35 V 17
-37 V 16 -38 V 16 -40 V 16 -40 V 16 -41 V 15 -41 V 15 -41 V 15 -40
V 15 -41 V 14 -40 V 15 -39 V 14 -39 V 14 -38 V 13 -37 V 14 -36 V 13
-36 V 13 -35 V 13 -34 V 13 -33 V 12 -32 V 13 -32 V 12 -30 V 12 -30
V 12 -29 V 12 -28 V 12 -27 V 11 -26 V 12 -26 V 11 -25 V 11 -24 V 11
-23 V 11 -23 V 11 -22 V 11 -21 V 10 -21 V 11 -20 V 10 -20 V 10 -18
V 11 -19 V 10 -18 V 9 -17 V 10 -16 V 10 -17 V 10 -15 V 9 -15 V 10 -15
V 9 -14 V 9 -14 V 9 -14 V 9 -13 V 9 -12 V 9 -12 V 9 -12 V 9 -12 V 9
-11 V 8 -11 V 9 -10 V 8 -11 V 9 -9 V 8 -10 V 8 -9 V 8 -9 V 9 -9 V 8
-9 V 8 -8 V 7 -8 V 8 -8 V 8 -7 V 8 -8 V 7 -7 V 8 -7 V 8 -6 V 7 -7 V
8 -6 V 7 -6 V 7 -6 V 8 -6 V 7 -6 V 7 -5 V 7 -6 V 7 -5 V 7 -5 V 7 -5
V 7 -4 V 2 -2 V 3.000 UL LT1 300 300 M 16 0 V 57 0 V 54 0 V 51 0 V
49 0 V 47 0 V 44 0 V 42 0 V 41 0 V 39 0 V 37 0 V 36 0 V 35 0 V 34 0
V 32 0 V 32 0 V 30 0 V 30 0 V 28 0 V 28 0 V 27 0 V 27 0 V 25 0 V 25
0 V 25 0 V 23 0 V 24 0 V 22 0 V 22 0 V 22 0 V 21 0 V 21 0 V 20 0 V
20 0 V 20 0 V 19 0 V 21 44 V 21 70 V 21 81 V 20 84 V 20 84 V 19 81
V 19 78 V 19 74 V 18 70 V 18 65 V 18 60 V 17 56 V 17 51 V 17 46 V 16
43 V 16 39 V 16 35 V 16 32 V 15 28 V 15 26 V 15 22 V 15 20 V 14 18
V 15 15 V 14 14 V 14 11 V 13 10 V 14 8 V 13 6 V 13 6 V 13 3 V 13 3
V 12 2 V 13 0 V 12 0 V 12 -1 V 12 -2 V 12 -3 V 12 -3 V 11 -4 V 12 -4
V 11 -5 V 11 -6 V 11 -6 V 11 -6 V 11 -6 V 11 -7 V 10 -7 V 11 -7 V 10
-8 V 10 -7 V 11 -8 V 10 -8 V 9 -9 V 10 -8 V 10 -8 V 10 -9 V 9 -8 V
10 -9 V 9 -9 V 9 -8 V 9 -9 V 9 -9 V 9 -8 V 9 -9 V 9 -9 V 9 -9 V 9 -8
V 8 -9 V 9 -9 V 8 -8 V 9 -9 V 8 -8 V 8 -9 V 8 -8 V 9 -9 V 8 -8 V 8
-8 V 7 -9 V 8 -8 V 8 -8 V 8 -8 V 7 -8 V 8 -8 V 8 -8 V 7 -8 V 8 -7 V
7 -8 V 7 -7 V 8 -8 V 7 -7 V 7 -8 V 7 -7 V 7 -7 V 7 -7 V 7 -8 V 7 -7
V 2 -2 V stroke grestore end showpage
 
@endspecial
3035 2017 a Fh(Im\()p Fg(A)3310 1974 y Ff(H)3310 2055
y Fe(1)p Ff(=)p Fe(2)3437 2017 y Fh(\))2754 1382 y(Re\()p
Fg(A)3026 1339 y Ff(H)3026 1420 y Fe(1)p Ff(=)p Fe(2)3154
1382 y Fh(\))2727 349 y Fd(A)2832 297 y Fc(H)2832 395
y Fb(1)p Fc(=)p Fb(2)2983 349 y Fa(\()p Fd(\034)3095
371 y Fc(Q)3176 349 y Fa(\))3407 2414 y Fg(\034)3458
2432 y Ff(Q)4356 2312 y Fb(10)-1011 b(1)-1025 b(0.1)2439
223 y(3)2363 557 y(2.5)2439 892 y(2)2363 1226 y(1.5)2439
1560 y(1)2363 1895 y(0.5)2439 2229 y(0)p Black Black
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

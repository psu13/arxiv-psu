%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: plots.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips plots
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.11.13:1220
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (plots.dvi) @start
%DVIPSBitmapFont: Fa cmr12 14.4 5
/Fa 5 102 df<DC1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE13
3E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F04901801579
4990C9123D4948161F4948160F49481607495A494816034A160113FF484916004890CBFC
1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4BB6
12FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C7F
137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE9138
03F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E031F02F8130603
0302E090C7FC9226001FFEC9FC4F567AD35C>71 D<B600FC030FB512E0A4C691CAEBFC00
D97FFCEF3FF06D48EF1FC0011F616E71C7FC130F1A0E6E171E0107181CA26E173C6D1838
816D60A26F16F06D6081027F4C5AA281023F4C5AA26F1507021F94C8FC81020F160EA26F
151E0207161CA26F153C6E1638826E5EA27014F06E5E821801037F5D82033F4A5AA27013
07031F92C9FC82030F140EA270131E0307141CA270133C6F143817806F5CA2EFC0F06F5C
17E017E1047F5B17F193383FF380A217FF7090CAFCA2705AA3705AA3705AA2705AA3705A
53547ED158>86 D<B512C0A500F8C7FCB3B3B3B3B3B3A2B512C0A5127874D921>91
D<B512C0A5EA0007B3B3B3B3B3B3A2B5FCA512787ED921>93 D<EC0FF891B5FC010314C0
90390FF80FF090391FC003FC90397F8001FE49C77E4848EC7F804848143F49EC1FC0485A
000FED0FE05B001F16F01607485AA2007F16F8A25B160312FF90B7FCA30180C9FCA8127F
7FA2123FA26D1538121F17786C6C1570000716F06D15E06C6C14016C6CEC03C06C6C1580
6D6C130F6D6CEB1F00D90FF0133C903907FE01F80101B512E06D6C1380DA07FCC7FC2D36
7DB434>101 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 17.28 1
/Fb 1 34 df<1D1E1D3FA38A1D1FA38A1D0FA28A1D078A1D038A1D018A777EA21E7F8B1E
3F787E787E8B787E787E787E787EF77FC0797EF71FF8797E79B4FC007FC112E0C212F821
FCA221F86C20E0D200071300F70FFC555AF73FE0555A55C7FC545A545A545A545A67545A
545A1E7F9CC8FC1EFEA2535A661D03661D07661D0F66A21D1F66A31D3F9BC9FCA31D1E7E
4C78C98F>33 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi12 17.28 2
/Fc 2 104 df<92B700F80107B712C07318E04A4C4916C06E84DB007F01E0C8000391C7
FC041F90CA13F87048715A041F18FFA24D60A2043F5F665FA2047F5F665FA204FF5F9BC8
FC5FA24B60655FA24B181F655FA24B183F6594CAFCA24B187F655EA2031F18FF655EA203
3F5F6593BAFCA25D6504F0C91203A203FF5F9AC9FC5EA24A60645EA24A181F645EA24A18
3F6493CAFCA24A187F645DA2021F18FF645DA2023F5F645DA2027F5F645DA202FF5F99CA
FC5DA24960635DA249181F49183F013F01F04BB57E007FB600FC0103B712E0B75CA24C60
736279E174>72 D<EE03F8EE3FFF93B5EA803C923A03FE07E07F923A0FF001F0FF92391F
E000F1DB3F80137903FFC7123D4A48143F0203814A4815FE4A48140F4A5A143F4BEC07FC
4A5A02FF150FA2494915F85B92C8121F5B19F0495A183FA2494816E0A2187F133F4A16C0
A218FF137F4A1680A25FA24A1600A25FA2605C1707A260A2170F013F151F6E4A5AA2011F
157F17FF6D6C495B0107EC03DF6EEB0FBF0103EC1F3F6D6C017C5B903900FF01F891393F
FFE07F020F1380912601FC005B91C8FC17FFA260A25EA295C7FCA25E5FA21607D807C05D
D81FE0140F486C5D007F151F5F00FF4B5A4C5A4C5A494990C8FC4B5A0180EB0FF8007EC7
EA3FF06C6CEBFFC06CB548C9FC000314F8D8003F1380405C7EBE43>103
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr17 17.28 3
/Fd 3 42 df<BB12E0A4C601FCC8123FD93FF8030313F0011FEE007F193F190F19071903
A21901A21900A21A78A41A38A71A1CA51A00B3B3B3A580133F90B57EB712E0A4466279E1
53>0 D<150E151E153C157815F0EC01E0EC03C01407EC0F80EC1F00143EA25C5C13015C
495A13075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3485AA3485AA3120F5BA3
121F5BA3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA57EA27FA3121FA37F120F
A37F1207A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F8013078013036D7E8013
00147C80A280EC0F80EC07C01403EC01E0EC00F01578153C151E150E1F8F73EA33>40
D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E801307801303801301
80130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F01403A315F8A31401A215
FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715E0A3140F15C0A3EC1F
80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49C7FC5B133E5B5BA248
5A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 14.4 2
/Fe 2 78 df<020FBA12F0A4DA000790C812076F48ED007F1B1F0307EF0FE01B075E1B03
150FA24C1601A2031F18C0A25EA2153FA24C1603A2037F0378148019705EA203FF03F090
C7FC615E18015C4E5A93C71207A24A151FF0FF8093B6FCA25C96C9FC03FCC7FC183F020F
81181E5DA2141F181C5DA2023F033C143C063814385D1B78027F92C812701BF04B5F1A01
14FF505A5D505A5B50C7FC92CAFC6249183EA24A5F1AFC01074D5A19034A1607F11FF001
0F177F4E485A013F163F007FBAFCBB5AA26254527AD157>69 D<020FB56C0503B512C065
65A2DA00076D4D90C7FCDB03BF61F53BFC0307197766043F18E7F401C7030F19CF706C93
38038FF0150EF4070F031EF00E1F66031C181C1C38033C193F706C04705B15381CE00378
943801C07F660370EF0380A203F094380700FF090E91C8FC4B6C7E6302014E5A6503C017
70A20203F0E003E001C05B4B6C7EF2038002079438070007650300160EA24A4D130F505C
020E6D7E62021E4D131F65021C4C5AA2023C4C48133F4FC75B02386D7E190E02784C147F
6502705EA202F04C14FF4F92C9FC4AEC7F80F081C0010161DE83805C4A0387C7FCA20103
048E1403069C5D5CEF3FF8010719074E5D010F5EA2011F4C140FD97FC05D2601FFF0F03F
FC007FD9FFC06DC7007FB512FEB694B6FC171E4B011C5F72527AD171>77
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi7 7 1
/Ff 1 116 df<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318EB
E0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0
EB03C0383C0F80381FFE00EA07F8171B7C991F>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi10 10 3
/Fg 3 73 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F49903807
C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C090
C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF818003F
14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F802E
267DA435>11 D<013FB612E090B712F05A120717E0270F807006C7FC391E00600E48140C
003813E04813C048141CEAC0011200148001035BA213071400A25B1578011E137CA3133E
133C137C157E13FC5B1201157F1203497FA3D801C0131C2C257EA32F>25
D<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F615DA2021F15
1F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60A202FCC712
0101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F153F605CA2
017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>72 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi8 8 1
/Fh 1 117 df<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25B
A21203A25BA21207A25BA2120FA25BA2001F1310143013001470146014E0381E01C0EB03
80381F0700EA0F0EEA07FCEA01F0152B7EA919>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi12 12 1
/Fi 1 110 df<01F8D903FCEC7F80D803FED91FFF903803FFE0D8071F903B7C0FC00F81
F83E0E0F80E007E01C00FC001C9026C3C0030178137C271807C700D9F0E0137E02CE9026
01F1C0133E003801DCDAFB80133F003001D892C7FCD90FF814FF0070495C0060495CA200
E04949485CD8C01F187E4A5C1200040715FE013F6091C75BA2040F14014960017E5D1903
041F5D13FE494B130762043F160E0001060F130C4992C713C0191F4CED801C00031A1849
027E1638F2003004FE167000071A60494A16E0F201C0030192380F0380000FF18700494A
EC03FED80380D90070EC00F84F2D7DAB55>109 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr12 12 29
/Fj 29 120 df<4AB4FC020F13E091387F80F8903901FC001C49487FD907E0130F494813
7F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7FC167F16
3FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>12 D<121EEA7F80A2EAFFC0A4EA7F
80A2EA1E000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB
1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC
4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07
E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7
FC28447CC131>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E
007FB6FCA3204278C131>I<49B4FC010F13E0013F13FC9038FE01FE3A01F0007F80D803
C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48130FEA03C0C813
F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FC
EC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3121EEA7F80487E
A416FE491303A2007EC713FC00701407003015F80038140F6C15F06CEC1FE06C6CEB3FC0
D803E0EB7F803A01FE01FE0039007FFFF8010F13E0010190C7FC28447CC131>51
D<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14071406140C141C1418
14301470146014C013011480EB03005B13065B131C13185B1370136013E0485A5B120390
C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFFC0A32A
437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D15E0158026063FFCC7
FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807C07F49EB1F8016C090
C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA416F890C712075A0060
15F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C6C13FE6C6C485A3901
F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC3FFF91B512C0903903
FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303491307485A485AA248
48EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F80903801FFF090380780FC
39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8150116FC5BED00FEA3
90C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7EED07F06C6C14E06C6C
EB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E00100138028447CC131
>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C00705D00601530
16705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5AA24A5A140792C8
FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA6D5AEB01C02A45
7BC231>I<14FF010713E0011F13F890387F00FE01FC133FD801F0EB1F804848EB0FC049
EB07E00007EC03F048481301A290C713F8481400A47FA26D130116F07F6C6CEB03E013FC
6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007FFEF090383FFFC07F01
077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E048486C13F000079038
007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48153FA2161FA56C151E
007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0D803F8EB1F80
C6B4EBFF0090383FFFFC010F13F00101138028447CC131>I<DB0FFE146092B500C013E0
020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948
EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A248481601A2
48481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F000F
18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D6C15
786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014C0DB
0FFEC8FC3B487BC546>67 D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED
1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A80
AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001
FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<ED1FFC4AB512C0913907
F007F091391F8000FC027EC7123F4948EC1FC0D903F0EC07E049486E7E49486E7E49486E
7E49C9127E49167F01FE707E4848707E00038449160F000784491607000F84A24848707E
A2003F84491601A2007F84A34982A200FF1980AD007F19006D5EA3003F60A26D1603001F
60A2000F606D16070007606DD903F0130F0003DA0FFC5C6DD91C0E131F00014A6C5C6C6C
903A3003803F80017FD9700149C7FC92386000C0D93F8015FED91FC0ECE1FCD907E0EC63
F0D903F0EC77E0902601FC70EB7FC09026007E3091C8FCDA1FB813FC912707FC07F814C0
0201B57E9139001FFC3C92C7FC053E1301171E051F13031A80F08007F0C00F94380FF03F
95B51200A28361715BA2715B9438007FE0F01F8042597BC54C>81
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB
1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F1630
7F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381F
C078903807FFF001001380242E7DAC2B>99 D<EB01FE903807FFC090381F03F090387E00
FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7
FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C000
0314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC
2B>101 D<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F49
5AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>
I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FEC
E000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC4
36>104 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201
B3B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3B3B3A5487EB512F8
A315457DC41C>108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F91
3C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A
143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0
A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F00
03EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F
2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E4848
6D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D14
7F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E
49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF
8091383C07E091387001F83A07FDE000FE00030180137FD801FFEC3F8091C7EA1FC04915
E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1F
C06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91
C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0
FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26
>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C147812
7800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0
C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C15
786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306
A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA01
7E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E
7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B
017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F
2D7DAB36>I<B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03F8
F001E0120103015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD9063F
1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5AED
6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA26E
147E023E143EA2021E143C021C141CA2412C7EAA46>119 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black 682 2447 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 350 352 M 63 0 V 2677 0 R -63 0 V 350 614 M 63 0 V 2677
0 R -63 0 V 350 876 M 63 0 V 2677 0 R -63 0 V 350 1138 M 63 0 V 2677
0 R -63 0 V 350 1399 M 63 0 V 2677 0 R -63 0 V 350 1661 M 63 0 V 2677
0 R -63 0 V 350 1923 M 63 0 V 2677 0 R -63 0 V 350 2185 M 63 0 V 2677
0 R -63 0 V 350 2446 M 63 0 V 2677 0 R -63 0 V 350 2708 M 63 0 V 2677
0 R -63 0 V 350 300 M 0 63 V 0 2345 R 0 -63 V 1175 300 M 0 31 V 0 2377
R 0 -31 V 1657 300 M 0 31 V 0 2377 R 0 -31 V 2000 300 M 0 31 V 0 2377
R 0 -31 V 2265 300 M 0 31 V 0 2377 R 0 -31 V 2482 300 M 0 31 V 0 2377
R 0 -31 V 2666 300 M 0 31 V 0 2377 R 0 -31 V 2824 300 M 0 31 V 0 2377
R 0 -31 V 2965 300 M 0 31 V 0 2377 R 0 -31 V 3090 300 M 0 63 V 0 2345
R 0 -63 V 1.000 UL LTb 350 300 M 2740 0 V 0 2408 V -2740 0 V 350 300
L 3.000 UL LT2 1532 1138 M 263 0 V 350 2119 M 832 1912 L 343 -114 V
265 -47 V 217 22 V 39 18 V 38 24 V 37 35 V 35 52 V 35 88 V 33 199 V
33 -12 V 32 -67 V 31 -76 V 30 -76 V 140 -320 V 125 -231 V 114 -175
V 103 -135 V 95 -109 V 89 -89 V 82 -74 V 76 -61 V 73 -55 V 68 -46 V
64 -40 V 61 -35 V 3.000 UL LT0 1532 1038 M 263 0 V 350 1971 M 825 -319
V 482 -161 V 343 -104 V 265 -76 V 217 -59 V 184 -48 V 158 -40 V 141
-34 V 125 -30 V stroke grestore end showpage
 
@endspecial 1265 1609 a Fj(in\014nite)31
b Fi(m)1680 1624 y Fh(t)1743 1609 y Fj(case)1285 1533
y(full)g(corrections)1068 -8291 y(with)h(full)f(QCD)1068
-17452 y(with)h(p)s(ole)g(mass)1068 -3701 y(with)g(run.)44
b(mass)1534 512 y Fg(\013)1587 524 y Ff(s)p 1534 534
89 5 v 1553 603 a Fg(\031)1632 562 y Fe(E)1719 580 y
Fg(H)1321 400 y Fd(\000\()p Fc(H)51 b Fb(!)40 b Fc(g)5
b(g)g Fd(\))1851 2435 y Fe(M)1964 2453 y Fg(H)2083 2435
y Fa([GeV])3159 2312 y Fj(1000)-2455 b(100)807 223 y(0.8)759
441 y(0.75)807 658 y(0.7)759 877 y(0.65)807 1095 y(0.6)759
1313 y(0.55)807 1531 y(0.5)759 1749 y(0.45)807 1967 y(0.4)759
2186 y(0.35)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

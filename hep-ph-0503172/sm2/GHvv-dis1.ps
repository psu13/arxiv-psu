%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: plots.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips plots
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.20:2150
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (plots.dvi) @start
%DVIPSBitmapFont: Fa cmr10 10 1
/Fa 1 51 df<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E12
3000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D14
0F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400
485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>50 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 10 2
/Fb 2 4 df<007FB81280B912C0A26C17803204799641>0 D<EB0380497EA7397803803C
00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8
EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00
FC147E0078143C390007C000A76D5A1F247BA62A>3 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr12 12 9
/Fc 9 57 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>46
D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848
EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FE
A56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F
806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<14FF010713E0011F13F890387F00FE01FC133FD801F0EB1F80
4848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116F07F6C
6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007FFEF090
383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E048486C
13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48153FA2
161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0
D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>56
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 14.4 1
/Fd 1 34 df<1B1E1B1FA4881B0FA2881B07A2881B0388757EA2757E1C7EA288767E767E
767E89F403FC767E9938007F80777EF51FF0007FBE12FEC01280A36CF5FE00D0EA1FF0F5
3FC0535AE201FEC7FC525AF407F065525A525A52C8FC1C7EA264515AA2515A641B0764A2
1B0F64A21B1F99C9FCA41B1E693F79BC78>33 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 14.4 6
/Fe 6 91 df<1738177CA217FC17F8A2160117F0A2160317E0A2160717C0A2160F178016
1F1700A25E163EA2167E167CA216FC5EA215015E15035EA215075EA2150F5EA2151F93C7
FCA25D153E157E157CA215FC5DA214015DA214035DA214075D140F5DA2141F92C8FCA25C
143EA2147E147CA214FC5CA213015C13035CA213075CA2130F5CA2131F91C9FCA25B133E
137E137CA213FC5BA212015BA212035BA212075B120F5BA2121F90CAFCA25A123EA2127E
127CA212FC5AA212702E787AD93B>61 D<191C193C193E197E19FEA21801A218031807A2
180F8560183D18391871A218E1170118C1DD03817FA2EF07014D7E170E5FA25F17781770
4D80A24C5A0403147F5F4CC7FCA2160E161E161C4C81A25E04F0143F5E4B5AA24B5A1507
93C8FC030E82A2031FB7FC5DA25D0370C8121F5D14015D4A4882A24AC9FC4A160F140E5C
A25C147814704A83A2495A01031707495AA2130F133F496C4C7E2603FFE0EE3FFFB500FE
031FB6FCA260A250557CD458>65 D<020FB600E090B612FEA4DA00070180C8387FF8006F
90C96C5A4C5F0307177F645EA2030F17FF645EA2031F5E99C7FC5EA2033F5E635EA2037F
1607635EA203FF160F635EA24A171F6393C9FCA24A173F6393B8FCA25C6303FCC9127FA2
020F17FF635DA2021F5E98C8FC5DA2023F5E625DA2027F1607625DA202FF160F625DA249
171F6292C9FCA249173F625CA20107177F625CA2010F17FFA2D93FFE03037F007FB60107
B612F0B75BA24B5F5F527AD161>72 D<020FB56C0503B512C06565A2DA00076D4D90C7FC
DB03BF61F53BFC0307197766043F18E7F401C7030F19CF706C9338038FF0150EF4070F03
1EF00E1F66031C181C1C38033C193F706C04705B15381CE00378943801C07F660370EF03
80A203F094380700FF090E91C8FC4B6C7E6302014E5A6503C01770A20203F0E003E001C0
5B4B6C7EF2038002079438070007650300160EA24A4D130F505C020E6D7E62021E4D131F
65021C4C5AA2023C4C48133F4FC75B02386D7E190E02784C147F6502705EA202F04C14FF
4F92C9FC4AEC7F80F081C0010161DE83805C4A0387C7FCA20103048E1403069C5D5CEF3F
F8010719074E5D010F5EA2011F4C140FD97FC05D2601FFF0F03FFC007FD9FFC06DC7007F
B512FEB694B6FC171E4B011C5F72527AD171>77 D<B600F80307B512E061A25DC601FCCA
EBF800D97FF0EF3FE04A188074C7FC013F183E1A3C621A701AF06E5F4F5AA2011F4D5A19
0797C8FC190E191E6E161C61130F6161A24E5A18036E5E4EC9FC01075E180E60A2606E15
7818706001031501604D5AA24DCAFC6E5C170E6D5D173C17385FA25F6F485AA26D4A5A16
0794CBFC160E161EEDC01C5EA2027F5B16F05EEDC1C015C3EDE38003E7CCFC143F15EE15
FCA25DA25D5D141F5D5DA292CDFCA2141E53547AD144>86 D<4AB912FEA34A18FC0580C7
121F04F0C8EA3FF80480ED7FF04A48C913E04BEEFFC04B4B13804A484B13004B4B5A4B4B
5A4A484B5A92C9123F4F5A021E5F4A4C5A4E5B4E90C7FC4A4B5A4E5A02704B5A183F02F0
4B5A4A4B5A6191C8485B4D90C8FC4D5A4D5A4D5A4D5A177F4D5A604C5B4C90C9FC4C5A4C
5A4C5A4C5A167F4C5A4B5B5F4B90CAFC4B5A4B5A4B5A4B4815E04B48140103FF5E4A5B4C
14034A90C85B4A5A4A4815074A5A4A4893C7FC4A485D14FF4949151E5D4990C9123E4948
163C4948167C495A49485E4948150101FF160348494B5A4849150F91C9121F4848EE7FE0
4848ED01FF4848150F484892B5FC48B95AA2BAFC614F527AD150>90
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi10 10 5
/Ff 5 87 df<1760177017F01601A21603A21607160FA24C7EA216331673166316C3A2ED
0183A2ED0303150683150C160115181530A21560A215C014011580DA03007FA202061300
140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F01680
487E000716FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B5D8F803B512F8495DA29026
0007F8C73807F8004B5DA2020F150F615DA2021F151F615DA2023F153F615DA2027F157F
96C7FC92C8FCA24A5D605CA249B7FC60A202FCC7120101031503605CA201071507605CA2
010F150F605CA2011F151F605CA2013F153F605CA2017F157F95C8FC91C8FC496C4A7EB6
90B6FCA345397DB845>72 D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25D
A2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A201
0F150118804A1403A2011F16005F4A1406170E013F151E171C4A143C177C017F5D160391
C7120F49EC7FF0B8FCA25F32397DB839>76 D<0003B812FEA25A903AF8003FC00101C091
3880007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C0070171800601301
12E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292
C9FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>84
D<267FFFFC91383FFFC0B55DA2000390C83807FC006C48ED03E06060000094C7FC5F1706
5FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2013F5C161C16185EA25E6E5BA2011F
495A150393C9FC1506A25D6E5AA2010F5B157015605DA2ECE18002E3CAFC14F3EB07F614
FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830>86 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr12 14.4 16
/Fg 16 102 df<BA12E0A426007FFCC712076D489138007FF0011F161F180F1807180318
011800A31978A31938A6191CA41900B3B3AD497E49B4FCB712E0A43E527BD149>0
D<15E01401EC03C0EC0780EC0F00141E5C147C5C495A13035C495A130F5C131F91C7FC13
3E137EA25BA2485AA25B1203A2485AA3120F5BA2121FA25BA2123FA290C8FCA35AA5127E
A312FEB3A3127EA3127FA57EA37FA2121FA27FA2120FA27F1207A36C7EA212017FA26C7E
A2137EA2133E7F80130F8013076D7E8013016D7E147C143C8080EC0780EC03C0EC01E014
001B7974D92E>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E7F1200137C137E133E133F7F
6D7E80A26D7EA26D7EA2130180A26D7EA380147EA2147FA280A21580A2141FA315C0A514
0FA315E0B3A315C0A3141FA51580A3143FA21500A25CA2147EA214FE5CA3495AA25C1303
A2495AA2495AA25C49C7FC5B133E137E137C5B12015B485A485A5B48C8FC121E5A5A5A5A
1B797AD92E>I<EE03804C7EB3B2007FBB12F8BC12FCA36C1AF8C9D807C0C9FCB3B2705A
4E4F7AC45B>43 D<1738177CA217FC17F8A2160117F0A2160317E0A2160717C0A2160F17
80161F1700A25E163EA2167E167CA216FC5EA215015E15035EA215075EA2150F5EA2151F
93C7FCA25D153E157E157CA215FC5DA214015DA214035DA214075D140F5DA2141F92C8FC
A25C143EA2147E147CA214FC5CA213015C13035CA213075CA2130F5CA2131F91C9FCA25B
133E137E137CA213FC5BA212015BA212035BA212075B120F5BA2121F90CAFCA25A123EA2
127E127CA212FC5AA212702E787AD93B>47 D<EC1FF891B5FC010314C090390FF81FF090
391FC003F849486C7E017EC7127E49800001168049141F4848EC0FC0000716E049140700
0F16F0A34848EC03F8A2003F16FCA44848EC01FEA700FF16FFB3A5007F16FEA56D1403A2
003F16FCA4001F16F8A26D1407000F16F0A26C6CEC0FE0A26C6CEC1FC0A26C6CEC3F806C
6CEC7F00017F14FE6D6C485A6D6C485A90390FF81FF00103B512C0010091C7FCEC1FF830
517BCE3B>I<14075C5C147F5C1307133F000FB5FCB6FC13F913C1EAF0011200B3B3B3A7
497F010F13E0B712FEA4274F75CE3B>I<EC7FE0903803FFFE010F6D7E013F14E0D9FF00
13F8D801F8EB1FFCD803E06D7E4848EB03FF48486D138090C813C0001E16E0001C157F00
3CED3FF012380078ED1FF81270A2B4ED0FFC13C07FA66C5A6C5A000EC8FCC9EA1FF8A317
F0163FA2EE7FE017C016FF17804B1300A24B5A4B5A5E4B5A4B5A4B5A5E4BC7FC15FE4A5A
4A5A4A5A4A5A5D4A5A4AC8FC147E5C4948141CEB03E0495A4948143891C8FC131E5B5B49
1578485A48481570484815F048B7FCA25A5A5AB812E0A42E4F7ACE3B>I<000316C001C0
140301F8141F903AFFC003FF8091B612005E5E5E16E016804BC7FC019F13F80181138001
80C9FCB0EC0FF0ECFFFE01836D7E903987F01FE090399F0007F801BE6D7E01F86D7E496D
7E49EC7F805BEE3FC04915E0C9121F17F0A317F8160FA317FCA5120EEA3F80487E12FF7F
A217F85B161F5B48C813F012700078ED3FE0A26C16C0167F6CEDFF80001F16006C6C495A
6C6C13036C6CEB07F8D801F8EB1FF06CB4EB7FE06DB51280011F49C7FC010713F8010013
C02E517ACE3B>53 D<007FBB12F8BC12FCA36C1AF8CFFCB3007FBB12F8BC12FCA36C1AF8
4E1D7AAB5B>61 D<DC1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE
133E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F049018015
794990C9123D4948161F4948160F49481607495A494816034A160113FF484916004890CB
FC1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4B
B612FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C
7F137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE91
3803F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E031F02F81306
030302E090C7FC9226001FFEC9FC4F567AD35C>71 D<B600FC030FB512E0A4C691CAEBFC
00D97FFCEF3FF06D48EF1FC0011F616E71C7FC130F1A0E6E171E0107181CA26E173C6D18
38816D60A26F16F06D6081027F4C5AA281023F4C5AA26F1507021F94C8FC81020F160EA2
6F151E0207161CA26F153C6E1638826E5EA27014F06E5E821801037F5D82033F4A5AA270
1307031F92C9FC82030F140EA270131E0307141CA270133C6F143817806F5CA2EFC0F06F
5C17E017E1047F5B17F193383FF380A217FF7090CAFCA2705AA3705AA3705AA2705AA370
5A53547ED158>86 D<B512C0A500F8C7FCB3B3B3B3B3B3A2B512C0A5127874D921>91
D<B512C0A5EA0007B3B3B3B3B3B3A2B5FCA512787ED921>93 D<17FF4BB5FCA4ED000716
0182B3A6EC0FF8EC7FFF49B512E0903907FC03F090391FE0007C49487F49C7120F01FE80
484880485A000781484880A2485AA2485AA2127FA35B12FFAB127FA27FA2123FA27F121F
A26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F6D6C017C13E0D91FC049EBFF8090390FF8
07E00103B512800100495ADA1FF091C7FC39547CD241>100 D<EC0FF891B5FC010314C0
90390FF80FF090391FC003FC90397F8001FE49C77E4848EC7F804848143F49EC1FC0485A
000FED0FE05B001F16F01607485AA2007F16F8A25B160312FF90B7FCA30180C9FCA8127F
7FA2123FA26D1538121F17786C6C1570000716F06D15E06C6C14016C6CEC03C06C6C1580
6D6C130F6D6CEB1F00D90FF0133C903907FE01F80101B512E06D6C1380DA07FCC7FC2D36
7DB434>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black -35 2447 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 300 300 M 63 0 V 2187 0 R -63 0 V 300 782 M 63 0 V 2187
0 R -63 0 V 300 1263 M 63 0 V 2187 0 R -63 0 V 300 1745 M 63 0 V 2187
0 R -63 0 V 300 2226 M 63 0 V 2187 0 R -63 0 V 300 2708 M 63 0 V 2187
0 R -63 0 V 300 300 M 0 31 V 0 2377 R 0 -31 V 529 300 M 0 31 V 0 2377
R 0 -31 V 723 300 M 0 31 V 0 2377 R 0 -31 V 890 300 M 0 31 V 0 2377
R 0 -31 V 1038 300 M 0 31 V 0 2377 R 0 -31 V 1170 300 M 0 63 V 0 2345
R 0 -63 V 2041 300 M 0 31 V 0 2377 R 0 -31 V 2550 300 M 0 31 V 0 2377
R 0 -31 V 1.000 UL LTb 300 300 M 2250 0 V 0 2408 V -2250 0 V 300 300
L 3.000 UL LT0 325 1645 M 24 7 V 24 6 V 24 7 V 23 6 V 22 6 V 23 6 V
21 5 V 22 6 V 21 5 V 21 4 V 20 5 V 20 4 V 20 4 V 19 4 V 20 4 V 19 3
V 18 3 V 18 2 V 19 3 V 17 2 V 18 1 V 17 1 V 17 1 V 17 0 V 17 0 V 16
0 V 16 -1 V 16 -2 V 16 -2 V 16 -2 V 15 -4 V 15 -4 V 15 -5 V 15 -6 V
15 -6 V 15 -8 V 14 -9 V 14 -11 V 14 -12 V 14 -14 V 14 -16 V 13 -19
V 14 -23 V 13 -27 V 13 -33 V 13 -42 V 13 -56 V 13 -83 V 12 -252 V 13
42 V 12 43 V 13 42 V 12 42 V 12 41 V 12 40 V 11 40 V 12 40 V 12 38
V 11 38 V 11 37 V 12 36 V 11 35 V 11 34 V 11 34 V 11 32 V 11 32 V 10
30 V 11 30 V 10 29 V 11 28 V 10 27 V 10 26 V 11 25 V 10 25 V 10 24
V 10 22 V 9 23 V 10 21 V 10 21 V 10 20 V 9 19 V 10 18 V 9 18 V 9 18
V 10 16 V 9 16 V 9 16 V 9 15 V 9 14 V 9 14 V 9 14 V 9 13 V 8 12 V 9
13 V 9 11 V 8 12 V 9 10 V 8 11 V 9 10 V 8 10 V 8 9 V 8 9 V 9 9 V 8
9 V 8 8 V 8 8 V 8 8 V 8 7 V 8 7 V 7 7 V 8 7 V 8 6 V 8 7 V 7 6 V 8 6
V 7 5 V 8 6 V 7 5 V 8 5 V 7 5 V 7 5 V 8 5 V 7 4 V 7 5 V 7 4 V 7 4 V
8 4 V 7 4 V 7 4 V 6 3 V 7 4 V 7 3 V 7 4 V 7 3 V 7 3 V 6 3 V 7 3 V 7
3 V 6 3 V 7 2 V 7 3 V 6 3 V 7 2 V 6 2 V 6 3 V 7 2 V 6 2 V 7 2 V 6 3
V 6 2 V 6 2 V 7 2 V 6 1 V 6 2 V 6 2 V 6 2 V 6 1 V 6 2 V 6 2 V 6 1 V
6 2 V 6 1 V 6 2 V 6 1 V 5 2 V 6 1 V 6 1 V 6 1 V 6 2 V 5 1 V 6 1 V 6
1 V 5 1 V 6 2 V 5 1 V 6 1 V 5 1 V 6 1 V 5 1 V 6 1 V 5 1 V 6 0 V 5 1
V 5 1 V 6 1 V 5 1 V 5 1 V 6 0 V 5 1 V 5 1 V 5 1 V 5 0 V 6 1 V 5 1 V
5 1 V 5 0 V 5 1 V 5 1 V 5 0 V 229 12 V stroke grestore end showpage
 
@endspecial 289 381 a Fg(\000)362 399 y
Ff(L)423 381 y Fe(=)p Fg(\(\000)601 399 y Ff(L)688 381
y Fg(+)26 b(\000)878 399 y Ff(T)943 381 y Fg(\))398 532
y Fe(H)43 b Fd(!)33 b Fe(V)26 b(V)905 2435 y(M)1018 2453
y Ff(H)1098 2435 y Fe(=)p Fg(2)p Fe(M)1329 2453 y Ff(V)915
2312 y Fc(1)124 223 y(1)48 624 y(0.8)48 1025 y(0.6)48
1427 y(0.4)48 1827 y(0.2)124 2229 y(0)2247 2447 y @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 450 300 M 63 0 V 2037 0 R -63 0 V 450 1025 M 31 0 V 2069
0 R -31 0 V 450 1449 M 31 0 V 2069 0 R -31 0 V 450 1750 M 31 0 V 2069
0 R -31 0 V 450 1983 M 31 0 V 2069 0 R -31 0 V 450 2174 M 31 0 V 2069
0 R -31 0 V 450 2335 M 31 0 V 2069 0 R -31 0 V 450 2475 M 31 0 V 2069
0 R -31 0 V 450 2598 M 31 0 V 2069 0 R -31 0 V 450 2708 M 63 0 V 2037
0 R -63 0 V 450 300 M 0 63 V 0 2345 R 0 -63 V 713 300 M 0 63 V 0 2345
R 0 -63 V 975 300 M 0 63 V 0 2345 R 0 -63 V 1238 300 M 0 63 V 0 2345
R 0 -63 V 1500 300 M 0 63 V 0 2345 R 0 -63 V 1763 300 M 0 63 V 0 2345
R 0 -63 V 2025 300 M 0 63 V 0 2345 R 0 -63 V 2288 300 M 0 63 V 0 2345
R 0 -63 V 2550 300 M 0 63 V 0 2345 R 0 -63 V 1.000 UL LTb 450 300 M
2100 0 V 0 2408 V -2100 0 V 450 300 L 3.000 UL LT0 450 1225 M 105 23
V 105 24 V 105 26 V 105 28 V 105 29 V 105 30 V 105 30 V 105 31 V 105
31 V 105 30 V 105 29 V 105 25 V 105 21 V 105 12 V 105 0 V 58 -9 V 5
-1 V 5 -1 V 5 -2 V 6 -1 V 5 -2 V 5 -1 V 5 -2 V 6 -2 V 5 -2 V 5 -2 V
6 -2 V 5 -2 V 5 -2 V 5 -2 V 6 -3 V 5 -3 V 5 -2 V 5 -3 V 6 -3 V 5 -3
V 5 -4 V 5 -3 V 5 -4 V 6 -3 V 5 -4 V 5 -4 V 5 -5 V 6 -4 V 5 -5 V 5
-5 V 6 -5 V 5 -5 V 5 -6 V 5 -6 V 6 -6 V 5 -6 V 5 -7 V 5 -7 V 6 -7 V
5 -8 V 5 -8 V 5 -8 V 5 -9 V 6 -9 V 5 -10 V 5 -10 V 5 -10 V 6 -12 V
5 -12 V 5 -12 V 6 -13 V 5 -14 V 5 -15 V 5 -15 V 6 -17 V 5 -18 V 5 -18
V 5 -20 V 6 -22 V 5 -23 V 5 -25 V 5 -27 V 5 -29 V 6 -31 V 5 -35 V 5
-38 V 5 -43 V 6 -47 V 5 -54 V 5 -62 V 6 -72 V 5 -86 V 5 -107 V 5 -138
V 2 -71 V 3.000 UL LT1 450 902 M 105 175 V 105 155 V 105 137 V 105
119 V 105 104 V 105 89 V 105 74 V 105 59 V 105 42 V 105 25 V 105 4
V 105 -20 V 105 -49 V 105 -89 V 105 -143 V 58 -110 V 5 -12 V 5 -11
V 5 -12 V 6 -13 V 5 -12 V 5 -13 V 5 -14 V 6 -13 V 5 -14 V 5 -14 V 6
-15 V 5 -14 V 5 -16 V 5 -15 V 6 -16 V 5 -17 V 5 -17 V 5 -17 V 6 -17
V 5 -19 V 5 -18 V 5 -19 V 5 -20 V 6 -20 V 5 -21 V 5 -21 V 5 -22 V 6
-22 V 5 -24 V 5 -23 V 6 -25 V 5 -25 V 5 -26 V 5 -27 V 6 -28 V 5 -28
V 5 -29 V 5 -31 V 6 -31 V 5 -33 V 5 -33 V 5 -35 V 5 -36 V 6 -38 V 5
-38 V 5 -41 V 5 -42 V 6 -43 V 5 -46 V 4 -38 V stroke grestore end showpage
 
@endspecial 3021 1440 a Fe(H)42 b Fd(!)33
b Fe(Z)9 b(Z)3491 1396 y Fb(\003)3030 836 y Fe(A)33 b
Fd(!)g Fe(Z)9 b(Z)3482 792 y Fb(\003)2923 366 y Fg(\(1)p
Fe(=)p Fg(\000\)d\000/d)p Fe(M)3581 384 y Fb(\003)3664
366 y Fg([GeV)3929 322 y Fb(\000)p Fa(2)4038 366 y Fg(])2884
533 y Fe(M)2997 551 y Ff(H)3110 533 y Fg(=)33 b Fe(M)3347
551 y Ff(A)3447 533 y Fg(=)39 b(150)f(GeV)3250 2435 y
Fe(M)3363 2453 y Fb(\003)3448 2435 y Fg([GeV])4323 2312
y Fc(60)-316 b(55)f(50)g(45)g(40)h(35)f(30)g(25)g(20)2358
223 y(0.001)2309 2229 y(0.0001)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

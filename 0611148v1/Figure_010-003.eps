%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Figure_010-003.pdf)
%%Version: 1 3
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 10/10/06 12:30 PM
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 633 477
%%HiResBoundingBox: 0.0 0.0 633.0 477.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0


%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3133 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2006-10-10T12:30:24-04:00</xap:CreateDate>
         <xap:ModifyDate>2006-10-10T12:30:24-04:00</xap:ModifyDate>
         <xap:MetadataDate>2006-10-10T12:30:24-04:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:F699619E569B11DBAE5596F162F5874B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F699619E569B11DBAE5596F162F5874B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end
 PDF /docinitialize get exec

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 633.0 477.0 rectclip
[ 0 -1 1 0 0 477 ] concat
q
0.0 0.0 m
477.0 0.0 l
477.0 633.0 l
0.0 633.0 l
h
W
n
q
0.1 0.0 0.0 0.1 0.0 0.0 cm
q
10.0 w
n
10.0 467.5 4155.0 5672.5 re
[/DeviceGray] cs 0.0 sc
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: HPGBAA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /HPGBAA+Symbol def
/FontInfo 6 dict dup begin
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5021339 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [673 693] def
/StdHW [-0] def
/StdVW [-0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 53 /five 77 /Mu/Nu 91 /bracketleft 93 /bracketright 115 /sigma
 174 /arrowright 214 /radical
/N10 (HPGBAA+Symbol) -1 TZ
30.25 424.75 m
%ADOBeginSubsetFont: HPGBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/HPGBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/sigma <1C60D8A8C9B7C05490559783ACB2341A5CC6DBE43F18796024BEC261
51EFDBD5649EFDECDC6D5FF173C6C442D52EB00281BBE9517D963991754870FD
C201A1121D9F087075F5137CFD92E11340FEC7EF63F24A02C4D8304D80FE5B7B
9E4416E8F101B5B30719DF083AAAAB8B3F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/HPGBAA+Symbol findfont /Encoding get
dup 115 /sigma put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(s) show
%ADOBeginSubsetFont: DCDBAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /DCDBAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5020931 def
/FontBBox {-168 -281 1031 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N13 (DCDBAA+Times-Roman) -1 TZ
30.25 436.358 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C468947AE620DBD301F0E6084B3B21953998F
049683F9258FDD1704F846A9ADCA7BFFB7B37F99CD7499DB6D2D9B330A222AAF
36F8D92C9EE1E074963D1F79FC715305862DFD085B> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F45EF76B7E6156F758C5B752
4C517A6BFB78A7BA0B5DD242ECD3D793F3CF11407281DE650034FA85182F1108
09A5070E33824FDD144E3084847EA250147A33E28ACB0D54A87727ED47B6ED7A
19230A8A5051D01628138A35FF63EC81065BEDC8F3B8183A910E056C81DBE3DB
0C522257BED90783C1EF924ACE8BE45B75F6C54FAD617855AA0372E3D92348F9
991A1BF6A2095B5234B4759AABEFBE7B649DB7E0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 40 /parenleft put
dup 112 /p put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(\(pp)
[6.41011 9.625 9.625 ] pdfys
%ADOBeginSubsetFont: RRQBAA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /RRQBAA+Symbol def
/FontInfo 6 dict dup begin
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5021339 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [673 693] def
/StdHW [-0] def
/StdVW [-0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 53 /arrowright 77 /bracketleft/bracketright 82 /radical 91 /bracketleft 93 /bracketright
 115 /sigma 174 /arrowright 214 /radical
/N14 (RRQBAA+Symbol) -1 TZ
30.25 462.018 m
%ADOBeginSubsetFont: RRQBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/RRQBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/arrowright <1C60D8A8C9B5FD593B498B1CF3AAC6B72CD9F0DECF3BE27F563
0A1AA3A6B945FAE48062252C84E3D00541D03AEEDA44A60D17B803E5BEA86F3E
2ED576311E3F2135761> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RRQBAA+Symbol findfont /Encoding get
dup 53 /arrowright put
pop
end
%ADOEndSubsetFont
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
30.25 481.018 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4645E261A192EDDA954EF8905
29A12D8C1F887284958B719778462ECFF8813AE199AD391519C90CD4E233E44F
AFED19384E407B8C94BB545E7EE47ADD31CBD6E15485FB774154428AF37F18AB
2820508AC541F80F6F3141585BCE84B106DC00CC2DC7F21EBB7644330512430D
13DCBD4BBE410EA227C02EC9> |-
/plus <1C60D8A8C9B7E7C1D348B97AC3C0CEA30D7FD44CBB7EF7803FCFDE420
7B3F0065C33A1C912098317DD5E81ABACE2ABDC4A415F37C8F239> |-
/X <1C60D8A8C9B6079F1E48848E88AD51D6840D00ED95A069DC16528DC18F64
98E5D924D3E711873B2BE1F47615DA05F6418DCB515B20ACE26D1D996A239B18
EC6E064B5227FA36C5676168F2DF01AA9215E9EAC454860B9F181178A082E85F
96E3F9A2512AA58B69FCBE036927055FD5EEBB32757C74132503116DDB3AB0D6
8DF8699A7BC06A0FDE5F430ACE2AE2115238AC7C31D296A3805BC26497CD7E64
C2AEBD26898332D1F49DD9D080F74D615511552A833605E2699540CAC562D556
5E618F9B5BDB9AAA> |-
/parenright <1C60D8A8C9B81F2C3A852C511B2EDD6D7C9F5151A01B6DCBFFD
B11B72015067AB463EE5857EA0D2651F87A101A1ABA3ED2454E3881C2FE7E7FD
9A05FB9D1E468CA208C9F44040F01B4D266AB284064> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 72 /H put
dup 43 /plus put
dup 88 /X put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(H+X\))
[13.8985 10.8569 13.8985 6.41011 ] pdfys
30.25 530.894 m
%ADOBeginSubsetFont: RRQBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/RRQBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B81F2C36BB437CF166E36C02B4955F93ABFFE58F
96BC749F373156EA53E8D2765B7772792F74E46947C29D9F5D7752AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RRQBAA+Symbol findfont /Encoding get
dup 77 /bracketleft put
pop
end
%ADOEndSubsetFont
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(M) show
30.25 537.305 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7A73DCF483CC3D064C5CE58F4CFBFF3D559F3381016C1422B
A12F40A3D9641BDE4159253F90E66406A8D3BDA3C70A15C85CB26A56630B011B
D4C3F4EA2CA0BE3F58CBB4D2F510A6E71AA2DEAE4D46463267A9BB1FAA00DC1B
F34153F8390AA18FD8CA120D0FF81566> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 98 /b put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(pb)
[9.625 9.625 ] pdfys
30.25 556.555 m
%ADOBeginSubsetFont: RRQBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/RRQBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketright <1C60D8A8C9B81F2C36BB437CF166E36C7E403ABB2EC9AB3A4
12202D2996877FD5B5C282FB571EBF103685E86C0300ACBBC94544775D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RRQBAA+Symbol findfont /Encoding get
dup 78 /bracketright put
pop
end
%ADOEndSubsetFont
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(N) show
59.2499 424.75 m
%ADOBeginSubsetFont: RRQBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/RRQBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/radical <1C60D8A8C9B79676F4EDC78EB0655E86D21F74B32A9BC68DD87739
AA80AD8B14017080F1078B8200C63D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/RRQBAA+Symbol findfont /Encoding get
dup 82 /radical put
pop
end
%ADOEndSubsetFont
(R) show
59.2499 435.318 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7361F743FE5C0927B8EA82C2C1294641C12F4462F8ED898BB
BBEE1BA1B56D4FEA6FE50ED9B9BC5B5C6391919BFFAE74CEBE224839B23F5C57
9037AFAEED7B8EEE8B439C21D94E9E1F8080860C671F2A5D447DEE3E541CEBB3
8DEC371C2578A669782FAF3F6C378CC52B76AB431BA6F02B21F42E49D470A86E
4425DB8B297FAC7C8635DBE4D20B7C6C79DE7BE798FEB0BE02957B3928947094
5437FBEDB04E9517E052C8D27F5D232276FCC24DFD7A4296050CC948AA090F82
57B640FE40D68134BEE9E798C817922024DD0A03B7E732151B7784D5AAFC> |-
/space <1C60D8A8C9B8707C25> |-
/equal <1C60D8A8C9B7E7C1AFEDC39B6E53EDA7DE049158B9DBB3320563009C
1FAE91F6E6C9650795D3E24EF22BE2> |-
/one <1C60D8A8C9B7A73DC5490243E557DFE60F0C9ABF86356A13CECD6B76D5
F7B86DD1350730FDAF7BFC2C76F5E1AB330C22AF1584A1BC1A34914B738C6024
4637D494560D57E5BBF61F3063EC63B77F7815> |-
/four <1C60D8A8C9B7A73DC573E0FDE75419407F972C08D704111DD06AFF8C8
80F6F6B256EC7B9EEA49645E79310AD6D5C293629A0985A32BE7EF146B4B2786
2FD12DBA9C6FEA93DA5> |-
/T <1C60D8A8C9B7D8BE6A419732DB5F024C165C93EF7EA0CC8F7D1B72456958
C6108C2F781C3ECF20F9BC3EB06EC8E63C1EB8EEBCD0E393DDE39207C5B82962
33944D4B67C1F837FAD3EA821CD5C305E5C8FC8BA64BFE4FA504> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/V <1C60D8A8C9B6079F1534F6C8E692D97DCE3893C7E5D024A5BABDC05E08DE
1A1496B27A897C1AF9807F997865893EB1137039FC3707318E9EBA1BA6BE3A9B
9D9B20F9C43B7EF3277E99629F542020D269779A25947EEE35F756BF9A4CB4BD
FA29AB7B422808DB17B31F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 115 /s put
dup 32 /space put
dup 61 /equal put
dup 49 /one put
dup 52 /four put
dup 84 /T put
dup 101 /e put
dup 86 /V put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(s = 14 TeV)
[7.4884 4.8125 10.8569 4.8125 9.625 9.625 4.8125 11.7616 8.547 13.8985 ] pdfys
88.2499 424.75 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F859BE0FB9A2A0F764F0822B6D387D8F1AF88BA29DF2062
5C16019FE768CF1F86E44E0F38488D33DDF5F003500E45C5B17AE757097193FE
80517AEBC3D71F7DFB982B641E9F52A187BE9F0CD4D2FE5BEDDCB583B0C8033E
2722F3AFD3F04608A18D6990E776D21892577D81533D8EFDF85FEAEDBA33> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 77 /M put
pop
end
%ADOEndSubsetFont
(M) show
94.75 441.863 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D082F829CADA24028C80D846E2AB3236B17CAAE9D6D83E
2118A50E9B4A0DF7A975441BD0BC11A4F1C659AD57632E786B7EB401A5594688
3894CB08B6ACFA409E354487501CF0FBE51DCD32A9BEF083FF0E4413EAB18351
45D655A20480> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 116 /t put
pop
end
%ADOEndSubsetFont
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(t) show
88.25 445.616 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A73DCDE67133A541ABA65396C23713A3895CD074A7FB
B7EAEA6542C060A837CD08D17D443BCAC7FF22453FC5C05C4320> |-
/five <1C60D8A8C9B7A73DB6618B179C414325DD7507D30986AB86D199D48B6
84AD9BD2ACCAC5A125673601099A5DE5C85FCAF700FD02FC5377F3D2AE642EF7
6F759B7D576BF48EB8780D17C4A9F9EBE87BC939443F7F6F33C2EDD4352971EC
D79B1EAB5F751B6F7C9277CB3D021079A4783C4F80F3C6312BADB83875096EB3
E5471717D351AA54BB45A8AB94B1C> |-
/G <1C60D8A8C9B6079FE80B2D9B8A220BAA4FBC7D1081589331F0CEED55F2D8
DF77A2BFE883ECA331735DA1712620F150B9E55D2A0DC80C20AC786900DE56B8
F66EF9AFAA388E512D2DC90464D268AE04E3B45CE1685CB82A43F1F2DA651934
7A21A52F0121CDFD04E605540BDE10918C178CB90F363CFA6A45D463658E4D12
9707F6DCA6754EF90393E42B70EBCD47B0FA7DFD62E2E31200E9D34EC5D21406
413503CAAEA5AB371C854D77840B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 55 /seven put
dup 53 /five put
dup 71 /G put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
( = 175 GeV)
[4.8125 10.8569 4.8125 9.625 9.625 9.625 4.8125 13.8985 8.547 13.8985 ] pdfys
117.5 424.75 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDF7E182277E7D914EF388A0973AF4ACC3C8D9A7570DF64
E80D273B6968DBD393FE70E2B4BD003131FF44DF8BD18A7C359B3BBF5371845D
CFAAE496BDDCE3E45320D437B135518528F963075D3189EC7DF80BFD1A875C18
2CE72A2888F426CD88574ADA07FE2BF9117349FC40E0E399B75EB873F63060B7
F484F93EC29581EDAE0B67F2D6B4A6> |-
/E <1C60D8A8C9B7D8BE6A6FAF13E57A5D0DB8CAD295FC779D5278921208646A
7522ECA6ACAB7C7B3869506B45E3BC454A2C6CE26C37D5679B53E0D4FB17AF7A
F87176EB89EE094DB8E20B2362647F281720A839794D30EAE377E9B001A09938
C67189CDB0312CD4CE9F2ACAA10DC2FFC9AC28D2C1107C7FC8D2DD22123D6725
E5EE75158CA26B8D76240CAE1713592D4B1121DAAF7288DEEA50B7272B96D76A
C8BC2DFAEE26859B0FD1E6FB059505A9219F229DE02D42D6A5CDC486F41BF181
C298BE4FCD4299B9E64DAD5780EC2C> |-
/Q <1C60D8A8C9B6079F6E1D84815EAD6D852B179F7000DC3E384B4A31B84EA0
9A3FC2410509D4B1E97E376478638707279E297623304F031CB1C4A73001E25E
31A82738017DC6F0120889047E94904DF549AB4D13B9C36FE3C0680F6089A4F3
99D33B664AFDFB512A91FDF575E8FAA01E12CD4CF098748B42541C5D4564F54D
36596AA64F09DA9461A38F7A44A605742EFCCE75A925FA376A64AC06C92D246E
FD9BDBB0F46AA5572523D7A371E1> |-
/six <1C60D8A8C9B7A73D33BF1B90A18439FE180DC3C4301314612B8C62C4F9
5AA56CAB28C20219F6D9DC5F9479D094FA9610C423A473365968490DA231B4CF
0A9D7D60BEF019DF787AD3EA574BE346E77A5A14C39FDBB8A9CB8C91D6EEBBF4
3565182187637F0306C30E9C86F881902FCBC483E6AF49711F66E0A8F026363B
29D288F31DED> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 67 /C put
dup 69 /E put
dup 81 /Q put
dup 54 /six put
pop
end
%ADOEndSubsetFont
(CTEQ6M)
[12.8399 11.7616 11.7616 13.8985 9.625 17.1134 ] pdfys
95.4999 217.0 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7A73DB582976F06005DEAE574E3F47714D50348B288A6BD9E
77DC4E7F03021E6EF5D638F5D93ECE1981CB3F933974BA079378B18BFE54DCD4
4126D68064919BBF20DDA51839BA2D2867307C1A252FFC5CE737DFBAF2F705E2
77FB8B1EEBD22BCCA281F6CD1BE8E1044687BECE86F45E65A83568D347C016FC
8A63E3963ABCA50CEDCACD94E1CF0510A3CAEA7F2B6278A91FDF202500651568
C7F95B91B8A9FF07F14409B804EFAFCDB217DE2F94BBA69B307DBEA2BDAD4ACA
5E7AD024A72F9BC3414E1ABF2B6D5C5469DC9CFEB1F7A54CD0848333FF393029
BC5F76171666BD3F07A035C0439140A4C030C91198AF5414137CC7CDA066C809
CC5E3850F33174B78F262B1F274B05F01B0379608E2D1F5DA1FE1D55A15BDAD2
89780240F22CE657E9518D68DBFFF6E90D54EDB4A02C3427CD8A45C71E87D149
4543F7D19B07365C8F0CD0C77EA3135D79685A44D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 103 /g put
pop
end
%ADOEndSubsetFont
(gg)
[9.625 9.625 ] pdfys
95.4999 236.25 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
95.4999 255.25 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(H) show
219.5 387.0 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7A73DB5811938DD329AF57CAAB1A67D0434EE7847E30E8D8A
8476EE1554231685758F66C0BE59D938B666C7CFECCEEC5C351C3289BEB2A82F
63FAD191013B21840ED5D7B9EFF48A24DB29EE5BC12B22E2373781A1BDF3CB66
78B6E99310FDA7070E1EC5CD09C7534B85CAAAF5DF2C35425C0DA6F7633A1A72
735019AA5FAF9CB856BC8B5B4AB032CDF744C741B86F6A85D716607729300FE7
277ABF37A3F8C1A8F2D3F87F815516CAF8536A7C71DFA13DC0DD97C8A66E062F
FFC803E9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 113 /q put
pop
end
%ADOEndSubsetFont
(qq)
[9.625 9.625 ] pdfys
219.5 406.25 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
219.5 425.25 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(Hqq)
[13.8985 9.625 9.625 ] pdfys
230.5 216.999 m
(qq)
[9.625 9.625 ] pdfys
217.0 228.062 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/underscore <1C60D8A8C9B7A73DB5FD3C3CE1FF5924642D6EEC907E6174060
F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 95 /underscore put
pop
end
%ADOEndSubsetFont
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(_) show
230.5 236.25 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B81F2C38E7DB04AE2C8F23E93CAF3CBCA9478A4E4
4892D8B3C6E659E679304D2135F8A9B10C019A46F727950C46BDE546BFB3E295
961488D35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 39 /quoteright put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(') show
230.5 242.66 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
230.5 261.66 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF3599A55361F1151112E2F93E219FC62105E6CEC64AA1
C45D0FDA0691756064A76EDE1A6D39D789F3B1D2680E1D581562D972A7ABAEB9
59798F8D10A33BD9C819F3711A67793F93B3FC3506909E04DE00ABC64E4E16B3
6A80F6FD8F2BA3C890634A26FF2EB40C7ECFA3BFA719DBD630CE7F3BEA51454D
FCD018CBD43E73A882544A9F9DC39916BB67508716E3DCBE9DEF2D7EC28B98D0
87C52ECD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 87 /W put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(HW)
[13.8985 18.172 ] pdfys
397.75 500.5 m
(qq)
[9.625 9.625 ] pdfys
384.25 511.562 m
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(_) show
397.75 519.75 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
397.75 538.75 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE6A6EDEC9185C38D43FC5634774E14B19DAB06962CC00
ACCAA2D0B32892DF35F84D85EB83C7E791163FE0C3B4A92CA0F85D4F0394AC0C
8EAFC89E2719A8E27611F20F49525CB2A86EC058A5C64F26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 90 /Z put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(HZ)
[13.8985 11.7616 ] pdfys
314.0 511.75 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CF500A7A5894D1725992EFBC166CFF23147B7E69F
A1C74D97FCC273949B74B78FD40D5AC4A1B125071E6B26B97A4F1E4CC9C60D79
492C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 44 /comma put
pop
end
%ADOEndSubsetFont
(gg,qq)
[9.625 9.625 4.8125 9.625 9.625 ] pdfys
300.5 546.875 m
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(_) show
314.0 555.062 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(5) show
314.0 574.062 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(Htt)
[13.8985 5.3515 5.3515 ] pdfys
300.5 592.613 m
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(_) show
470.5 289.831 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(M) show
477.0 306.945 m
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(H) show
470.5 321.504 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(M) show
470.5 327.915 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(GeV)
[13.8985 8.547 13.8985 ] pdfys
470.5 364.259 m
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(N) show
443.5 41.9386 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D33BD7C9339964DF833CB86D5FEF88216AD9F1AB7D
A4D1D62F21CA3C813D6E68DA3F8FDEB523CD1537E9A0D29629423D3A5F8EBE17
93E6FD9E2BE0B916EAB3DBAE19A4B5154E63E7B27828F79DFA4ED2A80B59FBB1
4A575CF36CF93B9F8270F39B2161B41DEAE8E8389AFC8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(0) show
443.5 145.814 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC5046156A965F0B38BCCC2C48C4F05B4A673B97450
C96366C099E289595B8910F29844F95C0DBD05CC546A0773CAF5AF668A98899E
A5A2958D8F0BBDC4795D62D35E6BDCF81689D877B610E5C6C42C00469BFA1116
69100E8509BAFB098A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
(200)
[9.625 9.625 9.625 ] pdfys
443.5 259.313 m
(400)
[9.625 9.625 9.625 ] pdfys
443.5 372.564 m
(600)
[9.625 9.625 9.625 ] pdfys
443.5 486.063 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73D33BF1B919D399060D18FE94F7729789812B47DCD
C7A80ADF582B59DCF2F8F1CC724D7E30E64F5174E543C6B6172FD33E2DF38DD2
7C8FAF846DE034253B846EC1ECDBC092E0A0EB26117B7E2C8DC05558F7475354
365AA23FEFD65EB7B3621E3FF3E6A719BE559C78C4B376DABECE7D2544483A38
3AC5C2F3439D3A4CD8B65E0D25764FAC3B7A229183F80553D5F46E2E81B75F3B
DEA890EDEB5B1543D00700FECE33541859873A3D04C0DE81847865CF47B477A9
B3C4123C4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 56 /eight put
pop
end
%ADOEndSubsetFont
(800)
[9.625 9.625 9.625 ] pdfys
443.5 594.751 m
(1000)
[9.625 9.625 9.625 9.625 ] pdfys
Q
2.5 w
n
4165.0 467.5 m
10.0 467.5 l
S
10.0 w
n
4165.0 552.5 m
4165.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
422.75 -1.5 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
407.25 24.0885 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AED63678C15E05C8EA5610E9104FF77F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/N13 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-4)
[5.16138 7.75 ] pdfys
Q
n
3977.5 510.0 m
3977.5 467.5 l
S
n
3870.0 510.0 m
3870.0 467.5 l
S
n
3792.5 510.0 m
3792.5 467.5 l
S
n
3730.0 510.0 m
3730.0 467.5 l
S
n
3682.5 510.0 m
3682.5 467.5 l
S
n
3640.0 510.0 m
3640.0 467.5 l
S
n
3605.0 510.0 m
3605.0 467.5 l
S
n
3572.5 510.0 m
3572.5 467.5 l
S
n
3545.0 552.5 m
3545.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
360.75 -1.5 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
345.25 24.0885 m
%ADOBeginSubsetFont: DCDBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/DCDBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB6464B3065161E6483F919C65A09B8E3A79A1F3B
EA6C234533737D503C25522AFAD76A8B5ADB47F813BBCD99A0AF2D145DEF2C7F
F1B9281F34C2D2C290650C2E669C3EA873B80DE449BCD531B9FC6BE5B301D568
4865BA9D3ECF00AD1D8FF743B2A826E6AECE5EB9D8016932484836E29CD46E03
FF9592C8E5794416D0432CFF05FB05E96FC2EE7842D63C3EC1CC625F2507E450
849BB7CB2588ABB09302607DF3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DCDBAA+Times-Roman findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
/N13 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-3)
[5.16138 7.75 ] pdfys
Q
n
3357.5 510.0 m
3357.5 467.5 l
S
n
3247.5 510.0 m
3247.5 467.5 l
S
n
3170.0 510.0 m
3170.0 467.5 l
S
n
3110.0 510.0 m
3110.0 467.5 l
S
n
3062.5 510.0 m
3062.5 467.5 l
S
n
3020.0 510.0 m
3020.0 467.5 l
S
n
2985.0 510.0 m
2985.0 467.5 l
S
n
2952.5 510.0 m
2952.5 467.5 l
S
n
2925.0 552.5 m
2925.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
298.75 -1.5 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
283.25 24.0885 m
/N13 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-2)
[5.16138 7.75 ] pdfys
Q
n
2737.5 510.0 m
2737.5 467.5 l
S
n
2627.5 510.0 m
2627.5 467.5 l
S
n
2550.0 510.0 m
2550.0 467.5 l
S
n
2490.0 510.0 m
2490.0 467.5 l
S
n
2442.5 510.0 m
2442.5 467.5 l
S
n
2400.0 510.0 m
2400.0 467.5 l
S
n
2365.0 510.0 m
2365.0 467.5 l
S
n
2332.5 510.0 m
2332.5 467.5 l
S
n
2305.0 552.5 m
2305.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
236.75 -1.5 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
221.25 24.0885 m
/N13 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-1)
[5.16138 7.75 ] pdfys
Q
n
2117.5 510.0 m
2117.5 467.5 l
S
n
2007.5 510.0 m
2007.5 467.5 l
S
n
1930.0 510.0 m
1930.0 467.5 l
S
n
1870.0 510.0 m
1870.0 467.5 l
S
n
1822.5 510.0 m
1822.5 467.5 l
S
n
1780.0 510.0 m
1780.0 467.5 l
S
n
1745.0 510.0 m
1745.0 467.5 l
S
n
1712.5 510.0 m
1712.5 467.5 l
S
n
1685.0 552.5 m
1685.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
174.75 14.375 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(1) show
Q
n
1497.5 510.0 m
1497.5 467.5 l
S
n
1387.5 510.0 m
1387.5 467.5 l
S
n
1310.0 510.0 m
1310.0 467.5 l
S
n
1250.0 510.0 m
1250.0 467.5 l
S
n
1202.5 510.0 m
1202.5 467.5 l
S
n
1160.0 510.0 m
1160.0 467.5 l
S
n
1125.0 510.0 m
1125.0 467.5 l
S
n
1092.5 510.0 m
1092.5 467.5 l
S
n
1065.0 552.5 m
1065.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
112.75 4.75 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
Q
n
877.5 510.0 m
877.5 467.5 l
S
n
767.5 510.0 m
767.5 467.5 l
S
n
690.0 510.0 m
690.0 467.5 l
S
n
630.0 510.0 m
630.0 467.5 l
S
n
582.5 510.0 m
582.5 467.5 l
S
n
540.0 510.0 m
540.0 467.5 l
S
n
505.0 510.0 m
505.0 467.5 l
S
n
472.5 510.0 m
472.5 467.5 l
S
n
445.0 552.5 m
445.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
50.75 4.75 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
41.5 29.25 m
/N13 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(2) show
Q
n
257.5 510.0 m
257.5 467.5 l
S
n
147.5 510.0 m
147.5 467.5 l
S
n
70.0 510.0 m
70.0 467.5 l
S
2.5 w
n
4165.0 467.5 m
4165.0 6140.0 l
S
10.0 w
n
4080.0 467.5 m
4165.0 467.5 l
S
n
4122.5 752.5 m
4165.0 752.5 l
S
n
4122.5 1035.0 m
4165.0 1035.0 l
S
n
4122.5 1317.5 m
4165.0 1317.5 l
S
n
4080.0 1602.5 m
4165.0 1602.5 l
S
n
4122.5 1885.0 m
4165.0 1885.0 l
S
n
4122.5 2170.0 m
4165.0 2170.0 l
S
n
4122.5 2452.5 m
4165.0 2452.5 l
S
n
4080.0 2737.5 m
4165.0 2737.5 l
S
n
4122.5 3020.0 m
4165.0 3020.0 l
S
n
4122.5 3302.5 m
4165.0 3302.5 l
S
n
4122.5 3587.5 m
4165.0 3587.5 l
S
n
4080.0 3870.0 m
4165.0 3870.0 l
S
n
4122.5 4155.0 m
4165.0 4155.0 l
S
n
4122.5 4437.5 m
4165.0 4437.5 l
S
n
4122.5 4722.5 m
4165.0 4722.5 l
S
n
4080.0 5005.0 m
4165.0 5005.0 l
S
n
4122.5 5287.5 m
4165.0 5287.5 l
S
n
4122.5 5572.5 m
4165.0 5572.5 l
S
n
4122.5 5855.0 m
4165.0 5855.0 l
S
n
4080.0 6140.0 m
4165.0 6140.0 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
2.5 w
n
4165.0 6140.0 m
10.0 6140.0 l
S
10.0 w
n
4165.0 6055.0 m
4165.0 6140.0 l
S
n
3977.5 6097.5 m
3977.5 6140.0 l
S
n
3870.0 6097.5 m
3870.0 6140.0 l
S
n
3792.5 6097.5 m
3792.5 6140.0 l
S
n
3730.0 6097.5 m
3730.0 6140.0 l
S
n
3682.5 6097.5 m
3682.5 6140.0 l
S
n
3640.0 6097.5 m
3640.0 6140.0 l
S
n
3605.0 6097.5 m
3605.0 6140.0 l
S
n
3572.5 6097.5 m
3572.5 6140.0 l
S
n
3545.0 6055.0 m
3545.0 6140.0 l
S
n
3357.5 6097.5 m
3357.5 6140.0 l
S
n
3247.5 6097.5 m
3247.5 6140.0 l
S
n
3170.0 6097.5 m
3170.0 6140.0 l
S
n
3110.0 6097.5 m
3110.0 6140.0 l
S
n
3062.5 6097.5 m
3062.5 6140.0 l
S
n
3020.0 6097.5 m
3020.0 6140.0 l
S
n
2985.0 6097.5 m
2985.0 6140.0 l
S
n
2952.5 6097.5 m
2952.5 6140.0 l
S
n
2925.0 6055.0 m
2925.0 6140.0 l
S
n
2737.5 6097.5 m
2737.5 6140.0 l
S
n
2627.5 6097.5 m
2627.5 6140.0 l
S
n
2550.0 6097.5 m
2550.0 6140.0 l
S
n
2490.0 6097.5 m
2490.0 6140.0 l
S
n
2442.5 6097.5 m
2442.5 6140.0 l
S
n
2400.0 6097.5 m
2400.0 6140.0 l
S
n
2365.0 6097.5 m
2365.0 6140.0 l
S
n
2332.5 6097.5 m
2332.5 6140.0 l
S
n
2305.0 6055.0 m
2305.0 6140.0 l
S
n
2117.5 6097.5 m
2117.5 6140.0 l
S
n
2007.5 6097.5 m
2007.5 6140.0 l
S
n
1930.0 6097.5 m
1930.0 6140.0 l
S
n
1870.0 6097.5 m
1870.0 6140.0 l
S
n
1822.5 6097.5 m
1822.5 6140.0 l
S
n
1780.0 6097.5 m
1780.0 6140.0 l
S
n
1745.0 6097.5 m
1745.0 6140.0 l
S
n
1712.5 6097.5 m
1712.5 6140.0 l
S
n
1685.0 6055.0 m
1685.0 6140.0 l
S
n
1497.5 6097.5 m
1497.5 6140.0 l
S
n
1387.5 6097.5 m
1387.5 6140.0 l
S
n
1310.0 6097.5 m
1310.0 6140.0 l
S
n
1250.0 6097.5 m
1250.0 6140.0 l
S
n
1202.5 6097.5 m
1202.5 6140.0 l
S
n
1160.0 6097.5 m
1160.0 6140.0 l
S
n
1125.0 6097.5 m
1125.0 6140.0 l
S
n
1092.5 6097.5 m
1092.5 6140.0 l
S
n
1065.0 6055.0 m
1065.0 6140.0 l
S
n
877.5 6097.5 m
877.5 6140.0 l
S
n
767.5 6097.5 m
767.5 6140.0 l
S
n
690.0 6097.5 m
690.0 6140.0 l
S
n
630.0 6097.5 m
630.0 6140.0 l
S
n
582.5 6097.5 m
582.5 6140.0 l
S
n
540.0 6097.5 m
540.0 6140.0 l
S
n
505.0 6097.5 m
505.0 6140.0 l
S
n
472.5 6097.5 m
472.5 6140.0 l
S
n
445.0 6055.0 m
445.0 6140.0 l
S
n
257.5 6097.5 m
257.5 6140.0 l
S
n
147.5 6097.5 m
147.5 6140.0 l
S
n
70.0 6097.5 m
70.0 6140.0 l
S
2.5 w
n
10.0 467.5 m
10.0 6140.0 l
S
10.0 w
n
95.0 467.5 m
10.0 467.5 l
S
n
52.5 752.5 m
10.0 752.5 l
S
n
52.5 1035.0 m
10.0 1035.0 l
S
n
52.5 1317.5 m
10.0 1317.5 l
S
n
95.0 1602.5 m
10.0 1602.5 l
S
n
52.5 1885.0 m
10.0 1885.0 l
S
n
52.5 2170.0 m
10.0 2170.0 l
S
n
52.5 2452.5 m
10.0 2452.5 l
S
n
95.0 2737.5 m
10.0 2737.5 l
S
n
52.5 3020.0 m
10.0 3020.0 l
S
n
52.5 3302.5 m
10.0 3302.5 l
S
n
52.5 3587.5 m
10.0 3587.5 l
S
n
95.0 3870.0 m
10.0 3870.0 l
S
n
52.5 4155.0 m
10.0 4155.0 l
S
n
52.5 4437.5 m
10.0 4437.5 l
S
n
52.5 4722.5 m
10.0 4722.5 l
S
n
95.0 5005.0 m
10.0 5005.0 l
S
n
52.5 5287.5 m
10.0 5287.5 l
S
n
52.5 5572.5 m
10.0 5572.5 l
S
n
52.5 5855.0 m
10.0 5855.0 l
S
n
95.0 6140.0 m
10.0 6140.0 l
S
Q
q
n
4165.0 467.5 m
10.0 467.5 l
10.0 6140.0 l
4165.0 6140.0 l
h
W
n
10.0 w
n
695.0 1120.0 m
715.0 1147.5 l
735.0 1177.5 l
752.5 1205.0 l
772.5 1232.5 l
790.0 1262.5 l
805.0 1290.0 l
822.5 1317.5 l
837.5 1347.5 l
852.5 1375.0 l
867.5 1405.0 l
882.5 1432.5 l
910.0 1490.0 l
935.0 1545.0 l
957.5 1602.5 l
1000.0 1705.0 l
1035.0 1807.5 l
1060.0 1885.0 l
1087.5 1987.5 l
1107.5 2075.0 l
1125.0 2170.0 l
1132.5 2225.0 l
1137.5 2282.5 l
1140.0 2340.0 l
1140.0 2395.0 l
1130.0 2440.0 l
1127.5 2452.5 l
1110.0 2505.0 l
1110.0 2510.0 l
1105.0 2547.5 l
1105.0 2567.5 l
1107.5 2615.0 l
1107.5 2622.5 l
1117.5 2680.0 l
1127.5 2737.5 l
1150.0 2817.5 l
1185.0 2930.0 l
1215.0 3020.0 l
1255.0 3130.0 l
1320.0 3302.5 l
1430.0 3587.5 l
1537.5 3870.0 l
1657.5 4195.0 l
1742.5 4437.5 l
1852.5 4762.5 l
1932.5 5005.0 l
2042.5 5345.0 l
2110.0 5572.5 l
2212.5 5912.5 l
2277.5 6140.0 l
[/DeviceGray] cs 0.0 sc
S
[30.0 30.0 ] 0.0 d
n
1270.0 1120.0 m
1280.0 1147.5 l
1292.5 1177.5 l
1302.5 1205.0 l
1312.5 1232.5 l
1322.5 1262.5 l
1332.5 1290.0 l
1342.5 1317.5 l
1352.5 1347.5 l
1360.0 1375.0 l
1370.0 1405.0 l
1380.0 1432.5 l
1400.0 1490.0 l
1415.0 1545.0 l
1435.0 1602.5 l
1467.5 1707.5 l
1515.0 1885.0 l
1567.5 2082.5 l
1590.0 2170.0 l
1642.5 2385.0 l
1657.5 2452.5 l
1710.0 2677.5 l
1722.5 2737.5 l
1780.0 3020.0 l
1837.5 3302.5 l
1890.0 3587.5 l
1940.0 3870.0 l
2007.5 4265.0 l
2035.0 4437.5 l
2097.5 4832.5 l
2122.5 5005.0 l
2190.0 5460.0 l
2205.0 5572.5 l
2265.0 5992.5 l
2282.5 6140.0 l
S
Q
q
10.0 w
n
1500.0 1120.0 m
1535.0 1147.5 l
[/DeviceGray] cs 0.0 sc
S
n
1535.0 1147.5 m
1552.5 1162.5 l
S
n
1605.0 1207.5 m
1637.5 1232.5 l
S
n
1637.5 1232.5 m
1657.5 1252.5 l
S
n
1707.5 1297.5 m
1730.0 1317.5 l
S
n
1730.0 1317.5 m
1755.0 1345.0 l
S
n
1805.0 1392.5 m
1815.0 1405.0 l
S
n
1815.0 1405.0 m
1842.5 1432.5 l
S
n
1842.5 1432.5 m
1852.5 1440.0 l
S
n
1897.5 1490.0 m
1942.5 1542.5 l
S
n
1987.5 1592.5 m
1995.0 1602.5 l
S
n
1995.0 1602.5 m
2030.0 1645.0 l
S
n
2072.5 1700.0 m
2090.0 1717.5 l
S
n
2090.0 1717.5 m
2115.0 1752.5 l
S
n
2155.0 1807.5 m
2185.0 1845.0 l
S
n
2185.0 1845.0 m
2197.5 1862.5 l
S
n
2235.0 1917.5 m
2272.5 1975.0 l
S
n
2310.0 2030.0 m
2347.5 2090.0 l
S
n
2382.5 2147.5 m
2397.5 2170.0 l
S
n
2397.5 2170.0 m
2417.5 2205.0 l
S
n
2452.5 2265.0 m
2485.0 2322.5 l
S
n
2520.0 2382.5 m
2552.5 2442.5 l
S
n
2582.5 2502.5 m
2612.5 2562.5 l
S
n
2645.0 2625.0 m
2650.0 2632.5 l
S
n
2650.0 2632.5 m
2675.0 2685.0 l
S
n
2702.5 2747.5 m
2732.5 2807.5 l
S
n
2760.0 2870.0 m
2787.5 2932.5 l
S
n
2815.0 2995.0 m
2827.5 3020.0 l
S
n
2827.5 3020.0 m
2842.5 3057.5 l
S
n
2867.5 3120.0 m
2895.0 3182.5 l
S
n
2920.0 3245.0 m
2925.0 3255.0 l
S
n
2925.0 3255.0 m
2942.5 3302.5 l
S
n
2942.5 3302.5 m
2945.0 3310.0 l
S
n
2970.0 3372.5 m
2992.5 3437.5 l
S
n
3017.5 3500.0 m
3042.5 3562.5 l
S
n
3065.0 3627.5 m
3087.5 3692.5 l
S
n
3110.0 3755.0 m
3132.5 3820.0 l
S
n
3155.0 3885.0 m
3175.0 3950.0 l
S
n
3197.5 4015.0 m
3217.5 4077.5 l
S
n
3240.0 4142.5 m
3250.0 4175.0 l
S
n
3250.0 4175.0 m
3260.0 4207.5 l
S
n
3280.0 4272.5 m
3300.0 4337.5 l
S
n
3320.0 4402.5 m
3330.0 4437.5 l
S
n
3330.0 4437.5 m
3340.0 4467.5 l
S
n
3360.0 4532.5 m
3377.5 4600.0 l
S
n
3397.5 4665.0 m
3415.0 4730.0 l
S
n
3435.0 4795.0 m
3437.5 4807.5 l
S
n
3437.5 4807.5 m
3452.5 4860.0 l
S
n
3472.5 4925.0 m
3490.0 4992.5 l
S
n
3507.5 5057.5 m
3525.0 5122.5 l
S
n
3542.5 5190.0 m
3560.0 5255.0 l
S
n
3577.5 5320.0 m
3595.0 5387.5 l
S
n
3612.5 5452.5 m
3627.5 5517.5 l
S
n
3645.0 5585.0 m
3662.5 5650.0 l
S
n
3677.5 5717.5 m
3692.5 5782.5 l
S
n
3710.0 5847.5 m
3725.0 5915.0 l
S
n
3742.5 5980.0 m
3750.0 6010.0 l
S
n
3750.0 6010.0 m
3757.5 6047.5 l
S
n
3772.5 6112.5 m
3780.0 6140.0 l
S
n
1670.0 1120.0 m
1705.0 1147.5 l
S
n
1705.0 1147.5 m
1725.0 1162.5 l
S
n
1775.0 1207.5 m
1805.0 1232.5 l
S
n
1805.0 1232.5 m
1825.0 1252.5 l
S
n
1877.5 1300.0 m
1897.5 1317.5 l
S
n
1897.5 1317.5 m
1925.0 1347.5 l
S
n
1972.5 1395.0 m
1980.0 1405.0 l
S
n
1980.0 1405.0 m
2007.5 1432.5 l
S
n
2007.5 1432.5 m
2020.0 1445.0 l
S
n
2065.0 1495.0 m
2110.0 1545.0 l
S
n
2155.0 1597.5 m
2160.0 1602.5 l
S
n
2160.0 1602.5 m
2197.5 1650.0 l
S
n
2240.0 1702.5 m
2252.5 1717.5 l
S
n
2252.5 1717.5 m
2282.5 1757.5 l
S
n
2322.5 1812.5 m
2355.0 1855.0 l
S
n
2355.0 1855.0 m
2362.5 1867.5 l
S
n
2400.0 1922.5 m
2440.0 1980.0 l
S
n
2477.5 2035.0 m
2512.5 2092.5 l
S
n
2550.0 2150.0 m
2562.5 2170.0 l
S
n
2562.5 2170.0 m
2585.0 2210.0 l
S
n
2620.0 2267.5 m
2652.5 2327.5 l
S
n
2685.0 2387.5 m
2717.5 2445.0 l
S
n
2750.0 2507.5 m
2782.5 2567.5 l
S
n
2812.5 2627.5 m
2817.5 2640.0 l
S
n
2817.5 2640.0 m
2842.5 2687.5 l
S
n
2872.5 2750.0 m
2900.0 2812.5 l
S
n
2930.0 2872.5 m
2957.5 2935.0 l
S
n
2985.0 2997.5 m
2995.0 3020.0 l
S
n
2995.0 3020.0 m
3012.5 3060.0 l
S
n
3037.5 3122.5 m
3065.0 3185.0 l
S
n
3092.5 3247.5 m
3095.0 3257.5 l
S
n
3095.0 3257.5 m
3115.0 3302.5 l
S
n
3115.0 3302.5 m
3117.5 3310.0 l
S
n
3140.0 3375.0 m
3165.0 3437.5 l
S
n
3190.0 3502.5 m
3215.0 3565.0 l
S
n
3237.5 3630.0 m
3260.0 3692.5 l
S
n
3285.0 3757.5 m
3307.5 3820.0 l
S
n
3330.0 3885.0 m
3352.5 3950.0 l
S
n
3372.5 4015.0 m
3395.0 4080.0 l
S
n
3415.0 4142.5 m
3427.5 4175.0 l
S
n
3427.5 4175.0 m
3437.5 4207.5 l
S
n
3457.5 4272.5 m
3477.5 4337.5 l
S
n
3497.5 4402.5 m
3510.0 4437.5 l
S
n
3510.0 4437.5 m
3517.5 4467.5 l
S
n
3537.5 4532.5 m
3557.5 4597.5 l
S
n
3577.5 4662.5 m
3595.0 4730.0 l
S
n
3615.0 4795.0 m
3617.5 4802.5 l
S
n
3617.5 4802.5 m
3635.0 4860.0 l
S
n
3652.5 4925.0 m
3670.0 4990.0 l
S
n
3690.0 5055.0 m
3707.5 5122.5 l
S
n
3725.0 5187.5 m
3742.5 5252.5 l
S
n
3760.0 5320.0 m
3777.5 5385.0 l
S
n
3795.0 5450.0 m
3812.5 5517.5 l
S
n
3830.0 5582.5 m
3845.0 5647.5 l
S
n
3862.5 5715.0 m
3877.5 5780.0 l
S
n
3895.0 5845.0 m
3912.5 5912.5 l
S
n
3927.5 5977.5 m
3942.5 6032.5 l
S
n
3942.5 6032.5 m
3945.0 6045.0 l
S
n
3960.0 6110.0 m
3967.5 6140.0 l
S
Q
q
n
4165.0 467.5 m
10.0 467.5 l
10.0 6140.0 l
4165.0 6140.0 l
h
W
n
[10.0 20.0 ] 0.0 d
10.0 w
n
1762.5 1120.0 m
1792.5 1147.5 l
1822.5 1177.5 l
1852.5 1205.0 l
1882.5 1232.5 l
1910.0 1262.5 l
1937.5 1290.0 l
1965.0 1317.5 l
1990.0 1347.5 l
2017.5 1375.0 l
2042.5 1405.0 l
2065.0 1432.5 l
2112.5 1490.0 l
2155.0 1545.0 l
2197.5 1602.5 l
2250.0 1677.5 l
2302.5 1765.0 l
2357.5 1865.0 l
2370.0 1885.0 l
2412.5 1972.5 l
2462.5 2085.0 l
2497.5 2170.0 l
2542.5 2292.5 l
2595.0 2452.5 l
2642.5 2617.5 l
2677.5 2737.5 l
2732.5 2957.5 l
2747.5 3020.0 l
2812.5 3302.5 l
2875.0 3587.5 l
2937.5 3870.0 l
3052.5 4437.5 l
3165.0 5005.0 l
3275.0 5572.5 l
3380.0 6140.0 l
[/DeviceGray] cs 0.0 sc
S
Q
Q
Q
/HPGBAA+Symbol /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
/DCDBAA+Times-Roman /Font _pdfUndefineResource
/N13 /Font _pdfUndefineResource
/RRQBAA+Symbol /Font _pdfUndefineResource
/N14 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF

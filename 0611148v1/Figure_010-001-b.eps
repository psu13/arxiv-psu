%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Figure_010-001-b.pdf)
%%Version: 1 3
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 10/10/06 12:28 PM
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 633 482
%%HiResBoundingBox: 0.0 0.0 633.0 482.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0


%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3133 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2006-10-10T12:28:52-04:00</xap:CreateDate>
         <xap:ModifyDate>2006-10-10T12:28:52-04:00</xap:ModifyDate>
         <xap:MetadataDate>2006-10-10T12:28:52-04:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:B83AFDBE553711DBAE5596F162F5874B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B83AFDBE553711DBAE5596F162F5874B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end
 PDF /docinitialize get exec

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 633.0 482.0 rectclip
[ 0 -1 1 0 0 482 ] concat
q
0.0 0.0 m
482.0 0.0 l
482.0 633.0 l
0.0 633.0 l
h
W
n
q
0.1 0.0 0.0 0.1 0.0 0.0 cm
q
10.0 w
n
60.0 467.5 4155.0 5672.5 re
[/DeviceGray] cs 0.0 sc
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
%ADOBeginSubsetFont: IYJBAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /IYJBAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5020931 def
/FontBBox {-168 -281 1031 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N10 (IYJBAA+Times-Roman) -1 TZ
78.5 81.25 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDF88216CF024BDC8993EE8738A197CB924F0E6E9C2CBFE
4D9D44C20F5B79F0D4242FC8CCAAE6BAF47FF311E64B6FE0325544EED3BD9EAF
841D56309E4C5BEFBC20644139AD9D559196DE6A7EFA4406EB7373E416C27D1F
61F26E90B8D0AD798C6F8FF76C76B25F154526FE6C73D651BF9342FDBCAE72B5
3DAB39840733A0CCB7D555DFCA05C83E150A403343CCA7DAA3C5EBCDCFC488E6
9F95AE20AEC9BBD976F4057EE91FF5B94FE4CB3904E6441C8E3E0BB2AE5D0514
827BB314BAB245323B629CFC11718D807DCC5664020DC7AF6E790AE8CAFBF2B4
D123549666642BBE4F0D07FCB2EA6539D1> |-
/R <1C60D8A8C9B64EDF88216CFE5F8DFCAB15B9D2E54F689E54EC7EA94BBAEB
FD014907B5553EECF7E84E7533E7746CA4A8046D79BBA6D3551BD6D211F21DFA
89662C5D38249B8F851C81991FC577296C62AA1A433037884FE5B7C25A778CA7
5BC75A2358C972F7D81D6DB14597E6C8079B6C900B93FD17F6C74C2D00FB9373
A02696A5C145E22EF23DA43F75D1EED3233CA26C1046FDCBB064C808C19769B2
49CCF604E3A7184B8A2418D568AE343DBA10C6AF7C83C6C60DFBDBA8AA9F6CB3
263A80337277E4D1F3D10D> |-
/parenleft <1C60D8A8C9B81F2C468947AE620DBD301F0E6084B3B21953998F
049683F9258FDD1704F846A9ADCA7BFFB7B37F99CD7499DB6D2D9B330A222AAF
36F8D92C9EE1E074963D1F79FC715305862DFD085B> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4645E261A192EDDA954EF8905
29A12D8C1F887284958B719778462ECFF8813AE199AD391519C90CD4E233E44F
AFED19384E407B8C94BB545E7EE47ADD31CBD6E15485FB774154428AF37F18AB
2820508AC541F80F6F3141585BCE84B106DC00CC2DC7F21EBB7644330512430D
13DCBD4BBE410EA227C02EC9> |-
/parenright <1C60D8A8C9B81F2C3A852C511B2EDD6D7C9F5151A01B6DCBFFD
B11B72015067AB463EE5857EA0D2651F87A101A1ABA3ED2454E3881C2FE7E7FD
9A05FB9D1E468CA208C9F44040F01B4D266AB284064> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 66 /B put
dup 82 /R put
dup 40 /parenleft put
dup 72 /H put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(BR\(H\))
[12.8399 12.8399 6.41011 13.8985 6.41011 ] pdfys
33.7499 81.25 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7A73DCF483CC3D064C5CE58F4CFBFF3D559F3381016C1422B
A12F40A3D9641BDE4159253F90E66406A8D3BDA3C70A15C85CB26A56630B011B
D4C3F4EA2CA0BE3F58CBB4D2F510A6E71AA2DEAE4D46463267A9BB1FAA00DC1B
F34153F8390AA18FD8CA120D0FF81566> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 98 /b put
pop
end
%ADOEndSubsetFont
(bb)
[9.625 9.625 ] pdfys
15.7499 90.5 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/underscore <1C60D8A8C9B7A73DB5FD3C3CE1FF5924642D6EEC907E6174060
F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 95 /underscore put
pop
end
%ADOEndSubsetFont
(_) show
%ADOBeginSubsetFont: UPIBAA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /UPIBAA+Symbol def
/FontInfo 6 dict dup begin
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5021339 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [673 693] def
/StdHW [-0] def
/StdVW [-0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 45 /minus 91 /bracketleft 93 /bracketright 103 /gamma 116 /tau
/N13 (UPIBAA+Symbol) -1 TZ
158.0 81.25 m
%ADOBeginSubsetFont: UPIBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/UPIBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/tau <1C60D8A8C9B7642759784D6D47F65F67EB6E9973BDAC65B4277A0A4C8A
6A6F64ABB9E2637A05FC85375058F824F5ECB7537EA630E4F9047ACD9259D2A8
5BACF1A2C115698DC016C419F9B5F7485FDE7D78C9929D4BD8634815401FFCEC
4FC2673C8EC0623431F15321BDA7E2268E3BF8770018B318DF10908FEEDC42D8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/UPIBAA+Symbol findfont /Encoding get
dup 116 /tau put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(t) show
148.25 89.7007 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7E7C1D348B97AC3C0CEA30D7FD44CBB7EF7803FCFDE420
7B3F0065C33A1C912098317DD5E81ABACE2ABDC4A415F37C8F239> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 43 /plus put
pop
end
%ADOEndSubsetFont
/N10 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(+) show
158.0 97.3147 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(t) show
148.25 105.765 m
%ADOBeginSubsetFont: UPIBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/UPIBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B79676F49142DE56346D1DA3B82A9483D89BD7DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/UPIBAA+Symbol findfont /Encoding get
dup 45 /minus put
pop
end
%ADOEndSubsetFont
/N13 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(-) show
198.25 81.25 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE02B44469F89EA4BAEF4FC763523FA63A
4F8FC208256A6214359EDE74F6C4BBA1B6F1EEFD7C27EA9C57EAFE42BDDEC6F7
207D49512F90BB41E64CB64ED13D88C535F983F9198183DC5A65815F9989E7B5
1C15033E9FF326B6DE1B48> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 99 /c put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(cc)
[8.547 8.547 ] pdfys
183.75 89.25 m
(_) show
247.75 81.25 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7A73DB582976F06005DEAE574E3F47714D50348B288A6BD9E
77DC4E7F03021E6EF5D638F5D93ECE1981CB3F933974BA079378B18BFE54DCD4
4126D68064919BBF20DDA51839BA2D2867307C1A252FFC5CE737DFBAF2F705E2
77FB8B1EEBD22BCCA281F6CD1BE8E1044687BECE86F45E65A83568D347C016FC
8A63E3963ABCA50CEDCACD94E1CF0510A3CAEA7F2B6278A91FDF202500651568
C7F95B91B8A9FF07F14409B804EFAFCDB217DE2F94BBA69B307DBEA2BDAD4ACA
5E7AD024A72F9BC3414E1ABF2B6D5C5469DC9CFEB1F7A54CD0848333FF393029
BC5F76171666BD3F07A035C0439140A4C030C91198AF5414137CC7CDA066C809
CC5E3850F33174B78F262B1F274B05F01B0379608E2D1F5DA1FE1D55A15BDAD2
89780240F22CE657E9518D68DBFFF6E90D54EDB4A02C3427CD8A45C71E87D149
4543F7D19B07365C8F0CD0C77EA3135D79685A44D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 103 /g put
pop
end
%ADOEndSubsetFont
(gg)
[9.625 9.625 ] pdfys
47.7503 351.501 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF3599A55361F1151112E2F93E219FC62105E6CEC64AA1
C45D0FDA0691756064A76EDE1A6D39D789F3B1D2680E1D581562D972A7ABAEB9
59798F8D10A33BD9C819F3711A67793F93B3FC3506909E04DE00ABC64E4E16B3
6A80F6FD8F2BA3C890634A26FF2EB40C7ECFA3BFA719DBD630CE7F3BEA51454D
FCD018CBD43E73A882544A9F9DC39916BB67508716E3DCBE9DEF2D7EC28B98D0
87C52ECD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 87 /W put
pop
end
%ADOEndSubsetFont
(WW)
[18.172 18.172 ] pdfys
97.0003 351.501 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE6A6EDEC9185C38D43FC5634774E14B19DAB06962CC00
ACCAA2D0B32892DF35F84D85EB83C7E791163FE0C3B4A92CA0F85D4F0394AC0C
8EAFC89E2719A8E27611F20F49525CB2A86EC058A5C64F26> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 90 /Z put
pop
end
%ADOEndSubsetFont
(ZZ)
[11.7616 11.7616 ] pdfys
217.0 430.751 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D082F829CADA24028C80D846E2AB3236B17CAAE9D6D83E
2118A50E9B4A0DF7A975441BD0BC11A4F1C659AD57632E786B7EB401A5594688
3894CB08B6ACFA409E354487501CF0FBE51DCD32A9BEF083FF0E4413EAB18351
45D655A20480> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 116 /t put
pop
end
%ADOEndSubsetFont
(tt)
[5.3515 5.3515 ] pdfys
209.5 435.751 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AED63678C15E05C8EA5610E9104FF77F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
(-) show
366.25 204.5 m
%ADOBeginSubsetFont: UPIBAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/UPIBAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/gamma <1C60D8A8C9B7008A52AC0459CB14852406B9E4D77EEF6AEECA99ECE4
CF6570A58BF520E1DE3277F008488266648D4803C118F69C0CD3262FD95724A2
E8BEF1AC78E840BAD3B457B7C03726A6B016248DAC47F8688F7AF8ADFCC520A2
3F4A4234D9BE4D0FD58BD5B0CCD94DF5FF91ADDED2AF1718DAC4F06FC7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/UPIBAA+Symbol findfont /Encoding get
dup 103 /gamma put
pop
end
%ADOEndSubsetFont
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(gg)
[7.91166 7.91166 ] pdfys
359.5 234.75 m
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(Z) show
359.5 246.512 m
/N13 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(g) show
475.5 289.832 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F859BE0FB9A2A0F764F0822B6D387D8F1AF88BA29DF2062
5C16019FE768CF1F86E44E0F38488D33DDF5F003500E45C5B17AE757097193FE
80517AEBC3D71F7DFB982B641E9F52A187BE9F0CD4D2FE5BEDDCB583B0C8033E
2722F3AFD3F04608A18D6990E776D21892577D81533D8EFDF85FEAEDBA33> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 77 /M put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(M) show
482.0 306.945 m
/N10 [0.0 13.5 -13.5 0.0 0.0 0.0] Tf
(H) show
%ADOBeginSubsetFont: ERNAAA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /ERNAAA+Symbol def
/FontInfo 6 dict dup begin
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5021339 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [673 693] def
/StdHW [-0] def
/StdVW [-0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 45 /minus 77 /bracketleft/bracketright 91 /bracketleft 93 /bracketright 103 /gamma
 116 /tau
/N14 (ERNAAA+Symbol) -1 TZ
475.5 321.504 m
%ADOBeginSubsetFont: ERNAAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ERNAAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketleft <1C60D8A8C9B81F2C36BB437CF166E36C02B4955F93ABFFE58F
96BC749F373156EA53E8D2765B7772792F74E46947C29D9F5D7752AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ERNAAA+Symbol findfont /Encoding get
dup 77 /bracketleft put
pop
end
%ADOEndSubsetFont
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(M) show
475.5 327.915 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079FE80B2D9B8A220BAA4FBC7D1081589331F0CEED55F2D8
DF77A2BFE883ECA331735DA1712620F150B9E55D2A0DC80C20AC786900DE56B8
F66EF9AFAA388E512D2DC90464D268AE04E3B45CE1685CB82A43F1F2DA651934
7A21A52F0121CDFD04E605540BDE10918C178CB90F363CFA6A45D463658E4D12
9707F6DCA6754EF90393E42B70EBCD47B0FA7DFD62E2E31200E9D34EC5D21406
413503CAAEA5AB371C854D77840B> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/V <1C60D8A8C9B6079F1534F6C8E692D97DCE3893C7E5D024A5BABDC05E08DE
1A1496B27A897C1AF9807F997865893EB1137039FC3707318E9EBA1BA6BE3A9B
9D9B20F9C43B7EF3277E99629F542020D269779A25947EEE35F756BF9A4CB4BD
FA29AB7B422808DB17B31F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 71 /G put
dup 101 /e put
dup 86 /V put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(GeV)
[13.8985 8.547 13.8985 ] pdfys
475.5 364.259 m
%ADOBeginSubsetFont: ERNAAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ERNAAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/bracketright <1C60D8A8C9B81F2C36BB437CF166E36C7E403ABB2EC9AB3A4
12202D2996877FD5B5C282FB571EBF103685E86C0300ACBBC94544775D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ERNAAA+Symbol findfont /Encoding get
dup 78 /bracketright put
pop
end
%ADOEndSubsetFont
/N14 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(N) show
448.5 37.1261 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB6618B179C414325DD7507D30986AB86D199D48B6
84AD9BD2ACCAC5A125673601099A5DE5C85FCAF700FD02FC5377F3D2AE642EF7
6F759B7D576BF48EB8780D17C4A9F9EBE87BC939443F7F6F33C2EDD4352971EC
D79B1EAB5F751B6F7C9277CB3D021079A4783C4F80F3C6312BADB83875096EB3
E5471717D351AA54BB45A8AB94B1C> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DF833CB86D5FEF88216AD9F1AB7D
A4D1D62F21CA3C813D6E68DA3F8FDEB523CD1537E9A0D29629423D3A5F8EBE17
93E6FD9E2BE0B916EAB3DBAE19A4B5154E63E7B27828F79DFA4ED2A80B59FBB1
4A575CF36CF93B9F8270F39B2161B41DEAE8E8389AFC8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 53 /five put
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(50)
[9.625 9.625 ] pdfys
448.5 163.564 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DC5490243E557DFE60F0C9ABF86356A13CECD6B76D5
F7B86DD1350730FDAF7BFC2C76F5E1AB330C22AF1584A1BC1A34914B738C6024
4637D494560D57E5BBF61F3063EC63B77F7815> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
(100)
[9.625 9.625 9.625 ] pdfys
448.5 294.814 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC5046156A965F0B38BCCC2C48C4F05B4A673B97450
C96366C099E289595B8910F29844F95C0DBD05CC546A0773CAF5AF668A98899E
A5A2958D8F0BBDC4795D62D35E6BDCF81689D877B610E5C6C42C00469BFA1116
69100E8509BAFB098A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
(200)
[9.625 9.625 9.625 ] pdfys
448.5 468.314 m
(500)
[9.625 9.625 9.625 ] pdfys
448.5 594.751 m
(1000)
[9.625 9.625 9.625 9.625 ] pdfys
Q
2.5 w
n
4215.0 467.5 m
60.0 467.5 l
S
10.0 w
n
4215.0 552.5 m
4215.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
427.75 -1.5 m
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
412.25 24.0885 m
%ADOBeginSubsetFont: IYJBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/IYJBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB6464B3065161E6483F919C65A09B8E3A79A1F3B
EA6C234533737D503C25522AFAD76A8B5ADB47F813BBCD99A0AF2D145DEF2C7F
F1B9281F34C2D2C290650C2E669C3EA873B80DE449BCD531B9FC6BE5B301D568
4865BA9D3ECF00AD1D8FF743B2A826E6AECE5EB9D8016932484836E29CD46E03
FF9592C8E5794416D0432CFF05FB05E96FC2EE7842D63C3EC1CC625F2507E450
849BB7CB2588ABB09302607DF3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/IYJBAA+Times-Roman findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
/N10 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-3)
[5.16138 7.75 ] pdfys
Q
n
3797.5 510.0 m
3797.5 467.5 l
S
n
3555.0 510.0 m
3555.0 467.5 l
S
n
3380.0 510.0 m
3380.0 467.5 l
S
n
3247.5 510.0 m
3247.5 467.5 l
S
n
3137.5 510.0 m
3137.5 467.5 l
S
n
3045.0 510.0 m
3045.0 467.5 l
S
n
2965.0 510.0 m
2965.0 467.5 l
S
n
2892.5 510.0 m
2892.5 467.5 l
S
n
2830.0 552.5 m
2830.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
289.5 -1.5 m
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
273.75 24.0885 m
/N10 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-2)
[5.16138 7.75 ] pdfys
Q
n
2412.5 510.0 m
2412.5 467.5 l
S
n
2170.0 510.0 m
2170.0 467.5 l
S
n
1997.5 510.0 m
1997.5 467.5 l
S
n
1862.5 510.0 m
1862.5 467.5 l
S
n
1752.5 510.0 m
1752.5 467.5 l
S
n
1660.0 510.0 m
1660.0 467.5 l
S
n
1580.0 510.0 m
1580.0 467.5 l
S
n
1507.5 510.0 m
1507.5 467.5 l
S
n
1445.0 552.5 m
1445.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
151.0 -1.5 m
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(10)
[9.625 9.625 ] pdfys
135.25 24.0885 m
/N10 [0.0 15.5 -15.5 0.0 0.0 0.0] Tf
(-1)
[5.16138 7.75 ] pdfys
Q
n
1027.5 510.0 m
1027.5 467.5 l
S
n
785.0 510.0 m
785.0 467.5 l
S
n
612.5 510.0 m
612.5 467.5 l
S
n
477.5 510.0 m
477.5 467.5 l
S
n
367.5 510.0 m
367.5 467.5 l
S
n
275.0 510.0 m
275.0 467.5 l
S
n
195.0 510.0 m
195.0 467.5 l
S
n
125.0 510.0 m
125.0 467.5 l
S
n
60.0 552.5 m
60.0 467.5 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
12.5 14.375 m
/N10 [0.0 19.25 -19.25 0.0 0.0 0.0] Tf
(1) show
Q
2.5 w
n
4215.0 467.5 m
4215.0 6140.0 l
S
10.0 w
n
4172.5 812.5 m
4215.0 812.5 l
S
n
4172.5 1105.0 m
4215.0 1105.0 l
S
n
4172.5 1357.5 m
4215.0 1357.5 l
S
n
4172.5 1580.0 m
4215.0 1580.0 l
S
n
4130.0 1780.0 m
4215.0 1780.0 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
n
4172.5 3092.5 m
4215.0 3092.5 l
S
n
4172.5 3860.0 m
4215.0 3860.0 l
S
n
4172.5 4405.0 m
4215.0 4405.0 l
S
n
4172.5 4827.5 m
4215.0 4827.5 l
S
n
4172.5 5172.5 m
4215.0 5172.5 l
S
n
4172.5 5465.0 m
4215.0 5465.0 l
S
n
4172.5 5717.5 m
4215.0 5717.5 l
S
n
4172.5 5940.0 m
4215.0 5940.0 l
S
n
4130.0 6140.0 m
4215.0 6140.0 l
S
q
10.0 0.0 0.0 10.0 0.0 0.0 cm
Q
2.5 w
n
4215.0 6140.0 m
60.0 6140.0 l
S
10.0 w
n
4215.0 6055.0 m
4215.0 6140.0 l
S
n
3797.5 6097.5 m
3797.5 6140.0 l
S
n
3555.0 6097.5 m
3555.0 6140.0 l
S
n
3380.0 6097.5 m
3380.0 6140.0 l
S
n
3247.5 6097.5 m
3247.5 6140.0 l
S
n
3137.5 6097.5 m
3137.5 6140.0 l
S
n
3045.0 6097.5 m
3045.0 6140.0 l
S
n
2965.0 6097.5 m
2965.0 6140.0 l
S
n
2892.5 6097.5 m
2892.5 6140.0 l
S
n
2830.0 6055.0 m
2830.0 6140.0 l
S
n
2412.5 6097.5 m
2412.5 6140.0 l
S
n
2170.0 6097.5 m
2170.0 6140.0 l
S
n
1997.5 6097.5 m
1997.5 6140.0 l
S
n
1862.5 6097.5 m
1862.5 6140.0 l
S
n
1752.5 6097.5 m
1752.5 6140.0 l
S
n
1660.0 6097.5 m
1660.0 6140.0 l
S
n
1580.0 6097.5 m
1580.0 6140.0 l
S
n
1507.5 6097.5 m
1507.5 6140.0 l
S
n
1445.0 6055.0 m
1445.0 6140.0 l
S
n
1027.5 6097.5 m
1027.5 6140.0 l
S
n
785.0 6097.5 m
785.0 6140.0 l
S
n
612.5 6097.5 m
612.5 6140.0 l
S
n
477.5 6097.5 m
477.5 6140.0 l
S
n
367.5 6097.5 m
367.5 6140.0 l
S
n
275.0 6097.5 m
275.0 6140.0 l
S
n
195.0 6097.5 m
195.0 6140.0 l
S
n
125.0 6097.5 m
125.0 6140.0 l
S
n
60.0 6055.0 m
60.0 6140.0 l
S
2.5 w
n
60.0 467.5 m
60.0 6140.0 l
S
10.0 w
n
102.5 812.5 m
60.0 812.5 l
S
n
102.5 1105.0 m
60.0 1105.0 l
S
n
102.5 1357.5 m
60.0 1357.5 l
S
n
102.5 1580.0 m
60.0 1580.0 l
S
n
145.0 1780.0 m
60.0 1780.0 l
S
n
102.5 3092.5 m
60.0 3092.5 l
S
n
102.5 3860.0 m
60.0 3860.0 l
S
n
102.5 4405.0 m
60.0 4405.0 l
S
n
102.5 4827.5 m
60.0 4827.5 l
S
n
102.5 5172.5 m
60.0 5172.5 l
S
n
102.5 5465.0 m
60.0 5465.0 l
S
n
102.5 5717.5 m
60.0 5717.5 l
S
n
102.5 5940.0 m
60.0 5940.0 l
S
n
145.0 6140.0 m
60.0 6140.0 l
S
Q
q
n
4215.0 467.5 m
60.0 467.5 l
60.0 6140.0 l
4215.0 6140.0 l
h
W
n
10.0 w
n
147.5 467.5 m
147.5 615.0 l
150.0 647.5 l
150.0 782.5 l
152.5 812.5 l
152.5 905.0 l
155.0 935.0 l
155.0 1022.5 l
157.5 1050.0 l
157.5 1132.5 l
160.0 1157.5 l
160.0 1235.0 l
162.5 1260.0 l
162.5 1335.0 l
165.0 1357.5 l
165.0 1405.0 l
167.5 1427.5 l
167.5 1472.5 l
170.0 1495.0 l
170.0 1537.5 l
172.5 1560.0 l
172.5 1602.5 l
175.0 1622.5 l
175.0 1642.5 l
177.5 1662.5 l
177.5 1682.5 l
180.0 1702.5 l
180.0 1722.5 l
182.5 1742.5 l
185.0 1760.0 l
185.0 1780.0 l
187.5 1800.0 l
190.0 1817.5 l
192.5 1835.0 l
195.0 1855.0 l
197.5 1872.5 l
202.5 1890.0 l
205.0 1907.5 l
210.0 1925.0 l
212.5 1942.5 l
217.5 1960.0 l
222.5 1977.5 l
230.0 1995.0 l
235.0 2012.5 l
242.5 2027.5 l
250.0 2045.0 l
257.5 2060.0 l
265.0 2077.5 l
275.0 2092.5 l
285.0 2110.0 l
295.0 2125.0 l
305.0 2140.0 l
317.5 2157.5 l
330.0 2172.5 l
345.0 2187.5 l
360.0 2202.5 l
375.0 2217.5 l
392.5 2232.5 l
410.0 2247.5 l
427.5 2262.5 l
447.5 2277.5 l
467.5 2292.5 l
490.0 2305.0 l
512.5 2320.0 l
537.5 2335.0 l
562.5 2347.5 l
587.5 2362.5 l
615.0 2375.0 l
645.0 2390.0 l
675.0 2402.5 l
707.5 2417.5 l
740.0 2430.0 l
772.5 2445.0 l
810.0 2457.5 l
847.5 2470.0 l
885.0 2482.5 l
927.5 2497.5 l
970.0 2510.0 l
1015.0 2522.5 l
1062.5 2535.0 l
1112.5 2547.5 l
1165.0 2560.0 l
1225.0 2572.5 l
1285.0 2585.0 l
1355.0 2597.5 l
1427.5 2610.0 l
1512.5 2622.5 l
1607.5 2635.0 l
1720.0 2645.0 l
1855.0 2657.5 l
2022.5 2670.0 l
2200.0 2682.5 l
2370.0 2692.5 l
2517.5 2705.0 l
2620.0 2717.5 l
2697.5 2727.5 l
2762.5 2740.0 l
2812.5 2750.0 l
2857.5 2762.5 l
2900.0 2772.5 l
2935.0 2785.0 l
2967.5 2795.0 l
2997.5 2807.5 l
3027.5 2817.5 l
3055.0 2827.5 l
3080.0 2840.0 l
3105.0 2850.0 l
3127.5 2860.0 l
3152.5 2872.5 l
3175.0 2882.5 l
3200.0 2892.5 l
3227.5 2902.5 l
3255.0 2915.0 l
3287.5 2925.0 l
3320.0 2935.0 l
3352.5 2945.0 l
3382.5 2955.0 l
3410.0 2965.0 l
3432.5 2975.0 l
3455.0 2985.0 l
3475.0 2995.0 l
3495.0 3005.0 l
3515.0 3015.0 l
3532.5 3025.0 l
3550.0 3035.0 l
3565.0 3045.0 l
3582.5 3055.0 l
3597.5 3062.5 l
3612.5 3072.5 l
3627.5 3082.5 l
3640.0 3092.5 l
3655.0 3102.5 l
3667.5 3110.0 l
3682.5 3120.0 l
3695.0 3130.0 l
3707.5 3140.0 l
3720.0 3147.5 l
3732.5 3157.5 l
3745.0 3167.5 l
3757.5 3175.0 l
3770.0 3185.0 l
3782.5 3192.5 l
3792.5 3202.5 l
3805.0 3212.5 l
3815.0 3220.0 l
3827.5 3230.0 l
3837.5 3237.5 l
3847.5 3247.5 l
3860.0 3255.0 l
3870.0 3265.0 l
3880.0 3272.5 l
3892.5 3282.5 l
3902.5 3290.0 l
3912.5 3297.5 l
3922.5 3307.5 l
3932.5 3315.0 l
3942.5 3322.5 l
3952.5 3332.5 l
3962.5 3340.0 l
3970.0 3347.5 l
3980.0 3357.5 l
3990.0 3365.0 l
4000.0 3372.5 l
4010.0 3382.5 l
4017.5 3390.0 l
4027.5 3397.5 l
4037.5 3405.0 l
4045.0 3412.5 l
4055.0 3422.5 l
4065.0 3430.0 l
4072.5 3437.5 l
4082.5 3445.0 l
4090.0 3452.5 l
4100.0 3460.0 l
4107.5 3470.0 l
4115.0 3477.5 l
4125.0 3485.0 l
4132.5 3492.5 l
4140.0 3500.0 l
4150.0 3507.5 l
4157.5 3515.0 l
4165.0 3522.5 l
4175.0 3530.0 l
[/DeviceGray] cs 0.0 sc
S
n
4175.0 3530.0 m
4182.5 3537.5 l
4190.0 3545.0 l
4197.5 3552.5 l
4207.5 3560.0 l
4215.0 3567.5 l
4222.5 3575.0 l
4230.0 3582.5 l
4237.5 3590.0 l
4245.0 3597.5 l
4252.5 3602.5 l
4260.0 3610.0 l
4267.5 3617.5 l
4275.0 3625.0 l
4282.5 3632.5 l
4290.0 3640.0 l
4297.5 3647.5 l
4305.0 3652.5 l
4312.5 3660.0 l
4320.0 3667.5 l
4327.5 3675.0 l
4335.0 3682.5 l
4342.5 3687.5 l
4347.5 3695.0 l
4355.0 3702.5 l
4362.5 3710.0 l
4370.0 3715.0 l
4377.5 3722.5 l
4382.5 3730.0 l
4390.0 3735.0 l
4397.5 3742.5 l
4405.0 3750.0 l
4410.0 3755.0 l
4417.5 3762.5 l
4425.0 3770.0 l
4430.0 3775.0 l
4437.5 3782.5 l
4445.0 3790.0 l
4450.0 3795.0 l
4457.5 3802.5 l
4462.5 3807.5 l
4470.0 3815.0 l
4475.0 3822.5 l
4482.5 3827.5 l
4490.0 3835.0 l
4495.0 3840.0 l
4502.5 3847.5 l
4507.5 3852.5 l
4512.5 3860.0 l
4520.0 3865.0 l
4525.0 3872.5 l
4532.5 3877.5 l
4537.5 3885.0 l
4545.0 3890.0 l
4550.0 3897.5 l
4557.5 3902.5 l
4562.5 3910.0 l
4567.5 3915.0 l
4575.0 3922.5 l
4580.0 3927.5 l
4585.0 3935.0 l
4592.5 3940.0 l
4597.5 3945.0 l
4602.5 3952.5 l
4610.0 3957.5 l
4615.0 3965.0 l
4620.0 3970.0 l
4625.0 3975.0 l
4632.5 3982.5 l
4637.5 3987.5 l
4642.5 3995.0 l
4647.5 4000.0 l
4655.0 4005.0 l
4660.0 4012.5 l
4665.0 4017.5 l
4670.0 4022.5 l
4675.0 4030.0 l
4680.0 4035.0 l
4687.5 4040.0 l
4692.5 4045.0 l
4697.5 4052.5 l
4702.5 4057.5 l
4707.5 4062.5 l
4712.5 4070.0 l
4717.5 4075.0 l
4722.5 4080.0 l
4730.0 4085.0 l
4735.0 4092.5 l
4740.0 4097.5 l
4745.0 4102.5 l
4750.0 4107.5 l
4755.0 4112.5 l
4760.0 4120.0 l
4765.0 4125.0 l
4770.0 4130.0 l
4775.0 4135.0 l
4780.0 4140.0 l
4785.0 4147.5 l
4790.0 4152.5 l
4797.5 4157.5 l
4802.5 4162.5 l
4810.0 4167.5 l
4815.0 4172.5 l
4822.5 4177.5 l
4830.0 4185.0 l
4837.5 4190.0 l
4842.5 4195.0 l
4850.0 4200.0 l
4857.5 4205.0 l
4865.0 4210.0 l
4870.0 4215.0 l
4877.5 4220.0 l
4885.0 4225.0 l
4892.5 4230.0 l
4897.5 4237.5 l
4905.0 4242.5 l
4912.5 4247.5 l
4917.5 4252.5 l
4925.0 4257.5 l
4932.5 4262.5 l
4937.5 4267.5 l
4945.0 4272.5 l
4950.0 4277.5 l
4957.5 4282.5 l
4962.5 4287.5 l
4970.0 4292.5 l
4977.5 4297.5 l
4982.5 4302.5 l
4987.5 4307.5 l
4995.0 4312.5 l
5000.0 4317.5 l
5007.5 4322.5 l
5012.5 4327.5 l
5020.0 4332.5 l
5025.0 4337.5 l
5030.0 4342.5 l
5037.5 4347.5 l
5042.5 4352.5 l
5047.5 4357.5 l
5052.5 4362.5 l
5060.0 4365.0 l
5065.0 4370.0 l
5070.0 4375.0 l
5075.0 4380.0 l
5082.5 4385.0 l
5087.5 4390.0 l
5092.5 4395.0 l
5097.5 4400.0 l
5102.5 4405.0 l
5107.5 4410.0 l
5112.5 4415.0 l
5117.5 4417.5 l
5125.0 4422.5 l
5130.0 4427.5 l
5135.0 4432.5 l
5140.0 4437.5 l
5145.0 4442.5 l
5150.0 4447.5 l
5155.0 4450.0 l
5160.0 4455.0 l
5165.0 4460.0 l
5167.5 4465.0 l
5172.5 4470.0 l
5177.5 4475.0 l
5182.5 4477.5 l
5187.5 4482.5 l
5192.5 4487.5 l
5197.5 4492.5 l
5202.5 4497.5 l
5205.0 4502.5 l
5210.0 4505.0 l
5215.0 4510.0 l
5220.0 4515.0 l
5225.0 4520.0 l
5227.5 4522.5 l
5232.5 4527.5 l
5237.5 4532.5 l
5242.5 4537.5 l
5245.0 4542.5 l
5250.0 4545.0 l
5255.0 4550.0 l
5260.0 4555.0 l
5262.5 4560.0 l
5267.5 4562.5 l
5272.5 4567.5 l
5275.0 4572.5 l
5280.0 4577.5 l
5285.0 4580.0 l
5287.5 4585.0 l
5292.5 4590.0 l
5295.0 4592.5 l
5300.0 4597.5 l
5305.0 4602.5 l
5307.5 4607.5 l
5312.5 4610.0 l
5315.0 4615.0 l
5320.0 4620.0 l
5322.5 4622.5 l
5327.5 4627.5 l
5332.5 4632.5 l
5335.0 4635.0 l
5340.0 4640.0 l
5342.5 4645.0 l
5347.5 4647.5 l
S
n
1630.0 467.5 m
1627.5 505.0 l
1627.5 542.5 l
1625.0 577.5 l
1622.5 615.0 l
1620.0 647.5 l
1620.0 682.5 l
1617.5 715.0 l
1615.0 750.0 l
1615.0 782.5 l
1612.5 812.5 l
1610.0 845.0 l
1610.0 875.0 l
1607.5 905.0 l
1607.5 935.0 l
1605.0 965.0 l
1605.0 992.5 l
1602.5 1022.5 l
1602.5 1050.0 l
1600.0 1077.5 l
1600.0 1105.0 l
1597.5 1132.5 l
1597.5 1185.0 l
1595.0 1210.0 l
1595.0 1235.0 l
1592.5 1260.0 l
1592.5 1310.0 l
1590.0 1335.0 l
1590.0 1382.5 l
1587.5 1405.0 l
1587.5 1472.5 l
1585.0 1495.0 l
1585.0 1602.5 l
1582.5 1622.5 l
1582.5 1722.5 l
1585.0 1742.5 l
1585.0 1800.0 l
1587.5 1817.5 l
1587.5 1835.0 l
1590.0 1855.0 l
1592.5 1872.5 l
1595.0 1890.0 l
1597.5 1907.5 l
1600.0 1925.0 l
1602.5 1942.5 l
1605.0 1960.0 l
1610.0 1977.5 l
1615.0 1995.0 l
1620.0 2012.5 l
1625.0 2027.5 l
1632.5 2045.0 l
1637.5 2060.0 l
1645.0 2077.5 l
1655.0 2092.5 l
1662.5 2110.0 l
1672.5 2125.0 l
1682.5 2140.0 l
1695.0 2157.5 l
1707.5 2172.5 l
1720.0 2187.5 l
1732.5 2202.5 l
1747.5 2217.5 l
1762.5 2232.5 l
1780.0 2247.5 l
1797.5 2262.5 l
1817.5 2277.5 l
1837.5 2292.5 l
1857.5 2305.0 l
1880.0 2320.0 l
1902.5 2335.0 l
1927.5 2347.5 l
1952.5 2362.5 l
1980.0 2375.0 l
2007.5 2390.0 l
2037.5 2402.5 l
2067.5 2417.5 l
2100.0 2430.0 l
2132.5 2445.0 l
2167.5 2457.5 l
2205.0 2470.0 l
2242.5 2482.5 l
2282.5 2497.5 l
2325.0 2510.0 l
2370.0 2522.5 l
2415.0 2535.0 l
2467.5 2547.5 l
2517.5 2560.0 l
2575.0 2572.5 l
2635.0 2585.0 l
2705.0 2597.5 l
2777.5 2610.0 l
2860.0 2622.5 l
2955.0 2635.0 l
3067.5 2645.0 l
3202.5 2657.5 l
3370.0 2670.0 l
3545.0 2682.5 l
3715.0 2692.5 l
3860.0 2705.0 l
3965.0 2717.5 l
4042.5 2727.5 l
4102.5 2740.0 l
4155.0 2750.0 l
4200.0 2762.5 l
4240.0 2772.5 l
4275.0 2785.0 l
4307.5 2795.0 l
4337.5 2807.5 l
4365.0 2817.5 l
4390.0 2827.5 l
4415.0 2840.0 l
4440.0 2850.0 l
4465.0 2860.0 l
4487.5 2872.5 l
4510.0 2882.5 l
4535.0 2892.5 l
4560.0 2902.5 l
4587.5 2915.0 l
4617.5 2925.0 l
4650.0 2935.0 l
4682.5 2945.0 l
4712.5 2955.0 l
4737.5 2965.0 l
4760.0 2975.0 l
4782.5 2985.0 l
4802.5 2995.0 l
4822.5 3005.0 l
4840.0 3015.0 l
4857.5 3025.0 l
4875.0 3035.0 l
4890.0 3045.0 l
4905.0 3055.0 l
4920.0 3062.5 l
4935.0 3072.5 l
4947.5 3082.5 l
4962.5 3092.5 l
4975.0 3102.5 l
4990.0 3110.0 l
5002.5 3120.0 l
5015.0 3130.0 l
5027.5 3140.0 l
5040.0 3147.5 l
5050.0 3157.5 l
5062.5 3167.5 l
5075.0 3175.0 l
5085.0 3185.0 l
5097.5 3192.5 l
5107.5 3202.5 l
5117.5 3212.5 l
5130.0 3220.0 l
5140.0 3230.0 l
5150.0 3237.5 l
5160.0 3247.5 l
5170.0 3255.0 l
5182.5 3265.0 l
5192.5 3272.5 l
5200.0 3282.5 l
5210.0 3290.0 l
5220.0 3297.5 l
5230.0 3307.5 l
5240.0 3315.0 l
5250.0 3322.5 l
5257.5 3332.5 l
5267.5 3340.0 l
5277.5 3347.5 l
5287.5 3357.5 l
5295.0 3365.0 l
5305.0 3372.5 l
5312.5 3382.5 l
5322.5 3390.0 l
5330.0 3397.5 l
5340.0 3405.0 l
5347.5 3412.5 l
5357.5 3422.5 l
5365.0 3430.0 l
5375.0 3437.5 l
5382.5 3445.0 l
5390.0 3452.5 l
5397.5 3460.0 l
5407.5 3470.0 l
5415.0 3477.5 l
5422.5 3485.0 l
5430.0 3492.5 l
5440.0 3500.0 l
5447.5 3507.5 l
5455.0 3515.0 l
5462.5 3522.5 l
5470.0 3530.0 l
S
n
1995.0 467.5 m
1995.0 505.0 l
1997.5 542.5 l
1997.5 615.0 l
2000.0 647.5 l
2000.0 715.0 l
2002.5 750.0 l
2002.5 812.5 l
2005.0 845.0 l
2005.0 905.0 l
2007.5 935.0 l
2007.5 992.5 l
2010.0 1022.5 l
2010.0 1077.5 l
2012.5 1105.0 l
2012.5 1157.5 l
2015.0 1185.0 l
2015.0 1235.0 l
2017.5 1260.0 l
2017.5 1310.0 l
2020.0 1335.0 l
2020.0 1382.5 l
2022.5 1405.0 l
2022.5 1450.0 l
2025.0 1472.5 l
2025.0 1495.0 l
2027.5 1517.5 l
2027.5 1560.0 l
2030.0 1580.0 l
2030.0 1602.5 l
2032.5 1622.5 l
2032.5 1642.5 l
2035.0 1662.5 l
2035.0 1682.5 l
2037.5 1702.5 l
2037.5 1722.5 l
2040.0 1742.5 l
2042.5 1760.0 l
2042.5 1780.0 l
2045.0 1800.0 l
2047.5 1817.5 l
2050.0 1835.0 l
2052.5 1855.0 l
2055.0 1872.5 l
2060.0 1890.0 l
2062.5 1907.5 l
2067.5 1925.0 l
2072.5 1942.5 l
2075.0 1960.0 l
2082.5 1977.5 l
2087.5 1995.0 l
2092.5 2012.5 l
2100.0 2027.5 l
2107.5 2045.0 l
2115.0 2060.0 l
2122.5 2077.5 l
2132.5 2092.5 l
2142.5 2110.0 l
2152.5 2125.0 l
2165.0 2140.0 l
2177.5 2157.5 l
2190.0 2172.5 l
2202.5 2187.5 l
2217.5 2202.5 l
2235.0 2217.5 l
2250.0 2232.5 l
2267.5 2247.5 l
2287.5 2262.5 l
2307.5 2277.5 l
2327.5 2292.5 l
2350.0 2305.0 l
2372.5 2320.0 l
2395.0 2335.0 l
2422.5 2347.5 l
2447.5 2362.5 l
2475.0 2375.0 l
2505.0 2390.0 l
2535.0 2402.5 l
2565.0 2417.5 l
2597.5 2430.0 l
2632.5 2445.0 l
2667.5 2457.5 l
2705.0 2470.0 l
2745.0 2482.5 l
2785.0 2497.5 l
2830.0 2510.0 l
2875.0 2522.5 l
2922.5 2535.0 l
2972.5 2547.5 l
3025.0 2560.0 l
3085.0 2572.5 l
3145.0 2585.0 l
3212.5 2597.5 l
3287.5 2610.0 l
3370.0 2622.5 l
3465.0 2635.0 l
3577.5 2645.0 l
3715.0 2657.5 l
3882.5 2670.0 l
4060.0 2682.5 l
4230.0 2692.5 l
4375.0 2705.0 l
4480.0 2717.5 l
4557.5 2727.5 l
4620.0 2740.0 l
4672.5 2750.0 l
4717.5 2762.5 l
4757.5 2772.5 l
4795.0 2785.0 l
4827.5 2795.0 l
4857.5 2807.5 l
4887.5 2817.5 l
4915.0 2827.5 l
4940.0 2840.0 l
4965.0 2850.0 l
4987.5 2860.0 l
5012.5 2872.5 l
5035.0 2882.5 l
5060.0 2892.5 l
5087.5 2902.5 l
5115.0 2915.0 l
5147.5 2925.0 l
5180.0 2935.0 l
5212.5 2945.0 l
5242.5 2955.0 l
5270.0 2965.0 l
5292.5 2975.0 l
5315.0 2985.0 l
5335.0 2995.0 l
5355.0 3005.0 l
5375.0 3015.0 l
5392.5 3025.0 l
5410.0 3035.0 l
5425.0 3045.0 l
5442.5 3055.0 l
5457.5 3062.5 l
5472.5 3072.5 l
5487.5 3082.5 l
5502.5 3092.5 l
5515.0 3102.5 l
5530.0 3110.0 l
5542.5 3120.0 l
5555.0 3130.0 l
5567.5 3140.0 l
5580.0 3147.5 l
5595.0 3157.5 l
5605.0 3167.5 l
5617.5 3175.0 l
5630.0 3185.0 l
5642.5 3192.5 l
5652.5 3202.5 l
5665.0 3212.5 l
5675.0 3220.0 l
5687.5 3230.0 l
5697.5 3237.5 l
5710.0 3247.5 l
5720.0 3255.0 l
5730.0 3265.0 l
5740.0 3272.5 l
5752.5 3282.5 l
5762.5 3290.0 l
5772.5 3297.5 l
5782.5 3307.5 l
5792.5 3315.0 l
5802.5 3322.5 l
5812.5 3332.5 l
5822.5 3340.0 l
5832.5 3347.5 l
5842.5 3357.5 l
5850.0 3365.0 l
5860.0 3372.5 l
5870.0 3382.5 l
5880.0 3390.0 l
5887.5 3397.5 l
5897.5 3405.0 l
5907.5 3412.5 l
5915.0 3422.5 l
5925.0 3430.0 l
5932.5 3437.5 l
5942.5 3445.0 l
5950.0 3452.5 l
5960.0 3460.0 l
5967.5 3470.0 l
5977.5 3477.5 l
5985.0 3485.0 l
5995.0 3492.5 l
6002.5 3500.0 l
6010.0 3507.5 l
6020.0 3515.0 l
6027.5 3522.5 l
6035.0 3530.0 l
S
n
4215.0 467.5 m
4215.0 3530.0 l
S
n
4215.0 3530.0 m
4215.0 3582.5 l
15112.5 3590.0 l
11382.5 3597.5 l
10517.5 3602.5 l
9982.5 3610.0 l
9590.0 3617.5 l
9277.5 3625.0 l
9015.0 3632.5 l
8792.5 3640.0 l
8592.5 3647.5 l
8417.5 3652.5 l
8257.5 3660.0 l
8112.5 3667.5 l
7977.5 3675.0 l
7852.5 3682.5 l
7737.5 3687.5 l
7627.5 3695.0 l
7525.0 3702.5 l
7427.5 3710.0 l
7337.5 3715.0 l
7250.0 3722.5 l
7167.5 3730.0 l
7087.5 3735.0 l
7010.0 3742.5 l
6937.5 3750.0 l
6867.5 3755.0 l
6800.0 3762.5 l
6732.5 3770.0 l
6670.0 3775.0 l
6607.5 3782.5 l
6550.0 3790.0 l
6490.0 3795.0 l
6435.0 3802.5 l
6380.0 3807.5 l
6325.0 3815.0 l
6272.5 3822.5 l
6222.5 3827.5 l
6172.5 3835.0 l
6122.5 3840.0 l
6075.0 3847.5 l
6027.5 3852.5 l
5982.5 3860.0 l
5937.5 3865.0 l
5892.5 3872.5 l
5847.5 3877.5 l
5805.0 3885.0 l
5760.0 3890.0 l
5720.0 3897.5 l
5677.5 3902.5 l
5635.0 3910.0 l
5595.0 3915.0 l
5555.0 3922.5 l
5515.0 3927.5 l
5475.0 3935.0 l
5435.0 3940.0 l
5395.0 3945.0 l
5357.5 3952.5 l
5317.5 3957.5 l
5280.0 3965.0 l
5242.5 3970.0 l
5202.5 3975.0 l
5165.0 3982.5 l
5127.5 3987.5 l
5090.0 3995.0 l
5050.0 4000.0 l
5012.5 4005.0 l
4975.0 4012.5 l
4937.5 4017.5 l
4897.5 4022.5 l
4860.0 4030.0 l
4820.0 4035.0 l
4782.5 4040.0 l
4742.5 4045.0 l
4702.5 4052.5 l
4662.5 4057.5 l
4620.0 4062.5 l
4580.0 4070.0 l
4537.5 4075.0 l
4495.0 4080.0 l
4450.0 4085.0 l
4405.0 4092.5 l
4357.5 4097.5 l
4310.0 4102.5 l
4260.0 4107.5 l
4207.5 4112.5 l
4150.0 4120.0 l
4090.0 4125.0 l
4025.0 4130.0 l
3952.5 4135.0 l
3835.0 4140.0 l
3682.5 4147.5 l
3507.5 4152.5 l
3315.0 4157.5 l
3120.0 4162.5 l
2927.5 4167.5 l
2750.0 4172.5 l
2595.0 4177.5 l
2470.0 4185.0 l
2367.5 4190.0 l
2277.5 4195.0 l
2200.0 4200.0 l
2130.0 4205.0 l
2067.5 4210.0 l
2012.5 4215.0 l
1960.0 4220.0 l
1915.0 4225.0 l
1872.5 4230.0 l
1832.5 4237.5 l
1795.0 4242.5 l
1760.0 4247.5 l
1730.0 4252.5 l
1700.0 4257.5 l
1670.0 4262.5 l
1645.0 4267.5 l
1620.0 4272.5 l
1597.5 4277.5 l
1575.0 4282.5 l
1552.5 4287.5 l
1532.5 4292.5 l
1515.0 4297.5 l
1495.0 4302.5 l
1480.0 4307.5 l
1462.5 4312.5 l
1447.5 4317.5 l
1432.5 4322.5 l
1417.5 4327.5 l
1405.0 4332.5 l
1390.0 4337.5 l
1377.5 4342.5 l
1367.5 4347.5 l
1355.0 4352.5 l
1345.0 4357.5 l
1332.5 4362.5 l
1322.5 4365.0 l
1312.5 4370.0 l
1302.5 4375.0 l
1295.0 4380.0 l
1285.0 4385.0 l
1277.5 4390.0 l
1270.0 4395.0 l
1260.0 4400.0 l
1252.5 4405.0 l
1245.0 4410.0 l
1240.0 4415.0 l
1232.5 4417.5 l
1225.0 4422.5 l
1220.0 4427.5 l
1212.5 4432.5 l
1207.5 4437.5 l
1200.0 4442.5 l
1195.0 4447.5 l
1190.0 4450.0 l
1185.0 4455.0 l
1180.0 4460.0 l
1175.0 4465.0 l
1170.0 4470.0 l
1165.0 4475.0 l
1162.5 4477.5 l
1157.5 4482.5 l
1152.5 4487.5 l
1150.0 4492.5 l
1145.0 4497.5 l
1142.5 4502.5 l
1137.5 4505.0 l
1135.0 4510.0 l
1130.0 4515.0 l
1127.5 4520.0 l
1125.0 4522.5 l
1122.5 4527.5 l
1117.5 4532.5 l
1115.0 4537.5 l
1112.5 4542.5 l
1110.0 4545.0 l
1107.5 4550.0 l
1105.0 4555.0 l
1102.5 4560.0 l
1100.0 4562.5 l
1097.5 4567.5 l
1095.0 4572.5 l
1092.5 4577.5 l
1090.0 4580.0 l
1090.0 4585.0 l
1087.5 4590.0 l
1085.0 4592.5 l
1082.5 4597.5 l
1082.5 4602.5 l
1080.0 4607.5 l
1077.5 4610.0 l
1077.5 4615.0 l
1075.0 4620.0 l
1072.5 4622.5 l
1072.5 4627.5 l
1070.0 4632.5 l
1070.0 4635.0 l
1067.5 4640.0 l
1067.5 4645.0 l
1065.0 4647.5 l
S
n
1065.0 4647.5 m
1065.0 4652.5 l
1062.5 4657.5 l
1062.5 4665.0 l
1060.0 4670.0 l
1060.0 4672.5 l
1057.5 4677.5 l
1057.5 4685.0 l
1055.0 4690.0 l
1055.0 4702.5 l
1052.5 4705.0 l
1052.5 4722.5 l
1050.0 4725.0 l
1050.0 4745.0 l
1047.5 4750.0 l
1047.5 4842.5 l
1050.0 4845.0 l
1050.0 4872.5 l
1052.5 4875.0 l
1052.5 4895.0 l
1055.0 4897.5 l
1055.0 4915.0 l
1057.5 4920.0 l
1057.5 4930.0 l
1060.0 4932.5 l
1060.0 4945.0 l
1062.5 4947.5 l
1062.5 4957.5 l
1065.0 4962.5 l
1065.0 4972.5 l
1067.5 4975.0 l
1067.5 4982.5 l
1070.0 4987.5 l
1070.0 4997.5 l
1072.5 5000.0 l
1072.5 5007.5 l
1075.0 5010.0 l
1075.0 5017.5 l
1077.5 5020.0 l
1077.5 5027.5 l
1080.0 5032.5 l
1080.0 5037.5 l
1082.5 5042.5 l
1082.5 5047.5 l
1085.0 5052.5 l
1085.0 5057.5 l
1087.5 5062.5 l
1087.5 5067.5 l
1090.0 5072.5 l
1090.0 5077.5 l
1092.5 5082.5 l
1092.5 5085.0 l
1095.0 5087.5 l
1095.0 5095.0 l
1097.5 5097.5 l
1097.5 5102.5 l
1100.0 5105.0 l
1100.0 5110.0 l
1102.5 5115.0 l
1102.5 5117.5 l
1105.0 5120.0 l
1105.0 5127.5 l
1107.5 5130.0 l
1107.5 5135.0 l
1110.0 5137.5 l
1110.0 5142.5 l
1112.5 5147.5 l
1112.5 5150.0 l
1115.0 5152.5 l
1115.0 5160.0 l
1117.5 5162.5 l
1117.5 5165.0 l
1120.0 5170.0 l
1120.0 5172.5 l
1122.5 5175.0 l
1122.5 5177.5 l
1125.0 5182.5 l
1125.0 5187.5 l
1127.5 5190.0 l
1127.5 5195.0 l
1130.0 5197.5 l
1130.0 5200.0 l
1132.5 5202.5 l
1132.5 5210.0 l
1135.0 5212.5 l
1135.0 5215.0 l
1137.5 5220.0 l
1137.5 5222.5 l
1140.0 5225.0 l
1140.0 5227.5 l
1142.5 5230.0 l
1142.5 5235.0 l
1145.0 5237.5 l
1145.0 5242.5 l
1147.5 5247.5 l
1147.5 5250.0 l
1150.0 5252.5 l
1150.0 5255.0 l
1152.5 5257.5 l
1152.5 5262.5 l
1155.0 5265.0 l
1155.0 5267.5 l
1157.5 5270.0 l
1157.5 5272.5 l
1160.0 5277.5 l
1160.0 5280.0 l
1162.5 5282.5 l
1162.5 5285.0 l
1165.0 5287.5 l
1165.0 5290.0 l
1167.5 5295.0 l
1167.5 5300.0 l
1170.0 5302.5 l
1170.0 5305.0 l
1172.5 5310.0 l
1172.5 5312.5 l
1175.0 5315.0 l
1175.0 5317.5 l
1177.5 5320.0 l
1177.5 5322.5 l
1180.0 5327.5 l
1180.0 5330.0 l
1182.5 5332.5 l
1182.5 5335.0 l
1185.0 5337.5 l
1185.0 5340.0 l
1187.5 5345.0 l
1187.5 5347.5 l
S
n
1187.5 5347.5 m
1190.0 5350.0 l
1190.0 5352.5 l
1192.5 5355.0 l
1192.5 5357.5 l
1195.0 5360.0 l
1195.0 5365.0 l
1197.5 5367.5 l
1197.5 5370.0 l
1200.0 5372.5 l
1200.0 5375.0 l
1202.5 5377.5 l
1205.0 5380.0 l
1205.0 5382.5 l
1207.5 5387.5 l
1207.5 5390.0 l
1210.0 5392.5 l
1210.0 5395.0 l
1212.5 5397.5 l
1212.5 5400.0 l
1215.0 5402.5 l
1215.0 5405.0 l
1217.5 5410.0 l
1217.5 5412.5 l
1220.0 5415.0 l
1220.0 5417.5 l
1222.5 5420.0 l
1222.5 5422.5 l
1225.0 5425.0 l
1225.0 5427.5 l
1227.5 5430.0 l
1227.5 5435.0 l
1230.0 5437.5 l
1230.0 5440.0 l
1232.5 5442.5 l
1232.5 5445.0 l
1235.0 5447.5 l
1235.0 5450.0 l
1237.5 5452.5 l
1237.5 5455.0 l
1240.0 5457.5 l
1242.5 5460.0 l
1242.5 5465.0 l
1245.0 5467.5 l
1245.0 5470.0 l
1247.5 5472.5 l
1247.5 5475.0 l
1250.0 5477.5 l
1250.0 5480.0 l
1252.5 5482.5 l
1252.5 5485.0 l
1255.0 5487.5 l
1257.5 5490.0 l
1257.5 5492.5 l
1260.0 5495.0 l
1260.0 5497.5 l
1262.5 5502.5 l
1262.5 5505.0 l
1265.0 5507.5 l
1265.0 5510.0 l
1267.5 5512.5 l
1267.5 5515.0 l
1270.0 5517.5 l
1270.0 5520.0 l
1272.5 5522.5 l
1275.0 5525.0 l
1275.0 5527.5 l
1277.5 5530.0 l
1277.5 5532.5 l
1280.0 5535.0 l
1280.0 5537.5 l
1282.5 5540.0 l
1282.5 5542.5 l
1285.0 5545.0 l
1285.0 5547.5 l
1287.5 5550.0 l
1290.0 5552.5 l
1290.0 5555.0 l
1292.5 5560.0 l
1292.5 5562.5 l
1295.0 5565.0 l
1295.0 5567.5 l
1297.5 5570.0 l
1300.0 5572.5 l
1300.0 5577.5 l
1302.5 5580.0 l
1305.0 5582.5 l
1305.0 5585.0 l
1307.5 5587.5 l
1307.5 5590.0 l
1310.0 5592.5 l
1310.0 5595.0 l
1312.5 5597.5 l
1315.0 5600.0 l
1315.0 5602.5 l
1317.5 5605.0 l
1317.5 5607.5 l
1320.0 5610.0 l
1320.0 5612.5 l
1322.5 5615.0 l
1325.0 5617.5 l
1325.0 5620.0 l
1327.5 5622.5 l
1327.5 5625.0 l
1330.0 5627.5 l
1330.0 5630.0 l
1332.5 5632.5 l
1332.5 5635.0 l
1335.0 5637.5 l
1335.0 5640.0 l
1337.5 5642.5 l
1340.0 5645.0 l
1340.0 5647.5 l
1342.5 5650.0 l
1342.5 5652.5 l
1345.0 5655.0 l
1347.5 5657.5 l
1347.5 5660.0 l
1350.0 5662.5 l
1350.0 5665.0 l
1352.5 5667.5 l
1355.0 5670.0 l
1355.0 5672.5 l
1357.5 5675.0 l
1360.0 5677.5 l
1360.0 5680.0 l
1362.5 5682.5 l
1362.5 5685.0 l
1365.0 5687.5 l
1365.0 5690.0 l
1367.5 5692.5 l
1370.0 5695.0 l
1370.0 5697.5 l
1372.5 5700.0 l
1372.5 5702.5 l
1375.0 5705.0 l
1375.0 5707.5 l
1377.5 5710.0 l
1380.0 5712.5 l
1380.0 5715.0 l
1382.5 5717.5 l
1382.5 5720.0 l
1385.0 5722.5 l
1387.5 5722.5 l
1387.5 5725.0 l
1390.0 5727.5 l
1390.0 5730.0 l
1392.5 5732.5 l
1392.5 5735.0 l
1395.0 5737.5 l
1397.5 5740.0 l
1397.5 5742.5 l
1400.0 5745.0 l
1400.0 5747.5 l
1402.5 5750.0 l
1402.5 5752.5 l
1405.0 5755.0 l
1407.5 5757.5 l
1410.0 5760.0 l
1410.0 5762.5 l
1412.5 5765.0 l
1412.5 5767.5 l
1415.0 5770.0 l
1417.5 5772.5 l
1417.5 5775.0 l
1420.0 5777.5 l
1420.0 5780.0 l
1422.5 5782.5 l
1425.0 5785.0 l
1425.0 5787.5 l
1427.5 5787.5 l
1427.5 5790.0 l
1430.0 5792.5 l
1430.0 5795.0 l
1432.5 5797.5 l
1435.0 5800.0 l
1435.0 5802.5 l
1437.5 5805.0 l
1440.0 5807.5 l
1440.0 5810.0 l
1442.5 5812.5 l
1445.0 5815.0 l
1445.0 5817.5 l
1447.5 5820.0 l
1450.0 5822.5 l
1450.0 5825.0 l
1452.5 5827.5 l
1452.5 5830.0 l
1455.0 5832.5 l
1457.5 5835.0 l
1460.0 5837.5 l
1460.0 5840.0 l
1462.5 5842.5 l
1462.5 5845.0 l
1465.0 5847.5 l
1467.5 5850.0 l
1467.5 5852.5 l
1470.0 5852.5 l
1470.0 5855.0 l
S
n
1470.0 5855.0 m
1472.5 5857.5 l
1475.0 5860.0 l
1475.0 5862.5 l
1477.5 5865.0 l
1477.5 5867.5 l
1480.0 5870.0 l
1482.5 5870.0 l
1482.5 5872.5 l
1485.0 5875.0 l
1485.0 5877.5 l
1487.5 5880.0 l
1487.5 5882.5 l
1490.0 5885.0 l
1492.5 5887.5 l
1495.0 5890.0 l
1495.0 5892.5 l
1497.5 5895.0 l
1500.0 5897.5 l
1500.0 5900.0 l
1502.5 5902.5 l
1505.0 5905.0 l
1507.5 5907.5 l
1507.5 5910.0 l
1510.0 5912.5 l
1510.0 5915.0 l
1512.5 5917.5 l
1515.0 5917.5 l
1515.0 5920.0 l
1517.5 5922.5 l
1517.5 5925.0 l
1520.0 5927.5 l
1522.5 5930.0 l
1525.0 5932.5 l
1525.0 5935.0 l
1527.5 5937.5 l
1530.0 5940.0 l
1530.0 5942.5 l
1532.5 5945.0 l
1535.0 5947.5 l
1537.5 5950.0 l
1537.5 5952.5 l
1540.0 5955.0 l
1540.0 5957.5 l
1542.5 5957.5 l
1545.0 5960.0 l
1545.0 5962.5 l
1547.5 5965.0 l
1550.0 5967.5 l
1550.0 5970.0 l
1552.5 5970.0 l
1552.5 5972.5 l
1555.0 5975.0 l
1557.5 5977.5 l
1557.5 5980.0 l
1560.0 5980.0 l
1560.0 5982.5 l
1562.5 5985.0 l
1565.0 5987.5 l
1565.0 5990.0 l
1567.5 5992.5 l
1570.0 5995.0 l
1572.5 5997.5 l
1572.5 6000.0 l
1575.0 6002.5 l
1577.5 6005.0 l
1580.0 6007.5 l
1580.0 6010.0 l
1582.5 6012.5 l
1582.5 6015.0 l
1585.0 6015.0 l
1587.5 6017.5 l
1587.5 6020.0 l
1590.0 6022.5 l
1592.5 6025.0 l
1595.0 6027.5 l
1595.0 6030.0 l
1597.5 6032.5 l
1600.0 6035.0 l
1602.5 6037.5 l
1602.5 6040.0 l
1605.0 6042.5 l
1607.5 6045.0 l
1610.0 6047.5 l
1612.5 6050.0 l
1612.5 6052.5 l
1615.0 6055.0 l
1617.5 6057.5 l
1620.0 6060.0 l
1620.0 6062.5 l
1622.5 6062.5 l
1622.5 6065.0 l
1625.0 6067.5 l
1627.5 6070.0 l
1627.5 6072.5 l
1630.0 6072.5 l
1632.5 6075.0 l
1632.5 6077.5 l
1635.0 6080.0 l
1635.0 6082.5 l
1637.5 6082.5 l
1640.0 6085.0 l
1640.0 6087.5 l
1642.5 6090.0 l
1645.0 6090.0 l
1645.0 6092.5 l
1647.5 6095.0 l
1647.5 6097.5 l
1650.0 6100.0 l
1652.5 6100.0 l
1652.5 6102.5 l
1655.0 6105.0 l
1655.0 6107.5 l
1657.5 6107.5 l
1660.0 6110.0 l
1660.0 6112.5 l
1662.5 6115.0 l
1665.0 6115.0 l
1665.0 6117.5 l
1667.5 6120.0 l
1667.5 6122.5 l
1670.0 6125.0 l
1672.5 6125.0 l
1672.5 6127.5 l
1675.0 6130.0 l
1677.5 6132.5 l
1680.0 6135.0 l
1682.5 6137.5 l
1682.5 6140.0 l
S
[30.0 30.0 ] 0.0 d
n
2467.5 467.5 m
2450.0 505.0 l
2435.0 542.5 l
2420.0 577.5 l
2405.0 615.0 l
2387.5 647.5 l
2372.5 682.5 l
2357.5 715.0 l
2342.5 750.0 l
2325.0 782.5 l
2310.0 812.5 l
2295.0 845.0 l
2280.0 875.0 l
2262.5 905.0 l
2247.5 935.0 l
2232.5 965.0 l
2217.5 992.5 l
2202.5 1022.5 l
2187.5 1050.0 l
2172.5 1077.5 l
2157.5 1105.0 l
2142.5 1132.5 l
2127.5 1157.5 l
2112.5 1185.0 l
2097.5 1210.0 l
2085.0 1235.0 l
2070.0 1260.0 l
2055.0 1285.0 l
2042.5 1310.0 l
2027.5 1335.0 l
2015.0 1357.5 l
2000.0 1382.5 l
1987.5 1405.0 l
1975.0 1427.5 l
1962.5 1450.0 l
1947.5 1472.5 l
1935.0 1495.0 l
1922.5 1517.5 l
1910.0 1537.5 l
1897.5 1560.0 l
1885.0 1580.0 l
1872.5 1602.5 l
1860.0 1622.5 l
1850.0 1642.5 l
1837.5 1662.5 l
1825.0 1682.5 l
1815.0 1702.5 l
1805.0 1722.5 l
1792.5 1742.5 l
1782.5 1760.0 l
1772.5 1780.0 l
1762.5 1800.0 l
1752.5 1817.5 l
1742.5 1835.0 l
1735.0 1855.0 l
1725.0 1872.5 l
1717.5 1890.0 l
1710.0 1907.5 l
1702.5 1925.0 l
1695.0 1942.5 l
1687.5 1960.0 l
1682.5 1977.5 l
1675.0 1995.0 l
1672.5 2012.5 l
1667.5 2027.5 l
1662.5 2045.0 l
1660.0 2060.0 l
1657.5 2077.5 l
1657.5 2092.5 l
1655.0 2110.0 l
1655.0 2125.0 l
1657.5 2140.0 l
1660.0 2157.5 l
1662.5 2172.5 l
1665.0 2187.5 l
1670.0 2202.5 l
1675.0 2217.5 l
1682.5 2232.5 l
1690.0 2247.5 l
1700.0 2262.5 l
1707.5 2277.5 l
1720.0 2292.5 l
1732.5 2305.0 l
1745.0 2320.0 l
1760.0 2335.0 l
1775.0 2347.5 l
1792.5 2362.5 l
1810.0 2375.0 l
1830.0 2390.0 l
1850.0 2402.5 l
1872.5 2417.5 l
1897.5 2430.0 l
1922.5 2445.0 l
1950.0 2457.5 l
1977.5 2470.0 l
2007.5 2482.5 l
2040.0 2497.5 l
2072.5 2510.0 l
2110.0 2522.5 l
2147.5 2535.0 l
2190.0 2547.5 l
2235.0 2560.0 l
2285.0 2572.5 l
2337.5 2585.0 l
2397.5 2597.5 l
2462.5 2610.0 l
2537.5 2622.5 l
2625.0 2635.0 l
2730.0 2645.0 l
2857.5 2657.5 l
3017.5 2670.0 l
3187.5 2682.5 l
3350.0 2692.5 l
3485.0 2705.0 l
3582.5 2717.5 l
3652.5 2727.5 l
3707.5 2740.0 l
3750.0 2750.0 l
3787.5 2762.5 l
3820.0 2772.5 l
3850.0 2785.0 l
3875.0 2795.0 l
3897.5 2807.5 l
3917.5 2817.5 l
3937.5 2827.5 l
3955.0 2840.0 l
3972.5 2850.0 l
3987.5 2860.0 l
4005.0 2872.5 l
4020.0 2882.5 l
4037.5 2892.5 l
4057.5 2902.5 l
4077.5 2915.0 l
4102.5 2925.0 l
4127.5 2935.0 l
4152.5 2945.0 l
4175.0 2955.0 l
4195.0 2965.0 l
4210.0 2975.0 l
4225.0 2985.0 l
4237.5 2995.0 l
4250.0 3005.0 l
4262.5 3015.0 l
4272.5 3025.0 l
4282.5 3035.0 l
4292.5 3045.0 l
4302.5 3055.0 l
4310.0 3062.5 l
4317.5 3072.5 l
4325.0 3082.5 l
4332.5 3092.5 l
4340.0 3102.5 l
4345.0 3110.0 l
4352.5 3120.0 l
4360.0 3130.0 l
4365.0 3140.0 l
4370.0 3147.5 l
4375.0 3157.5 l
4382.5 3167.5 l
4387.5 3175.0 l
4392.5 3185.0 l
4397.5 3192.5 l
4402.5 3202.5 l
4405.0 3212.5 l
4410.0 3220.0 l
4415.0 3230.0 l
4420.0 3237.5 l
4422.5 3247.5 l
4427.5 3255.0 l
4432.5 3265.0 l
4435.0 3272.5 l
4440.0 3282.5 l
4442.5 3290.0 l
4447.5 3297.5 l
4450.0 3307.5 l
4452.5 3315.0 l
4457.5 3322.5 l
4460.0 3332.5 l
4462.5 3340.0 l
4467.5 3347.5 l
4470.0 3357.5 l
4472.5 3365.0 l
4475.0 3372.5 l
4477.5 3382.5 l
4482.5 3390.0 l
4485.0 3397.5 l
4487.5 3405.0 l
4490.0 3412.5 l
4492.5 3422.5 l
4495.0 3430.0 l
4497.5 3437.5 l
4500.0 3445.0 l
4502.5 3452.5 l
4502.5 3460.0 l
4505.0 3470.0 l
4507.5 3477.5 l
4510.0 3485.0 l
4512.5 3492.5 l
4515.0 3500.0 l
4517.5 3507.5 l
4517.5 3515.0 l
4520.0 3522.5 l
4522.5 3530.0 l
S
n
4922.5 467.5 m
4897.5 505.0 l
4872.5 542.5 l
4845.0 577.5 l
4822.5 615.0 l
4797.5 647.5 l
4772.5 682.5 l
4750.0 715.0 l
4725.0 750.0 l
4702.5 782.5 l
4680.0 812.5 l
4657.5 845.0 l
4635.0 875.0 l
4615.0 905.0 l
4592.5 935.0 l
4572.5 965.0 l
4550.0 992.5 l
4530.0 1022.5 l
4510.0 1050.0 l
4490.0 1077.5 l
4470.0 1105.0 l
4450.0 1132.5 l
4430.0 1157.5 l
4412.5 1185.0 l
4392.5 1210.0 l
4375.0 1235.0 l
4355.0 1260.0 l
4337.5 1285.0 l
4320.0 1310.0 l
4300.0 1335.0 l
4282.5 1357.5 l
4265.0 1382.5 l
4247.5 1405.0 l
4230.0 1427.5 l
4212.5 1450.0 l
4197.5 1472.5 l
4180.0 1495.0 l
4162.5 1517.5 l
4145.0 1537.5 l
4130.0 1560.0 l
4112.5 1580.0 l
4097.5 1602.5 l
4080.0 1622.5 l
4065.0 1642.5 l
4047.5 1662.5 l
4032.5 1682.5 l
4017.5 1702.5 l
4002.5 1722.5 l
3987.5 1742.5 l
3972.5 1760.0 l
3957.5 1780.0 l
3945.0 1800.0 l
3930.0 1817.5 l
3915.0 1835.0 l
3902.5 1855.0 l
3890.0 1872.5 l
3875.0 1890.0 l
3862.5 1907.5 l
3852.5 1925.0 l
3840.0 1942.5 l
3827.5 1960.0 l
3817.5 1977.5 l
3807.5 1995.0 l
3797.5 2012.5 l
3787.5 2027.5 l
3777.5 2045.0 l
3770.0 2060.0 l
3762.5 2077.5 l
3755.0 2092.5 l
3750.0 2110.0 l
3745.0 2125.0 l
3740.0 2140.0 l
3735.0 2157.5 l
3732.5 2172.5 l
3730.0 2187.5 l
3727.5 2202.5 l
3727.5 2232.5 l
3730.0 2247.5 l
3730.0 2262.5 l
3735.0 2277.5 l
3737.5 2292.5 l
3742.5 2305.0 l
3747.5 2320.0 l
3755.0 2335.0 l
3762.5 2347.5 l
3772.5 2362.5 l
3782.5 2375.0 l
3792.5 2390.0 l
3805.0 2402.5 l
3817.5 2417.5 l
3832.5 2430.0 l
3847.5 2445.0 l
3865.0 2457.5 l
3882.5 2470.0 l
3900.0 2482.5 l
3920.0 2497.5 l
3942.5 2510.0 l
3967.5 2522.5 l
3992.5 2535.0 l
4020.0 2547.5 l
4050.0 2560.0 l
4085.0 2572.5 l
4117.5 2585.0 l
4160.0 2597.5 l
4205.0 2610.0 l
4257.5 2622.5 l
4317.5 2635.0 l
4392.5 2645.0 l
4482.5 2657.5 l
4590.0 2670.0 l
4665.0 2682.5 l
4830.0 2692.5 l
4970.0 2705.0 l
5070.0 2717.5 l
5142.5 2727.5 l
5202.5 2740.0 l
5250.0 2750.0 l
5290.0 2762.5 l
5327.5 2772.5 l
5357.5 2785.0 l
5387.5 2795.0 l
5415.0 2807.5 l
5440.0 2817.5 l
5462.5 2827.5 l
5485.0 2840.0 l
5507.5 2850.0 l
5527.5 2860.0 l
5547.5 2872.5 l
5570.0 2882.5 l
5590.0 2892.5 l
5615.0 2902.5 l
5640.0 2915.0 l
5670.0 2925.0 l
5700.0 2935.0 l
5730.0 2945.0 l
5757.5 2955.0 l
5780.0 2965.0 l
5802.5 2975.0 l
5822.5 2985.0 l
5840.0 2995.0 l
5857.5 3005.0 l
5875.0 3015.0 l
5890.0 3025.0 l
5905.0 3035.0 l
5920.0 3045.0 l
5935.0 3055.0 l
5950.0 3062.5 l
5962.5 3072.5 l
5975.0 3082.5 l
5987.5 3092.5 l
6000.0 3102.5 l
6012.5 3110.0 l
6025.0 3120.0 l
6035.0 3130.0 l
6047.5 3140.0 l
6060.0 3147.5 l
6070.0 3157.5 l
6082.5 3167.5 l
6092.5 3175.0 l
6102.5 3185.0 l
6112.5 3192.5 l
6125.0 3202.5 l
6135.0 3212.5 l
6145.0 3220.0 l
6155.0 3230.0 l
6165.0 3237.5 l
6175.0 3247.5 l
6185.0 3255.0 l
6195.0 3265.0 l
6205.0 3272.5 l
6215.0 3282.5 l
6222.5 3290.0 l
6232.5 3297.5 l
6242.5 3307.5 l
6252.5 3315.0 l
6262.5 3322.5 l
6270.0 3332.5 l
6280.0 3340.0 l
6290.0 3347.5 l
6297.5 3357.5 l
6307.5 3365.0 l
6315.0 3372.5 l
6325.0 3382.5 l
6332.5 3390.0 l
6342.5 3397.5 l
6350.0 3405.0 l
6360.0 3412.5 l
6367.5 3422.5 l
6377.5 3430.0 l
6385.0 3437.5 l
6395.0 3445.0 l
6402.5 3452.5 l
6410.0 3460.0 l
6420.0 3470.0 l
6427.5 3477.5 l
6435.0 3485.0 l
6445.0 3492.5 l
6452.5 3500.0 l
6460.0 3507.5 l
6467.5 3515.0 l
6477.5 3522.5 l
6485.0 3530.0 l
S
n
4215.0 467.5 m
4215.0 1602.5 l
10262.5 1622.5 l
8827.5 1642.5 l
8047.5 1662.5 l
7512.5 1682.5 l
7102.5 1702.5 l
6775.0 1722.5 l
6500.0 1742.5 l
6265.0 1760.0 l
6060.0 1780.0 l
5877.5 1800.0 l
5712.5 1817.5 l
5565.0 1835.0 l
5430.0 1855.0 l
5305.0 1872.5 l
5190.0 1890.0 l
5085.0 1907.5 l
4985.0 1925.0 l
4892.5 1942.5 l
4807.5 1960.0 l
4725.0 1977.5 l
4650.0 1995.0 l
4577.5 2012.5 l
4510.0 2027.5 l
4445.0 2045.0 l
4385.0 2060.0 l
4327.5 2077.5 l
4272.5 2092.5 l
4222.5 2110.0 l
4172.5 2125.0 l
4127.5 2140.0 l
4085.0 2157.5 l
4045.0 2172.5 l
4007.5 2187.5 l
3970.0 2202.5 l
3937.5 2217.5 l
3905.0 2232.5 l
3875.0 2247.5 l
3847.5 2262.5 l
3822.5 2277.5 l
3800.0 2292.5 l
3777.5 2305.0 l
3760.0 2320.0 l
3740.0 2335.0 l
3725.0 2347.5 l
3710.0 2362.5 l
3697.5 2375.0 l
3687.5 2390.0 l
3680.0 2402.5 l
3672.5 2417.5 l
3665.0 2430.0 l
3662.5 2445.0 l
3660.0 2457.5 l
3660.0 2482.5 l
3662.5 2497.5 l
3667.5 2510.0 l
3675.0 2522.5 l
3685.0 2535.0 l
3697.5 2547.5 l
3710.0 2560.0 l
3730.0 2572.5 l
3747.5 2585.0 l
3775.0 2597.5 l
3805.0 2610.0 l
3842.5 2622.5 l
3887.5 2635.0 l
3947.5 2645.0 l
4022.5 2657.5 l
4107.5 2670.0 l
4160.0 2682.5 l
4315.0 2692.5 l
4447.5 2705.0 l
4537.5 2717.5 l
4602.5 2727.5 l
4652.5 2740.0 l
4692.5 2750.0 l
4725.0 2762.5 l
4755.0 2772.5 l
4780.0 2785.0 l
4800.0 2795.0 l
4820.0 2807.5 l
4840.0 2817.5 l
4857.5 2827.5 l
4872.5 2840.0 l
4887.5 2850.0 l
4902.5 2860.0 l
4917.5 2872.5 l
4932.5 2882.5 l
4950.0 2892.5 l
4967.5 2902.5 l
4987.5 2915.0 l
5012.5 2925.0 l
5037.5 2935.0 l
5062.5 2945.0 l
5085.0 2955.0 l
5105.0 2965.0 l
5122.5 2975.0 l
5137.5 2985.0 l
5152.5 2995.0 l
5165.0 3005.0 l
5177.5 3015.0 l
5190.0 3025.0 l
5202.5 3035.0 l
5212.5 3045.0 l
5222.5 3055.0 l
5232.5 3062.5 l
5242.5 3072.5 l
5252.5 3082.5 l
5262.5 3092.5 l
5270.0 3102.5 l
5280.0 3110.0 l
5290.0 3120.0 l
5297.5 3130.0 l
5305.0 3140.0 l
5315.0 3147.5 l
5322.5 3157.5 l
5330.0 3167.5 l
5337.5 3175.0 l
5347.5 3185.0 l
5355.0 3192.5 l
5362.5 3202.5 l
5370.0 3212.5 l
5377.5 3220.0 l
5385.0 3230.0 l
5392.5 3237.5 l
5400.0 3247.5 l
5407.5 3255.0 l
5415.0 3265.0 l
5422.5 3272.5 l
5430.0 3282.5 l
5437.5 3290.0 l
5445.0 3297.5 l
5452.5 3307.5 l
5460.0 3315.0 l
5467.5 3322.5 l
5472.5 3332.5 l
5480.0 3340.0 l
5487.5 3347.5 l
5495.0 3357.5 l
5502.5 3365.0 l
5510.0 3372.5 l
5515.0 3382.5 l
5522.5 3390.0 l
5530.0 3397.5 l
5537.5 3405.0 l
5542.5 3412.5 l
5550.0 3422.5 l
5557.5 3430.0 l
5565.0 3437.5 l
5570.0 3445.0 l
5577.5 3452.5 l
5585.0 3460.0 l
5592.5 3470.0 l
5597.5 3477.5 l
5605.0 3485.0 l
5612.5 3492.5 l
5617.5 3500.0 l
5625.0 3507.5 l
5632.5 3515.0 l
5637.5 3522.5 l
5645.0 3530.0 l
S
n
6590.0 467.5 m
6510.0 505.0 l
6432.5 542.5 l
6355.0 577.5 l
6277.5 615.0 l
6202.5 647.5 l
6127.5 682.5 l
6055.0 715.0 l
5982.5 750.0 l
5910.0 782.5 l
5840.0 812.5 l
5770.0 845.0 l
5702.5 875.0 l
5632.5 905.0 l
5565.0 935.0 l
5497.5 965.0 l
5432.5 992.5 l
5365.0 1022.5 l
5300.0 1050.0 l
5235.0 1077.5 l
5170.0 1105.0 l
5107.5 1132.5 l
5042.5 1157.5 l
4980.0 1185.0 l
4917.5 1210.0 l
4855.0 1235.0 l
4790.0 1260.0 l
4727.5 1285.0 l
4665.0 1310.0 l
4602.5 1335.0 l
4540.0 1357.5 l
4477.5 1382.5 l
4415.0 1405.0 l
4350.0 1427.5 l
4285.0 1450.0 l
4217.5 1472.5 l
4145.0 1495.0 l
4072.5 1517.5 l
3992.5 1537.5 l
3910.0 1560.0 l
3822.5 1580.0 l
3730.0 1602.5 l
3632.5 1622.5 l
3535.0 1642.5 l
3432.5 1662.5 l
3330.0 1682.5 l
3225.0 1702.5 l
3122.5 1722.5 l
3017.5 1742.5 l
2915.0 1760.0 l
2815.0 1780.0 l
2717.5 1800.0 l
2620.0 1817.5 l
2525.0 1835.0 l
2432.5 1855.0 l
2342.5 1872.5 l
2255.0 1890.0 l
2170.0 1907.5 l
2087.5 1925.0 l
2007.5 1942.5 l
1930.0 1960.0 l
1855.0 1977.5 l
1780.0 1995.0 l
1710.0 2012.5 l
1640.0 2027.5 l
1575.0 2045.0 l
1510.0 2060.0 l
1447.5 2077.5 l
1387.5 2092.5 l
1327.5 2110.0 l
1272.5 2125.0 l
1217.5 2140.0 l
1165.0 2157.5 l
1115.0 2172.5 l
1065.0 2187.5 l
1017.5 2202.5 l
972.5 2217.5 l
927.5 2232.5 l
885.0 2247.5 l
845.0 2262.5 l
807.5 2277.5 l
770.0 2292.5 l
732.5 2305.0 l
697.5 2320.0 l
665.0 2335.0 l
635.0 2347.5 l
602.5 2362.5 l
575.0 2375.0 l
547.5 2390.0 l
520.0 2402.5 l
495.0 2417.5 l
470.0 2430.0 l
445.0 2445.0 l
425.0 2457.5 l
402.5 2470.0 l
382.5 2482.5 l
362.5 2497.5 l
342.5 2510.0 l
322.5 2522.5 l
305.0 2535.0 l
287.5 2547.5 l
272.5 2560.0 l
255.0 2572.5 l
237.5 2585.0 l
222.5 2597.5 l
205.0 2610.0 l
187.5 2622.5 l
172.5 2635.0 l
155.0 2645.0 l
137.5 2657.5 l
120.0 2670.0 l
107.5 2682.5 l
97.5 2692.5 l
90.0 2705.0 l
85.0 2717.5 l
85.0 2727.5 l
82.5 2740.0 l
82.5 2817.5 l
85.0 2827.5 l
85.0 2840.0 l
87.5 2850.0 l
90.0 2860.0 l
92.5 2872.5 l
95.0 2882.5 l
102.5 2892.5 l
110.0 2902.5 l
120.0 2915.0 l
135.0 2925.0 l
150.0 2935.0 l
167.5 2945.0 l
180.0 2955.0 l
190.0 2965.0 l
200.0 2975.0 l
207.5 2985.0 l
212.5 2995.0 l
217.5 3005.0 l
222.5 3015.0 l
227.5 3025.0 l
230.0 3035.0 l
235.0 3045.0 l
237.5 3055.0 l
240.0 3062.5 l
242.5 3072.5 l
245.0 3082.5 l
245.0 3092.5 l
247.5 3102.5 l
250.0 3110.0 l
250.0 3120.0 l
252.5 3130.0 l
252.5 3140.0 l
255.0 3147.5 l
255.0 3157.5 l
257.5 3167.5 l
257.5 3185.0 l
260.0 3192.5 l
260.0 3212.5 l
262.5 3220.0 l
262.5 3237.5 l
265.0 3247.5 l
265.0 3282.5 l
267.5 3290.0 l
267.5 3332.5 l
270.0 3340.0 l
270.0 3397.5 l
272.5 3405.0 l
272.5 3477.5 l
275.0 3485.0 l
275.0 3530.0 l
S
n
275.0 3530.0 m
275.0 3567.5 l
277.5 3575.0 l
277.5 3675.0 l
280.0 3682.5 l
280.0 3790.0 l
282.5 3795.0 l
282.5 3910.0 l
285.0 3915.0 l
285.0 4035.0 l
287.5 4040.0 l
287.5 4135.0 l
290.0 4140.0 l
290.0 4157.5 l
292.5 4162.5 l
292.5 4167.5 l
295.0 4172.5 l
297.5 4177.5 l
300.0 4185.0 l
302.5 4190.0 l
305.0 4195.0 l
305.0 4200.0 l
307.5 4205.0 l
310.0 4210.0 l
312.5 4215.0 l
315.0 4220.0 l
317.5 4225.0 l
320.0 4230.0 l
322.5 4237.5 l
325.0 4242.5 l
325.0 4247.5 l
327.5 4252.5 l
330.0 4257.5 l
332.5 4262.5 l
335.0 4267.5 l
337.5 4272.5 l
337.5 4277.5 l
340.0 4282.5 l
342.5 4287.5 l
345.0 4292.5 l
347.5 4297.5 l
347.5 4302.5 l
350.0 4307.5 l
352.5 4312.5 l
355.0 4317.5 l
355.0 4322.5 l
357.5 4327.5 l
360.0 4332.5 l
360.0 4337.5 l
362.5 4342.5 l
365.0 4347.5 l
365.0 4352.5 l
367.5 4357.5 l
367.5 4362.5 l
370.0 4365.0 l
372.5 4370.0 l
372.5 4375.0 l
375.0 4380.0 l
375.0 4385.0 l
377.5 4390.0 l
377.5 4395.0 l
380.0 4400.0 l
380.0 4405.0 l
382.5 4410.0 l
382.5 4415.0 l
385.0 4417.5 l
385.0 4422.5 l
387.5 4427.5 l
387.5 4432.5 l
390.0 4437.5 l
390.0 4447.5 l
392.5 4450.0 l
392.5 4455.0 l
395.0 4460.0 l
395.0 4470.0 l
397.5 4475.0 l
397.5 4482.5 l
400.0 4487.5 l
400.0 4497.5 l
402.5 4502.5 l
402.5 4510.0 l
405.0 4515.0 l
405.0 4522.5 l
407.5 4527.5 l
407.5 4542.5 l
410.0 4545.0 l
410.0 4560.0 l
412.5 4562.5 l
412.5 4580.0 l
415.0 4585.0 l
415.0 4607.5 l
417.5 4610.0 l
417.5 4632.5 l
420.0 4635.0 l
420.0 4647.5 l
S
n
420.0 4647.5 m
420.0 4665.0 l
422.5 4670.0 l
422.5 4715.0 l
425.0 4717.5 l
425.0 4937.5 l
422.5 4940.0 l
422.5 5005.0 l
420.0 5007.5 l
420.0 5055.0 l
417.5 5057.5 l
417.5 5102.5 l
415.0 5105.0 l
415.0 5142.5 l
412.5 5147.5 l
412.5 5182.5 l
410.0 5185.0 l
410.0 5220.0 l
407.5 5222.5 l
407.5 5255.0 l
405.0 5257.5 l
405.0 5290.0 l
402.5 5295.0 l
402.5 5322.5 l
400.0 5327.5 l
400.0 5347.5 l
S
n
400.0 5347.5 m
400.0 5357.5 l
397.5 5360.0 l
397.5 5392.5 l
395.0 5395.0 l
395.0 5425.0 l
392.5 5427.5 l
392.5 5457.5 l
390.0 5460.0 l
390.0 5490.0 l
387.5 5492.5 l
387.5 5525.0 l
385.0 5527.5 l
385.0 5555.0 l
382.5 5560.0 l
382.5 5590.0 l
380.0 5592.5 l
380.0 5625.0 l
377.5 5627.5 l
377.5 5657.5 l
375.0 5660.0 l
375.0 5692.5 l
372.5 5695.0 l
372.5 5725.0 l
370.0 5727.5 l
370.0 5760.0 l
367.5 5762.5 l
367.5 5797.5 l
365.0 5800.0 l
365.0 5832.5 l
362.5 5835.0 l
362.5 5855.0 l
S
n
362.5 5855.0 m
362.5 5870.0 l
360.0 5870.0 l
360.0 5905.0 l
357.5 5907.5 l
357.5 5945.0 l
355.0 5945.0 l
355.0 5982.5 l
352.5 5985.0 l
352.5 6022.5 l
350.0 6025.0 l
350.0 6062.5 l
347.5 6062.5 l
347.5 6105.0 l
345.0 6107.5 l
345.0 6140.0 l
S
n
7285.0 467.5 m
7207.5 505.0 l
7130.0 542.5 l
7055.0 577.5 l
6980.0 615.0 l
6907.5 647.5 l
6832.5 682.5 l
6762.5 715.0 l
6692.5 750.0 l
6622.5 782.5 l
6555.0 812.5 l
6487.5 845.0 l
6420.0 875.0 l
6355.0 905.0 l
6290.0 935.0 l
6225.0 965.0 l
6162.5 992.5 l
6100.0 1022.5 l
6037.5 1050.0 l
5975.0 1077.5 l
5915.0 1105.0 l
5855.0 1132.5 l
5795.0 1157.5 l
5735.0 1185.0 l
5675.0 1210.0 l
5617.5 1235.0 l
5560.0 1260.0 l
5502.5 1285.0 l
5445.0 1310.0 l
5387.5 1335.0 l
5332.5 1357.5 l
5275.0 1382.5 l
5220.0 1405.0 l
5165.0 1427.5 l
5110.0 1450.0 l
5055.0 1472.5 l
5000.0 1495.0 l
4945.0 1517.5 l
4890.0 1537.5 l
4835.0 1560.0 l
4780.0 1580.0 l
4725.0 1602.5 l
4670.0 1622.5 l
4615.0 1642.5 l
4557.5 1662.5 l
4502.5 1682.5 l
4442.5 1702.5 l
4382.5 1722.5 l
4320.0 1742.5 l
4255.0 1760.0 l
4187.5 1780.0 l
4115.0 1800.0 l
4042.5 1817.5 l
3965.0 1835.0 l
3882.5 1855.0 l
3800.0 1872.5 l
3717.5 1890.0 l
3630.0 1907.5 l
3542.5 1925.0 l
3457.5 1942.5 l
3370.0 1960.0 l
3282.5 1977.5 l
3197.5 1995.0 l
3115.0 2012.5 l
3032.5 2027.5 l
2952.5 2045.0 l
2875.0 2060.0 l
2800.0 2077.5 l
2725.0 2092.5 l
2652.5 2110.0 l
2585.0 2125.0 l
2517.5 2140.0 l
2452.5 2157.5 l
2390.0 2172.5 l
2332.5 2187.5 l
2275.0 2202.5 l
2220.0 2217.5 l
2167.5 2232.5 l
2115.0 2247.5 l
2067.5 2262.5 l
2022.5 2277.5 l
1980.0 2292.5 l
1937.5 2305.0 l
1900.0 2320.0 l
1862.5 2335.0 l
1827.5 2347.5 l
1795.0 2362.5 l
1765.0 2375.0 l
1735.0 2390.0 l
1710.0 2402.5 l
1685.0 2417.5 l
1662.5 2430.0 l
1642.5 2445.0 l
1625.0 2457.5 l
1607.5 2470.0 l
1595.0 2482.5 l
1582.5 2497.5 l
1575.0 2510.0 l
1567.5 2522.5 l
1565.0 2535.0 l
1565.0 2547.5 l
1567.5 2560.0 l
1577.5 2572.5 l
1585.0 2585.0 l
1605.0 2597.5 l
1627.5 2610.0 l
1662.5 2622.5 l
1707.5 2635.0 l
1772.5 2645.0 l
1857.5 2657.5 l
1975.0 2670.0 l
2102.5 2682.5 l
2222.5 2692.5 l
2315.0 2705.0 l
2367.5 2717.5 l
2392.5 2727.5 l
2400.0 2740.0 l
2397.5 2750.0 l
2387.5 2762.5 l
2370.0 2772.5 l
2345.0 2785.0 l
2317.5 2795.0 l
2285.0 2807.5 l
2245.0 2817.5 l
2205.0 2827.5 l
2152.5 2840.0 l
2100.0 2850.0 l
2035.0 2860.0 l
1962.5 2872.5 l
1880.0 2882.5 l
1780.0 2892.5 l
1662.5 2902.5 l
1532.5 2915.0 l
1402.5 2925.0 l
1282.5 2935.0 l
1180.0 2945.0 l
1112.5 2955.0 l
1062.5 2965.0 l
1027.5 2975.0 l
1000.0 2985.0 l
975.0 2995.0 l
957.5 3005.0 l
940.0 3015.0 l
927.5 3025.0 l
915.0 3035.0 l
905.0 3045.0 l
895.0 3055.0 l
887.5 3062.5 l
880.0 3072.5 l
875.0 3082.5 l
867.5 3092.5 l
862.5 3102.5 l
857.5 3110.0 l
855.0 3120.0 l
850.0 3130.0 l
847.5 3140.0 l
842.5 3147.5 l
840.0 3157.5 l
837.5 3167.5 l
835.0 3175.0 l
832.5 3185.0 l
830.0 3192.5 l
827.5 3202.5 l
825.0 3212.5 l
822.5 3220.0 l
822.5 3230.0 l
820.0 3237.5 l
817.5 3247.5 l
817.5 3255.0 l
815.0 3265.0 l
815.0 3272.5 l
812.5 3282.5 l
812.5 3290.0 l
810.0 3297.5 l
810.0 3307.5 l
807.5 3315.0 l
807.5 3322.5 l
805.0 3332.5 l
805.0 3347.5 l
802.5 3357.5 l
802.5 3372.5 l
800.0 3382.5 l
800.0 3397.5 l
797.5 3405.0 l
797.5 3422.5 l
795.0 3430.0 l
795.0 3460.0 l
792.5 3470.0 l
792.5 3492.5 l
790.0 3500.0 l
790.0 3522.5 l
787.5 3530.0 l
S
n
787.5 3530.0 m
787.5 3560.0 l
785.0 3567.5 l
785.0 3602.5 l
782.5 3610.0 l
782.5 3647.5 l
780.0 3652.5 l
780.0 3687.5 l
777.5 3695.0 l
777.5 3735.0 l
775.0 3742.5 l
775.0 3782.5 l
772.5 3790.0 l
772.5 3835.0 l
770.0 3840.0 l
770.0 3885.0 l
767.5 3890.0 l
767.5 3945.0 l
765.0 3952.5 l
765.0 4005.0 l
762.5 4012.5 l
762.5 4075.0 l
760.0 4080.0 l
760.0 4157.5 l
762.5 4162.5 l
762.5 4167.5 l
765.0 4172.5 l
765.0 4177.5 l
767.5 4185.0 l
770.0 4190.0 l
772.5 4195.0 l
775.0 4200.0 l
775.0 4205.0 l
777.5 4210.0 l
780.0 4215.0 l
782.5 4220.0 l
782.5 4225.0 l
785.0 4230.0 l
787.5 4237.5 l
790.0 4242.5 l
792.5 4247.5 l
792.5 4252.5 l
795.0 4257.5 l
797.5 4262.5 l
800.0 4267.5 l
800.0 4272.5 l
802.5 4277.5 l
805.0 4282.5 l
805.0 4287.5 l
807.5 4292.5 l
810.0 4297.5 l
810.0 4302.5 l
812.5 4307.5 l
815.0 4312.5 l
815.0 4317.5 l
817.5 4322.5 l
817.5 4327.5 l
820.0 4332.5 l
822.5 4337.5 l
822.5 4342.5 l
825.0 4347.5 l
825.0 4352.5 l
827.5 4357.5 l
827.5 4362.5 l
830.0 4365.0 l
830.0 4370.0 l
832.5 4375.0 l
832.5 4380.0 l
835.0 4385.0 l
835.0 4390.0 l
837.5 4395.0 l
837.5 4400.0 l
840.0 4405.0 l
840.0 4415.0 l
842.5 4417.5 l
842.5 4422.5 l
845.0 4427.5 l
845.0 4437.5 l
847.5 4442.5 l
847.5 4450.0 l
850.0 4455.0 l
850.0 4465.0 l
852.5 4470.0 l
852.5 4482.5 l
855.0 4487.5 l
855.0 4502.5 l
857.5 4505.0 l
857.5 4520.0 l
860.0 4522.5 l
860.0 4542.5 l
862.5 4545.0 l
862.5 4567.5 l
865.0 4572.5 l
865.0 4597.5 l
867.5 4602.5 l
867.5 4647.5 l
S
n
867.5 4647.5 m
870.0 4652.5 l
870.0 4837.5 l
867.5 4842.5 l
867.5 4900.0 l
865.0 4905.0 l
865.0 4947.5 l
862.5 4952.5 l
862.5 4987.5 l
860.0 4990.0 l
860.0 5025.0 l
857.5 5027.5 l
857.5 5057.5 l
855.0 5062.5 l
855.0 5092.5 l
852.5 5095.0 l
852.5 5125.0 l
850.0 5127.5 l
850.0 5152.5 l
847.5 5155.0 l
847.5 5185.0 l
845.0 5187.5 l
845.0 5212.5 l
842.5 5215.0 l
842.5 5240.0 l
840.0 5242.5 l
840.0 5270.0 l
837.5 5272.5 l
837.5 5297.5 l
835.0 5300.0 l
835.0 5322.5 l
832.5 5327.5 l
832.5 5347.5 l
S
n
832.5 5347.5 m
832.5 5352.5 l
830.0 5355.0 l
830.0 5382.5 l
827.5 5387.5 l
827.5 5410.0 l
825.0 5412.5 l
825.0 5437.5 l
822.5 5440.0 l
822.5 5467.5 l
820.0 5470.0 l
820.0 5490.0 l
817.5 5492.5 l
817.5 5520.0 l
815.0 5522.5 l
815.0 5547.5 l
812.5 5550.0 l
812.5 5577.5 l
810.0 5580.0 l
810.0 5605.0 l
807.5 5607.5 l
807.5 5635.0 l
805.0 5637.5 l
805.0 5665.0 l
802.5 5667.5 l
802.5 5692.5 l
800.0 5695.0 l
800.0 5722.5 l
797.5 5722.5 l
797.5 5752.5 l
795.0 5755.0 l
795.0 5785.0 l
792.5 5787.5 l
792.5 5815.0 l
790.0 5817.5 l
790.0 5845.0 l
787.5 5847.5 l
787.5 5855.0 l
S
n
787.5 5855.0 m
787.5 5880.0 l
785.0 5882.5 l
785.0 5910.0 l
782.5 5912.5 l
782.5 5945.0 l
780.0 5947.5 l
780.0 5980.0 l
777.5 5980.0 l
777.5 6015.0 l
775.0 6015.0 l
775.0 6052.5 l
772.5 6055.0 l
772.5 6085.0 l
770.0 6087.5 l
770.0 6125.0 l
767.5 6125.0 l
767.5 6140.0 l
S
Q
Q
Q
/IYJBAA+Times-Roman /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
/UPIBAA+Symbol /Font _pdfUndefineResource
/N13 /Font _pdfUndefineResource
/ERNAAA+Symbol /Font _pdfUndefineResource
/N14 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF

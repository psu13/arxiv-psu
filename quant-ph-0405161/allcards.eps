%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Fernando Cucchietti) (LANL)
%%Title: (allcards.eps)
%%CreationDate: 1/28/05 3:51 PM
%%BoundingBox: 23 126 589 735
%%HiResBoundingBox: 23.5 126.1094 588.3906 734.5786
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: BrushScriptMT
%%+ TimesNewRomanPS-ItalicMT
%%DocumentSuppliedFonts: BrushScriptMT
%%+ TimesNewRomanPS-ItalicMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 0.32 0.95 0.29 0.09 (TOYO 0022pc*)
%%+ 0 1 0.55 0 (TOYO 0046pc*)
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 3.5 3.5 605.5 786.5
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -297.5 787.5 1 1146 827 18 0 1 7 42 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
/TimesNewRomanPS-ItalicMT havefont not {
%%BeginFont: TimesNewRomanPS-ItalicMT
/TimesNewRomanPS-ItalicMT
15 dict dup begin
/FontName /TimesNewRomanPS-ItalicMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 935 def
/FontDescent -221 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
11 dict dup begin
/K20 {
} bind def
/K29 {
{
newpath
206 480 m
206 398 191 306 160 206 c
129 106 89 21 40 -50 c
1 -106 -49 -158 -111 -204 c
-99 -219 l
37 -120 136 -19 198 86 c
247 170 272 266 272 374 c
272 420 265 466 251 511 c
234 569 206 636 166 711 c
149 702 l
187 616 206 542 206 480 c
206 480 l
closepath
} exec
fill
} bind def
/K2B {
{
newpath
385 71 m
385 321 l
635 321 l
635 362 l
385 362 l
385 611 l
344 611 l
344 362 l
95 362 l
95 321 l
344 321 l
344 71 l
385 71 l
closepath
} exec
fill
} bind def
/K2D {
{
newpath
48 256 m
27 189 l
286 189 l
307 256 l
48 256 l
closepath
} exec
fill
} bind def
/K3D {
{
newpath
100 401 m
639 401 l
639 442 l
100 442 l
100 401 l
closepath
100 238 m
639 238 l
639 279 l
100 279 l
100 238 l
closepath
} exec
fill
} bind def
/K3E {
{
newpath
613 352 m
76 588 l
76 543 l
541 339 l
76 137 l
76 94 l
613 327 l
613 352 l
closepath
} exec
fill
} bind def
/K61 {
{
newpath
428 434 m
412 382 l
404 405 393 421 378 431 c
364 441 346 446 324 446 c
287 446 248 432 206 405 c
154 370 110 323 76 265 c
41 207 24 152 24 100 c
24 65 34 38 53 18 c
72 -2 95 -12 122 -12 c
150 -12 178 -4 207 12 c
247 35 291 75 339 131 c
328 95 l
321 68 317 46 317 30 c
317 16 320 6 327 -1 c
334 -8 343 -12 355 -12 c
373 -12 392 -4 412 12 c
433 29 453 54 472 87 c
455 99 l
440 69 427 49 418 40 c
413 36 409 33 406 33 c
403 33 401 35 399 37 c
397 41 396 45 396 50 c
396 53 396 57 398 61 c
408 107 l
505 446 l
428 434 l
closepath
370 402 m
382 390 388 370 388 342 c
390 268 362 196 303 125 c
255 72 210 46 169 46 c
153 46 138 52 125 65 c
112 78 106 96 106 118 c
106 163 120 212 149 267 c
178 322 211 364 248 391 c
274 411 298 421 321 421 c
342 421 358 415 370 402 c
closepath
} exec
fill
} bind def
/K62 {
{
newpath
134 685 m
134 667 l
149 669 159 671 167 671 c
182 671 193 668 201 662 c
206 657 209 651 209 642 c
209 635 203 611 191 571 c
40 45 l
91 7 142 -12 191 -12 c
234 -12 279 3 324 33 c
369 62 406 104 436 157 c
466 210 481 264 481 317 c
481 359 470 392 447 416 c
425 441 396 453 361 453 c
336 453 312 447 289 434 c
266 422 239 399 209 366 c
308 713 l
134 685 l
closepath
177 261 m
190 305 211 340 239 366 c
267 392 296 405 326 405 c
346 405 363 396 377 379 c
392 362 399 338 399 307 c
399 255 388 204 366 153 c
343 102 317 66 286 44 c
256 23 227 12 199 12 c
174 12 146 21 114 40 c
177 261 l
closepath
} exec
fill
} bind def
/K63 {
{
newpath
381 122 m
349 88 321 65 295 52 c
270 39 244 33 219 33 c
185 33 159 43 139 63 c
120 83 110 110 110 144 c
110 195 124 246 151 298 c
174 340 202 373 234 396 c
266 419 298 430 331 430 c
349 430 363 427 372 420 c
379 415 382 410 382 403 c
382 399 381 396 380 392 c
378 389 373 384 365 376 c
357 369 352 362 350 357 c
347 352 346 346 346 340 c
346 330 349 322 356 315 c
363 308 372 305 382 305 c
396 305 408 311 417 322 c
430 337 436 354 436 375 c
436 397 427 415 409 430 c
391 445 364 453 328 453 c
281 453 234 438 186 407 c
138 376 99 336 71 286 c
42 237 28 187 28 136 c
28 91 41 55 68 28 c
94 1 131 -12 178 -12 c
218 -12 255 -2 290 17 c
326 37 360 67 395 109 c
381 122 l
closepath
} exec
fill
} bind def
/K7C {
{
newpath
119 711 m
119 -221 l
160 -221 l
160 711 l
119 711 l
closepath
} exec
fill
} bind def
/K7E {
{
newpath
491 269 m
474 253 453 245 428 245 c
405 245 365 257 309 281 c
252 305 207 322 172 332 c
157 337 142 339 127 339 c
96 339 70 327 47 303 c
24 279 12 245 10 200 c
32 200 l
39 232 50 255 66 270 c
82 284 102 291 125 291 c
147 291 183 280 235 259 c
308 229 354 212 372 207 c
390 202 406 199 421 199 c
455 199 484 211 507 236 c
530 260 543 295 544 338 c
521 338 l
518 308 508 285 491 269 c
closepath
} exec
fill
} bind def
end /CharStrings exch def
11 dict dup begin
/K20 [256 0 0 0 0 0] def
Encoding 32 /K20 put
/K29 [341 0 -111 -218 271 712] def
Encoding 41 /K29 put
/K2B [691 0 95 71 635 610] def
Encoding 43 /K2B put
/K2D [341 0 27 189 306 256] def
Encoding 45 /K2D put
/K3D [691 0 100 238 640 441] def
Encoding 61 /K3D put
/K3E [691 0 76 93 613 587] def
Encoding 62 /K3E put
/K61 [512 0 24 -11 505 445] def
Encoding 97 /K61 put
/K62 [512 0 39 -11 480 712] def
Encoding 98 /K62 put
/K63 [455 0 28 -11 436 453] def
Encoding 99 /K63 put
/K7C [282 0 119 -220 160 712] def
Encoding 124 /K7C put
/K7E [554 0 10 199 544 338] def
Encoding 126 /K7E put
end /CharMetrics exch def
end
definefont pop
%%EndFont
} if
/BrushScriptMT havefont not {
%%BeginFont: BrushScriptMT
/BrushScriptMT
15 dict dup begin
/FontName /BrushScriptMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 939 def
/FontDescent -346 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
3 dict dup begin
/K2D {
{
newpath
271 299 m
211 299 170 288 148 265 c
140 257 133 249 128 242 c
123 235 121 230 121 228 c
121 222 126 219 135 217 c
145 216 159 215 178 215 c
214 215 247 216 276 219 c
305 222 326 225 337 229 c
355 233 373 243 391 258 c
409 273 418 283 418 286 c
418 287 417 288 414 289 c
411 290 408 291 404 292 c
401 293 396 293 391 294 c
376 297 367 298 365 298 c
362 298 355 297 344 294 c
305 297 281 299 271 299 c
271 299 l
closepath
} exec
fill
} bind def
/K45 {
{
newpath
663 668 m
661 675 652 681 638 685 c
623 689 598 691 561 691 c
497 691 439 684 385 670 c
332 656 286 637 249 613 c
211 590 182 564 161 535 c
140 506 130 477 130 448 c
130 426 136 406 149 387 c
162 369 180 356 204 349 c
227 342 249 338 270 336 c
290 334 314 332 341 332 c
368 332 387 331 397 330 c
407 329 413 327 413 323 c
413 319 408 317 400 315 c
339 304 285 288 239 269 c
192 249 154 227 124 203 c
93 179 71 153 56 127 c
41 101 34 74 34 48 c
34 11 49 -19 80 -41 c
110 -63 148 -74 195 -74 c
235 -74 277 -69 323 -58 c
368 -48 410 -34 449 -17 c
487 0 517 19 537 38 c
561 60 576 84 584 109 c
592 134 596 163 595 195 c
472 89 352 36 234 36 c
199 36 173 41 155 50 c
136 59 127 72 127 88 c
127 107 140 129 166 153 c
191 178 227 202 273 226 c
303 242 331 254 356 262 c
381 270 403 276 422 280 c
440 283 465 288 496 293 c
516 296 532 305 544 321 c
556 337 562 351 562 363 c
562 373 557 379 547 382 c
536 385 513 386 477 386 c
428 386 386 387 353 388 c
319 389 291 390 268 393 c
246 396 229 400 219 405 c
209 410 204 417 204 425 c
204 440 221 459 254 482 c
288 505 328 524 376 541 c
424 557 469 565 510 565 c
537 565 558 562 573 556 c
555 543 541 532 531 524 c
521 515 510 502 498 484 c
530 505 563 524 598 540 c
633 556 653 566 658 570 c
664 573 667 582 667 596 c
667 630 l
667 649 665 661 663 668 c
closepath
} exec
fill
} bind def
/K53 {
{
newpath
445 98 m
416 87 382 79 344 74 c
306 70 257 68 197 68 c
128 68 94 71 94 78 c
94 81 95 83 97 85 c
100 86 103 88 107 89 c
111 91 117 93 124 95 c
125 96 126 97 128 97 c
129 98 130 99 131 100 c
132 101 133 102 133 103 c
133 107 126 109 113 108 c
99 107 85 104 71 98 c
55 91 41 76 29 55 c
17 34 11 18 11 8 c
11 -14 28 -31 64 -42 c
99 -53 146 -58 204 -58 c
236 -58 269 -56 304 -52 c
339 -48 371 -42 401 -35 c
430 -28 455 -20 475 -12 c
498 -2 518 12 536 28 c
554 44 567 61 576 80 c
585 100 590 119 590 138 c
590 165 578 191 555 213 c
532 235 496 257 447 277 c
414 292 376 305 333 316 c
291 328 263 336 251 341 c
238 345 232 354 232 365 c
232 384 247 402 277 420 c
307 438 349 453 401 464 c
453 475 510 480 572 480 c
592 480 602 478 602 474 c
602 471 593 465 574 455 c
557 446 542 436 530 425 c
518 413 513 405 513 399 c
513 396 514 395 518 395 c
520 395 527 399 538 406 c
549 413 562 421 578 429 c
593 437 612 445 633 452 c
652 460 666 466 674 470 c
682 475 689 484 696 498 c
703 511 706 531 706 556 c
706 571 693 583 667 590 c
641 597 604 601 556 601 c
475 601 403 591 339 570 c
275 549 231 525 207 497 c
191 480 179 457 169 428 c
159 399 154 369 154 340 c
154 332 157 324 163 315 c
168 306 174 301 179 298 c
237 264 299 243 367 233 c
389 229 411 223 432 216 c
452 208 471 199 488 186 c
504 174 517 160 525 145 c
501 125 474 109 445 98 c
closepath
} exec
fill
} bind def
end /CharStrings exch def
3 dict dup begin
/K2D [522 0 121 215 418 299] def
Encoding 45 /K2D put
/K45 [630 0 34 -74 666 691] def
Encoding 69 /K45 put
/K53 [662 0 10 -58 706 601] def
Encoding 83 /K53 put
end /CharMetrics exch def
end
definefont pop
%%EndFont
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _BrushScriptMT BrushScriptMT
[/_BrushScriptMT/BrushScriptMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPS-ItalicMT TimesNewRomanPS-ItalicMT
[/_TimesNewRomanPS-ItalicMT/TimesNewRomanPS-ItalicMT 0 0 0 TZ
%AI3_EndEncoding TrueType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (Pathfinder Suite)
%AI5_End_NonPrinting--
1 Bn
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_BS
%_0 1 0.6 0 1 50 100 Bs
0 0 1 0 1 50 0 %_BS
%_0 0 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
2 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_BS
%_0 0.08 0.67 0 1 50 14 Bs
1 1 0 0 1 50 100 %_BS
%_1 1 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k
 0 0.4 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Yellow Stripe 2)
(Yellow Stripe 2) 0.2499 -0.0001 72.2499 71.9999 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k
 0 0.4 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d
0 XR
-0.0001 3.5998 m
72.4999 3.5998 L
S
-0.0001 17.9999 m
72.4999 17.9999 L
S
-0.0001 32.4 m
72.4999 32.4 L
S
-0.0001 46.7998 m
72.4999 46.7998 L
S
-0.0001 61.1999 m
72.4999 61.1999 L
S
-0.0001 10.7998 m
72.4999 10.7998 L
S
-0.0001 25.1999 m
72.4999 25.1999 L
S
-0.0001 39.5998 m
72.4999 39.5998 L
S
-0.0001 53.9999 m
72.4999 53.9999 L
S
-0.0001 68.4 m
72.4999 68.4 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
1 g
(K=0) Pc
0 g
(K=100) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.75 g
(K=25) Pc
0.5 g
(K=50) Pc
0.25 g
(K=75) Pc
0 g
(K=100) Pc
Bb
2 (Black & White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black & White) Pc
0.25 0 0 0 k
(C=25 M=0 Y=0 K=0) Pc
0.5 0 0 0 k
(C=50 M=0 Y=0 K=0) Pc
0.75 0 0 0 k
(C=75 M=0 Y=0 K=0) Pc
1 0 0 0 k
(C=100 M=0 Y=0 K=0) Pc
0.25 0.25 0 0 k
(C=25 M=25 Y=0 K=0) Pc
0.5 0.5 0 0 k
(C=50 M=50 Y=0 K=0) Pc
0.75 0.75 0 0 k
(C=75 M=75 Y=0 K=0) Pc
1 1 0 0 k
(C=100 M=100 Y=0 K=0) Pc
Bb
2 (Red & Yellow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Red & Yellow) Pc
0 0.25 0 0 k
(C=0 M=25 Y=0 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.75 0 0 k
(C=0 M=75 Y=0 K=0) Pc
0 1 0 0 k
(C=0 M=100 Y=0 K=0) Pc
0 0.25 0.25 0 k
(C=0 M=25 Y=25 K=0) Pc
0 0.5 0.5 0 k
(C=0 M=50 Y=50 K=0) Pc
0 0.75 0.75 0 k
(C=0 M=75 Y=75 K=0) Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Blue Radial) Pc
0 0 0.25 0 k
(C=0 M=0 Y=25 K=0) Pc
0 0 0.5 0 k
(C=0 M=0 Y=50 K=0) Pc
0 0 0.75 0 k
(C=0 M=0 Y=75 K=0) Pc
0 0 1 0 k
(C=0 M=0 Y=100 K=0) Pc
0.25 0 0.25 0 k
(C=25 M=0 Y=25 K=0) Pc
0.5 0 0.5 0 k
(C=50 M=0 Y=50 K=0) Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0) Pc
1 0 1 0 k
(C=100 M=0 Y=100 K=0) Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Yellow Stripe) Pc
0.25 0.125 0 0 k
(C=25 M=13 Y=0 K=0) Pc
0.5 0.25 0 0 k
(C=50 M=25 Y=0 K=0) Pc
0.75 0.375 0 0 k
(C=75 M=38 Y=0 K=0) Pc
1 0.5 0 0 k
(C=100 M=50 Y=0 K=0) Pc
0.125 0.25 0 0 k
(C=13 M=25 Y=0 K=0) Pc
0.25 0.5 0 0 k
(C=25 M=50 Y=0 K=0) Pc
0.375 0.75 0 0 k
(C=38 M=75 Y=0 K=0) Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0.25 0.125 0 k
(C=0 M=25 Y=13 K=0) Pc
0 0.5 0.25 0 k
(C=0 M=50 Y=25 K=0) Pc
0 0.75 0.375 0 k
(C=0 M=75 Y=38 K=0) Pc
0 1 0.5 0 k
(C=0 M=100 Y=50 K=0) Pc
0 0.125 0.25 0 k
(C=0 M=13 Y=25 K=0) Pc
0 0.25 0.5 0 k
(C=0 M=25 Y=50 K=0) Pc
0 0.375 0.75 0 k
(C=0 M=38 Y=75 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0 0.25 0 k
(C=13 M=0 Y=25 K=0) Pc
0.25 0 0.5 0 k
(C=25 M=0 Y=50 K=0) Pc
0.375 0 0.75 0 k
(C=38 M=0 Y=75 K=0) Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0) Pc
0.25 0 0.125 0 k
(C=25 M=0 Y=13 K=0) Pc
0.5 0 0.25 0 k
(C=50 M=0 Y=25 K=0) Pc
0.75 0 0.375 0 k
(C=75 M=0 Y=38 K=0) Pc
1 0 0.5 0 k
(C=100 M=0 Y=50 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.25 0.125 0.125 0 k
(C=25 M=13 Y=13 K=0) Pc
0.5 0.25 0.25 0 k
(C=50 M=25 Y=25 K=0) Pc
0.75 0.375 0.375 0 k
(C=75 M=38 Y=38 K=0) Pc
1 0.5 0.5 0 k
(C=100 M=50 Y=50 K=0) Pc
0.25 0.25 0.125 0 k
(C=25 M=25 Y=13 K=0) Pc
0.5 0.5 0.25 0 k
(C=50 M=50 Y=25 K=0) Pc
0.75 0.75 0.375 0 k
(C=75 M=75 Y=38 K=0) Pc
1 1 0.5 0 k
(C=100 M=100 Y=50 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.25 0.125 0 k
(C=13 M=25 Y=13 K=0) Pc
0.25 0.5 0.25 0 k
(C=25 M=50 Y=25 K=0) Pc
0.375 0.75 0.375 0 k
(C=38 M=75 Y=38 K=0) Pc
0.5 1 0.5 0 k
(C=50 M=100 Y=50 K=0) Pc
0.125 0.25 0.25 0 k
(C=13 M=25 Y=25 K=0) Pc
0.25 0.5 0.5 0 k
(C=25 M=50 Y=50 K=0) Pc
0.375 0.75 0.75 0 k
(C=38 M=75 Y=75 K=0) Pc
0.5 1 1 0 k
(C=50 M=100 Y=100 K=0) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0.125 0.125 0.25 0 k
(C=13 M=13 Y=25 K=0) Pc
0.25 0.25 0.5 0 k
(C=25 M=25 Y=50 K=0) Pc
0.375 0.375 0.75 0 k
(C=38 M=38 Y=75 K=0) Pc
0.5 0.5 1 0 k
(C=50 M=50 Y=100 K=0) Pc
0.25 0.125 0.25 0 k
(C=25 M=13 Y=25 K=0) Pc
0.5 0.25 0.5 0 k
(C=50 M=25 Y=50 K=0) Pc
0.75 0.375 0.75 0 k
(C=75 M=38 Y=75 K=0) Pc
1 0.5 1 0 k
(C=100 M=50 Y=100 K=0) Pc
(Yellow Stripe 2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Yellow Stripe 2) Pc
0.32 0.95 0.29 0.09 (TOYO 0022pc*) 0 x
(TOYO 0022pc*) Pc
0 1 0.55 0 (TOYO 0046pc*) 0 x
(TOYO 0046pc*) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
u
0 To
1 0 0 1 23.5 649 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d
0 XR
/_TimesNewRomanPS-ItalicMT 36 29.9339 -7.7695 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\141\)) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 23.5 470 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 36 29.9339 -7.7695 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\142\)) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 23.5 220 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 36 29.9339 -7.7695 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\143\)) Tx 1 0 Tk
TO
U

u
0 R
0 0 0 1 K
2 w
118.5239 189.1162 m
121.3657 190.8604 L
S
u
0 O
0 0 0 1 k
1 w
139.6948 200.7432 m
139.1421 200.3701 l
139.8545 200.0049 140.313 197.417 138.4424 196.6602 c
139.3608 195.6602 138.8213 194.3662 137.5503 193.9727 c
136.4551 193.6328 135.8428 193.3867 134.373 192.0664 c
132.5498 190.4258 130.5776 188.3408 127.2739 188.2686 c
126.9858 188.2637 126.8164 187.9873 126.8398 187.8066 c
126.8853 187.4678 127.4565 186.7344 126.8022 186.3115 c
124.3252 184.791 l
123.4414 184.249 121.9399 185.1074 119.4346 189.2197 c
116.8232 193.5049 115.8442 195.208 117.6025 196.3086 c
119.3291 197.3896 119.8193 197.6699 y
120.3818 197.9932 120.6953 197.6797 120.9297 197.4932 c
121.063 197.3838 121.3105 197.4551 121.4131 197.6055 c
121.5747 197.8379 123.186 200.1338 124.9575 201.4971 c
126.6011 202.7617 126.9619 203.7158 128.2568 204.2607 c
129.79 204.9063 134.2334 207.8379 135.5786 208.6895 c
136.8945 209.5215 139.2871 210.3984 142.0737 212.1982 c
144.7344 213.916 146.665 210.7998 144.1504 209.4531 c
142.1621 208.3877 142.2432 208.1133 141.5298 207.7891 c
140.2788 207.2217 139.0796 206.2969 138.2183 205.6807 c
137.8228 205.3984 137.2925 205.2441 136.1616 204.375 c
136.9224 204.626 137.064 204.458 138.2788 204.6104 c
140.0938 204.7676 140.9248 201.6064 139.6948 200.7432 c
f
1 g
122.6973 191.8311 m
123.6968 190.0977 125.8364 187.3516 126.0986 187.1396 c
126.3447 186.9404 126.2554 186.668 125.8569 186.4707 c
125.5796 186.332 124.2544 185.5078 y
123.6704 185.1484 122.5913 185.3125 119.8018 189.8574 c
116.9463 194.5811 116.7681 195.2969 118.1563 196.1494 c
119.9067 197.1582 l
120.0215 197.2021 120.1387 197.1875 120.2588 197.1143 c
120.5571 196.9346 120.1733 196.2119 122.6973 191.8311 c
f
126.9941 193.8359 m
126.9663 193.7129 127.0176 193.5693 127.0894 193.5273 c
127.4316 193.3252 127.6372 193.7666 127.8911 193.9541 c
128.1006 194.1094 129.1772 195.0469 129.7925 195.0342 c
130.4092 195.0225 131.6157 195.002 132.6514 193.9863 c
132.8359 193.7949 133.6177 193.3564 134.3062 193.5234 c
134.79 193.6416 134.9751 193.1875 134.6514 192.9424 c
133.7813 192.2871 133.7349 191.7285 130.8569 189.9727 c
128.4907 188.6943 126.0728 187.8203 124.061 190.7773 c
122.9873 192.4229 121.6196 194.8076 121.3452 195.8037 c
121.0684 196.8145 121.7695 197.2373 122.1919 197.9307 c
124.0674 200.5957 125.8145 201.5713 127.0347 202.75 c
127.5151 203.2148 127.8047 203.6914 128.8193 203.6279 c
130.9824 203.4941 133.022 204.252 133.6587 204.208 c
134.0864 204.1982 134.2344 204.1504 134.3516 204.0684 c
134.5415 203.9346 134.8721 204.1055 135.2759 204.0488 c
135.5283 204.0293 135.645 204.0146 135.8833 204.0527 c
135.8335 203.5654 135.3774 203.7969 135.4673 202.8633 c
135.4868 202.6631 135.7505 202.4277 135.8745 202.3301 c
136.2197 202.1416 136.8711 202.4756 137.1426 202.583 c
137.3589 202.667 137.6152 202.7725 137.8604 202.8652 c
138.5127 203.1133 138.3213 203.8203 138.4722 203.6201 c
139.2388 202.6133 137.6621 201.9492 137.1406 201.7383 c
136.6421 201.4863 136.1104 201.4863 135.5635 201.3135 c
135.2617 201.3457 134.1563 200.7119 133.7002 201.4854 c
133.6064 201.6006 133.4619 201.8887 133.1982 201.5566 c
132.999 201.3057 131.7681 200.5645 131.3687 200.8037 c
131.1865 200.9141 131.0376 200.9697 130.8159 200.9424 c
130.5942 200.915 130.5537 200.75 130.6987 200.5654 c
130.8853 200.333 131.0771 199.9756 130.769 199.6748 c
130.5034 199.3984 130.3516 199.2949 130.0459 199.2959 c
129.7319 199.2773 129.1172 199.29 128.9199 199.1484 c
128.7852 198.9941 128.7349 198.7852 129.2373 198.8438 c
129.6899 198.8867 130.4609 198.5781 130.2627 197.5615 c
129.9707 196.0615 130.2979 196.1641 127.2402 194.1406 c
127.0967 194.0469 127.0269 193.9697 126.9941 193.8359 c
f
132.1421 196.9219 m
131.4131 197.1914 130.9897 197.1719 131.063 197.9219 c
131.0518 198.0459 131.1919 198.1348 131.6348 198.2832 c
131.8682 198.3613 133.0625 197.9541 132.8022 197.0342 c
132.7095 196.8682 132.585 196.7158 132.1421 196.9219 c
f
132.4907 194.8867 m
132.2891 194.6553 131.1816 195.5674 131.1523 195.6523 c
131.1118 195.7783 131.0552 195.9082 131.5405 196.2598 c
131.7686 196.3994 132.4609 196.2129 132.7114 195.6963 c
132.8813 195.3438 132.5298 194.9316 132.4907 194.8867 c
f
132.7627 199.0625 m
132.3926 199.1729 131.6187 199.3213 131.6104 199.6484 c
131.6016 200.0391 131.7046 200.3047 132.3311 200.4375 c
132.7505 200.5273 133.7344 200.3652 133.457 199.2607 c
133.2969 199.0439 133.2607 198.9229 132.7627 199.0625 c
f
137.981 196.4004 m
139.2544 195.1279 137.5439 194.2295 136.6396 194.2168 c
135.1885 194.1953 134.1655 193.7861 133.542 193.9883 c
133.1895 194.1035 132.5122 194.5313 132.7944 194.7461 c
133.043 194.9395 133.1504 195.3096 133.209 195.5234 c
133.2334 195.6152 132.8984 195.9736 132.9897 196.0195 c
133.0625 196.042 133.2144 195.5488 134.5498 195.6729 c
135.1187 195.7393 136.3071 195.9424 136.6929 196.0762 c
136.9893 196.1787 137.3262 196.2158 137.8213 196.4326 c
137.9175 196.4697 137.9561 196.4297 137.981 196.4004 c
f
138.5234 199.9814 m
137.3584 199.3525 136.9468 199.0068 136.6777 198.8262 c
135.377 197.8311 134.4336 197.9863 133.8921 198.1963 c
133.4453 198.2871 133.229 198.4629 132.8984 198.5059 c
132.6328 198.5391 132.251 198.7275 132.6602 198.3262 c
132.8599 198.1309 133.1406 198.0996 133.2251 197.6191 c
133.2285 197.2949 133.2842 197.1338 133.0127 196.6201 c
132.9741 196.5742 132.9243 196.5322 132.9785 196.5332 c
133.1694 196.5068 133.7451 195.8564 135.0967 196.2686 c
136.8867 196.8164 137.8047 196.8555 138.165 196.9961 c
138.2256 197.0215 138.3135 197.0752 138.3794 197.1279 c
138.8413 197.4434 138.9653 197.6299 139.041 197.8428 c
139.1177 198.0547 139.4976 199.209 138.7827 199.9141 c
138.6846 199.9844 138.5938 200.0244 138.5234 199.9814 c
f
139.0166 203.8682 m
139.1265 203.9355 140.3394 202.377 139.436 201.2363 c
138.9927 200.6738 138.5903 200.6348 138.0327 200.2656 c
137.0249 199.7129 136.2832 199.1592 135.8804 198.9229 c
135.2891 198.5762 134.7529 198.4189 134.2329 198.5635 c
133.9707 198.6367 133.4478 198.6895 133.6274 198.9307 c
133.8057 199.1699 133.9312 199.3018 133.8989 199.8145 c
133.8569 200.4834 133.2959 200.6055 133.6924 200.666 c
134.0332 200.7158 134.0562 200.7148 134.4717 200.6875 c
136.0605 200.582 140.0938 201.8994 138.9292 203.6182 c
138.8682 203.7559 138.9199 203.918 139.0166 203.8682 c
f
136.4863 203.9883 m
136.6831 204.1309 136.9268 204.0918 137.0825 204.1143 c
137.3618 204.1553 138.2378 204.498 138.1558 203.8184 c
138.0742 203.1377 136.7583 202.873 136.3032 202.7666 c
136.106 202.7334 135.9751 202.8047 135.8877 202.9473 c
135.8003 203.0898 135.6821 203.4941 136.4863 203.9883 c
f
140.5098 210.6729 m
139.6519 210.125 137.3672 209.3525 136.436 208.498 c
134.9956 207.9404 132.9102 206.3125 132.1289 205.9199 c
131.498 205.5332 129.9893 204.8027 129.0977 204.0596 c
129.4351 204.1143 130.9351 203.9707 132.7817 204.5391 c
133.4121 204.752 134.0078 204.7705 134.8184 204.4424 c
136.0425 204.9434 137.7119 205.8594 137.6899 206.0625 c
137.6807 206.1602 137.647 206.2598 137.8789 206.3418 c
138.084 206.415 138.0186 206.3086 138.3677 206.501 c
140.1479 207.5283 141.0591 208.1309 y
141.4321 208.3926 141.2134 208.458 141.3296 208.5791 c
141.4312 208.6855 141.4189 208.5039 141.8579 208.708 c
142.0864 208.8174 142.6934 209.0791 144.2349 210.0586 c
145.6279 210.8691 144.6709 213.1416 142.2896 211.8086 c
140.6733 210.9033 140.7769 210.7715 140.5098 210.6729 c
f
U
U
u
0 R
0 0 0 1 K
2 w
246.6641 253.7217 m
249.4839 255.5 L
S
u
0 O
0 0 0 1 k
1 w
267.6914 265.6055 m
267.1431 265.2256 l
267.8604 264.8691 268.3501 262.2871 266.4883 261.5078 c
267.4194 260.5186 266.8955 259.2188 265.6294 258.8096 c
264.5386 258.4561 263.9287 258.2031 262.4756 256.8643 c
260.6724 255.2012 258.7256 253.0928 255.4233 252.9805 c
255.1353 252.9717 254.9692 252.6934 254.9951 252.5137 c
255.0444 252.1758 255.6245 251.4492 254.9756 251.0176 c
252.5171 249.4678 l
251.6396 248.9141 250.1284 249.7549 247.5728 253.8359 c
244.9097 258.0889 243.9097 259.7803 245.6543 260.9023 c
247.3682 262.0039 247.855 262.29 y
248.4131 262.6201 248.7305 262.3115 248.9668 262.127 c
249.1021 262.0186 249.3481 262.0938 249.4492 262.2451 c
249.6079 262.4805 251.1914 264.7949 252.9458 266.1797 c
254.5737 267.4648 254.9229 268.4229 256.2114 268.9834 c
257.7368 269.6475 262.1436 272.6338 263.4785 273.501 c
264.7842 274.3486 267.166 275.2549 269.9307 277.0879 c
272.5698 278.8379 274.5381 275.7471 272.0405 274.3691 c
270.0654 273.2793 270.1494 273.0068 269.4404 272.6738 c
268.1963 272.0908 267.0083 271.1514 266.1548 270.5244 c
265.7627 270.2383 265.2339 270.0762 264.1138 269.1943 c
264.8716 269.4541 265.0151 269.2881 266.2285 269.4551 c
268.041 269.6348 268.9106 266.4834 267.6914 265.6055 c
f
1 g
250.8032 256.4873 m
251.8242 254.7656 253.9966 252.0459 254.2617 251.8379 c
254.5107 251.6416 254.4243 251.3672 254.0283 251.165 c
253.7524 251.0234 252.4375 250.1826 y
251.8579 249.8174 250.7769 249.9678 247.9321 254.4785 c
245.0195 259.166 244.8325 259.8809 246.2104 260.75 c
247.9482 261.7793 l
248.0625 261.8252 248.1797 261.8115 248.3008 261.7402 c
248.6016 261.5635 248.2266 260.8369 250.8032 256.4873 c
f
255.0757 258.5439 m
255.0493 258.4209 255.1025 258.2783 255.1748 258.2373 c
255.519 258.0381 255.7197 258.4824 255.9707 258.6729 c
256.1787 258.8311 257.2437 259.7822 257.8594 259.7764 c
258.4761 259.7715 259.6826 259.7656 260.731 258.7637 c
260.9175 258.5742 261.7046 258.1455 262.3906 258.3203 c
262.8735 258.4453 263.064 257.9922 262.7432 257.7441 c
261.8813 257.0781 261.8418 256.5186 258.9849 254.7285 c
256.6348 253.4209 254.2275 252.5176 252.1802 255.4502 c
251.0864 257.082 249.6899 259.4502 249.4033 260.4424 c
249.1143 261.4502 249.8101 261.8809 250.2236 262.5801 c
252.0664 265.2676 253.8018 266.2646 255.0073 267.458 c
255.4824 267.9277 255.7656 268.4082 256.7817 268.3574 c
258.9458 268.25 260.9761 269.0332 261.6133 268.9961 c
262.041 268.9922 262.1899 268.9463 262.3076 268.8662 c
262.499 268.7344 262.8276 268.9092 263.2324 268.8564 c
263.4849 268.8408 263.6016 268.8281 263.8394 268.8682 c
263.7959 268.3809 263.3369 268.6064 263.438 267.6738 c
263.46 267.4746 263.7266 267.2412 263.8516 267.1465 c
264.1992 266.9609 264.8467 267.3037 265.1167 267.4141 c
265.332 267.501 265.5869 267.6094 265.8311 267.7051 c
266.4805 267.9609 266.2803 268.666 266.4336 268.4668 c
267.2124 267.4707 265.6436 266.7871 265.125 266.5693 c
264.6299 266.3115 264.0981 266.3047 263.5532 266.125 c
263.251 266.1543 262.1533 265.5068 261.688 266.2744 c
261.5928 266.3887 261.4448 266.6758 261.1851 266.3398 c
260.9893 266.0869 259.7671 265.3301 259.3647 265.5645 c
259.1812 265.6729 259.0322 265.7266 258.8105 265.6963 c
258.5894 265.667 258.5503 265.501 258.6982 265.3184 c
258.8872 265.0879 259.084 264.7324 258.7793 264.4287 c
258.5166 264.1484 258.3662 264.043 258.0605 264.041 c
257.7466 264.0186 257.1318 264.0234 256.9365 263.8799 c
256.8032 263.7246 256.7559 263.5137 257.2578 263.5791 c
257.7095 263.627 258.4844 263.3281 258.2983 262.3096 c
258.0249 260.8057 258.3506 260.9121 255.3184 258.8516 c
255.1753 258.7559 255.1069 258.6777 255.0757 258.5439 c
f
260.1855 261.6924 m
259.4531 261.9531 259.0303 261.9277 259.0947 262.6797 c
259.0815 262.8027 259.2207 262.8936 259.6616 263.0479 c
259.8945 263.1289 261.0933 262.7363 260.8447 261.8125 c
260.7534 261.6455 260.6309 261.4922 260.1855 261.6924 c
f
260.5591 259.6621 m
260.3604 259.4277 259.2417 260.3262 259.2114 260.4111 c
259.1689 260.5371 259.1113 260.665 259.5923 261.0225 c
259.8184 261.166 260.5132 260.9873 260.77 260.4736 c
260.9443 260.124 260.5977 259.707 260.5591 259.6621 c
f
260.7798 263.8408 m
260.4087 263.9463 259.6328 264.085 259.6206 264.4121 c
259.6074 264.8027 259.7065 265.0703 260.332 265.21 c
260.75 265.3057 261.7363 265.1553 261.4717 264.0469 c
261.3145 263.8281 261.2798 263.707 260.7798 263.8408 c
f
266.0303 261.2422 m
267.3188 259.9854 265.6196 259.0664 264.7158 259.042 c
263.2646 259.0039 262.2471 258.5811 261.6211 258.7764 c
261.2671 258.8867 260.585 259.3066 260.8647 259.5254 c
261.1104 259.7207 261.2134 260.0928 261.2695 260.3076 c
261.2925 260.3994 260.9536 260.7529 261.0444 260.7998 c
261.1167 260.8242 261.2744 260.332 262.6084 260.4727 c
263.1768 260.5459 264.3623 260.7637 264.7461 260.9023 c
265.0415 261.0088 265.3779 261.0498 265.8701 261.2725 c
265.9658 261.3105 266.0049 261.2715 266.0303 261.2422 c
f
266.5293 264.8301 m
265.3721 264.1865 264.9648 263.8359 264.6978 263.6514 c
263.4092 262.6416 262.4639 262.7852 261.9199 262.9883 c
261.4722 263.0732 261.2539 263.2471 260.9224 263.2852 c
260.6567 263.3154 260.2729 263.499 260.6865 263.1025 c
260.8887 262.9102 261.1694 262.8828 261.2598 262.4023 c
261.2676 262.0791 261.3252 261.918 261.0601 261.4014 c
261.022 261.3555 260.9727 261.3125 261.0269 261.3145 c
261.2183 261.29 261.8018 260.6465 263.1475 261.0752 c
264.9312 261.6445 265.8486 261.6953 266.207 261.8408 c
266.2671 261.8652 266.355 261.9209 266.4199 261.9746 c
266.8779 262.2959 267 262.4834 267.0732 262.6973 c
267.1465 262.9102 267.5127 264.0684 266.7896 264.7656 c
266.6904 264.834 266.5986 264.873 266.5293 264.8301 c
f
266.9751 268.7217 m
267.084 268.791 268.3159 267.2471 267.4263 266.0947 c
266.9897 265.5273 266.5884 265.4834 266.0352 265.1084 c
265.0342 264.543 264.2993 263.9795 263.8989 263.7393 c
263.312 263.3848 262.7778 263.2207 262.2563 263.3594 c
261.9932 263.4297 261.4697 263.4756 261.6465 263.7188 c
261.8218 263.9609 261.9453 264.0947 261.9067 264.6055 c
261.8569 265.2754 261.2944 265.3906 261.6899 265.4551 c
262.0303 265.5088 262.0532 265.5088 262.4688 265.4863 c
264.0596 265.3994 268.0762 266.7666 266.8906 268.4717 c
266.8276 268.6074 266.8774 268.7705 266.9751 268.7217 c
f
264.4434 268.8115 m
264.6382 268.9561 264.8823 268.9209 265.0381 268.9453 c
265.3169 268.9893 266.1885 269.3428 266.1152 268.6611 c
266.0415 267.9795 264.729 267.6992 264.2754 267.5879 c
264.0781 267.5518 263.9468 267.6211 263.8574 267.7627 c
263.7686 267.9043 263.6455 268.3076 264.4434 268.8115 c
f
268.3848 275.5449 m
267.5342 274.9863 265.2588 274.1855 264.3384 273.3203 c
262.9043 272.7451 260.8394 271.0918 260.063 270.6895 c
259.4365 270.2949 257.9365 269.5469 257.0542 268.793 c
257.3916 268.8516 258.8931 268.7256 260.7324 269.3164 c
261.3599 269.5371 261.9556 269.5625 262.77 269.2451 c
263.9878 269.7607 265.646 270.6973 265.6216 270.9004 c
265.6113 270.998 265.5762 271.0967 265.8071 271.1816 c
266.0112 271.2568 265.9473 271.1494 266.2939 271.3467 c
268.062 272.3955 268.9653 273.0098 y
269.3354 273.2754 269.1157 273.3379 269.2305 273.4609 c
269.3311 273.5684 269.3208 273.3867 269.7568 273.5957 c
269.9839 273.708 270.5879 273.9766 272.1177 274.9756 c
273.5005 275.8037 272.5156 278.0645 270.1509 276.7021 c
268.5459 275.7764 268.6509 275.6465 268.3848 275.5449 c
f
U
U
u
u
0 0 0 1 k
77.0586 144.6758 m
75.7729 156.623 73.0654 158.625 v
70.3188 160.7168 72.8765 158.1455 71.7275 159.5107 c
70.5708 160.8984 64.0879 162.8408 66.5806 170.0938 c
68.6948 175.5186 74.8042 173.1885 76.5518 173.3398 c
78.3018 173.4854 80.3389 169.7109 80.207 168.0664 c
80.0806 166.4072 83.498 174.668 88.749 173.9014 c
94.0435 173.1982 95.4004 168.0635 94.4614 167.5264 c
93.5269 166.9814 93.9976 165.8135 93.5938 164.6855 c
93.1948 163.5459 88.7588 160.1162 86.2646 158.668 c
83.5645 157.0146 82.3735 154.9961 81.2578 152.6514 c
80.3252 150.5996 80.0854 150.7402 77.0586 144.6758 c
f
0.102 0.9294 0.7608 0.0157 k
77.252 145.7979 m
76.9648 157.835 72.3096 160.1885 v
67.5649 162.751 64.1978 167.5137 68.1685 171.6475 c
68.792 172.2568 79.6895 176.9414 80.1216 166.9619 c
84.9087 174.6689 89.7188 173.4102 v
94.48 172.2637 94.21 167.2715 92.8633 164.7363 c
91.5537 162.1152 85.8472 160.2109 83.6045 157.5732 c
81.4111 154.8193 77.252 145.7979 y
f
U
0 0 0 1 k
208.5122 147.3633 m
215.8955 147.3262 l
217.2471 148.1025 217.1738 149.1387 V
215.7334 150.2568 214.4053 150.1758 212.4683 151.7227 c
210.5371 153.2666 209.1045 154.0967 208.7212 157.8506 C
212.7036 155.5498 214.8662 154.7256 V
216.2217 154.9365 217.3442 155.7061 219.0146 160.4102 C
219.3032 161.8018 219.5542 162.5078 217.854 164.3301 c
216.166 166.1445 214.7026 165.2861 211.5815 168.2012 c
208.4897 171.0977 204.9741 177.1787 y
203.2114 171.8691 200.6582 168.1367 v
198.0791 164.4199 194.9268 162.7295 194.6123 160.0996 c
194.3115 157.46 198.3325 153.5693 200.4219 153.9082 c
202.4941 154.2559 203.7427 155.3672 y
206.7573 157.8564 l
207.6709 154.9268 206.7598 152.9092 v
205.8481 150.8945 203.7393 149.8584 y
201.8901 149.2383 201.9336 148.5068 v
201.9775 147.7734 202.5342 147.4482 y
208.5122 147.3633 l
f
u
0 R
0 0 0 1 K
127.0449 167.1533 m
130.4878 172.21 129.8027 175.4268 y
131.4644 171.2549 137.77 167.46 v
144.0752 163.665 148.8008 163.6299 y
143.4097 159.1846 139.9146 153.8252 v
137.6162 150.3018 135.3184 144.9385 y
134.8237 150.1572 129.1899 155.0498 v
123.3677 160.1064 118.6182 159.0342 y
123.6021 162.0986 127.0449 167.1533 v
b
0.102 0.9294 0.7608 0.0157 k
127.3623 167.0049 m
130.7002 171.9072 130.0356 175.0283 y
131.647 170.9814 137.7603 167.3018 v
143.874 163.6221 148.4556 163.5869 y
143.229 159.2764 139.8398 154.0791 v
137.6118 150.6631 135.3838 145.4619 y
134.9038 150.5225 129.4414 155.2686 v
123.7969 160.1709 119.1919 159.1299 y
124.0244 162.1025 127.3623 167.0049 v
f
U
0 0 0 1 k
251.7749 146.5078 m
264.3037 145.5322 265.7515 146.4346 v
267.1851 147.3379 268.7383 147.7646 266.084 148.3115 C
260.2808 149.1133 260.4482 157.1631 y
264.2495 153.5635 266.8018 152.8496 v
269.375 152.1396 271.9814 152.9736 273.4141 157.8027 c
274.3408 161.0557 272.6523 164.4102 268.5518 164.5791 C
265.9395 164.3711 261.4648 162.8154 y
264.5688 164.4268 266.4497 166.5547 v
268.2832 168.6807 268.4658 170.877 265.4731 173.0654 c
262.5698 175.2637 260.8696 175.3486 257.645 173.9199 c
254.3555 172.4854 253.1367 170.6299 253.5376 167.9033 c
253.9702 165.1768 257.5098 163.2881 y
251.9316 165.7393 249.3174 164.8906 v
246.6738 164.0381 245.8662 162.4697 245.0117 159.3037 c
244.1509 156.1367 245.1563 153.2285 247.6831 152.6699 c
250.2251 152.1113 257.4639 157.584 y
257.2539 150.3096 252.8921 149.1738 v
248.4678 148.0313 251.7749 146.5078 y
f
u
u
0 To
1 0 0 1 157.731 148.332 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 37.7769 31.4114 -8.153 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\053) Tx 1 0 Tk
TO
U

u
u
u
0 To
1 0 0 1 53.9844 153.5283 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 94.8467 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 96.9692 142.2451 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 107.8481 153.5283 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 148.7104 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 150.8325 142.2451 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 182.9375 153.5283 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 223.8003 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 225.9224 142.2451 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 236.0049 153.5283 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 276.8677 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 278.9897 142.2451 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
U
U
u
u
0 R
0 0 0 1 K
2 w
170.231 251.1328 m
247.8159 257.793 224.2456 235.0137 v
S
0 O
0 0 0 1 k
1 w
219.9058 230.8193 m
221.2158 233.5508 222.5 237.292 222.7476 240.1787 c
224.8149 235.5645 l
229.356 233.3398 l
226.4634 233.1914 222.6797 232.0361 219.9058 230.8193 c
f
U
u
0 R
0 0 0 1 K
2 w
213.4785 212.502 m
141.9243 181.666 154.9814 221.8184 v
S
0 O
0 0 0 1 k
1 w
156.8477 227.5576 m
156.9717 224.5313 157.5918 220.625 158.7266 217.959 c
154.7363 221.0654 l
149.6831 220.9004 l
152.168 222.3887 154.9678 225.1826 156.8477 227.5576 c
f
U
u
156.2871 237.4609 m
155.5669 244.1553 154.0503 245.2773 v
152.5112 246.4492 153.9443 245.0059 153.3003 245.7744 c
152.6519 246.5518 149.0195 247.6387 150.417 251.7012 c
151.6011 254.7422 155.0244 253.4375 156.0029 253.5215 c
156.9839 253.6025 158.125 251.4863 158.0513 250.5654 c
157.9805 249.6367 159.895 254.2656 162.8369 253.8359 c
165.8037 253.4424 166.564 250.5645 166.0381 250.2637 c
165.5142 249.958 165.7783 249.3027 165.5518 248.6729 c
165.3281 248.0332 162.8428 246.1113 161.4463 245.2998 c
159.9321 244.374 159.2656 243.2432 158.6406 241.9277 c
158.1182 240.7783 157.9829 240.8604 156.2871 237.4609 c
f
0.102 0.9294 0.7608 0.0157 k
156.3955 238.0889 m
156.2354 244.833 153.6265 246.1523 v
150.9688 247.5879 149.0815 250.2568 151.3066 252.5732 c
151.6553 252.916 157.7617 255.5391 158.0034 249.9482 c
160.6855 254.2656 163.3809 253.5605 v
166.0488 252.917 165.8975 250.1201 165.1426 248.7012 c
164.4092 247.2305 161.2109 246.165 159.9551 244.6885 c
158.7261 243.1436 156.3955 238.0889 y
f
U
0 0 0 1 k
224.3369 205.7217 m
228.4741 205.7002 l
229.2319 206.1367 229.1909 206.7178 V
228.3833 207.3438 227.6396 207.2979 226.5542 208.166 c
225.4717 209.0293 224.6689 209.4951 224.4541 211.5977 C
226.6855 210.3086 227.897 209.8477 V
228.6567 209.9648 229.2856 210.3955 230.2217 213.0332 C
230.3833 213.8125 230.5229 214.2061 229.5713 215.2285 c
228.6255 216.2451 227.8052 215.7627 226.0562 217.3975 c
224.3247 219.0205 222.3555 222.4287 y
221.3662 219.4512 219.9365 217.3613 v
218.4912 215.2793 216.7246 214.3311 216.5493 212.8584 c
216.3799 211.3789 218.6338 209.2002 219.8037 209.3887 c
220.9653 209.583 221.665 210.2061 y
223.3535 211.6016 l
223.8657 209.96 223.356 208.8301 v
222.8452 207.7002 221.6631 207.1201 y
220.6279 206.7734 220.6509 206.3623 v
220.6763 205.9512 220.9873 205.7695 y
224.3369 205.7217 l
f
u
0 R
0 0 0 1 K
181.3057 234.7402 m
183.2349 237.5742 182.8511 239.377 y
183.7827 237.0371 187.3154 234.9121 v
190.8481 232.7852 193.4956 232.7656 y
190.4756 230.2734 188.5171 227.2715 v
187.229 225.2969 185.9424 222.293 y
185.6646 225.2168 182.5078 227.959 v
179.2456 230.793 176.585 230.1914 y
179.377 231.9082 181.3057 234.7402 v
b
0.102 0.9294 0.7608 0.0157 k
181.4839 234.6563 m
183.354 237.4023 182.9814 239.1504 y
183.8848 236.8848 187.3101 234.8223 v
190.7354 232.7617 193.3022 232.7422 y
190.374 230.3262 188.4751 227.4141 v
187.2271 225.5 185.9785 222.5859 y
185.7095 225.4199 182.6484 228.0801 v
179.4863 230.8262 176.9063 230.2461 y
179.6138 231.9102 181.4839 234.6563 v
f
U
0 0 0 1 k
251.1919 223.1729 m
258.2119 222.626 259.0234 223.1328 v
259.8262 223.6377 260.6968 223.876 259.2095 224.1836 C
255.9575 224.6318 256.0513 229.1416 y
258.1812 227.126 259.6118 226.7256 v
261.0532 226.3281 262.5132 226.7949 263.3159 229.501 c
263.835 231.3242 262.8896 233.2031 260.5918 233.2969 C
259.1284 233.1816 256.6211 232.3105 y
258.3604 233.2129 259.4141 234.4043 v
260.4409 235.5957 260.543 236.8252 258.8667 238.0527 c
257.2402 239.2842 256.2876 239.332 254.4805 238.5322 c
252.6377 237.7275 251.9546 236.6875 252.1792 235.1582 c
252.4214 233.6328 254.4053 232.5762 y
251.2798 233.9482 249.8154 233.4717 v
248.3335 232.9951 247.8818 232.1172 247.4028 230.3428 c
246.9204 228.5684 247.4834 226.9375 248.8999 226.625 c
250.3237 226.3115 254.3794 229.3789 y
254.2622 225.3027 251.8179 224.665 v
249.3394 224.0244 251.1919 223.1729 y
f
u
u
0 To
1 0 0 1 198.4995 224.1924 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 21.1663 17.5997 -4.5681 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\053) Tx 1 0 Tk
TO
U

u
u
u
0 To
1 0 0 1 140.3706 227.1045 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 163.2651 219.998 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 164.4546 220.7822 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 170.5503 227.1045 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 193.4448 219.998 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 194.6343 220.7822 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 212.6226 227.1045 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 235.5181 219.998 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 236.7065 220.7832 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 242.356 227.1045 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 265.2515 219.998 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 266.4399 220.7832 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
U
U
u
u
354.6299 285.3965 m
353.3428 297.3604 350.6328 299.3643 v
347.8828 301.459 350.4434 298.8828 349.292 300.252 c
348.1348 301.6406 341.6426 303.584 344.1396 310.8457 c
346.2549 316.2803 352.373 313.9473 354.1221 314.0977 c
355.875 314.2441 357.9141 310.4619 357.7832 308.8164 c
357.6563 307.1563 361.0781 315.4268 366.335 314.6592 c
371.6367 313.957 372.9941 308.8154 372.0557 308.2773 c
371.1191 307.7305 371.5918 306.5605 371.1865 305.4316 c
370.7871 304.291 366.3467 300.8574 363.8496 299.4072 c
361.1436 297.7529 359.9521 295.7314 358.8359 293.3818 c
357.9014 291.3271 357.6631 291.4707 354.6299 285.3965 c
f
0.102 0.9294 0.7608 0.0157 k
354.8232 286.5195 m
354.5371 298.5723 349.877 300.9287 v
345.124 303.4941 341.7539 308.2637 345.7295 312.4033 c
346.3555 313.0127 357.2666 317.7041 357.6973 307.7129 c
362.4902 315.4297 367.3057 314.168 v
372.0742 313.0195 371.8037 308.0205 370.4531 305.4834 c
369.1436 302.8584 363.4316 300.9521 361.1855 298.3125 c
358.9873 295.5547 354.8232 286.5195 y
f
U
0 0 0 1 k
229.2593 285.418 m
236.6528 285.3809 l
238.0063 286.1611 237.9331 287.1963 V
236.4897 288.3164 235.1597 288.2344 233.2202 289.7842 c
231.2871 291.3281 229.8521 292.1592 229.4692 295.9199 C
233.457 293.6162 235.6226 292.792 V
236.978 293.001 238.1025 293.7705 239.7759 298.4824 C
240.0649 299.8789 240.3154 300.583 238.6147 302.4063 c
236.9229 304.2227 235.459 303.3643 232.334 306.2832 c
229.2378 309.1807 225.7178 315.2695 y
223.9531 309.9541 221.3965 306.2168 v
218.8145 302.4971 215.6567 300.8027 215.3423 298.1689 c
215.0405 295.5254 219.0674 291.6338 221.1587 291.9697 c
223.2354 292.3203 224.4844 293.4307 y
227.5029 295.9248 l
228.417 292.9902 227.5049 290.9717 v
226.5923 288.9531 224.4814 287.918 y
222.6299 287.2969 222.6719 286.5625 v
222.7173 285.8301 223.2749 285.5049 y
229.2593 285.418 l
f
u
0 R
0 0 0 1 K
275.8506 306.5703 m
279.2983 311.6299 278.6118 314.8516 y
280.2754 310.6758 286.5894 306.874 v
292.9033 303.0762 297.6338 303.041 y
292.2368 298.5908 288.7383 293.2227 v
286.4355 289.6953 284.1338 284.3262 y
283.6392 289.5488 278 294.4492 v
272.1689 299.5127 267.4141 298.4385 y
272.4043 301.5088 275.8506 306.5703 v
b
0.102 0.9294 0.7608 0.0157 k
276.1694 306.4199 m
279.5103 311.3262 278.8457 314.4521 y
280.4595 310.4004 286.5811 306.7158 v
292.7007 303.0322 297.2866 302.998 y
292.0547 298.6816 288.6616 293.4775 v
286.4307 290.0576 284.2007 284.8496 y
283.7188 289.918 278.25 294.668 v
272.5986 299.5762 267.9883 298.5352 y
272.8262 301.5098 276.1694 306.4199 v
f
U
0 0 0 1 k
400.7393 285.8965 m
413.2832 284.9209 414.7334 285.8242 v
416.1699 286.7285 417.7227 287.1543 415.0654 287.7041 C
409.2539 288.5039 409.4219 296.5645 y
413.2295 292.9609 415.7852 292.2471 v
418.3613 291.5352 420.9678 292.3711 422.4043 297.207 c
423.3311 300.4629 421.6406 303.8223 417.5381 303.9902 C
414.9199 303.7822 410.4395 302.2236 y
413.5498 303.8379 415.4326 305.9697 v
417.2666 308.0967 417.4502 310.2959 414.4551 312.4863 c
411.5459 314.6904 409.8428 314.7754 406.6152 313.3438 c
403.3203 311.9082 402.1016 310.0488 402.502 307.3184 c
402.9375 304.5898 406.4805 302.6982 y
400.8926 305.1514 398.2783 304.3008 v
395.6289 303.4482 394.8213 301.8799 393.9668 298.709 c
393.1035 295.5381 394.1113 292.6279 396.6406 292.0674 c
399.1855 291.5098 406.4336 296.9873 y
406.2217 289.7051 401.8564 288.5654 v
397.4277 287.4229 400.7393 285.8965 y
f
u
u
0 To
1 0 0 1 306.5781 287.7256 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 37.8242 31.4507 -8.1632 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\053) Tx 1 0 Tk
TO
U

u
u
u
0 To
1 0 0 1 202.6997 292.9258 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6922 23.8575 -6.1924 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 243.6138 280.2285 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.1761 51.6993 -13.4189 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 245.7388 281.6279 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0583 14.7264 -6.1017 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 256.6313 292.9258 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6922 23.8575 -6.1924 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 297.5444 280.2285 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.1761 51.6993 -13.4189 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 299.6699 281.6279 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0583 14.7264 -6.1017 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 331.8145 292.9258 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6922 23.8575 -6.1924 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 372.7285 280.2285 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.1761 51.6993 -13.4189 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 374.8535 281.6279 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0583 14.7264 -6.1017 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 384.9473 292.9258 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6922 23.8575 -6.1924 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 425.8633 280.2285 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.1761 51.6993 -13.4189 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 427.9883 281.6279 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0583 14.7264 -6.1017 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
U
U
u
0 R
0 0 0 1 K
2 w
362.9736 272.6943 m
365.4844 270.5 L
S
u
0 O
0 0 0 1 k
1 w
380.3721 255.9404 m
379.8525 256.3574 l
379.7148 255.5684 377.3809 254.3613 376.1025 255.9219 c
375.4209 254.748 374.0244 254.8779 373.2705 255.9736 c
372.6201 256.9189 372.2041 257.4307 370.5059 258.4404 c
368.3965 259.6934 365.8193 260.9561 364.7676 264.0879 c
364.6768 264.3613 364.3633 264.4414 364.1982 264.3652 c
363.8877 264.2217 363.3574 263.457 362.7588 263.9561 c
360.5703 265.8691 l
359.79 266.5518 360.1631 268.2402 363.3438 271.8555 c
366.6572 275.623 367.9922 277.0645 369.5664 275.7139 c
371.1123 274.3867 371.5254 274.002 y
372.002 273.5615 371.7959 273.1689 371.6865 272.8896 c
371.6221 272.7295 371.7637 272.5146 371.9375 272.4609 c
372.209 272.377 374.8799 271.5205 376.708 270.2354 c
378.4053 269.043 379.4229 268.9814 380.3281 267.9072 c
381.4004 266.6357 385.5215 263.2666 386.7344 262.2344 c
387.9199 261.2256 389.4697 259.2021 392.0166 257.0771 c
394.4482 255.0488 392.0479 252.2783 390.0137 254.2783 c
388.4053 255.8594 388.168 255.7012 387.6465 256.2852 c
386.7324 257.3115 385.4922 258.1807 384.6475 258.8193 c
384.2607 259.1133 383.9551 259.5732 382.7891 260.3945 c
383.2549 259.7432 383.1367 259.5586 383.6436 258.4434 c
384.334 256.7578 381.5625 255.0234 380.3721 255.9404 c
f
1 g
366.8076 269.5176 m
365.4502 268.0479 363.4648 265.1875 363.3408 264.874 c
363.2236 264.5801 362.9365 264.584 362.6289 264.9063 c
362.415 265.1299 361.2334 266.1494 y
360.7168 266.6006 360.5527 267.6797 364.0625 271.6953 c
367.7217 275.8262 368.3525 276.21 369.5791 275.1377 c
371.0635 273.7666 l
371.1396 273.6699 371.1602 273.5537 371.126 273.417 c
371.043 273.0791 370.2393 273.2305 366.8076 269.5176 c
f
370 266.0117 m
369.874 266.002 369.7529 265.9102 369.7334 265.8291 c
369.6426 265.4424 370.125 265.377 370.3799 265.1904 c
370.5898 265.0371 371.8057 264.2881 371.9766 263.6963 c
372.1484 263.1035 372.4883 261.9463 371.8262 260.6553 c
371.6982 260.4219 371.5127 259.5449 371.877 258.9375 c
372.1338 258.5107 371.7549 258.1992 371.4248 258.4355 c
370.541 259.0713 369.9932 258.9492 367.4609 261.1748 c
365.5361 263.0527 363.9824 265.1016 366.207 267.9023 c
367.458 269.417 369.3281 271.4316 370.1973 271.9902 c
371.0811 272.5557 371.6924 272.0117 372.4805 271.8145 c
375.582 270.8174 377.0342 269.4395 378.5225 268.625 c
379.1084 268.3047 379.6494 268.1699 379.8916 267.1816 c
380.4072 265.0771 381.7373 263.3555 381.8848 262.7344 c
382.0029 262.3232 382.002 262.168 381.958 262.0322 c
381.8867 261.8105 382.1484 261.5459 382.2139 261.1436 c
382.2705 260.8965 382.291 260.7813 382.3984 260.5645 c
381.9189 260.4668 382.0039 260.9717 381.1387 260.6084 c
380.9541 260.5293 380.8076 260.208 380.752 260.0605 c
380.6738 259.6748 381.1875 259.1523 381.3701 258.9248 c
381.5146 258.7441 381.6914 258.5303 381.8535 258.3232 c
382.2842 257.7744 382.9023 258.168 382.7559 257.9639 c
382.0225 256.9326 380.9199 258.2402 380.5625 258.6758 c
380.1738 259.0762 380.0156 259.584 379.6885 260.0547 c
379.6289 260.3525 378.6953 261.2197 379.2979 261.8848 c
379.3809 262.0088 379.6123 262.2324 379.2168 262.3857 c
378.918 262.501 377.8438 263.4561 377.9531 263.9082 c
378.0049 264.1152 378.0137 264.2734 377.9219 264.4766 c
377.8301 264.6807 377.6602 264.6709 377.5273 264.4766 c
377.3604 264.2295 377.0762 263.9395 376.6973 264.1445 c
376.3545 264.3164 376.21 264.4307 376.1211 264.7227 c
376.0098 265.0166 375.8379 265.6074 375.6445 265.7539 c
375.457 265.8369 375.2422 265.8223 375.4482 265.3604 c
375.624 264.9404 375.5586 264.1123 374.5293 264 c
373.0098 263.832 373.2051 263.5498 370.3633 265.8672 c
370.2314 265.9766 370.1367 266.0205 370 266.0117 c
f
374.4775 262.0146 m
374.5186 262.791 374.373 263.1895 375.1113 263.3428 c
375.2266 263.3906 375.3525 263.2832 375.626 262.9043 c
375.7705 262.7041 375.7373 261.4434 374.7813 261.418 c
374.5947 261.457 374.4131 261.5313 374.4775 262.0146 c
f
372.6387 261.0762 m
372.3574 261.2002 372.8984 262.5283 372.9707 262.582 c
373.0791 262.6582 373.1855 262.751 373.666 262.3926 c
373.8672 262.2158 373.8955 261.499 373.4766 261.1064 c
373.1914 260.8398 372.6924 261.0527 372.6387 261.0762 c
f
376.7061 262.0596 m
376.7012 262.4453 376.6123 263.2285 376.9219 263.334 c
377.293 263.458 377.5771 263.4395 377.8906 262.8799 c
378.1016 262.5068 378.2383 261.5186 377.1016 261.4551 c
376.8467 261.5439 376.7207 261.542 376.7061 262.0596 c
f
375.7168 256.2852 m
374.8809 254.6914 373.5146 256.0566 373.2334 256.916 c
372.7813 258.2959 372.0859 259.1504 372.0938 259.8057 c
372.0977 260.1768 372.3047 260.9502 372.5947 260.7451 c
372.8525 260.5645 373.2383 260.5732 373.46 260.5801 c
373.5547 260.584 373.7969 261.0107 373.8682 260.9375 c
373.9111 260.874 373.4854 260.583 374.001 259.3447 c
374.2334 258.8213 374.7813 257.7471 375.0234 257.4189 c
375.21 257.166 375.3457 256.8555 375.7002 256.4473 c
375.7646 256.3662 375.7373 256.3174 375.7168 256.2852 c
f
379.2969 256.833 m
378.3496 257.7578 377.8975 258.0479 377.6445 258.251 c
376.3086 259.1973 376.1758 260.1445 376.2148 260.7236 c
376.168 261.1768 376.2725 261.4355 376.2148 261.7637 c
376.167 262.0273 376.2334 262.4473 375.9727 261.9385 c
375.8457 261.6895 375.8994 261.4121 375.4648 261.1885 c
375.1572 261.0889 375.0195 260.9873 374.4482 261.0938 c
374.3936 261.1172 374.3389 261.1523 374.3555 261.1006 c
374.3867 260.9102 373.9375 260.167 374.7324 259 c
375.7881 257.4531 376.0986 256.5889 376.3408 256.2871 c
376.3818 256.2363 376.46 256.168 376.5303 256.1211 c
376.9688 255.7744 377.1836 255.7109 377.4092 255.7021 c
377.6338 255.6924 378.8496 255.6729 379.3096 256.5645 c
379.3477 256.6797 379.3594 256.7783 379.2969 256.833 c
f
383.1543 257.5186 m
383.252 257.4336 382.125 255.8115 380.7656 256.335 c
380.0977 256.5908 379.9404 256.9629 379.4229 257.3857 c
378.5947 258.1836 377.8457 258.7266 377.5 259.041 c
376.9932 259.5029 376.6836 259.9678 376.667 260.5068 c
376.6582 260.7793 376.5537 261.2939 376.8369 261.1943 c
377.1191 261.0957 377.2822 261.0146 377.7617 261.1982 c
378.3887 261.4375 378.3379 262.0098 378.5127 261.6484 c
378.6621 261.3379 378.668 261.3164 378.7656 260.9111 c
379.1377 259.3623 381.5957 255.9043 382.8906 257.5273 c
383.0029 257.626 383.1729 257.625 383.1543 257.5186 c
f
382.5166 259.9697 m
382.7109 259.8242 382.7461 259.5801 382.8145 259.4385 c
382.9365 259.1836 383.5244 258.4492 382.8506 258.3252 c
382.1768 258.2012 381.5322 259.3779 381.2959 259.7813 c
381.2051 259.96 381.2344 260.1055 381.3438 260.2314 c
381.4541 260.3574 381.8057 260.5908 382.5166 259.9697 c
f
390.0957 258.1172 m
389.3174 258.7734 387.8994 260.7246 386.8076 261.3594 c
385.8467 262.5693 383.6719 264.0752 383.0645 264.7041 c
382.5068 265.1914 381.3613 266.415 380.3867 267.0449 c
380.5391 266.7393 380.8477 265.2637 381.9404 263.6699 c
382.3301 263.1318 382.5254 262.5684 382.4541 261.6973 c
383.2959 260.6777 384.668 259.3564 384.8555 259.4375 c
384.9453 259.4756 385.0303 259.5371 385.1777 259.3398 c
385.3086 259.166 385.1875 259.1973 385.4746 258.9209 c
386.9854 257.5264 387.832 256.8359 y
388.1934 256.5586 388.1904 256.7861 388.3398 256.7109 c
388.4727 256.6465 388.2949 256.6035 388.6201 256.2461 c
388.793 256.0596 389.2227 255.5576 390.6172 254.3779 c
391.8057 253.2891 393.6904 254.8789 391.71 256.7559 c
390.3633 258.0293 390.2695 257.8916 390.0957 258.1172 c
f
U
U
u
u
0 R
0 0 0 1 K
2 w
460.8564 206.0645 m
385.8369 195.9844 407.751 221.1543 v
S
0 O
0 0 0 1 k
1 w
411.7139 225.7061 m
410.6436 222.8721 409.6865 219.0342 409.6875 216.1377 c
407.2305 220.5566 l
402.5156 222.3818 l
405.3848 222.7793 409.0547 224.2559 411.7139 225.7061 c
f
U
u
449.5166 222.6768 m
448.7959 229.3721 447.2793 230.4922 v
445.7393 231.6641 447.1729 230.2246 446.5293 230.9893 c
445.8809 231.7666 442.249 232.8535 443.6455 236.9199 c
444.8301 239.959 448.2539 238.6523 449.2324 238.7383 c
450.2119 238.8213 451.3545 236.7031 451.2803 235.7832 c
451.209 234.8535 453.124 239.4814 456.0664 239.0527 c
459.0332 238.6572 459.793 235.7813 459.2676 235.4814 c
458.7432 235.1748 459.0078 234.5205 458.7813 233.8877 c
458.5576 233.25 456.0723 231.3301 454.6748 230.5176 c
453.1611 229.5908 452.4941 228.4609 451.8682 227.1465 c
451.3457 225.9951 451.2129 226.0752 449.5166 222.6768 c
f
0.102 0.9294 0.7608 0.0157 k
449.625 223.3066 m
449.4648 230.0498 446.8545 231.3691 v
444.1973 232.8047 442.3105 235.4736 444.5352 237.79 c
444.8857 238.1309 450.9902 240.7559 451.2324 235.165 c
453.9141 239.4824 456.6094 238.7773 v
459.2773 238.1357 459.126 235.3369 458.3711 233.917 c
457.6377 232.4492 454.4404 231.3818 453.1846 229.9053 c
451.9551 228.3623 449.625 223.3066 y
f
U
0 0 0 1 k
379.3594 222.6885 m
383.4971 222.6699 l
384.2549 223.1045 384.2139 223.6855 V
383.4063 224.3125 382.6611 224.2656 381.5762 225.1318 c
380.4941 225.999 379.6914 226.4639 379.4775 228.5664 C
381.709 227.2773 382.9199 226.8145 V
383.6797 226.9336 384.3086 227.3643 385.2451 230 C
385.4053 230.7803 385.5469 231.1758 384.5947 232.1953 c
383.6484 233.2119 382.8291 232.7314 381.0801 234.3662 c
379.3477 235.9883 377.3779 239.3936 y
376.3906 236.4189 374.96 234.3291 v
373.5137 232.2461 371.7471 231.2988 371.5713 229.8242 c
371.4023 228.3457 373.6563 226.166 374.8262 226.3545 c
375.9883 226.5518 376.6875 227.1729 y
378.377 228.5684 l
378.8887 226.9287 378.3779 225.7969 v
377.8672 224.667 376.6855 224.0879 y
375.6494 223.7402 375.6738 223.3301 v
375.6992 222.9199 376.0107 222.7383 y
379.3594 222.6885 l
f
u
0 R
0 0 0 1 K
408.4209 250.2129 m
410.3496 253.0469 409.9658 254.8496 y
410.8965 252.5117 414.4287 250.3867 v
417.9619 248.2598 420.6113 248.2402 y
417.5889 245.7461 415.6309 242.7461 v
414.3438 240.7695 413.0566 237.7656 y
412.7793 240.6895 409.623 243.4316 v
406.3604 246.2656 403.6992 245.6641 y
406.4922 247.3828 408.4209 250.2129 v
b
0.102 0.9294 0.7608 0.0157 k
408.5977 250.1309 m
410.4678 252.875 410.0967 254.625 y
410.998 252.3574 414.4238 250.2949 v
417.8486 248.2344 420.417 248.2148 y
417.4883 245.7988 415.5898 242.8867 v
414.3408 240.9727 413.0928 238.0586 y
412.8242 240.8945 409.7627 243.5547 v
406.6006 246.3008 404.0205 245.7188 y
406.7285 247.3828 408.5977 250.1309 v
f
U
0 0 0 1 k
468.2207 200.1709 m
475.2402 199.624 476.0518 200.1309 v
476.8545 200.6357 477.7256 200.876 476.2383 201.1816 C
472.9873 201.6318 473.0811 206.1416 y
475.2109 204.124 476.6406 203.7236 v
478.082 203.3262 479.543 203.7949 480.3457 206.501 c
480.8643 208.3223 479.917 210.2012 477.6201 210.2949 C
476.1572 210.1797 473.6494 209.3086 y
475.3896 210.2109 476.4434 211.4023 v
477.4697 212.5957 477.5713 213.8232 475.8965 215.0527 c
474.2686 216.2842 473.3164 216.332 471.5098 215.5303 c
469.668 214.7275 468.9834 213.6875 469.209 212.1582 c
469.4502 210.6309 471.4336 209.5742 y
468.3086 210.9482 466.8438 210.4697 v
465.3623 209.9941 464.9111 209.1152 464.4307 207.3408 c
463.9492 205.5664 464.5117 203.9375 465.9287 203.625 c
467.3535 203.3115 471.4082 206.377 y
471.29 202.3027 468.8467 201.665 v
466.3682 201.0264 468.2207 200.1709 y
f
u
u
0 To
1 0 0 1 422.625 223.9795 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 21.1663 17.5997 -4.5681 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\053) Tx 1 0 Tk
TO
U

u
u
u
0 To
1 0 0 1 364.4961 226.8906 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 387.3906 219.7842 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 388.5801 220.5684 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 394.6758 226.8906 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 417.5703 219.7842 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 418.7598 220.5684 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 436.748 226.8906 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 459.6445 219.7842 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 460.832 220.5693 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 466.4824 226.8906 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 16.0561 13.3506 -3.4652 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 489.377 219.7842 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 34.7935 28.9307 -7.5092 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 490.5664 220.5693 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 10.1054 8.2408 -3.4145 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
U
u
0 R
0 0 0 1 K
2 w
425.1729 249.3359 m
502.7578 255.9941 479.1875 233.2129 v
S
0 O
0 0 0 1 k
1 w
474.8477 229.0186 m
476.1572 231.75 477.4414 235.4912 477.6895 238.377 c
479.7568 233.7637 l
484.2979 231.5391 l
481.4053 231.3906 477.6221 230.2354 474.8477 229.0186 c
f
U
U
u
u
503.3926 146.0088 m
502.1055 157.958 499.3994 159.958 v
496.6514 162.0518 499.21 159.4785 498.0615 160.8438 c
496.9033 162.2334 490.4209 164.1738 492.9141 171.4268 c
495.0273 176.8535 501.1367 174.5234 502.8848 174.6738 c
504.6348 174.8203 506.6719 171.0439 506.54 169.3994 c
506.4131 167.7422 509.832 176.001 515.082 175.2344 c
520.377 174.5322 521.7344 169.3975 520.7939 168.8613 c
519.8604 168.3145 520.3311 167.1465 519.9268 166.0195 c
519.5283 164.8789 515.0928 161.4492 512.5986 160.001 c
509.8975 158.3496 508.707 156.3311 507.5918 153.9844 c
506.6582 151.9326 506.4189 152.0732 503.3926 146.0088 c
f
0.102 0.9294 0.7608 0.0157 k
503.5859 147.1309 m
503.2988 159.168 498.6426 161.5225 v
493.8984 164.084 490.5313 168.8486 494.502 172.9824 c
495.125 173.5898 506.0225 178.2744 506.4551 168.2949 c
511.2422 176.0039 516.0527 174.7451 v
520.8135 173.5967 520.5439 168.6045 519.1973 166.0703 c
517.8877 163.4482 512.1807 161.5439 509.9375 158.9072 c
507.7441 156.1543 503.5859 147.1309 y
f
U
0 0 0 1 k
378.1787 146.0293 m
385.5625 145.9932 l
386.9141 146.7705 386.8408 147.8057 V
385.4004 148.9248 384.0723 148.8428 382.1357 150.3896 c
380.2041 151.9336 378.7715 152.7637 378.3887 156.5176 C
382.3701 154.2168 384.5332 153.3936 V
385.8887 153.6045 387.0107 154.3711 388.6816 159.0771 C
388.9697 160.4688 389.2207 161.1748 387.5205 162.9951 c
385.833 164.8115 384.3701 163.9531 381.248 166.8682 c
378.1572 169.7637 374.6406 175.8457 y
372.8779 170.5352 370.3252 166.8027 v
367.7461 163.0869 364.5938 161.3955 364.2783 158.7646 c
363.9766 156.125 367.999 152.2363 370.0879 152.5732 c
372.1611 152.9229 373.4092 154.0342 y
376.4248 156.5254 l
377.3379 153.5938 376.4268 151.5762 v
375.5146 149.5615 373.4063 148.5254 y
371.5566 147.9053 371.6006 147.1738 v
371.6445 146.4404 372.2012 146.1152 y
378.1787 146.0293 l
f
u
0 R
0 0 0 1 K
552.7119 167.8203 m
556.1543 172.877 555.4697 176.0938 y
557.1318 171.9219 563.4365 168.127 v
569.7422 164.332 574.4678 164.2969 y
569.0762 159.8516 565.582 154.4922 v
563.2832 150.9688 560.9854 145.6055 y
560.4902 150.8242 554.8574 155.7168 v
549.0352 160.7734 544.2852 159.7012 y
549.2695 162.7656 552.7119 167.8203 v
b
0.102 0.9294 0.7608 0.0157 k
553.0293 167.6719 m
556.3672 172.5723 555.7031 175.6934 y
557.3145 171.6484 563.4277 167.9688 v
569.541 164.2891 574.123 164.2539 y
568.8955 159.9434 565.5068 154.7461 v
563.2783 151.3281 561.0508 146.1289 y
560.5703 151.1895 555.1084 155.9336 v
549.4639 160.8379 544.8594 159.7969 y
549.6914 162.7695 553.0293 167.6719 v
f
U
0 0 0 1 k
421.4414 145.8428 m
433.9697 144.8672 435.418 145.7695 v
436.8525 146.6729 438.4053 147.0977 435.751 147.6465 C
429.9482 148.4463 430.1152 156.4961 y
433.916 152.8965 436.4688 152.1846 v
439.042 151.4727 441.6484 152.3086 443.0811 157.1357 c
444.0078 160.3887 442.3193 163.7451 438.2188 163.9131 C
435.6064 163.7061 431.1309 162.1484 y
434.2363 163.7617 436.1162 165.8896 v
437.9492 168.0137 438.1318 170.21 435.1406 172.4004 c
432.2363 174.5986 430.5361 174.6836 427.3115 173.2549 c
424.0225 171.8184 422.8027 169.9629 423.2041 167.2363 c
423.6367 164.5117 427.1758 162.6211 y
421.5977 165.0723 418.9844 164.2236 v
416.3398 163.3711 415.5332 161.8047 414.6777 158.6367 c
413.8174 155.4697 414.8223 152.5615 417.3496 152.0049 c
419.8926 151.4463 427.1309 156.917 y
426.9209 149.6445 422.5586 148.5068 v
418.1348 147.3643 421.4414 145.8428 y
f
u
u
0 To
1 0 0 1 455.3975 148.332 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 37.7769 31.4114 -8.153 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\053) Tx 1 0 Tk
TO
U

u
u
u
0 To
1 0 0 1 351.6504 153.5273 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 392.5137 140.8447 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 394.6357 142.2441 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 405.5146 153.5273 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 446.377 140.8447 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 448.499 142.2441 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 480.6035 153.5273 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 521.4668 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 523.5889 142.2441 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

U
u
u
u
0 To
1 0 0 1 533.6719 153.5273 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 28.6563 23.8277 -6.1846 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\174\040) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 574.5342 140.8457 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 62.0984 51.6347 -13.4021 Tf
27.151 100 Tz
0 Tt
0 TV
0 Tc
(\076) Tx 1 0 Tk
TO
U

U
u
0 To
1 0 0 1 576.6563 142.2441 0 Tp
0 Tv
TP
0 Tr
/_BrushScriptMT 18.0357 14.708 -6.0941 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\105) Tx 1 0 Tk
TO
U

U
U
U
u
0 R
0 0 0 1 K
2 w
493.4844 205.5 m
496.1299 203.4707 L
S
u
0 O
0 0 0 1 k
1 w
511.918 189.8926 m
511.3721 190.2754 l
511.2852 189.4785 509.0332 188.124 507.6572 189.6006 c
507.0518 188.3848 505.6504 188.4258 504.8281 189.4717 c
504.1191 190.373 503.6699 190.8574 501.9111 191.7559 c
499.7266 192.8721 497.0742 193.9678 495.8242 197.0264 c
495.7168 197.293 495.3975 197.3525 495.2383 197.2666 c
494.9375 197.1025 494.457 196.3066 493.8281 196.7666 c
491.5215 198.5352 l
490.6992 199.166 490.9639 200.876 493.9072 204.6875 c
496.9736 208.6592 498.2139 210.1826 499.8711 208.9346 c
501.498 207.709 501.9346 207.3516 y
502.4385 206.9424 502.2578 206.5371 502.167 206.252 c
502.1123 206.0879 502.2676 205.8828 502.4453 205.8398 c
502.7207 205.7725 505.4404 205.0898 507.3477 203.9238 c
509.1172 202.8418 510.1367 202.8457 511.1094 201.832 c
512.2607 200.6309 516.5879 197.5313 517.8643 196.5801 c
519.1123 195.6484 520.7871 193.7285 523.4648 191.7705 c
526.0215 189.9004 523.8027 186.9834 521.6455 188.8486 c
519.9385 190.3242 519.7119 190.1504 519.1543 190.7002 c
518.1768 191.666 516.8838 192.4541 515.999 193.0381 c
515.5947 193.3066 515.2607 193.7461 514.0449 194.4912 c
514.5508 193.8711 514.4453 193.6787 515.0225 192.5986 c
515.8184 190.96 513.1641 189.0527 511.918 189.8926 c
f
1 g
497.5127 202.5752 m
496.252 201.0215 494.4531 198.04 494.3496 197.7197 c
494.252 197.418 493.9648 197.4043 493.6377 197.7061 c
493.4092 197.915 492.165 198.8574 y
491.6211 199.2744 491.3887 200.3408 494.6338 204.5723 c
498.0225 208.9287 498.6279 209.3516 499.9199 208.3604 c
501.4883 207.0869 l
501.5713 206.9951 501.5986 206.8809 501.5742 206.7422 c
501.5127 206.3994 500.7002 206.499 497.5127 202.5752 c
f
500.9229 199.2803 m
500.7979 199.2617 500.6826 199.1621 500.6689 199.0811 c
500.6025 198.6885 501.0879 198.6543 501.3545 198.4844 c
501.5742 198.3447 502.835 197.6748 503.043 197.0957 c
503.2529 196.5156 503.665 195.3818 503.0879 194.0508 c
502.9746 193.8105 502.8457 192.9238 503.248 192.3408 c
503.5313 191.9307 503.1738 191.5957 502.8291 191.8105 c
501.9053 192.3877 501.3672 192.2314 498.6982 194.291 c
496.6572 196.042 494.9766 197.9873 497.0176 200.9238 c
498.1689 202.5156 499.9063 204.6465 500.7383 205.2588 c
501.584 205.8789 502.2285 205.376 503.0273 205.2295 c
506.1865 204.4316 507.7236 203.1494 509.2607 202.4326 c
509.8662 202.1504 510.415 202.0498 510.7188 201.0801 c
511.3691 199.0127 512.8066 197.3789 512.9922 196.7686 c
513.1367 196.3662 513.1455 196.2109 513.1113 196.0723 c
513.0537 195.8467 513.3311 195.5986 513.4229 195.2012 c
513.4951 194.959 513.5234 194.8447 513.6436 194.6357 c
513.1719 194.5078 513.2246 195.0166 512.3848 194.5986 c
512.2051 194.5088 512.0791 194.1777 512.0322 194.0283 c
511.9795 193.6377 512.5254 193.1494 512.7227 192.9336 c
512.8789 192.7627 513.0684 192.5605 513.2432 192.3643 c
513.708 191.8447 514.2998 192.2764 514.166 192.0635 c
513.501 190.9873 512.3164 192.2227 511.9326 192.6338 c
511.5195 193.0088 511.3291 193.5049 510.9717 193.9541 c
510.8945 194.248 509.9072 195.0527 510.4658 195.7559 c
510.54 195.8848 510.7568 196.123 510.3525 196.25 c
510.0469 196.3457 508.9141 197.2305 508.9941 197.6885 c
509.0322 197.8984 509.0313 198.0576 508.9258 198.2539 c
508.8213 198.4512 508.6533 198.4307 508.5322 198.2285 c
508.3818 197.9717 508.1172 197.6641 507.7256 197.8447 c
507.373 197.9941 507.2217 198.0986 507.1133 198.3848 c
506.9834 198.6709 506.7754 199.25 506.5723 199.3828 c
506.3809 199.4541 506.167 199.4258 506.4014 198.9775 c
506.6035 198.5703 506.5918 197.7402 505.5713 197.5615 c
504.0664 197.2969 504.2783 197.0283 501.2949 199.1592 c
501.1563 199.2598 501.0586 199.2969 500.9229 199.2803 c
f
505.6465 195.5771 m
505.6377 196.3545 505.4678 196.7422 506.1943 196.9424 c
506.3057 196.998 506.4385 196.8984 506.7363 196.5381 c
506.8926 196.3486 506.9404 195.0879 505.9873 195.001 c
505.7988 195.0283 505.6133 195.0898 505.6465 195.5771 c
f
503.8711 194.5234 m
503.583 194.6289 504.0381 195.9893 504.1074 196.0469 c
504.21 196.1309 504.3105 196.2295 504.8125 195.9023 c
505.0254 195.7393 505.0986 195.0254 504.7051 194.6074 c
504.4385 194.3223 503.9268 194.5029 503.8711 194.5234 c
f
507.8682 195.7637 m
507.8379 196.1484 507.6992 196.9248 508.002 197.0498 c
508.3643 197.1973 508.6494 197.1963 508.9971 196.6592 c
509.2314 196.2998 509.4316 195.3223 508.3008 195.1865 c
508.041 195.2588 507.916 195.249 507.8682 195.7637 c
f
507.249 189.9385 m
506.5166 188.2939 505.0664 189.5703 504.7305 190.4092 c
504.1914 191.7568 503.4424 192.5654 503.4082 193.2207 c
503.3896 193.5908 503.5469 194.376 503.8486 194.1895 c
504.1172 194.0264 504.502 194.0586 504.7227 194.0801 c
504.8164 194.0908 505.0313 194.5313 505.1074 194.4629 c
505.1543 194.4023 504.748 194.085 505.3418 192.8818 c
505.6074 192.374 506.2227 191.3379 506.4854 191.0254 c
506.6875 190.7852 506.8428 190.4844 507.2227 190.0996 c
507.291 190.0225 507.2676 189.9727 507.249 189.9385 c
f
510.7871 190.7139 m
509.7832 191.5762 509.3135 191.8369 509.0479 192.0234 c
507.6533 192.8818 507.4609 193.8184 507.4629 194.3994 c
507.3877 194.8486 507.4746 195.1143 507.3965 195.4375 c
507.332 195.6973 507.3711 196.1211 507.1436 195.5967 c
507.0332 195.3398 507.1035 195.0664 506.6846 194.8154 c
506.3838 194.6963 506.2529 194.5869 505.6758 194.6563 c
505.6201 194.6758 505.5625 194.707 505.584 194.6572 c
505.627 194.4688 505.2246 193.6992 506.0938 192.585 c
507.2461 191.1084 507.6113 190.2666 507.8721 189.9805 c
507.916 189.9326 507.998 189.8691 508.0713 189.8271 c
508.5313 189.5088 508.75 189.459 508.9756 189.4648 c
509.2002 189.4688 510.4141 189.5273 510.8174 190.4473 c
510.8477 190.5635 510.8525 190.6631 510.7871 190.7139 c
f
514.5928 191.6445 m
514.6953 191.5654 513.6738 189.875 512.2852 190.3105 c
511.6016 190.5234 511.4209 190.8848 510.877 191.2734 c
510 192.0166 509.2178 192.5107 508.8525 192.8027 c
508.3174 193.2305 507.9785 193.6758 507.9277 194.2129 c
507.9023 194.4834 507.7646 194.9902 508.0537 194.9092 c
508.3418 194.8281 508.5098 194.7588 508.9756 194.9717 c
509.5859 195.251 509.5 195.8184 509.6973 195.4697 c
509.8652 195.1689 509.873 195.1475 509.9971 194.75 c
510.4668 193.2275 513.1406 189.9336 514.3291 191.6367 c
514.4346 191.7422 514.6045 191.752 514.5928 191.6445 c
f
513.7998 194.0498 m
514.0029 193.917 514.0547 193.6758 514.1309 193.5381 c
514.2695 193.292 514.9023 192.5967 514.2383 192.4297 c
513.5732 192.2627 512.8555 193.3965 512.5938 193.7832 c
512.4922 193.9561 512.5117 194.1035 512.6133 194.2363 c
512.7148 194.3682 513.0508 194.624 513.7998 194.0498 c
f
521.4814 192.6855 m
520.6631 193.29 519.124 195.1475 517.9932 195.7109 c
516.957 196.8564 514.6904 198.2207 514.0439 198.8096 c
513.457 199.2607 512.2354 200.4082 511.2217 200.9746 c
511.3945 200.6787 511.7969 199.2266 512.9883 197.7061 c
513.4121 197.1934 513.6426 196.6436 513.627 195.7695 c
514.5322 194.8057 515.9854 193.5752 516.168 193.668 c
516.2559 193.7119 516.3359 193.7793 516.4951 193.5918 c
516.6367 193.4268 516.5146 193.4492 516.8193 193.1924 c
518.416 191.8975 519.3047 191.2617 y
519.6826 191.0078 519.665 191.2354 519.8193 191.1699 c
519.9561 191.1133 519.7813 191.0596 520.1289 190.7236 c
520.3125 190.5488 520.7744 190.0752 522.2402 188.9863 c
523.4961 187.9766 525.2764 189.6836 523.1797 191.4297 c
521.7549 192.6143 521.6689 192.4707 521.4814 192.6855 c
f
U
U
u
0 To
1 0 0 1 295.4844 140.0615 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_TimesNewRomanPS-ItalicMT 64.6448 53.752 -13.9517 Tf
99.244 100 Tz
0 Tt
0 TV
0 Tc
(\075) Tx 1 0 Tk
TO
U

u
u
u
498.3379 660.335 m
531.917 659.9951 542.9404 663.3867 v
546.332 665.2529 546.1621 661.6914 v
549.8086 660.0801 528.6943 602.334 v
529.9668 597.7549 518.7734 596.9922 v
507.5801 596.2285 490.791 595.9746 473.7471 599.0273 c
470.4395 599.2813 471.7109 603.0967 v
487.7383 636.6768 490.2813 648.8867 v
491.8086 651.1768 492.0625 656.5186 v
490.6211 661.0977 498.3379 660.335 v
f
0.0235 0 0.11 0 k
495.2803 659.7295 m
529.6221 659.3477 544.5039 663.1631 v
546.667 664.9014 545.2676 656.6768 v
543.4023 645.709 527.7148 601.3467 y
528.0957 592.9521 473.9111 599.8203 v
470.4775 599.8203 473.9111 605.9258 v
477.3457 612.0313 492.6094 647.9004 492.9902 655.9131 c
492.2275 658.9658 495.2803 659.7295 v
f
u
*u
1 D
495.6123 657.0073 m
495.3955 656.8687 495.1221 656.5562 495.2383 656.3267 c
495.2627 656.2813 495.2832 656.2393 495.3047 656.2021 c
495.3604 656.106 495.4268 656.061 495.5098 656.0479 C
495.0459 655.2622 494.415 654.2271 493.8779 653.3481 c
491.4951 649.4512 491.4951 649.4512 491.6914 649.1108 c
491.7588 648.9946 491.875 648.9072 492.0049 648.8735 c
492.3291 648.7891 492.3721 648.7783 499.7549 653.2134 c
501.752 654.4131 504.1133 655.8296 505.9902 656.9272 C
504.5566 655.6938 502.7578 654.1826 501.1543 652.835 c
492.9902 645.9761 493.0156 645.9321 493.3271 645.394 c
493.3945 645.2769 493.5361 645.1724 493.667 645.1392 c
494.21 645.0024 495.5654 645.7192 504.6982 651.3506 c
506.1064 652.2178 507.6289 653.1553 509.0225 654.0015 C
507.1982 652.6138 504.9932 650.9688 502.8994 649.4077 c
490.501 640.165 490.5742 640.0381 490.9258 639.4287 c
490.9941 639.312 491.1406 639.2041 491.2715 639.1709 c
491.9805 638.9907 494.918 640.666 508.7295 649.1274 c
513.3916 651.9839 518.792 655.2905 522.1689 657.2246 C
518.291 654.417 511.0742 649.5991 504.9121 645.4868 c
485.8809 632.7842 485.9766 632.6187 486.3799 631.9199 c
486.4473 631.8032 486.5889 631.6987 486.7197 631.666 c
487.4531 631.478 491.1328 633.5869 508.5928 644.2026 c
515.7471 648.5532 524.1572 653.6665 528.7861 656.2539 C
524.4688 653.2773 516.249 648.0273 508.7256 643.2236 c
482.5967 626.5391 481.5801 625.5444 482.0859 624.668 c
482.1533 624.5518 482.2959 624.4468 482.4258 624.4131 c
483.2324 624.2061 488.165 627.043 510.208 640.3896 c
521.4121 647.1738 534.8799 655.3267 539.9355 657.9326 C
535.4619 654.6011 522.3086 646.48 511.3564 639.7202 c
484.0059 622.8403 481.3652 620.8896 481.9502 619.8765 c
482.0176 619.7598 482.2012 619.627 482.332 619.5938 c
483.6641 619.2559 493.4482 625.1289 513.9082 637.6729 c
523.3545 643.4644 533.7832 649.856 538.1895 652.1929 C
533.4102 648.6621 519.3496 640.0322 507.6416 632.8486 c
479.9756 615.873 478.9658 614.9414 479.4756 614.0591 c
479.543 613.9424 479.7217 613.8125 479.8516 613.7798 c
481.0781 613.4688 488.8477 618.0444 511.5752 631.9546 c
520.7813 637.5884 530.8672 643.7588 535.8838 646.5205 C
531.1094 643.2222 520.9795 636.8047 511.7715 630.9707 c
482.0928 612.167 480.918 611.0752 481.4287 610.1914 c
481.4961 610.0742 481.6758 609.9448 481.8066 609.9116 c
482.9053 609.6367 488.7715 613.1245 507.0488 624.4678 c
517.0469 630.6714 529.0928 638.1421 533.1455 640.0078 C
529.502 637.1211 517.0479 629.2764 506.749 622.7905 c
481.2627 606.7402 478.8086 604.8765 479.3848 603.8779 c
479.4521 603.7612 479.6338 603.6309 479.7646 603.5977 c
481.0332 603.2764 489.9111 608.6221 509.8682 620.897 c
520.1533 627.2236 532.4912 634.8091 537.2051 637.1934 C
532.8369 633.9717 520.0488 626.0356 509.4033 619.4307 c
483.1689 603.1533 482.2871 602.332 482.7803 601.4775 c
482.8477 601.3608 483.002 601.248 483.1328 601.2148 c
484.0713 600.9761 489.8281 604.3647 509.1396 616.1465 c
518.2178 621.6851 529.0234 628.2749 533.792 630.8135 C
529.8047 627.8989 520.6865 621.9609 513.0039 616.96 c
491.5078 602.9663 491.6201 602.772 492.0361 602.0513 c
492.1035 601.9346 492.2598 601.8198 492.3906 601.7866 c
493.2695 601.563 498.2227 604.4746 513.6768 613.938 c
519.4443 617.4697 525.7119 621.3057 529.3975 623.3989 C
526.1211 620.957 520.4863 617.0107 515.6094 613.5991 c
500.4014 602.9604 500.4492 602.8779 500.8203 602.2358 c
500.8877 602.1187 501.0439 602.0039 501.1758 601.9712 c
501.9346 601.7793 504.918 603.48 517.9756 611.5449 c
521.5146 613.7314 525.4727 616.1714 528.5049 617.9658 C
525.8066 616.0908 522.2441 613.6821 518.8916 611.417 c
500.9902 599.3198 501.0986 599.1323 501.501 598.4346 c
501.5684 598.3184 501.6953 598.2236 501.8252 598.1899 c
502.3135 598.064 503.7021 598.8022 516.2471 606.3633 c
519.9102 608.5723 524.1514 611.1279 526.8584 612.6875 C
525.21 611.2393 522.9199 609.3027 520.8984 607.5938 c
512.957 600.8828 512.9824 600.8394 513.2891 600.3086 c
513.3564 600.1924 513.4775 600.1006 513.6084 600.0674 c
513.9424 599.9824 514.0215 599.9624 520.1133 603.6836 c
521.6895 604.6455 523.5967 605.8096 524.9775 606.6157 C
524.5176 606.0522 524.0059 605.4326 523.5293 604.8574 c
520.1484 600.7764 520.1426 600.769 520.3779 600.3613 c
520.3789 600.3608 520.3789 600.3604 520.3799 600.3594 c
520.4463 600.2441 520.5576 600.1587 520.6875 600.125 c
520.9561 600.0542 520.9561 600.0547 525.3691 602.6606 c
526.9824 603.6138 528.9922 604.7998 529.2285 604.9038 c
529.4229 604.9893 529.5586 605.1938 529.542 605.4063 c
529.5254 605.6182 529.3926 605.8018 529.1865 605.8555 c
528.9277 605.9233 528.9277 605.9233 524.8604 603.522 c
524.1289 603.0898 523.3662 602.6401 522.6553 602.2236 C
523.1865 602.875 523.7783 603.5913 524.2988 604.2197 c
527.3584 607.9141 527.3584 607.9141 527.1348 608.3027 c
527.0664 608.4189 526.9414 608.5127 526.8105 608.5459 c
526.4365 608.6411 526.1006 608.5122 519.5918 604.5366 c
518.7471 604.0205 517.834 603.4629 516.9775 602.9453 C
518.3574 604.1367 520.0352 605.5552 521.543 606.8296 c
530.3066 614.2354 530.2656 614.3066 529.9473 614.8579 c
529.8799 614.9741 529.7549 615.0679 529.625 615.1016 c
529.1797 615.2163 528.4834 614.9072 515.7295 607.2197 c
512.5811 605.3218 509.0674 603.207 506.3369 601.6055 C
509.8027 604.0664 514.9541 607.5488 519.4512 610.5879 c
534.0947 620.4829 534.0469 620.5654 533.6777 621.2061 c
533.6094 621.3232 533.459 621.4336 533.3271 621.4663 c
532.623 621.644 529.9512 620.1182 517.4502 612.3965 c
513.0791 609.6963 508.0254 606.5757 504.7344 604.6826 C
507.6084 606.7817 512.0654 609.8994 516.1816 612.7793 c
533.4814 624.8813 533.3896 625.0396 533.0059 625.7051 c
532.9385 625.8218 532.791 625.9302 532.6602 625.9629 c
531.9189 626.1519 528.6377 624.272 513.1553 614.791 c
507.043 611.0483 499.8994 606.6753 495.7998 604.3735 C
499.709 607.1108 506.9326 611.8145 513.5498 616.1221 c
536.3594 630.9707 537.1777 631.7969 536.707 632.6123 c
536.6396 632.729 536.4785 632.8472 536.3477 632.8804 c
535.3145 633.1436 528.8496 629.3423 508.6182 617 c
500.374 611.9707 491.3389 606.459 486.5703 603.8032 C
491.3174 607.0313 501.0566 613.0747 509.9307 618.5806 c
537.5459 635.7148 540.2178 637.6855 539.6484 638.6714 c
539.582 638.7881 539.4014 638.918 539.2705 638.9517 c
538.0137 639.269 529.1875 633.9541 509.3447 621.7495 c
498.8096 615.269 486.1543 607.4902 481.6143 605.248 C
485.5381 608.2485 497.4102 615.7275 507.2822 621.9443 c
533.1816 638.2544 535.6738 640.1494 535.085 641.1699 c
535.0176 641.2871 534.8154 641.4316 534.6836 641.4644 c
533.3096 641.8101 524.6279 636.5537 506.5225 625.3174 c
497.8691 619.9473 488.3359 614.0342 484.1162 611.8164 C
488.7842 615.2217 501.6104 623.3491 512.3066 630.126 c
540.0967 647.7324 539.9629 647.9629 539.5215 648.7271 c
539.4551 648.8438 539.2939 648.9604 539.1641 648.9946 c
538.1514 649.252 531.5938 645.3784 511.0537 632.8076 c
500.2617 626.2021 487.3389 618.2959 482.209 615.6738 C
486.5879 618.7568 497.9229 625.7124 508.165 631.9966 c
538.2783 650.4736 541.4004 652.7607 540.7773 653.8403 c
540.71 653.957 540.5498 654.0742 540.4189 654.1069 c
539.4316 654.3574 533.1279 650.6289 513.3857 638.5254 c
502.25 631.6978 488.8721 623.502 484.1895 621.2305 C
488.2236 624.2661 500.668 631.9487 511.8818 638.8696 c
540.1006 656.2861 543.0215 658.4497 542.415 659.499 c
542.3477 659.6157 542.1895 659.7314 542.0596 659.7651 c
540.9883 660.04 533.0381 655.3818 509.6904 641.2451 c
500.4902 635.6743 490.4053 629.5708 485.502 626.8521 C
490.1904 630.2007 500.5342 636.8066 509.2646 642.3809 c
533.2402 657.6909 533.123 657.8945 532.6846 658.6538 c
532.6172 658.7705 532.4658 658.8818 532.335 658.915 c
531.4434 659.1436 525.7852 655.8267 508.0723 645.0571 c
501.6934 641.1782 494.7744 636.9731 490.5996 634.5879 C
494.1748 637.1143 500.0342 641.0283 505.4678 644.6548 c
525.6328 658.1138 526.2949 658.8101 525.8447 659.5889 c
525.7773 659.7056 525.6318 659.813 525.501 659.8467 c
524.8008 660.0234 521.8926 658.3643 508.208 649.9805 c
503.2598 646.9492 497.4873 643.4141 494.1318 641.519 C
496.4961 643.3848 500.2422 646.1797 503.4971 648.6064 c
514.2021 656.5869 514.166 656.6484 513.8301 657.2314 c
513.7617 657.3486 513.6318 657.4458 513.5 657.4785 c
513.0518 657.5918 512.1992 657.1494 504.1729 652.2012 c
501.6445 650.6421 498.5557 648.7393 496.3848 647.478 C
497.9082 648.8003 499.9688 650.5337 501.7979 652.0698 c
509.8232 658.813 509.7979 658.8564 509.4912 659.3877 c
509.4248 659.5039 509.3037 659.5947 509.1729 659.6284 c
508.8086 659.7231 508.6982 659.752 499.2393 654.0703 c
497.1084 652.79 494.791 651.3984 493.3604 650.5718 C
493.7686 651.252 494.2773 652.084 494.7314 652.8267 c
497.2334 656.9199 497.2334 656.9199 497.0322 657.2695 c
496.9814 657.3564 496.957 657.4268 496.9297 657.4746 c
496.8896 657.5439 496.8447 657.563 496.708 657.5098 C
495.915 657.2002 L
495.6123 657.0073 L
Bb
1 (Red & Yellow) 477.1992 629.0176 0 64.9619 1 0 0 1 0 0 Bg
64.9619 0 0 -65.9761 477.1992 662.04 Xm
8364.0898 0 0 -65.9761 -7886.8906 662.04 Bc
64.9619 0 0 -65.9761 477.1992 662.04 Bm
8364.0898 0 0 -65.9761 542.1611 662.04 Bc
f
0 BB
*U
U
U
u
0 D
0 0 0 1 k
445.7344 656.0518 m
413.5449 644.2617 401.7813 643.7617 v
397.8818 644.3984 399.2607 641.0303 v
396.3027 638.2354 436.3301 589.8887 v
436.6699 585.0488 447.6982 588.1357 v
458.7275 591.2227 474.9668 596.71 490.3223 605.4658 c
493.417 606.8398 490.8906 610.0762 v
464.0078 636.9102 457.3926 647.7891 v
455.1426 649.4707 453.0732 654.5234 v
452.8975 659.4209 445.7344 656.0518 v
f
0.0235 0 0.11 0 k
448.8818 656.5137 m
415.9727 644.4219 400.3535 643.0127 v
397.6797 643.9463 401.834 636.5107 v
407.3721 626.5967 437.6104 589.2734 y
440.1094 581.0664 489.8926 606.1729 v
493.1973 607.3457 487.8086 612.0469 v
482.4199 616.748 455.4902 646.0449 452.3877 653.624 c
452.0801 656.8213 448.8818 656.5137 v
f
u
*u
1 D
403.1523 642.3032 m
402.4502 641.8931 L
402.2754 641.791 402.1543 641.5815 402.1826 641.3813 c
402.21 641.1807 402.3311 641.0049 402.5264 640.9536 c
402.7266 640.9019 402.7676 640.9141 403.4961 641.3457 C
403.3633 640.6313 403.2158 639.8472 Y
402.5928 636.6973 402.5977 636.689 402.7266 636.4658 c
402.7939 636.3491 402.917 636.2568 403.0469 636.2236 c
403.3945 636.1357 403.4766 636.1143 409.9746 640.082 c
411.3965 640.9497 412.9844 641.9189 414.2881 642.6934 C
412.9883 641.4761 411.2949 639.9351 409.7871 638.563 c
403.208 632.5781 403.2188 632.5581 403.5117 632.0508 c
403.5791 631.9341 403.7119 631.8359 403.8418 631.8022 c
404.3623 631.6694 405.8193 632.4414 417.9805 639.8359 c
421.4414 641.9399 425.3477 644.3115 428.1982 645.9766 C
425.9854 644.3076 423.0752 642.1729 420.4814 640.2725 c
407.8896 631.0444 407.9434 630.9512 408.2949 630.3423 c
408.3623 630.2256 408.5068 630.1191 408.6367 630.0864 c
409.3633 629.9014 412.7666 631.855 428.875 641.6973 c
435.8721 645.9727 444.0938 650.9941 448.4854 653.4209 C
444.7256 650.792 437.6982 646.2563 431.7002 642.3857 c
411.71 629.4854 411.0537 628.8125 411.498 628.043 c
411.5654 627.9263 411.7266 627.8086 411.8574 627.7754 c
412.8154 627.5313 418.5225 630.8789 435.1865 641.0615 c
440.3574 644.2212 445.9795 647.6567 449.4717 649.6729 C
445.5479 646.8765 438.3496 642.187 432.1973 638.1807 c
412.0107 625.0337 411.3027 624.2739 411.7813 623.4443 c
411.8486 623.3276 411.9863 623.2266 412.1162 623.1929 c
412.7803 623.0225 415.8867 624.8032 431.6631 634.3975 c
438.4941 638.5518 446.5166 643.4287 450.8818 645.8574 C
447.4736 643.4355 441.457 639.4595 435.8906 635.7842 c
416.3877 622.9082 415.7012 622.1714 416.1543 621.3867 c
416.2217 621.27 416.3682 621.1616 416.499 621.1284 c
417.2676 620.9326 421.0371 623.0869 437.7334 633.2622 c
443.6875 636.8906 450.6309 641.1211 454.6514 643.3965 C
450.6201 640.522 443.0547 635.5498 436.5986 631.3076 c
418.0137 619.0957 418.085 618.9712 418.4844 618.2803 c
418.5518 618.1636 418.6914 618.0601 418.8223 618.0264 c
419.4902 617.8569 422.3809 619.5176 437.0186 628.481 c
443.9824 632.7446 452.1738 637.7568 456.4023 640.062 C
452.7754 637.4482 445.6641 632.7207 439.167 628.4023 c
417.2002 613.8022 417.3281 613.5791 417.7549 612.8398 c
417.8223 612.7236 417.9609 612.6211 418.0918 612.5879 c
418.7402 612.4233 421.6201 614.0801 436.2197 623.0181 c
443.4561 627.4478 452.7412 633.1294 457.0879 635.4453 C
453.8789 633.0859 447.3965 628.7651 441.4795 624.8223 c
422.3301 612.063 421.6592 611.3281 422.1182 610.5337 c
422.1855 610.4165 422.3418 610.3027 422.4727 610.2695 c
423.3291 610.0527 427.75 612.6606 442.5127 621.7432 c
448.9648 625.7129 456.5879 630.4004 460.3145 632.4189 C
456.7285 629.6602 448.584 624.1128 442.2432 619.7954 c
426.7148 609.2241 426.7637 609.1401 427.1416 608.4839 c
427.209 608.3672 427.3643 608.2539 427.4951 608.2207 c
428.3799 607.9951 433.4551 610.9712 449.2979 620.644 c
454.2129 623.645 459.4902 626.8638 463.0254 628.9199 C
458.9736 626.1475 452.1895 621.8286 446.3457 618.1074 c
425.4639 604.814 424.7275 604.0469 425.21 603.2114 c
425.2773 603.0947 425.4375 602.9775 425.5684 602.9443 c
426.502 602.707 431.7451 605.79 448.1025 615.8115 c
453.4668 619.0972 459.2285 622.6245 463.1191 624.8862 C
459.8799 622.6782 455.2324 619.6304 450.8867 616.7822 c
430.6455 603.5171 429.9316 602.7598 430.3945 601.9585 c
430.4619 601.8413 430.626 601.7217 430.7568 601.689 c
431.6465 601.4658 435.8672 603.9663 449.9238 612.6812 c
455.7881 616.3174 462.6582 620.5757 466.5576 622.75 C
463.5947 620.6313 458.6738 617.2959 454.1123 614.2061 c
434.4648 600.8999 433.7207 600.084 434.1689 599.3062 c
434.2363 599.1895 434.3926 599.0752 434.5234 599.0425 c
435.4365 598.8091 440.8311 601.9756 457.6855 612.2632 c
463.8027 615.9976 470.4541 620.0552 474.3154 622.248 C
470.3506 619.4287 462.8682 614.5615 456.4844 610.4097 c
435.2637 596.6099 434.4561 595.7588 434.9297 594.9385 c
434.9971 594.8218 435.1387 594.7168 435.2695 594.6841 c
436.0156 594.4922 440.0332 596.7861 457.8975 607.6045 c
464.0713 611.3428 470.7607 615.3926 474.8594 617.7383 C
470.8633 614.9697 463.9736 610.5215 457.6445 606.4355 c
435.626 592.2197 434.7822 591.3496 435.2578 590.5264 c
435.3252 590.4097 435.4893 590.29 435.6201 590.2568 c
436.6025 590.0073 442.4346 593.4326 459.458 603.8525 c
465.123 607.3198 471.2773 611.085 475.0352 613.2441 C
471.1104 610.4248 464.1035 605.7339 458.1094 601.7202 c
439.749 589.4272 439.8203 589.3042 440.2139 588.6211 c
440.2813 588.5049 440.4238 588.3999 440.5547 588.3667 c
441.2588 588.1865 444.6006 590.1016 460.416 599.7515 c
467.5469 604.103 475.9746 609.2417 480.0342 611.4395 C
477.7188 609.5708 473.7832 606.5889 470.376 604.0103 c
459.1973 595.5493 459.2324 595.4868 459.5762 594.8916 c
459.6445 594.7744 459.792 594.6655 459.9229 594.6328 c
460.5605 594.4727 462.7813 595.7358 473.124 602.1421 c
478.46 605.4468 485.1006 609.5601 485.96 609.6851 C
485.8867 609.6748 485.6895 609.7148 485.5801 609.9048 c
485.4795 610.0786 485.4746 610.3086 485.5947 610.4688 c
485.7168 610.6289 485.9023 610.7139 486.0977 610.6646 C
485.4395 610.8306 483.168 609.5396 472.5967 602.9917 c
469.4004 601.0122 465.7656 598.7642 463.2061 597.2686 C
465.3369 598.9409 468.3359 601.2119 470.9795 603.2129 c
483.3027 612.54 483.2393 612.6504 482.8877 613.2588 c
482.8203 613.376 482.666 613.4893 482.5352 613.5225 c
481.6416 613.7505 476.3691 610.6572 459.8955 600.6055 c
454.5459 597.3418 448.7842 593.8281 444.9541 591.606 C
448.4443 594.0449 453.75 597.5981 458.666 600.8892 c
479.4971 614.8359 479.373 615.0503 478.9639 615.7598 c
478.8965 615.8765 478.7529 615.9819 478.6221 616.0151 c
477.9121 616.1953 474.6006 614.293 458.9365 604.7051 c
451.3105 600.0376 442.2637 594.5034 438.0635 592.2671 C
441.8906 595.0732 450.7383 600.7871 458.1875 605.5952 c
478.8945 618.9644 479.5762 619.6602 479.1191 620.4512 c
479.0518 620.5674 478.9141 620.6694 478.7842 620.7031 c
478.0908 620.8809 474.4893 618.8218 457.3799 608.46 c
450.5625 604.3311 442.5439 599.4771 438.3008 597.1108 C
442.2686 599.9712 450.2539 605.1655 457.0293 609.5713 c
477.7168 623.0249 478.4482 623.7925 477.9814 624.6011 c
477.9141 624.7178 477.7705 624.8242 477.6396 624.8574 c
476.9111 625.0425 473.4678 623.0679 457.1641 613.1162 c
449.8008 608.6221 441.083 603.3042 436.9717 601.0894 C
440.5635 603.8213 448.4893 609.1904 454.6719 613.3779 c
470.5566 624.1357 470.498 624.2368 470.1191 624.8936 c
470.0508 625.0107 469.8779 625.1367 469.7471 625.1689 c
468.7773 625.4126 464.0566 622.6211 449.3965 613.5313 c
443.7148 610.0083 437.0127 605.8535 433.4141 603.8564 C
437.1035 606.5537 444.8721 611.645 451.4355 615.9458 c
468.5635 627.1709 468.4932 627.2935 468.0996 627.9741 c
468.0322 628.0908 467.8838 628.1997 467.7529 628.2329 c
466.9961 628.4258 463.6025 626.4795 447.5801 616.6641 c
440.5996 612.3872 432.3691 607.3481 428.2578 605.1118 C
432.043 607.8164 440.0879 612.9385 446.8828 617.2642 c
467.2344 630.2202 467.9521 630.9668 467.4844 631.7759 c
467.417 631.8926 467.2783 631.9956 467.1475 632.0288 c
466.4824 632.1982 463.5635 630.5254 448.7764 621.4976 c
442.5742 617.71 435.335 613.292 431.1133 610.9189 C
434.0469 613.0059 438.6006 616.106 442.8057 618.9692 c
462.7305 632.5347 463.4854 633.3652 463.0303 634.1543 c
462.9619 634.2715 462.8027 634.3882 462.6709 634.4209 c
461.7793 634.647 456.9707 631.813 441.9893 622.5957 c
435.9453 618.877 428.8203 614.4941 425.0947 612.4346 C
428.6084 615.0444 435.8838 619.8921 442.0342 623.9907 c
459.8984 635.8931 460.4287 636.4683 459.9912 637.2256 c
459.9238 637.3418 459.7568 637.4639 459.626 637.4966 c
458.6162 637.7534 452.7656 634.3198 435.6982 623.8716 c
430.7617 620.8496 425.4609 617.6079 421.9756 615.5781 C
426.1416 618.5449 433.457 623.4072 439.7197 627.5693 c
460.1943 641.1772 460.0957 641.3477 459.6816 642.0654 c
459.6143 642.1821 459.4502 642.3013 459.3203 642.334 c
458.3584 642.5786 452.7773 639.3022 436.4971 629.334 c
432.1816 626.6919 427.624 623.9053 424.1885 621.8735 C
427.6973 624.2593 432.5703 627.4644 437.1475 630.4722 c
458.9541 644.8003 458.8232 645.0259 458.3926 645.7729 c
458.3252 645.8896 458.1797 645.9971 458.0488 646.0303 c
457.3027 646.2207 453.6035 644.105 437.2119 634.1157 c
430.9258 630.2842 423.5244 625.7734 419.5059 623.5264 C
423.1963 626.2041 430.3516 630.9287 436.4414 634.9492 c
455.0303 647.2222 454.9209 647.4116 454.5146 648.1162 c
454.4473 648.2329 454.2959 648.3438 454.165 648.377 c
453.3418 648.5874 449.0381 646.1343 431.1436 635.252 c
425.4375 631.7822 419.2412 628.0156 415.5264 625.8877 C
419.4238 628.667 426.6064 633.3457 432.7432 637.3428 c
453.0332 650.5571 453.7441 651.3208 453.2627 652.1558 c
453.1953 652.2725 453.0576 652.374 452.9268 652.4072 c
452.2803 652.5723 449.3779 650.9053 434.666 641.915 c
427.8916 637.7754 419.2852 632.52 414.8594 630.1006 C
418.625 632.7568 425.9844 637.5068 432.2432 641.5454 c
452.583 654.6719 452.4697 654.8691 452.0469 655.6021 c
451.9795 655.7188 451.8203 655.835 451.6895 655.8682 c
450.752 656.1064 445.3193 652.9175 428.3545 642.5508 c
422.292 638.8467 415.6992 634.8198 411.8906 632.6567 C
414.3086 634.5088 417.9248 637.1592 421.0732 639.4663 c
432.8926 648.1284 432.8564 648.1909 432.5098 648.7925 c
432.4424 648.9092 432.3086 649.0088 432.1777 649.042 c
431.627 649.1836 429.8369 648.2148 417.4609 640.6895 c
413.5576 638.3169 409.0205 635.5591 406.2979 634.0049 C
407.498 635.1274 409.0645 636.5537 410.46 637.8232 c
417.5693 644.2905 417.5391 644.3428 417.2471 644.8491 c
417.1797 644.9658 417.0547 645.0596 416.9238 645.0928 c
416.5469 645.189 416.2002 645.0547 409.4541 640.9355 c
407.3945 639.6782 404.9756 638.2031 403.7891 637.5479 C
403.9014 638.1553 404.0605 638.9663 404.1973 639.6538 c
404.7305 642.354 404.7305 642.354 404.6084 642.5664 c
404.541 642.6826 404.4307 642.7666 404.3018 642.8008 c
404.085 642.8574 404.085 642.8574 403.1523 642.3032 C
Bb
1 (Red & Yellow) 402.1787 622.1182 0 85.7316 1 0 0 1 0 0 Bg
85.7316 0 0 -71.9199 402.1787 658.1064 Xm
8290.7031 0 0 -71.9199 -7888.5244 658.1064 Bc
85.7316 0 0 -71.9199 402.1787 658.1064 Bm
8290.7031 0 0 -71.9199 487.9102 658.1064 Bc
f
0 BB
*U
U
U
U
u
u
0 D
0 0 0 1 k
195.1577 659.3711 m
163.0479 647.3672 151.2881 646.7891 v
147.3838 647.3994 148.7852 644.041 v
145.8457 641.2256 186.1943 593.1465 v
186.5664 588.3096 197.5742 591.4697 v
208.582 594.6299 224.7852 600.2256 240.0815 609.083 c
243.167 610.4775 240.6191 613.6973 v
213.5586 640.3516 206.8706 651.1865 v
204.6099 652.8525 202.5073 657.8916 v
202.2983 662.7881 195.1577 659.3711 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
198.3027 659.8535 m
165.4746 647.543 149.8647 646.0303 v
147.1851 646.9463 151.3882 639.5391 v
156.9932 629.6611 187.478 592.54 y
190.0317 584.3506 239.647 609.7871 v
242.9434 610.9814 237.5239 615.6475 v
232.104 620.3125 204.98 649.4297 201.8271 656.9873 c
201.498 660.1826 198.3027 659.8535 v
f
/BBAccumRotation (0.006655) XT
u
*u
1 D
152.6792 645.3438 m
151.978 644.9341 L
151.8032 644.832 151.6831 644.6226 151.71 644.4224 c
151.7378 644.2217 151.8584 644.0454 152.0547 643.9946 c
152.2544 643.9424 152.2959 643.9546 153.0269 644.3882 C
152.896 643.6753 152.752 642.8926 Y
152.1416 639.749 152.1465 639.7402 152.2749 639.5186 c
152.3423 639.4019 152.4653 639.3096 152.5957 639.2764 c
152.938 639.189 153.0298 639.166 159.6475 643.2065 c
161.1069 644.0977 162.7373 645.0928 164.0703 645.8848 C
162.7456 644.6519 161.0161 643.0889 159.4751 641.6968 c
152.7769 635.6484 152.7939 635.6182 153.0835 635.1167 c
153.1509 635 153.2837 634.9014 153.4136 634.8682 c
153.9453 634.7324 155.4419 635.5259 167.9424 643.1274 c
171.5288 645.3076 175.5835 647.77 178.519 649.4829 C
176.2241 647.7642 173.1802 645.5498 170.4707 643.5796 c
157.4785 634.1348 157.5332 634.04 157.8901 633.4219 c
157.9575 633.3052 158.1021 633.1992 158.2329 633.166 c
158.9604 632.9805 162.3809 634.9434 178.5654 644.832 c
185.6099 649.1367 193.8887 654.1934 198.2939 656.6255 C
194.522 653.9883 187.4434 649.4229 181.4038 645.5283 c
161.3198 632.5771 160.6606 631.9019 161.1064 631.1299 c
161.1738 631.0137 161.335 630.896 161.4658 630.8623 c
162.4233 630.6187 168.1304 633.9658 184.7944 644.1484 c
189.9614 647.3057 195.5806 650.7393 199.0713 652.7554 C
195.1494 649.96 187.9609 645.2764 181.8169 641.2739 c
161.6484 628.1377 160.9409 627.3784 161.4199 626.5488 c
161.4873 626.4326 161.624 626.3311 161.7544 626.2974 c
162.4199 626.1274 165.5273 627.9087 181.3159 637.5107 c
188.1533 641.6689 196.1826 646.5508 200.5503 648.98 C
197.1416 646.5571 191.1221 642.5796 185.5532 638.9028 c
166.0474 626.0259 165.3608 625.2886 165.814 624.5039 c
165.8813 624.3872 166.0288 624.2788 166.1592 624.2456 c
166.9277 624.0493 170.7007 626.2056 187.4087 636.3882 c
193.3701 640.0215 200.3228 644.2568 204.3462 646.5342 C
200.314 643.6592 192.7427 638.6836 186.2827 634.4385 c
167.6963 622.2266 167.7686 622.1016 168.1675 621.4106 c
168.2349 621.2939 168.375 621.1904 168.5054 621.1572 c
169.1733 620.9873 172.0669 622.6504 186.7188 631.6216 c
193.6895 635.8896 201.8892 640.9067 206.1196 643.2124 C
202.4941 640.5996 195.3813 635.8716 188.8833 631.5527 c
166.9092 616.9482 167.0381 616.7246 167.4648 615.9854 c
167.5322 615.8691 167.6704 615.7666 167.8013 615.7334 c
168.4497 615.5684 171.3311 617.2266 185.9404 626.1699 c
193.188 630.6074 202.4902 636.2988 206.8408 638.6162 C
203.6318 636.2563 197.1455 631.9336 191.2256 627.9893 c
172.0664 615.2246 171.396 614.4893 171.8545 613.6948 c
171.9219 613.5781 172.0786 613.4634 172.2095 613.4307 c
173.0664 613.2139 177.4917 615.8242 192.2666 624.9146 c
198.7305 628.8911 206.3682 633.5879 210.0972 635.6074 C
206.5117 632.8477 198.3594 627.2969 192.0127 622.9766 c
176.4736 612.3984 176.5225 612.3145 176.9009 611.6587 c
176.9683 611.542 177.1235 611.4282 177.2544 611.395 c
178.1401 611.1689 183.2207 614.1484 199.0811 623.832 c
204.0073 626.8398 209.2983 630.0674 212.8389 632.126 C
208.7847 629.3525 201.9897 625.0269 196.1372 621.3008 c
175.2407 607.999 174.5044 607.2319 174.9868 606.3965 c
175.0542 606.2793 175.2148 606.1626 175.3452 606.1294 c
176.2803 605.8916 181.5308 608.9785 197.9136 619.0151 c
203.2861 622.3066 209.0581 625.8398 212.9536 628.104 C
209.7109 625.894 205.0566 622.8418 200.7041 619.9902 c
180.4429 606.7139 179.7275 605.9561 180.1904 605.1543 c
180.2583 605.0371 180.4224 604.9175 180.5537 604.8848 c
181.4438 604.6611 185.6714 607.165 199.7495 615.8936 c
205.6274 619.5386 212.5156 623.8081 216.4209 625.9849 C
213.4561 623.8647 208.5288 620.5259 203.9595 617.4316 c
184.2949 604.1157 183.5488 603.2993 183.998 602.521 c
184.0654 602.4043 184.2217 602.29 184.3525 602.2568 c
185.2671 602.0239 190.6689 605.1943 207.5483 615.4976 c
213.6792 619.2393 220.3452 623.3066 224.2095 625.5015 C
220.2432 622.6802 212.7485 617.8057 206.3545 613.6484 c
185.1143 599.8379 184.3057 598.9863 184.7798 598.165 c
184.8472 598.0488 184.9893 597.9438 185.1196 597.9102 c
185.8667 597.7188 189.8916 600.0171 207.7866 610.854 c
213.9751 614.6016 220.6812 618.6611 224.7842 621.0088 C
220.7842 618.2378 213.8799 613.7803 207.5376 609.687 c
185.4985 595.4614 184.6553 594.5903 185.1309 593.7666 c
185.1982 593.6499 185.3623 593.5303 185.4932 593.4971 c
186.4766 593.2466 192.3184 596.6782 209.373 607.1167 c
215.0552 610.5942 221.2271 614.3711 224.9902 616.5322 C
221.0718 613.7168 214.0767 609.0317 208.0918 605.0234 c
189.7637 592.748 189.8345 592.625 190.2285 591.9429 c
190.2959 591.8262 190.438 591.7217 190.5684 591.6885 c
191.2734 591.5083 194.6128 593.4224 210.4189 603.0669 c
217.5654 607.4272 226.0176 612.5815 230.061 614.7676 C
227.8247 612.9463 224.0566 610.0615 220.7925 607.5649 c
210.0039 599.3145 210.0396 599.2534 210.3774 598.6675 c
210.4453 598.5503 210.5918 598.4429 210.7236 598.4097 c
211.3535 598.251 213.3853 599.4063 223.5112 605.6792 c
228.6694 608.874 235.0879 612.8506 235.9272 612.9771 C
235.853 612.9658 235.6543 613.0063 235.5439 613.1973 c
235.4434 613.3711 235.4385 613.6006 235.5596 613.7607 c
235.6807 613.9214 235.8672 614.0054 236.0625 613.957 C
235.4185 614.1187 233.2188 612.8691 222.9849 606.5293 c
219.9238 604.6328 216.4512 602.4854 213.979 601.0381 C
216.0288 602.6611 218.8804 604.8442 221.3999 606.7705 c
233.2861 615.8613 233.2241 615.9692 232.8789 616.5674 c
232.8115 616.6841 232.6567 616.7969 232.5264 616.8306 c
231.6323 617.0586 226.3628 613.9668 209.8979 603.9204 c
204.5518 600.6587 198.7949 597.1484 194.9668 594.9268 C
198.4507 597.3623 203.7446 600.9082 208.6479 604.1924 c
229.4463 618.1221 229.3228 618.3359 228.9136 619.0444 c
228.8462 619.1611 228.7031 619.2666 228.5723 619.3003 c
227.8618 619.4805 224.5444 617.5747 208.8506 607.9692 c
201.2065 603.2905 192.1377 597.7427 187.9326 595.5049 C
191.7612 598.3115 200.6216 604.0322 208.0806 608.8467 c
228.814 622.23 229.4956 622.9263 229.0386 623.7178 c
228.9712 623.8345 228.8335 623.9365 228.7031 623.9697 c
228.0088 624.1479 224.4028 622.0859 207.2681 611.7095 c
200.4336 607.5698 192.3955 602.7036 188.147 600.335 C
192.1167 603.1973 200.1152 608.3989 206.8999 612.8105 c
227.6079 626.2749 228.3403 627.0425 227.873 627.8521 c
227.8057 627.9688 227.6616 628.0747 227.5313 628.1079 c
226.8027 628.2935 223.353 626.3164 207.0273 616.3511 c
199.6494 611.8477 190.9136 606.5186 186.7988 604.3027 C
190.3926 607.0361 198.3286 612.4111 204.52 616.604 c
220.4165 627.3677 220.3584 627.4688 219.9785 628.126 c
219.9111 628.2432 219.7378 628.3682 219.6064 628.4014 c
218.6357 628.6455 213.9077 625.8491 199.2222 616.7437 c
193.5269 613.2124 186.8096 609.0479 183.2075 607.0493 C
186.8979 609.7476 194.6787 614.8462 201.2524 619.1538 c
218.396 630.3877 218.3252 630.5103 217.9321 631.1909 c
217.8647 631.3076 217.7168 631.4165 217.5859 631.4502 c
216.8276 631.6426 213.4297 629.6943 197.3916 619.8682 c
190.3955 615.5825 182.1465 610.5317 178.0313 608.2939 C
181.8184 611 189.8716 616.1274 196.6748 620.4575 c
217.041 633.4214 217.7593 634.1685 217.2915 634.978 c
217.2241 635.0947 217.085 635.1978 216.9546 635.231 c
216.2881 635.4009 213.3657 633.7256 198.5601 624.686 c
192.3477 620.8931 185.0962 616.4668 180.8711 614.0923 C
183.8071 616.1812 188.3652 619.2837 192.5757 622.1499 c
212.5112 635.7207 213.2671 636.5522 212.8115 637.3413 c
212.7441 637.458 212.5835 637.5752 212.4526 637.6084 c
211.5591 637.8345 206.7451 634.9966 191.7427 625.7666 c
185.6914 622.0435 178.5576 617.6548 174.8301 615.5947 C
178.3447 618.2056 185.6255 623.0566 191.7803 627.1567 c
209.6475 639.062 210.1782 639.6367 209.7412 640.3936 c
209.6738 640.5107 209.5068 640.6323 209.376 640.665 c
208.3643 640.9229 202.5068 637.4844 185.418 627.0229 c
180.4771 623.998 175.1719 620.7529 171.6846 618.7227 C
175.8511 621.6899 183.1704 626.5552 189.437 630.7202 c
209.9111 644.3281 209.8125 644.4985 209.3984 645.2158 c
209.3311 645.3325 209.168 645.4517 209.0371 645.4849 c
208.0752 645.729 202.4902 642.4507 186.1968 632.4741 c
181.875 629.8276 177.3086 627.0366 173.8691 625.0029 C
177.3789 627.3887 182.2529 630.5947 186.8315 633.603 c
208.645 647.9355 208.5151 648.1611 208.0835 648.9082 c
208.0161 649.0249 207.8706 649.1318 207.7402 649.1655 c
206.9937 649.356 203.291 647.2393 186.8882 637.2422 c
180.5942 633.4063 173.1841 628.8901 169.1641 626.6426 C
172.854 629.3203 180.0122 634.0464 186.1045 638.0684 c
204.6973 650.3433 204.5879 650.5327 204.1812 651.2373 c
204.1138 651.354 203.9624 651.4648 203.832 651.498 c
203.0078 651.709 198.7021 649.2544 180.7964 638.3647 c
175.083 634.8906 168.8799 631.1191 165.1616 628.9907 C
169.0557 631.7676 176.2305 636.4429 182.3623 640.4365 c
202.6338 653.6406 203.3447 654.4043 202.8633 655.2383 c
202.7959 655.3555 202.6582 655.457 202.5278 655.4902 c
201.8809 655.6553 198.9805 653.9888 184.2734 645.002 c
177.4985 640.8618 168.8921 635.6064 164.4663 633.1875 C
168.2466 635.8525 175.6504 640.6284 181.9463 644.6875 c
202.3833 657.8667 202.269 658.0645 201.8447 658.7993 c
201.7773 658.916 201.6187 659.0322 201.4878 659.0654 c
200.5469 659.3047 195.0889 656.1006 178.0439 645.6855 c
171.9673 641.9722 165.3599 637.937 161.5283 635.7593 C
164.0264 637.6587 167.7881 640.3936 171.0586 642.771 c
183.2573 651.6392 183.2129 651.7158 182.8682 652.313 c
182.8008 652.4297 182.666 652.5298 182.5356 652.563 c
181.9736 652.707 180.1357 651.7119 167.4229 643.9814 c
163.3804 641.5234 158.6763 638.6641 155.8828 637.0728 C
157.1084 638.2109 158.7148 639.6631 160.145 640.9551 c
167.3809 647.4888 167.3501 647.542 167.0557 648.0522 c
166.9883 648.1689 166.8623 648.2627 166.7319 648.2959 c
166.3501 648.3931 165.9985 648.2563 159.1265 644.0605 c
157.0171 642.7725 154.5361 641.2593 153.3335 640.5967 C
153.4434 641.2026 153.6001 642.0142 153.7334 642.7021 c
154.2563 645.395 154.2563 645.395 154.1343 645.6064 c
154.0674 645.7222 153.9565 645.8066 153.8271 645.8403 c
153.6113 645.897 153.6113 645.897 152.6792 645.3438 C
Bb
1 (Red & Yellow) 126.8008 598.9102 0 85.722 1 -0.0067 0.0067 1 -28.4888 27.5107 Bg
85.722 0.5743 0.4806 -71.731 151.5947 660.9766 Xm
8015.3223 53.7027 0.4806 -71.731 -7863.7275 607.2739 Bc
85.722 0.5743 0.4806 -71.731 151.5947 660.9766 Bm
8015.3223 53.7027 0.4806 -71.731 237.3169 661.5508 Bc
f
0 BB
*U
U
U
u
0 D
0 0 0 1 k
122.4985 654.9795 m
156.0791 654.8633 167.0801 658.3281 v
170.459 660.2168 170.3135 656.6543 v
173.9702 655.0674 153.2402 597.1816 v
154.543 592.6113 143.3555 591.7734 v
132.1675 590.9365 115.3799 590.5703 98.3159 593.5088 c
95.0073 593.7412 96.2539 597.5654 v
112.0571 631.251 114.519 643.4775 v
116.0303 645.7773 116.249 651.1211 v
114.7773 655.6904 122.4985 654.9795 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
119.4453 654.3535 m
153.7891 654.2002 168.6455 658.1152 v
170.7964 659.8672 169.4517 651.6338 v
167.6592 640.6533 152.2676 596.1885 y
152.7051 587.7959 98.4761 594.3037 v
95.042 594.2813 98.4351 600.4092 v
101.8286 606.5371 116.853 642.5068 117.1812 650.5225 c
116.3979 653.5693 119.4453 654.3535 v
f
/BBAccumRotation (0.006655) XT
u
*u
1 D
119.8184 651.6504 m
119.6016 651.5117 119.3276 651.1992 119.4443 650.9697 c
119.4678 650.9243 119.4893 650.8823 119.5107 650.8452 c
119.5659 650.75 119.6318 650.7051 119.7144 650.6904 C
119.2524 649.9058 118.6245 648.8706 118.0894 647.9917 c
115.7241 644.1064 115.7241 644.1064 115.9199 643.7676 c
115.9873 643.6509 116.1035 643.563 116.2334 643.5298 c
116.5601 643.4453 116.6016 643.4346 124.0283 647.8955 c
126.0386 649.103 128.4165 650.5303 130.3022 651.6333 C
128.8657 650.3979 127.062 648.8828 125.4536 647.5322 c
117.2759 640.6655 117.3013 640.6211 117.6123 640.0825 c
117.6797 639.9653 117.8213 639.8613 117.9526 639.8281 c
118.4976 639.6904 119.8613 640.4121 129.0527 646.0786 c
130.4829 646.9604 132.0298 647.9121 133.4434 648.77 C
131.6104 647.3774 129.3916 645.7236 127.2856 644.1553 c
114.8433 634.8882 114.9165 634.7612 115.269 634.1509 c
115.3364 634.0342 115.4834 633.9263 115.6143 633.8931 c
116.3271 633.7114 119.2837 635.3975 133.1855 643.915 c
137.8926 646.7988 143.3467 650.1392 146.7437 652.082 C
142.854 649.2671 135.5903 644.4214 129.3887 640.2856 c
110.2827 627.543 110.3789 627.377 110.7827 626.6772 c
110.8501 626.5605 110.9922 626.4561 111.1226 626.4224 c
111.8608 626.2334 115.5718 628.3608 133.1831 639.0684 c
140.4287 643.4736 148.9429 648.6504 153.5991 651.25 C
149.2651 648.2612 140.9634 642.9639 133.3672 638.1182 c
107.0732 621.3438 106.0488 620.3442 106.5571 619.4639 c
106.624 619.3477 106.7671 619.2422 106.897 619.2095 c
107.6997 619.0029 112.6084 621.8257 134.542 635.1064 c
145.6768 641.8477 159.0562 649.9482 164.1064 652.5537 C
159.6377 649.2295 146.5894 641.1685 135.7236 634.457 c
108.5342 617.6641 105.9082 615.7227 106.4907 614.7134 c
106.5581 614.5967 106.7422 614.4644 106.8726 614.4312 c
108.1963 614.0952 117.9141 619.9272 138.2334 632.3848 c
147.5864 638.1191 157.9058 644.4443 162.3003 646.7793 C
157.5234 643.2568 143.6157 634.7129 132.0327 627.5996 c
104.5762 610.7378 103.5757 609.8115 104.0825 608.9336 c
104.1499 608.8169 104.3281 608.6875 104.459 608.6548 c
105.6763 608.3452 113.3853 612.8853 135.9341 626.686 c
145.0376 632.2578 155.0132 638.3604 160.0098 641.1147 C
155.2622 637.8359 145.2773 631.5015 136.1982 625.7412 c
106.8047 607.0938 105.6436 606.0103 106.1504 605.1323 c
106.2183 605.0151 106.3975 604.8857 106.5283 604.853 c
107.6172 604.5796 113.4258 608.0322 131.519 619.2622 c
141.3945 625.3911 153.291 632.7695 157.3281 634.6348 C
153.6777 631.7466 141.2651 623.9263 130.999 617.459 c
105.5645 601.437 103.1157 599.5762 103.6914 598.5791 c
103.7588 598.4624 103.9395 598.332 104.0703 598.2988 c
105.3384 597.978 114.208 603.3184 134.1436 615.5801 c
144.4165 621.8994 156.7393 629.4761 161.4497 631.8584 C
157.0757 628.6328 144.2534 620.6768 133.5791 614.0557 c
107.291 597.7495 106.4067 596.9268 106.9004 596.0713 c
106.9678 595.9551 107.1221 595.8418 107.2524 595.8086 c
108.1865 595.5703 114.2744 599.1553 133.3457 610.79 c
142.4619 616.3516 153.3149 622.9707 158.0918 625.5117 C
154.1016 622.5942 144.9482 616.6362 137.2393 611.6191 c
115.6973 597.6011 115.8091 597.4067 116.2261 596.6851 c
116.2935 596.5684 116.4497 596.4541 116.5806 596.4209 c
117.4624 596.1963 122.4341 599.1187 137.9478 608.6182 c
143.7441 612.168 150.0435 616.0234 153.7402 618.1226 C
150.4561 615.6748 144.7939 611.7124 139.8936 608.2866 c
124.6445 597.6265 124.6924 597.5439 125.0635 596.9009 c
125.1313 596.7837 125.2881 596.6694 125.4194 596.6362 c
126.1816 596.4438 129.1802 598.1528 142.3042 606.2593 c
145.8687 608.4614 149.8569 610.9194 152.9053 612.7236 C
150.1963 610.8418 146.6152 608.4214 143.2437 606.1445 c
125.2837 594.0156 125.3921 593.8276 125.7959 593.1284 c
125.8628 593.0117 125.9897 592.917 126.1196 592.8833 c
126.6099 592.7573 128.0049 593.4995 140.6094 601.0972 c
144.2998 603.3218 148.5713 605.896 151.2935 607.4639 C
149.6353 606.0098 147.3306 604.0635 145.2944 602.3457 c
137.314 595.6147 137.3389 595.5708 137.646 595.0396 c
137.7134 594.9229 137.8354 594.8315 137.9658 594.7979 c
138.3018 594.7124 138.3809 594.6924 144.5415 598.4551 c
146.1436 599.4336 148.0854 600.6177 149.4829 601.4331 C
149.019 600.8643 148.5029 600.2378 148.0225 599.6558 c
144.6387 595.5562 144.6387 595.5562 144.875 595.147 c
144.9419 595.0317 145.0537 594.9468 145.1826 594.9121 c
145.4531 594.8418 145.4531 594.8418 149.8926 597.4644 c
151.5059 598.417 153.5137 599.6025 153.75 599.7065 c
153.9448 599.792 154.0806 599.9971 154.0635 600.209 c
154.0469 600.4209 153.9136 600.6045 153.708 600.6582 c
153.4492 600.7266 153.4492 600.7266 149.3838 598.3252 c
148.6392 597.8853 147.8618 597.4272 147.1406 597.0039 C
147.6738 597.6606 148.27 598.3843 148.7939 599.019 c
151.8521 602.7236 151.8521 602.7236 151.6279 603.1118 c
151.5605 603.2285 151.4355 603.3223 151.3047 603.3555 c
150.9292 603.4517 150.5903 603.3213 144.0205 599.3081 c
143.1543 598.7798 142.2183 598.208 141.3428 597.6792 C
142.7314 598.8755 144.4209 600.3013 145.939 601.5815 c
154.748 609.0122 154.707 609.0835 154.3882 609.6362 c
154.3208 609.7524 154.1958 609.8462 154.0659 609.8799 c
153.6182 609.9951 152.9185 609.6846 140.0928 601.9536 c
136.9165 600.0391 133.3721 597.9053 130.624 596.2935 C
134.1016 598.7627 139.2827 602.2632 143.8037 605.3159 c
158.4922 615.2358 158.4443 615.3184 158.0742 615.9595 c
158.0063 616.0767 157.856 616.187 157.7246 616.2202 c
157.0171 616.3984 154.3345 614.8662 141.7783 607.1104 c
137.3735 604.3892 132.2808 601.2441 128.9727 599.3428 C
131.855 601.4468 136.3311 604.5762 140.4668 607.4673 c
157.8218 619.6001 157.73 619.7583 157.3452 620.4253 c
157.2778 620.542 157.1304 620.6504 156.9995 620.6836 c
156.2563 620.8726 152.9634 618.9863 137.4253 609.4712 c
131.2798 605.708 124.0908 601.3071 119.9795 599 C
123.8931 601.7402 131.1431 606.46 137.7842 610.7813 c
160.6494 625.6606 161.4702 626.4888 160.9985 627.3052 c
160.9312 627.4219 160.769 627.54 160.6387 627.5732 c
159.603 627.8374 153.1191 624.0244 132.8247 611.6431 c
124.5391 606.5884 115.458 601.0493 110.6802 598.3901 C
115.4312 601.6216 125.2036 607.6836 134.1064 613.2061 c
161.7842 630.375 164.4629 632.3491 163.8926 633.3364 c
163.8252 633.4531 163.6455 633.583 163.5146 633.6162 c
162.2588 633.9341 153.4409 628.624 133.6196 616.4326 c
123.0986 609.9614 110.4639 602.1938 105.9238 599.9512 C
109.8438 602.9482 121.6851 610.4097 131.5317 616.6128 c
157.3784 632.894 159.8662 634.7861 159.2778 635.8052 c
159.2104 635.9224 159.0093 636.0669 158.8774 636.0996 c
157.5132 636.4419 148.918 631.2378 130.9912 620.1118 c
122.4556 614.8135 113.0566 608.9834 108.8584 606.7715 C
113.5156 610.166 126.1758 618.1987 136.7339 624.897 c
164.2402 642.3477 164.1196 642.5571 163.6694 643.3364 c
163.6021 643.4531 163.4419 643.5693 163.3115 643.603 c
162.3052 643.8589 155.7969 640.0151 135.4126 627.5391 c
124.7373 621.0054 111.9546 613.1841 106.8354 610.5596 C
111.2026 613.6328 122.4185 620.521 132.5557 626.7471 c
162.4316 645.0957 165.5293 647.3672 164.9092 648.4414 c
164.8418 648.5581 164.6821 648.6743 164.5513 648.7075 c
163.5635 648.9585 157.6245 645.4463 137.7109 633.2378 c
126.6738 626.4712 113.418 618.3491 108.7427 616.0757 C
112.7759 619.106 125.1216 626.7334 136.249 633.6064 c
164.2988 650.9312 167.2012 653.084 166.5977 654.1284 c
166.5308 654.2451 166.3726 654.3604 166.2422 654.394 c
165.1758 654.668 157.2622 650.0322 134.0244 635.9619 c
124.8833 630.4272 114.8643 624.3628 109.9771 621.6523 C
114.6904 625.0161 125.1108 631.665 133.9053 637.2754 c
158.0356 652.6689 157.9175 652.8735 157.4771 653.6362 c
157.4097 653.7529 157.2583 653.8643 157.1279 653.8975 c
156.2295 654.1274 150.5239 650.7827 132.6631 639.9229 c
126.2026 635.9946 119.1938 631.7349 114.9883 629.3335 C
118.5747 631.8682 124.4731 635.8052 129.9438 639.4536 c
150.1934 652.9585 150.8579 653.6567 150.4067 654.438 c
150.3394 654.5547 150.1934 654.6621 150.0625 654.6953 c
149.3599 654.8735 146.4326 653.2041 132.6631 644.7676 c
127.6714 641.7095 121.8442 638.1411 118.4702 636.2363 C
120.8423 638.1074 124.6094 640.9155 127.8828 643.3535 c
138.625 651.354 138.5898 651.415 138.2524 651.9995 c
138.1851 652.1167 138.0537 652.2139 137.9233 652.2466 c
137.4727 652.3604 136.6133 651.915 128.5278 646.9302 c
125.9756 645.356 122.8535 643.4331 120.6685 642.1641 C
122.1953 643.4888 124.2627 645.2266 126.0967 646.7666 c
134.1372 653.5181 134.1123 653.5615 133.8052 654.0933 c
133.7383 654.2095 133.6167 654.3008 133.4868 654.334 c
133.1304 654.4263 133.0103 654.4575 123.5137 648.7529 c
121.3623 647.4609 119.022 646.0547 117.583 645.2236 C
117.9883 645.9023 118.4927 646.7314 118.9434 647.4717 c
121.4321 651.5601 121.4321 651.5601 121.231 651.9092 c
121.1807 651.9956 121.1558 652.0664 121.1284 652.1138 c
121.0884 652.1826 121.0435 652.2017 120.9067 652.1484 C
120.1182 651.8423 L
119.8184 651.6504 L
Bb
1 (Red & Yellow) 76.5293 597.7109 0 64.9632 1 -0.0067 0.0067 1 -28.4888 27.5107 Bg
64.9632 0.4353 0.4419 -65.9609 101.3511 656.5518 Xm
7963.6465 53.3564 0.4419 -65.9609 -7862.2954 603.1953 Bc
64.9632 0.4353 0.4419 -65.9609 101.3511 656.5518 Bm
7963.6465 53.3564 0.4419 -65.9609 166.3145 656.9868 Bc
f
0 BB
*U
U
U
U
u
u
0 D
0 0 0 1 k
393.0918 728.9111 m
413.042 728.7095 419.5898 730.7246 v
421.6045 731.833 421.5049 729.7168 v
423.6699 728.7598 411.127 694.4536 v
411.8828 691.7334 405.2324 691.2803 v
398.584 690.8267 388.6094 690.6753 378.4834 692.4893 c
376.5186 692.6401 377.2744 694.9067 v
386.7959 714.856 388.3066 722.1104 v
389.2129 723.4702 389.3643 726.644 v
388.5078 729.3643 393.0918 728.9111 v
f
0.0235 0 0.11 0 k
391.2764 728.5513 m
411.6787 728.3247 420.5195 730.5913 v
421.8047 731.624 420.9727 726.7378 v
419.8643 720.2222 410.5449 693.8672 y
410.7715 688.8799 378.5811 692.9604 v
376.541 692.9604 378.5811 696.5879 v
380.6211 700.2144 389.6895 721.5239 389.916 726.2842 c
389.4629 728.0977 391.2764 728.5513 v
f
u
*u
1 D
391.2148 726.853 m
391.0098 726.7109 390.7627 726.4097 390.876 726.187 c
390.8955 726.1465 390.916 726.1094 390.9355 726.0762 c
390.9463 726.0571 390.96 726.0513 390.9717 726.0352 C
390.5303 725.2544 389.8027 724.0293 389.207 723.0278 c
386.9209 719.1841 386.9209 719.1841 387.1143 718.8491 c
387.1816 718.7329 387.2969 718.6455 387.4268 718.6113 c
387.752 718.5273 387.7939 718.5166 395.1719 722.9482 c
397.1406 724.1309 399.4648 725.5249 401.3262 726.6152 C
399.8584 725.3618 398.0146 723.8247 396.3701 722.4546 c
388.0137 715.4907 388.0391 715.4463 388.3525 714.9028 c
388.4209 714.7856 388.5635 714.6807 388.6943 714.6475 c
389.2451 714.5083 390.7432 715.3018 400.2295 721.1489 c
401.7334 722.0767 403.3623 723.0781 404.8447 723.978 C
402.9004 722.519 400.5273 720.7749 398.2803 719.1235 c
385.1953 709.5098 385.2705 709.3794 385.6328 708.7534 c
385.7002 708.6367 385.8467 708.5283 385.9775 708.4951 c
386.6953 708.3125 389.6729 710.0112 403.6748 718.5898 c
408.4316 721.5044 413.9443 724.8799 417.3613 726.8335 C
413.4189 723.9844 405.9824 719.0391 399.6377 714.8208 c
380.2041 701.9014 380.3008 701.7334 380.709 701.0269 c
380.7764 700.9102 380.9111 700.8101 381.042 700.7769 c
381.6211 700.6284 383.6787 701.7529 398.0049 710.4629 c
402.8203 713.3906 408.375 716.7676 412.0781 718.9028 C
408.4336 716.3647 402.6563 712.54 397.3096 709.002 c
376.2754 695.0815 375.5254 694.3022 375.9766 693.5215 c
376.043 693.4048 376.1738 693.3076 376.3037 693.2734 c
376.8691 693.1284 378.792 694.1675 395.123 704.0391 c
401.5938 707.9497 409.1914 712.542 413.3525 714.8716 C
410.0859 712.4707 404.333 708.5601 399.3643 705.186 c
382.5557 693.7729 382.6631 693.5879 383.0605 692.8984 c
383.1279 692.7817 383.2773 692.6729 383.4072 692.6396 c
384.1123 692.4604 387.0498 694.1279 399.9502 702.0322 c
403.5498 704.2378 407.3818 706.582 410.083 708.1646 C
407.5488 706.2397 403.8379 703.5527 400.5898 701.2031 c
389.1475 692.9238 389.1924 692.8472 389.5371 692.249 c
389.6045 692.1323 389.7402 692.0322 389.8711 691.999 c
390.3887 691.8677 391.624 692.5098 401.7686 698.7119 c
404.5859 700.4346 407.8516 702.4297 409.873 703.5928 C
409.1064 702.7227 408.1396 701.6484 407.2773 700.6904 c
402.4229 695.2969 402.4277 695.2881 402.6846 694.8438 c
402.7539 694.7231 402.8984 694.6182 403.0352 694.5874 c
403.3848 694.5088 403.7305 694.7178 405.1885 695.7251 c
405.7793 696.1343 406.6738 696.752 406.9053 696.8154 C
406.8135 696.7905 406.5928 696.8281 406.4746 697.0322 c
406.375 697.2046 406.3691 697.4307 406.4873 697.5908 c
406.6045 697.751 406.7871 697.8384 406.9805 697.7949 C
406.6738 697.8638 406.3115 697.6909 405.3701 697.0591 C
406.2012 697.999 407.1807 699.0889 408.0205 700.0215 c
412.3896 704.8755 412.3896 704.8755 412.1436 705.3008 c
412.0762 705.4175 411.9473 705.5142 411.8174 705.5469 c
411.3594 705.6631 410.3994 705.1606 401.2471 699.5649 c
398.8848 698.1201 396.2539 696.5137 394.1074 695.2402 C
396.1436 696.752 398.7412 698.6309 401.1768 700.3931 c
414.3994 709.96 414.3135 710.1089 413.9531 710.7339 c
413.8857 710.8506 413.749 710.9517 413.6182 710.9849 c
413.0342 711.1333 410.9121 709.9219 399.4277 702.8853 c
395.041 700.1973 389.9707 697.0928 386.7363 695.2441 C
389.9277 697.5654 395.2822 701.2056 399.9258 704.3589 c
416.7334 715.7715 417.2725 716.3799 416.8467 717.1182 c
416.7793 717.2344 416.6396 717.3384 416.5088 717.3716 c
415.7813 717.5591 411.8916 715.3433 394.6055 704.895 c
389.4541 701.7808 383.8867 698.417 380.2627 696.3193 C
384.4248 699.2749 391.6602 704.0635 397.8613 708.168 c
417.1152 720.9102 417.0313 721.0571 416.624 721.7622 c
416.5566 721.8789 416.415 721.9839 416.2842 722.0171 c
415.5898 722.1948 412.252 720.2944 397.4854 711.3174 c
393.2939 708.769 388.8486 706.0708 385.6162 704.1777 C
389.3086 706.7529 394.9609 710.5112 400.1914 713.9878 c
420.793 727.6846 421.4707 728.3926 421.0146 729.1816 c
420.9473 729.2983 420.8008 729.4058 420.6699 729.439 c
419.9639 729.6191 417.0166 727.937 403.1514 719.4419 c
398.1396 716.3711 392.2939 712.7915 388.8896 710.8677 C
391.3818 712.812 395.3906 715.7598 398.8721 718.3174 c
410.1719 726.6191 410.1357 726.6816 409.79 727.2798 c
409.7227 727.397 409.5908 727.4941 409.46 727.5273 c
408.999 727.644 408.1084 727.1802 399.7051 722.0005 c
397.0068 720.3379 393.6885 718.2935 391.4102 716.9741 C
392.9756 718.3232 395.1152 720.1079 397.0107 721.6865 c
405.2227 728.5303 405.1973 728.5742 404.8877 729.1108 c
404.8203 729.2271 404.6992 729.3179 404.5693 729.3516 c
404.2061 729.4463 404.0957 729.4746 394.6572 723.8052 c
392.5137 722.5181 390.1787 721.1157 388.751 720.291 C
389.1426 720.9624 389.6309 721.7832 390.0664 722.5166 c
392.4717 726.5581 392.4717 726.5581 392.2725 726.9023 c
392.2285 726.979 392.2021 727.042 392.1758 727.0884 c
392.1299 727.167 392.083 727.1938 391.9404 727.144 C
391.334 726.9351 L
391.2148 726.853 L
Bb
1 (Red & Yellow) 380.5342 710.7188 0 38.5944 1 0 0 1 0 0 Bg
38.5944 0 0 -41.7515 380.5342 731.6191 Xm
8274.043 0 0 -41.7515 -7893.5088 731.6191 Bc
38.5944 0 0 -41.7515 380.5342 731.6191 Bm
8274.043 0 0 -41.7515 419.1289 731.6191 Bc
f
0 BB
*U
U
U
u
0 D
0 0 0 1 k
371.7432 709.3364 m
352.6201 702.332 345.6309 702.0347 v
343.3145 702.4131 344.1338 700.4121 v
342.377 698.7515 366.1563 670.0293 v
366.3574 667.1543 372.9102 668.9883 v
379.4619 670.8223 389.1094 674.082 398.2324 679.2842 c
400.0713 680.1001 398.5693 682.0229 v
382.5996 697.9648 378.6699 704.4277 v
377.333 705.4263 376.1035 708.4282 v
375.998 711.3379 371.7432 709.3364 v
f
0.0235 0 0.11 0 k
373.6133 709.6104 m
354.0625 702.4268 344.7832 701.5898 v
343.1943 702.1445 345.6621 697.7275 v
348.9531 691.8374 366.916 669.6641 y
368.4014 664.7891 397.9766 679.7041 v
399.9395 680.4004 396.7393 683.1934 v
393.5381 685.9863 377.5391 703.3911 375.6953 707.894 c
375.5127 709.7935 373.6133 709.6104 v
f
u
*u
1 D
346.7646 701.4482 m
346.083 701.0498 L
345.9072 700.9468 345.7881 700.7383 345.8154 700.5381 c
345.8428 700.3369 345.9639 700.1621 346.1592 700.1104 c
346.3623 700.0571 346.3965 700.0674 347.1543 700.5171 C
347.0742 699.8262 346.9844 699.0479 Y
346.6104 696.0479 346.6152 696.0396 346.7324 695.8369 c
346.7998 695.7207 346.9229 695.6279 347.0537 695.5942 c
347.4277 695.499 347.7461 695.6255 354.6084 699.8164 c
356.2285 700.8066 358.0352 701.9092 359.4932 702.7729 C
358.0781 701.4854 356.2129 699.8379 354.5508 698.3721 c
347.4561 692.1128 347.4736 692.082 347.7705 691.5679 c
347.8379 691.4512 347.9678 691.3545 348.0977 691.3208 c
348.5996 691.1924 349.8701 691.8633 361.2178 698.7627 c
364.3594 700.6729 367.8926 702.8174 370.5176 704.354 C
368.5381 702.8247 365.9873 700.9048 363.7119 699.1934 c
352.291 690.6016 352.335 690.5254 352.6777 689.9316 c
352.7451 689.8145 352.875 689.7178 353.0059 689.6846 c
353.4922 689.5605 354.6855 690.1914 365.3271 696.6875 c
368.6582 698.7197 372.4248 701.0166 375.168 702.6167 C
372.9766 700.979 370.0586 698.8682 367.4629 696.9927 c
355.5527 688.3872 355.6074 688.2925 355.9619 687.6787 c
356.0293 687.5615 356.1709 687.4575 356.3018 687.4238 c
356.8857 687.2754 358.6533 688.2197 369.9736 695.1436 c
372.1709 696.4873 374.5029 697.9126 376.3887 699.0391 C
374.0713 697.2622 370.9063 694.9336 368.0986 692.8716 c
355.8877 683.8984 355.9648 683.7656 356.332 683.1299 c
356.3994 683.0132 356.5254 682.9189 356.6563 682.8853 c
357.1123 682.7686 358.1855 683.3369 368.5332 689.6284 c
371.9404 691.6997 375.8369 694.0669 378.5547 695.6426 C
376.6104 694.1216 374.0107 692.1538 371.6992 690.4067 c
360.3564 681.8306 360.4199 681.7207 360.7715 681.1113 c
360.8389 680.9946 360.9717 680.8955 361.1025 680.8623 c
361.6152 680.7319 362.9492 681.4321 373.9941 688.1646 c
376.8369 689.897 380.0215 691.835 382.4336 693.2529 C
380.0146 691.3921 376.6172 688.8799 373.6191 686.665 c
362.8047 678.6729 362.832 678.625 363.168 678.043 c
363.2354 677.9263 363.3643 677.8296 363.4951 677.7964 c
363.9561 677.6792 364.9512 678.2031 374.4434 684.022 c
377.6387 685.981 381.5557 688.3809 384.2793 689.958 C
381.9004 688.1157 378.4189 685.5244 375.373 683.2588 c
362.0859 673.374 362.1504 673.2627 362.5078 672.6426 c
362.5762 672.5259 362.7041 672.4307 362.835 672.3975 c
363.2939 672.2803 364.2344 672.7783 373.9932 678.7544 c
377.7246 681.0396 382.3594 683.8755 385.2813 685.5366 C
383.2871 683.9395 380.3623 681.7007 377.8076 679.7451 c
366.5156 671.1045 366.5879 670.979 366.9365 670.3745 c
367.0049 670.2573 367.1445 670.1543 367.2754 670.1211 c
367.8213 669.9824 369.3086 670.7798 379.4199 677.0112 c
383.0918 679.2754 387.4268 681.9463 389.7393 683.2275 C
388.6797 682.0371 387.0791 680.3247 385.7793 678.9336 c
381.5967 674.4585 381.5967 674.4585 381.8428 674.0308 c
381.9102 673.9141 382.041 673.8169 382.1719 673.7837 c
382.6016 673.6748 383.3262 674.04 390.0381 678.1631 c
392.5498 679.7065 395.6768 681.6274 396.1221 681.7593 c
396.3379 681.8228 396.5195 682.0278 396.5156 682.2534 c
396.5117 682.478 396.3916 682.6777 396.1738 682.7329 c
395.8105 682.8247 395.5518 682.7246 389.5146 679.0156 c
387.8184 677.9736 385.7725 676.7188 384.2656 675.8369 C
384.9424 676.5723 385.7412 677.4287 386.5098 678.251 c
392.0664 684.1963 392.0381 684.2451 391.7695 684.7114 c
391.7012 684.8286 391.5586 684.9331 391.4277 684.9663 c
390.8271 685.1187 388.835 683.9902 378.8945 677.8628 c
375.9463 676.0454 372.5908 673.98 370.2422 672.6089 C
372.3945 674.3438 375.6133 676.8076 378.415 678.9512 c
388.8936 686.9692 388.8418 687.0596 388.501 687.6494 c
388.4336 687.7661 388.2881 687.8735 388.1572 687.9067 c
387.499 688.0742 384.8916 686.6006 373.4717 679.6074 c
371.1641 678.1948 368.7148 676.6953 366.7432 675.5166 C
369.2842 677.4805 372.834 680.1235 375.9697 682.4561 c
388.3594 691.6738 388.3145 691.7515 387.9639 692.3589 c
387.8965 692.4756 387.7529 692.5815 387.6221 692.6147 c
386.9893 692.7749 384.6855 691.4731 373.9209 684.874 c
371.9727 683.6802 369.9453 682.4399 368.1758 681.3745 C
369.9922 682.7397 372.1543 684.3389 374.2139 685.8604 c
386.8779 695.2188 386.8145 695.3291 386.46 695.9424 c
386.3926 696.0591 386.2607 696.1567 386.1299 696.1904 c
385.6299 696.3179 384.3223 695.6304 373.4746 689.0186 c
370.3867 687.1362 366.8838 685.0039 364.3867 683.5488 C
366.5449 685.2529 369.6064 687.5708 372.3027 689.6084 c
382.6934 697.4648 382.6494 697.5405 382.3096 698.1284 c
382.2422 698.2451 382.1084 698.3457 381.9775 698.3784 c
381.4287 698.5186 379.7285 697.604 368.0146 690.4829 c
365.3594 688.8687 362.5527 687.1641 360.376 685.8774 C
362.6875 687.6514 365.8711 689.9937 368.6914 692.0654 c
380.9619 701.0825 380.876 701.2305 380.5156 701.8545 c
380.4482 701.9717 380.3213 702.0664 380.1904 702.0996 c
379.7412 702.2139 378.8369 701.7363 369.4521 695.9966 c
366.3809 694.1187 362.6641 691.8472 359.9629 690.2754 C
362.2188 691.9678 365.3096 694.2031 368.0479 696.1821 c
379.7246 704.6196 379.6719 704.7124 379.3232 705.3154 c
379.2559 705.4316 379.1162 705.5347 378.9863 705.5679 c
378.415 705.7139 376.5859 704.731 364.8066 697.5405 c
362.0391 695.8516 359.1152 694.0693 356.8506 692.729 C
358.9873 694.3862 361.8037 696.5068 364.3125 698.394 c
375.0449 706.4678 375.0107 706.5278 374.6777 707.103 c
374.6104 707.2197 374.4785 707.3184 374.3477 707.3516 c
373.8271 707.4849 372.418 706.7422 360.6982 699.6172 c
357.2666 697.5303 353.29 695.1133 350.7402 693.6445 C
352.0352 694.8179 353.7148 696.3008 355.2129 697.6226 c
362.8896 704.3945 362.8574 704.4492 362.5557 704.9727 c
362.4883 705.0898 362.3613 705.1846 362.2305 705.2173 c
361.8389 705.3174 361.4336 705.1582 354.0869 700.6704 c
351.7588 699.248 348.9961 697.562 347.7451 696.8813 C
347.8359 697.6816 347.9766 698.9238 Y
348.2979 701.4995 348.2979 701.4995 348.1875 701.6919 c
348.1201 701.8076 348.0098 701.8921 347.8809 701.9258 c
347.665 701.9819 347.665 701.9819 346.7646 701.4482 C
Bb
1 (Red & Yellow) 345.9023 688.7363 0 50.9323 1 0 0 1 0 0 Bg
50.9323 0 0 -41.5024 345.9023 709.4849 Xm
8234.5166 0 0 -41.5024 -7888.6143 709.4849 Bc
50.9323 0 0 -41.5024 345.9023 709.4849 Bm
8234.5166 0 0 -41.5024 396.835 709.4849 Bc
f
0 BB
*U
U
U
u
0 D
0 R
0 0 0 1 K
2 w
415.0107 693.3965 m
421.5498 661.8877 396.1172 672.1963 v
S
0 O
0 0 0 1 k
1 w
390.5244 674.4634 m
393.5518 674.373 397.4922 674.7158 400.2314 675.6592 c
396.8516 671.8989 l
396.6592 666.8462 l
395.3506 669.4302 392.7607 672.4204 390.5244 674.4634 c
f
U
u
0 R
0 0 0 1 K
2 w
357.2305 708.3564 m
349.6504 730.1133 380.3701 721.4355 v
S
0 O
0 0 0 1 k
1 w
386.1777 719.7949 m
383.1582 719.5527 379.2793 718.7808 376.6602 717.5425 c
379.6084 721.6509 l
379.2451 726.6943 l
380.8291 724.269 383.7314 721.5806 386.1777 719.7949 c
f
U
U
u
u
263.4683 705.7715 m
244.3442 698.7671 237.3564 698.4697 v
235.0396 698.8481 235.8584 696.8472 v
234.1011 695.187 257.8813 666.4648 v
258.0825 663.5898 264.6353 665.4233 v
271.187 667.2573 280.8345 670.5176 289.9565 675.7192 c
291.7954 676.5352 290.2944 678.458 v
274.3237 694.3999 270.394 700.8628 v
269.0571 701.8613 267.8276 704.8633 v
267.7231 707.7729 263.4683 705.7715 v
f
0.0235 0 0.11 0 k
265.3384 706.0454 m
245.7871 698.8623 236.5078 698.0249 v
234.9194 698.5796 237.3872 694.1626 v
240.6777 688.2725 258.6411 666.0991 y
260.1255 661.2236 289.7017 676.1392 v
291.6646 676.8354 288.4634 679.6284 v
285.2622 682.4214 269.2632 699.8262 267.4204 704.3291 c
267.2378 706.2285 265.3384 706.0454 v
f
u
*u
1 D
238.4731 697.8784 m
237.8003 697.4854 L
237.6255 697.3838 237.5059 697.1743 237.5337 696.9741 c
237.561 696.7734 237.6821 696.5981 237.8784 696.5469 c
238.0825 696.4932 238.1128 696.5034 238.8779 696.9561 C
238.7974 696.2681 238.707 695.4941 Y
238.3276 692.4844 238.332 692.4766 238.4497 692.2729 c
238.4497 692.2729 l
238.5171 692.1563 238.6411 692.0635 238.7715 692.0303 c
239.1445 691.9351 239.4629 692.0605 246.3198 696.2495 c
247.9429 697.2412 249.7529 698.3452 251.2129 699.2104 C
249.7998 697.9238 247.937 696.2788 246.2788 694.8159 c
239.1816 688.5537 239.1997 688.5229 239.4961 688.0093 c
239.5635 687.8926 239.6938 687.7954 239.8242 687.7622 c
240.3257 687.6338 241.5957 688.3047 252.9434 695.2036 c
256.082 697.1113 259.6113 699.2539 262.2344 700.7891 C
260.2549 699.2607 257.7046 697.3413 255.4297 695.6299 c
244.0093 687.0386 244.0537 686.9619 244.3965 686.3682 c
244.4639 686.252 244.5942 686.1543 244.7246 686.1216 c
245.2104 685.9976 246.4043 686.6284 257.0459 693.124 c
260.3765 695.1567 264.1445 697.4541 266.8877 699.0537 C
264.6963 697.4165 261.7783 695.3057 259.1812 693.4292 c
247.2788 684.8281 247.3335 684.7334 247.688 684.1196 c
247.7554 684.0029 247.8965 683.8984 248.0273 683.8652 c
248.6113 683.7163 250.3789 684.6606 261.6997 691.5845 c
263.897 692.9282 266.229 694.354 268.1147 695.4805 C
265.7969 693.7036 262.6318 691.375 259.8252 689.3125 c
247.6138 680.3394 247.6899 680.2075 248.0576 679.5708 c
248.125 679.4541 248.2515 679.3599 248.3818 679.3262 c
248.8374 679.21 249.9111 679.7783 260.2598 686.0698 c
263.6675 688.1416 267.564 690.5088 270.2827 692.085 C
268.3374 690.563 265.7363 688.5942 263.4233 686.8457 c
252.083 678.272 252.1465 678.1621 252.4985 677.5527 c
252.5659 677.436 252.6992 677.3369 252.8291 677.3042 c
253.3418 677.1733 254.6753 677.8735 265.7202 684.6055 c
268.5625 686.3379 271.7466 688.2754 274.1587 689.6929 C
271.7378 687.832 268.3374 685.3174 265.3379 683.1011 c
254.5215 675.1094 254.5488 675.0615 254.8853 674.479 c
254.9526 674.3623 255.082 674.2661 255.2129 674.2329 c
255.6743 674.1157 256.6694 674.6396 266.1685 680.4629 c
269.3638 682.4214 273.2803 684.8208 276.0049 686.3984 C
273.624 684.5557 270.1421 681.9639 267.0952 679.6978 c
253.8042 669.811 253.8687 669.6992 254.2266 669.0796 c
254.2939 668.9629 254.4219 668.8672 254.5527 668.834 c
255.0117 668.7173 255.9526 669.2148 265.7153 675.1934 c
269.4478 677.4785 274.0845 680.3164 277.0073 681.9775 C
275.0137 680.3809 272.0908 678.1436 269.5361 676.1885 c
258.2407 667.5464 258.3135 667.4204 258.6626 666.8154 c
258.7305 666.6982 258.8706 666.5952 259.0015 666.5625 c
259.5479 666.4238 261.0342 667.2207 271.145 673.4526 c
274.8149 675.7148 279.1445 678.3828 281.459 679.665 C
280.3936 678.4722 278.7837 676.7539 277.4756 675.3589 c
273.2686 670.8696 273.2686 670.8696 273.5156 670.4414 c
273.583 670.3242 273.7134 670.2275 273.8442 670.1938 c
274.2744 670.085 275.002 670.4517 281.7378 674.5894 c
284.2607 676.1396 287.4014 678.0684 287.8491 678.2007 c
288.0649 678.2646 288.2466 678.4697 288.2422 678.6948 c
288.2378 678.9199 288.1187 679.1191 287.8999 679.1743 c
287.5371 679.2666 287.2773 679.166 281.2148 675.4419 c
279.5122 674.396 277.4585 673.1362 275.9458 672.2515 C
276.627 672.9897 277.4321 673.8496 278.2056 674.6743 c
283.793 680.6362 283.7646 680.6851 283.4951 681.1523 c
283.4272 681.2695 283.2852 681.3745 283.1538 681.4077 c
282.5522 681.5596 280.5615 680.4307 270.6201 674.3037 c
267.6714 672.4863 264.3149 670.4199 261.9663 669.0493 C
264.1191 670.7847 267.3403 673.2495 270.1431 675.3945 c
280.6201 683.4106 280.5684 683.5015 280.2275 684.0913 c
280.1602 684.208 280.0142 684.3149 279.8838 684.3486 c
279.2256 684.5156 276.6172 683.041 265.1929 676.0459 c
262.8853 674.6328 260.4346 673.1328 258.4624 671.9536 C
261.0049 673.9189 264.5552 676.5625 267.6919 678.8955 c
280.0859 688.1152 280.041 688.1934 279.6904 688.8003 c
279.623 688.917 279.4795 689.0229 279.3491 689.0562 c
278.7168 689.2168 276.4116 687.9146 265.646 681.3149 c
263.6948 680.1191 261.665 678.877 259.894 677.8105 C
261.71 679.1758 263.8726 680.7754 265.9316 682.2964 c
278.603 691.6592 278.5391 691.7695 278.1851 692.3828 c
278.1177 692.4995 277.9854 692.5977 277.855 692.6309 c
277.355 692.7588 276.0469 692.0708 265.1997 685.459 c
262.1123 683.5776 258.6104 681.4458 256.1143 679.9902 C
258.271 681.6943 261.332 684.0107 264.0264 686.0483 c
274.4194 693.9063 274.376 693.9814 274.0361 694.5698 c
273.9688 694.6865 273.834 694.7861 273.7036 694.8198 c
273.1548 694.9604 271.4541 694.0454 259.7402 686.9238 c
257.0854 685.3101 254.2788 683.6055 252.1016 682.3184 C
254.4131 684.0923 257.5977 686.4351 260.417 688.5073 c
272.6885 697.5234 272.6025 697.6719 272.2422 698.2959 c
272.1748 698.4126 272.0479 698.5078 271.917 698.541 c
271.4683 698.6553 270.5625 698.1777 261.1777 692.4375 c
258.1074 690.5596 254.3906 688.2886 251.689 686.7168 C
253.9434 688.4077 257.0313 690.6416 259.7671 692.6187 c
271.4429 701.0557 271.3892 701.1484 271.041 701.752 c
270.9736 701.8682 270.835 701.9712 270.7041 702.0044 c
270.1328 702.1499 268.3032 701.1675 256.5249 693.9775 c
253.7578 692.2886 250.833 690.5059 248.5693 689.1655 C
250.7056 690.8232 253.5225 692.9434 256.0313 694.8306 c
266.7632 702.9043 266.7285 702.9644 266.396 703.54 c
266.3286 703.6567 266.1963 703.7549 266.0659 703.7886 c
265.5454 703.9214 264.1377 703.1792 252.4238 696.0581 c
248.9912 693.9712 245.0146 691.5537 242.4648 690.0845 C
243.7603 691.2588 245.4414 692.7437 246.9404 694.0664 c
254.6084 700.8315 254.5767 700.8862 254.2744 701.4097 c
254.207 701.5264 254.0801 701.6211 253.9497 701.6538 c
253.5581 701.7539 253.1514 701.5947 245.7983 697.103 c
243.4731 695.6826 240.7148 693.999 239.4634 693.3184 C
239.5557 694.1211 239.6992 695.3691 Y
240.0229 697.9395 240.0229 697.9395 239.9121 698.1318 c
239.8452 698.2476 239.7344 698.332 239.605 698.3657 c
239.3896 698.4224 239.3896 698.4224 238.4731 697.8784 C
Bb
1 (Red & Yellow) 237.6318 685.1748 0 50.93 1 0 0 1 0 0 Bg
50.93 0 0 -41.4976 237.6318 705.9214 Xm
8126.2573 0 0 -41.4976 -7888.6255 705.9214 Bc
50.93 0 0 -41.4976 237.6318 705.9214 Bm
8126.2573 0 0 -41.4976 288.562 705.9214 Bc
f
0 BB
*U
U
U
u
0 D
0 0 0 1 k
228.5767 732.4751 m
248.5259 732.2734 255.0747 734.2886 v
257.0894 735.397 256.9888 733.2813 v
259.1548 732.3242 246.6113 698.0176 v
247.3667 695.2974 240.7173 694.8442 v
234.0674 694.3906 224.0933 694.2397 213.9678 696.0532 c
212.0029 696.2046 212.7583 698.4712 v
222.2798 718.4204 223.791 725.6743 v
224.6978 727.0347 224.8486 730.2085 v
223.9927 732.9287 228.5767 732.4751 v
f
0.0235 0 0.11 0 k
226.7603 732.1157 m
247.1626 731.8887 256.0044 734.1558 v
257.2896 735.1885 256.4575 730.3018 v
255.3481 723.7861 246.0288 697.4316 y
246.2559 692.4438 214.0654 696.5244 v
212.0254 696.5244 214.0654 700.1519 v
216.106 703.7788 225.1738 725.0879 225.4004 729.8486 c
224.9468 731.6616 226.7603 732.1157 v
f
u
*u
1 D
226.7139 730.4326 m
226.5103 730.2896 226.2671 729.9897 226.3799 729.7681 c
226.3999 729.7295 226.4185 729.6938 226.437 729.6611 c
226.4438 729.6494 226.4526 729.647 226.4595 729.6362 C
226.0229 728.8594 225.2793 727.6045 224.6758 726.5869 c
222.3989 722.751 222.3989 722.751 222.5923 722.4165 c
222.6592 722.3003 222.7754 722.2129 222.9053 722.1787 c
223.23 722.0952 223.2715 722.0845 230.6387 726.5088 c
232.6079 727.6919 234.9336 729.0869 236.7949 730.1772 C
235.3271 728.9233 233.4834 727.3862 231.8398 726.0156 c
223.5015 719.0635 223.5269 719.019 223.8403 718.4761 c
223.9082 718.3589 224.0513 718.2539 224.1816 718.2212 c
224.7324 718.0815 226.229 718.875 235.708 724.7173 c
237.2568 725.6719 238.8633 726.6602 240.313 727.54 C
238.3691 726.082 235.9985 724.3384 233.7529 722.6875 c
220.689 713.0854 220.7642 712.9551 221.1255 712.3291 c
221.1929 712.2124 221.3398 712.104 221.4707 712.0708 c
222.1885 711.8887 225.1641 713.5864 239.1636 722.1636 c
243.918 725.0767 249.4297 728.4512 252.8467 730.4053 C
248.9038 727.5557 241.4697 722.6123 235.1274 718.3955 c
215.6929 705.4751 215.7896 705.3071 216.1978 704.6006 c
216.2651 704.4839 216.3999 704.3838 216.5303 704.3506 c
217.1099 704.2021 219.166 705.3262 233.4854 714.0317 c
238.3008 716.959 243.855 720.3354 247.5576 722.4712 C
243.9136 719.9341 238.1401 716.1113 232.7964 712.5747 c
211.7622 698.6538 211.0117 697.875 211.4629 697.0938 c
211.5298 696.9771 211.6606 696.8799 211.791 696.8467 c
212.356 696.7007 214.2783 697.7397 230.6099 707.6113 c
237.0801 711.522 244.6772 716.1138 248.8389 718.4438 C
245.5703 716.042 239.814 712.1294 234.8423 708.7534 c
218.0239 697.3359 218.1313 697.1499 218.5293 696.4609 c
218.5967 696.3442 218.7451 696.2349 218.876 696.2021 c
219.5815 696.0225 222.5215 697.6919 235.4331 705.603 c
239.0347 707.8096 242.8687 710.1553 245.5703 711.7373 C
243.0347 709.811 239.3193 707.1221 236.0693 704.771 c
224.6235 696.4907 224.668 696.4136 225.0137 695.8154 c
225.0811 695.6987 225.2163 695.5981 225.3472 695.5645 c
225.8643 695.4331 227.1016 696.0757 237.2539 702.2832 c
240.0718 704.0063 243.3384 706.0024 245.3633 707.167 C
244.5933 706.2959 243.6245 705.2207 242.7603 704.2622 c
237.8882 698.8579 237.8931 698.8496 238.1499 698.4043 c
238.2197 698.2832 238.3643 698.1782 238.5005 698.1475 c
238.8501 698.0693 239.1973 698.2788 240.6606 699.2891 c
241.2554 699.7002 242.1548 700.3223 242.3882 700.3853 C
242.2959 700.3604 242.0752 700.3984 241.9575 700.6025 c
241.8579 700.7744 241.8521 701.001 241.9692 701.1606 c
242.0874 701.3208 242.27 701.4082 242.4639 701.3652 C
242.1553 701.4346 241.791 701.2598 240.8408 700.6226 C
241.6748 701.5645 242.6597 702.6567 243.5029 703.5928 c
247.8833 708.4517 247.8833 708.4517 247.6377 708.8774 c
247.5703 708.9941 247.4414 709.0903 247.3105 709.123 c
246.8535 709.2402 245.8916 708.7363 236.7319 703.1362 c
234.3662 701.6899 231.7319 700.0811 229.5825 698.8057 C
231.6206 700.3179 234.2183 702.1973 236.6553 703.9604 c
249.8862 713.5322 249.8003 713.6812 249.439 714.3066 c
249.3716 714.4233 249.2358 714.5244 249.105 714.5576 c
248.521 714.7061 246.3984 713.4946 234.9111 706.4556 c
230.5176 703.7642 225.4404 700.6543 222.2026 698.8052 C
225.395 701.1274 230.7554 704.7705 235.4038 707.9263 c
252.2202 719.3438 252.7598 719.9526 252.334 720.6904 c
252.2666 720.8066 252.126 720.9111 251.9961 720.9443 c
251.2681 721.1313 247.3784 718.916 230.0928 708.4673 c
224.9399 705.3525 219.373 701.9883 215.7485 699.8911 C
219.9097 702.8467 227.1455 707.6357 233.3481 711.7407 c
252.5952 724.479 252.5103 724.626 252.1035 725.3306 c
252.0361 725.4473 251.894 725.5518 251.7637 725.5854 c
251.0698 725.7627 247.7319 723.8633 232.9658 714.8862 c
228.7778 712.3398 224.3374 709.6445 221.1064 707.752 C
224.7983 710.3271 230.4517 714.0859 235.6812 717.563 c
256.2788 731.2568 256.9556 731.9644 256.5005 732.7529 c
256.4331 732.8696 256.2866 732.9775 256.1558 733.0107 c
255.4492 733.1904 252.5029 731.5088 238.6411 723.0161 c
233.6294 719.9453 227.7832 716.3657 224.3799 714.4429 C
226.8691 716.3843 230.8701 719.3271 234.3447 721.8813 c
245.6304 730.1763 245.5942 730.2393 245.249 730.8364 c
245.1816 730.9536 245.0503 731.0513 244.9189 731.0845 c
244.4595 731.2002 243.5693 730.7378 235.1831 725.5684 c
232.4878 723.9072 229.1743 721.8657 226.8975 720.5474 C
228.459 721.8936 230.5913 723.6729 232.4805 725.2476 c
240.6865 732.0898 240.6616 732.1333 240.3516 732.6699 c
240.2847 732.7861 240.1631 732.877 240.0337 732.9111 c
239.6694 733.0049 239.5591 733.0332 230.1235 727.3662 c
227.9834 726.0806 225.6519 724.6802 224.2271 723.8574 C
224.6162 724.5273 225.1021 725.3457 225.5361 726.0767 c
227.9336 730.1177 227.9336 730.1177 227.7354 730.4614 c
227.6919 730.5361 227.666 730.5986 227.6396 730.6445 c
227.5933 730.7251 227.5459 730.7529 227.4014 730.7041 C
226.8159 730.5044 L
226.7139 730.4326 L
Bb
1 (Red & Yellow) 216.0205 714.2866 0 38.5936 1 0 0 1 0 0 Bg
38.5936 0 0 -41.7573 216.0205 735.1904 Xm
8109.5293 0 0 -41.7573 -7893.5088 735.1904 Bc
38.5936 0 0 -41.7573 216.0205 735.1904 Bm
8109.5293 0 0 -41.7573 254.6143 735.1904 Bc
f
0 BB
*U
U
U
u
0 D
0 R
0 0 0 1 K
2 w
258.0591 720.7764 m
289.3481 728.3018 279.8423 702.5581 v
S
0 O
0 0 0 1 k
1 w
277.752 696.8965 m
277.7471 699.9258 277.2808 703.8535 276.252 706.5615 c
280.1167 703.3008 l
285.1729 703.2671 l
282.6309 701.8779 279.7236 699.1958 277.752 696.8965 c
f
U
u
0 R
0 0 0 1 K
2 w
244.1475 677.1143 m
223.6821 664.2241 224.1025 688.7002 v
S
0 O
0 0 0 1 k
1 w
224.2061 694.7344 m
225.2109 691.877 226.9482 688.3232 228.8135 686.1074 c
224.0889 687.9082 l
219.3052 686.2705 l
221.2456 688.4209 223.1045 691.9131 224.2061 694.7344 c
f
U
U
u
0 R
0 0 0 1 K
2 w
171.248 676.2373 m
174.0151 678.0957 L
S
u
0 O
0 0 0 1 k
1 w
191.9243 688.7202 m
191.3872 688.3252 l
192.1143 687.9893 192.6782 685.4224 190.8398 684.5898 c
191.7988 683.6279 191.3125 682.3135 190.0591 681.8677 c
188.9785 681.4834 188.3765 681.2129 186.9624 679.833 c
185.2075 678.1191 183.3223 675.9556 180.0244 675.7476 c
179.7373 675.731 179.5786 675.4482 179.6099 675.269 c
179.6689 674.9321 180.27 674.2227 179.6333 673.7729 c
177.2207 672.1528 l
176.3599 671.5742 174.8247 672.3716 172.1528 676.3779 c
169.3682 680.5518 168.3203 682.2139 170.0317 683.3857 c
171.7129 684.5361 172.1914 684.8359 y
172.7402 685.1821 173.0664 684.8823 173.3081 684.7046 c
173.4458 684.6011 173.6899 684.6826 173.7861 684.8369 c
173.9385 685.0762 175.4546 687.4355 177.1685 688.8701 c
178.7588 690.2017 179.0806 691.1694 180.3521 691.7671 c
181.8574 692.4746 186.1768 695.5859 187.4863 696.4917 c
188.7671 697.3765 191.1216 698.3506 193.8325 700.2632 c
196.4204 702.0884 198.4766 699.0547 196.0195 697.6055 c
194.0767 696.4595 194.1685 696.1895 193.4692 695.8359 c
192.2422 695.2178 191.082 694.2446 190.2471 693.5933 c
189.8633 693.2954 189.3394 693.1191 188.2451 692.2051 c
188.9951 692.4863 189.1436 692.3252 190.3511 692.5269 c
192.1582 692.7583 193.1177 689.6338 191.9243 688.7202 c
f
1 g
175.3057 679.1201 m
176.3755 677.4292 178.6255 674.7725 178.8965 674.5723 c
179.1509 674.3828 179.0728 674.1069 178.6821 673.8931 c
178.4106 673.7437 177.1206 672.8657 y
176.5518 672.4834 175.4668 672.603 172.4932 677.0303 c
169.4473 681.6318 169.2397 682.3408 170.5918 683.249 c
172.2993 684.3286 l
172.4126 684.3774 172.5303 684.3672 172.6533 684.2993 c
172.959 684.1313 172.605 683.3936 175.3057 679.1201 c
f
179.5171 681.2988 m
179.4941 681.1758 179.5518 681.0342 179.625 680.9951 c
179.9751 680.8066 180.1626 681.2559 180.4082 681.4541 c
180.6113 681.6177 181.6484 682.5986 182.2642 682.6113 c
182.8809 682.624 184.0869 682.6533 185.1636 681.6812 c
185.3555 681.4971 186.1548 681.0918 186.8354 681.2866 c
187.3145 681.4248 187.5181 680.9775 187.2041 680.7197 c
186.3623 680.0298 186.3384 679.4692 183.5347 677.5977 c
181.2231 676.2227 178.8428 675.2515 176.7114 678.123 c
175.5713 679.7231 174.1074 682.0503 173.7925 683.0337 c
173.4741 684.0332 174.1572 684.4834 174.5508 685.1938 c
176.3159 687.9331 178.022 688.98 179.1924 690.2075 c
179.6533 690.6909 179.9233 691.1792 180.9399 691.1572 c
183.1064 691.1128 185.1133 691.9536 185.7515 691.9351 c
186.1787 691.9434 186.3291 691.9019 186.4492 691.8247 c
186.6445 691.6982 186.9678 691.8828 187.3735 691.8423 c
187.627 691.8335 187.7437 691.8237 187.9805 691.8711 c
187.9507 691.3828 187.4858 691.5952 187.6133 690.6655 c
187.6411 690.4668 187.9146 690.2422 188.042 690.1504 c
188.3945 689.9751 189.0322 690.3364 189.2988 690.4541 c
189.5112 690.5479 189.7637 690.6626 190.0049 690.7661 c
190.646 691.04 190.4258 691.7393 190.585 691.5449 c
191.3921 690.5708 189.8438 689.8428 189.3315 689.6104 c
188.8438 689.3379 188.3125 689.3164 187.7729 689.1211 c
187.4702 689.1416 186.3916 688.4629 185.9043 689.2168 c
185.8062 689.3281 185.6494 689.6104 185.3999 689.2676 c
185.2109 689.0088 184.0112 688.2168 183.6025 688.4404 c
183.416 688.543 183.2651 688.5923 183.0449 688.5562 c
182.8247 688.52 182.7905 688.3535 182.9434 688.1748 c
183.1392 687.9502 183.3457 687.6006 183.0498 687.2876 c
182.7954 687.0005 182.6479 686.8911 182.3428 686.8799 c
182.0293 686.8486 181.4146 686.8354 181.2236 686.686 c
181.0952 686.5269 181.0537 686.3154 181.5532 686.3945 c
182.0039 686.4561 182.7871 686.1797 182.6299 685.1553 c
182.4004 683.6445 182.7227 683.7603 179.7505 681.6133 c
179.6108 681.5137 179.5444 681.4336 179.5171 681.2988 c
f
184.5347 684.5938 m
183.7949 684.833 183.373 684.7959 183.4155 685.5488 c
183.3984 685.6719 183.5352 685.7656 183.9712 685.9326 c
184.2017 686.0205 185.4116 685.6626 185.1895 684.7324 c
185.1035 684.5625 184.9854 684.4058 184.5347 684.5938 c
f
184.9663 682.5742 m
184.7739 682.335 183.6304 683.2002 183.5977 683.2842 c
183.5518 683.4087 183.4897 683.5356 183.9604 683.9067 c
184.1826 684.0562 184.8818 683.8975 185.1533 683.3916 c
185.3379 683.0474 185.0034 682.6201 184.9663 682.5742 c
f
185.0664 686.7578 m
184.6924 686.8525 183.9131 686.9688 183.8916 687.2954 c
183.8667 687.686 183.9585 687.9561 184.5796 688.1143 c
184.9946 688.2207 185.9844 688.0991 185.7524 686.9844 c
185.6011 686.7607 185.5703 686.6387 185.0664 686.7578 c
f
190.3896 684.311 m
191.7139 683.0923 190.042 682.1245 189.1387 682.0747 c
187.6895 681.9941 186.6846 681.543 186.0527 681.7197 c
185.6963 681.8198 185.002 682.2197 185.2754 682.4468 c
185.5156 682.6494 185.6074 683.0239 185.6577 683.2397 c
185.6782 683.332 185.3291 683.6768 185.4185 683.7261 c
185.4902 683.752 185.6621 683.2651 186.9912 683.4438 c
187.5571 683.5332 188.7358 683.7852 189.1157 683.9341 c
189.4077 684.0493 189.7432 684.1001 190.2285 684.3369 c
190.3232 684.3779 190.3638 684.3394 190.3896 684.311 c
f
190.7852 687.9116 m
189.647 687.2354 189.25 686.8735 188.9883 686.6812 c
187.729 685.6343 186.7803 685.751 186.231 685.9385 c
185.7803 686.0103 185.5571 686.1777 185.2251 686.2065 c
184.9585 686.2285 184.5693 686.4014 184.9946 686.0176 c
185.2021 685.8311 185.4839 685.811 185.5879 685.334 c
185.6045 685.0107 185.667 684.8516 185.417 684.3271 c
185.3799 684.2803 185.332 684.2363 185.3862 684.2397 c
185.5781 684.2202 186.1797 683.5938 187.5132 684.061 c
189.2793 684.6816 190.1948 684.7588 190.5488 684.9146 c
190.6084 684.9414 190.6943 684.999 190.7583 685.0547 c
191.2065 685.3892 191.3228 685.5801 191.3901 685.7959 c
191.4575 686.0103 191.79 687.1797 191.0469 687.8545 c
190.9463 687.9209 190.8535 687.9575 190.7852 687.9116 c
f
191.1187 691.8154 m
191.2256 691.8872 192.5015 690.3794 191.6455 689.2021 c
191.2256 688.6226 190.8252 688.5669 190.2832 688.1758 c
189.2988 687.5815 188.5806 686.998 188.1875 686.7456 c
187.6108 686.375 187.0815 686.1958 186.5562 686.3193 c
186.291 686.3813 185.7666 686.4126 185.9365 686.6611 c
186.1045 686.9077 186.2241 687.0449 186.1714 687.5547 c
186.1016 688.2222 185.5361 688.3213 185.9302 688.3975 c
186.2681 688.4614 186.2915 688.4614 186.7075 688.4517 c
188.2998 688.4106 192.2759 689.8926 191.0415 691.5625 c
190.9751 691.6963 191.02 691.8608 191.1187 691.8154 c
f
188.5854 691.8315 m
188.7764 691.9819 189.021 691.9536 189.1763 691.9824 c
189.4536 692.0347 190.3149 692.4131 190.2607 691.7295 c
190.207 691.0464 188.9028 690.7285 188.4526 690.6035 c
188.2568 690.5625 188.123 690.6279 188.0303 690.7666 c
187.937 690.9053 187.8022 691.3057 188.5854 691.8315 c
f
192.332 698.6753 m
191.4976 698.0928 189.2461 697.2275 188.3506 696.3359 c
186.9341 695.7197 184.9175 694.0073 184.1528 693.5835 c
183.5381 693.1709 182.0605 692.3794 181.2002 691.6006 c
181.5352 691.6689 183.04 691.5869 184.8618 692.2305 c
185.4829 692.4688 186.0771 692.5117 186.9004 692.2173 c
188.103 692.7676 189.7334 693.752 189.7036 693.9541 c
189.6899 694.0508 189.6523 694.1489 189.8809 694.2402 c
190.0825 694.3213 190.0215 694.2124 190.3628 694.4189 c
192.0996 695.5186 192.9854 696.1582 y
193.3472 696.4351 193.126 696.4912 193.2373 696.6167 c
193.334 696.7275 193.3296 696.5459 193.7593 696.7676 c
193.9834 696.8857 194.5791 697.1719 196.0796 698.2139 c
197.4375 699.0811 196.3882 701.3125 194.064 699.8833 c
192.4858 698.9121 192.5947 698.7852 192.332 698.6753 c
f
U
U
u
0 R
0 0 0 1 K
2 w
302.6313 699.6953 m
305.9644 699.6953 L
S
u
0 O
0 0 0 1 k
1 w
326.7559 698.5303 m
326.0898 698.502 l
326.5059 697.8174 325.543 695.3721 323.5527 695.7061 c
323.8125 694.373 322.6758 693.5527 321.3867 693.8818 c
320.2754 694.165 319.625 694.2764 317.6816 693.9189 c
315.2695 693.4746 312.498 692.7295 309.6445 694.3955 c
309.3965 694.542 309.1074 694.3955 309.0332 694.2295 c
308.8945 693.917 308.998 692.9932 308.2188 692.9746 c
305.312 692.9746 l
304.2749 692.9746 303.4448 694.4922 303.4604 699.3076 c
303.4761 704.3252 303.5327 706.2891 305.6069 706.3076 c
307.6445 706.3252 308.209 706.3076 y
308.8574 706.2891 308.9609 705.8584 309.0625 705.5762 c
309.1191 705.4131 309.3672 705.3447 309.5332 705.4189 c
309.793 705.5332 312.3672 706.6465 314.5898 706.8818 c
316.6523 707.1006 317.459 707.7246 318.8477 707.5117 c
320.4922 707.2598 325.8125 707.4346 327.4043 707.4561 c
328.9609 707.4766 331.459 706.9727 334.7754 707.0488 c
337.9414 707.1211 337.957 703.4561 335.1094 703.623 c
332.8574 703.7549 332.7832 703.4795 332.0059 703.5762 c
330.6426 703.7471 329.1367 703.5859 328.0801 703.5107 c
327.5957 703.4775 327.0625 703.623 325.6445 703.4746 c
326.4238 703.29 326.457 703.0732 327.5723 702.5674 c
329.2012 701.752 328.2559 698.623 326.7559 698.5303 c
f
1 g
307.6074 699.8262 m
307.5527 697.8262 307.9395 694.3662 308.0527 694.0488 c
308.1582 693.75 307.9395 693.5645 307.4961 693.6045 c
307.1875 693.6318 305.6265 693.6221 y
304.9409 693.6221 304.1069 694.3262 304.1069 699.6592 c
304.144 705.1777 304.3667 705.8818 305.9956 705.8818 c
308.0156 705.8262 l
308.1367 705.8037 308.2285 705.7295 308.293 705.6045 c
308.4531 705.2949 307.748 704.8799 307.6074 699.8262 c
f
312.3184 699.2871 m
312.2305 699.1973 312.1992 699.0479 312.2383 698.9746 c
312.4238 698.623 312.8301 698.8916 313.1445 698.9189 c
313.4043 698.9414 314.8125 699.1777 315.3301 698.8447 c
315.8496 698.5117 316.8672 697.8633 317.2188 696.4561 c
317.2754 696.1963 317.7129 695.4141 318.3867 695.1963 c
318.8613 695.0439 318.7813 694.5596 318.377 694.5205 c
317.293 694.417 316.9609 693.9648 313.5898 693.9746 c
310.9043 694.1221 308.3867 694.6426 308.2188 698.2148 c
308.1641 700.1787 308.2461 702.9268 308.5332 703.9189 c
308.8262 704.9258 309.6445 704.9189 310.3672 705.2891 c
313.3594 706.5791 315.3594 706.4971 317.0156 706.8633 c
317.668 707.0078 318.1641 707.2627 318.9961 706.6777 c
320.7695 705.4326 322.9043 705.0117 323.4238 704.6406 c
323.7832 704.4092 323.8848 704.291 323.9414 704.1602 c
324.0332 703.9463 324.4043 703.9189 324.7188 703.6592 c
324.9238 703.5107 325.0156 703.4375 325.2383 703.3447 c
324.9414 702.9561 324.6738 703.3916 324.2617 702.5488 c
324.1738 702.3682 324.2754 702.0293 324.3301 701.8818 c
324.5254 701.54 325.2559 701.4844 325.543 701.4336 c
325.7715 701.3926 326.0449 701.3477 326.3027 701.2988 c
326.9883 701.1689 327.1953 701.8721 327.2188 701.6221 c
327.3457 700.3633 325.6543 700.6221 325.0996 700.7148 c
324.543 700.7607 324.0898 701.0391 323.5332 701.1777 c
323.293 701.3633 322.0195 701.4014 322.0352 702.2988 c
322.0156 702.4463 322.043 702.7676 321.6445 702.6221 c
321.3438 702.5127 319.9063 702.5244 319.6914 702.9375 c
319.5938 703.127 319.4961 703.252 319.293 703.3447 c
319.0898 703.4375 318.9688 703.3184 318.9961 703.085 c
319.0332 702.7891 319.0098 702.3838 318.5898 702.2891 c
318.2188 702.1924 318.0352 702.1836 317.7754 702.3447 c
317.498 702.4932 316.9805 702.8252 316.7383 702.8076 c
316.543 702.7471 316.3906 702.5947 316.8496 702.3818 c
317.2578 702.1816 317.7539 701.5156 317.0527 700.7529 c
316.0195 699.627 316.3516 699.543 312.6875 699.418 c
312.5156 699.4131 312.416 699.3838 312.3184 699.2871 c
f
318.3203 699.2246 m
317.8398 699.8359 317.4688 700.04 317.9238 700.6416 c
317.9785 700.7529 318.1445 700.7549 318.5996 700.6504 c
318.8398 700.5947 319.6445 699.623 318.9414 698.9746 c
318.7754 698.8818 318.5898 698.8174 318.3203 699.2246 c
f
317.5527 697.3076 m
317.2598 697.2158 316.793 698.5723 316.8125 698.6602 c
316.8438 698.7891 316.8633 698.9287 317.4609 698.9746 c
317.7285 698.9746 318.2207 698.4531 318.1641 697.8818 c
318.125 697.4932 317.6094 697.3252 317.5527 697.3076 c
f
319.9688 700.7246 m
319.7109 701.0117 319.1289 701.543 319.293 701.8262 c
319.4902 702.1641 319.7168 702.3369 320.3203 702.1221 c
320.7246 701.9795 321.4785 701.3262 320.6641 700.5303 c
320.4141 700.4287 320.3203 700.3447 319.9688 700.7246 c
f
323.0234 695.7256 m
323.4434 693.9756 321.5156 694.1045 320.7383 694.5664 c
319.4902 695.3076 318.4043 695.4932 317.9785 695.9922 c
317.7383 696.2744 317.3848 696.9932 317.7383 697.0293 c
318.0508 697.0635 318.3359 697.3232 318.498 697.4746 c
318.5664 697.54 318.4688 698.0205 318.5703 698.0117 c
318.6445 697.9932 318.5156 697.4932 319.7188 696.9004 c
320.2383 696.6592 321.3574 696.2109 321.7559 696.123 c
322.0625 696.0557 322.3691 695.9111 322.9043 695.8369 c
323.0059 695.8184 323.0176 695.7637 323.0234 695.7256 c
f
325.3594 698.4941 m
324.0371 698.5674 323.5059 698.4883 323.1816 698.4746 c
321.5527 698.3076 320.8301 698.9336 320.4785 699.3955 c
320.1445 699.7061 320.0527 699.9697 319.793 700.1787 c
319.584 700.3457 319.3574 700.7061 319.4961 700.1504 c
319.5645 699.8799 319.7871 699.7061 319.6074 699.252 c
319.4414 698.9746 319.4043 698.8076 318.9043 698.5117 c
318.8477 698.4932 318.7832 698.4834 318.8301 698.4561 c
318.9785 698.333 319.1289 697.4775 320.4961 697.1221 c
322.3086 696.6523 323.1113 696.2061 323.4922 696.1377 c
323.5566 696.127 323.6602 696.127 323.7441 696.1377 c
324.3027 696.165 324.5059 696.2588 324.6816 696.4004 c
324.8574 696.541 325.7852 697.3262 325.5449 698.3008 c
325.498 698.4121 325.4414 698.4941 325.3594 698.4941 c
f
327.8125 701.5488 m
327.9414 701.5488 328.1602 699.5859 326.793 699.0859 c
326.1211 698.8389 325.7578 699.0156 325.0898 698.9932 c
323.9414 699.0488 323.0195 698.9648 322.5527 698.9746 c
321.8672 698.9883 321.3281 699.1348 320.9609 699.5303 c
320.7754 699.7295 320.3574 700.0479 320.6367 700.1592 c
320.9141 700.2705 321.0898 700.3174 321.3301 700.7705 c
321.6445 701.3633 321.2305 701.7607 321.5996 701.6045 c
321.916 701.4688 321.9355 701.4561 322.2754 701.2158 c
323.5742 700.2939 327.7012 699.3076 327.6074 701.3818 c
327.627 701.5303 327.7559 701.6416 327.8125 701.5488 c
f
325.7188 702.9746 m
325.9609 702.9932 326.1484 702.833 326.293 702.7705 c
326.5527 702.6592 327.4785 702.4932 327.0527 701.9561 c
326.627 701.4189 325.3672 701.8818 324.9238 702.0293 c
324.7383 702.1045 324.6641 702.2334 324.6641 702.4004 c
324.6641 702.5674 324.7754 702.9746 325.7188 702.9746 c
f
332.6445 706.5674 m
331.627 706.5488 329.2754 707.0859 328.0352 706.8447 c
326.5156 707.123 323.8867 706.8262 323.0156 706.9004 c
322.2754 706.9004 320.6074 707.0674 319.459 706.9004 c
319.7754 706.7705 320.9785 705.8633 322.8496 705.3818 c
323.498 705.2334 324.0156 704.9375 324.5352 704.2344 c
325.8398 704.0205 327.7422 703.9287 327.8301 704.1133 c
327.873 704.2012 327.8965 704.3037 328.1367 704.252 c
328.3496 704.207 328.2383 704.1504 328.6367 704.1318 c
330.6914 704.0762 331.7832 704.1133 y
332.2383 704.1416 332.0859 704.3115 332.248 704.3535 c
332.3906 704.3916 332.2852 704.2432 332.7656 704.1875 c
333.0176 704.1611 333.6719 704.0664 335.498 704.0947 c
337.1094 704.0576 337.4824 706.4951 334.7559 706.6045 c
332.9043 706.6777 332.9238 706.5117 332.6445 706.5674 c
f
U
U
u
0 R
0 0 0 1 K
2 w
446.1113 678.3369 m
448.4854 675.9961 L
S
u
0 O
0 0 0 1 k
1 w
462.4717 660.5688 m
461.9775 661.0166 l
461.793 660.2368 459.3906 659.1719 458.208 660.8066 c
457.457 659.6753 456.0723 659.8892 455.3848 661.0288 c
454.793 662.0107 454.4072 662.5464 452.7725 663.6563 c
450.7432 665.0337 448.2461 666.4487 447.3848 669.6387 c
447.3105 669.917 447.002 670.0156 446.832 669.9497 c
446.5146 669.8247 445.9395 669.0942 445.3711 669.6279 c
443.3018 671.6685 l
442.5635 672.3965 443.0381 674.0601 446.4297 677.478 c
449.9639 681.04 451.3838 682.3984 452.873 680.9556 c
454.3359 679.5376 454.7256 679.1289 y
455.1748 678.6602 454.9463 678.2813 454.8203 678.0088 c
454.7461 677.853 454.875 677.6299 455.0449 677.5664 c
455.3105 677.4653 457.9248 676.4507 459.6729 675.0576 c
461.2949 673.7656 462.3076 673.6436 463.1465 672.5166 c
464.1406 671.1826 468.0518 667.5718 469.2002 666.4692 c
470.3232 665.3911 471.748 663.2783 474.1631 661.0039 c
476.4688 658.8325 473.9063 656.2119 471.9961 658.3301 c
470.4854 660.0054 470.2383 659.8613 469.7529 660.4761 c
468.9023 661.5547 467.7168 662.4971 466.9121 663.1855 c
466.5439 663.502 466.2656 663.98 465.1523 664.8701 c
465.5771 664.1914 465.4492 664.0137 465.8877 662.8706 c
466.4756 661.146 463.6055 659.582 462.4717 660.5688 c
f
1 g
449.7471 674.936 m
448.3037 673.5503 446.1494 670.8149 446.0078 670.5093 c
445.873 670.2227 445.5869 670.2441 445.2988 670.584 c
445.0986 670.8198 443.9805 671.9087 y
443.4922 672.3901 443.3926 673.4771 447.1377 677.2744 c
451.0381 681.1782 451.6914 681.5229 452.8516 680.3794 c
454.25 678.9219 l
454.3203 678.8208 454.334 678.7036 454.292 678.5693 c
454.1885 678.2363 453.3955 678.436 449.7471 674.936 c
f
452.7227 671.2446 m
452.5977 671.2422 452.4697 671.1577 452.4463 671.0781 c
452.332 670.6978 452.8096 670.6035 453.0527 670.4023 c
453.2539 670.2358 454.4219 669.4155 454.5566 668.8149 c
454.6934 668.2129 454.9619 667.0371 454.2246 665.7881 c
454.082 665.5635 453.8447 664.6992 454.1719 664.0708 c
454.4023 663.6294 454.0059 663.3408 453.6904 663.5967 c
452.8457 664.2842 452.292 664.1953 449.8984 666.5688 c
448.0898 668.5596 446.6621 670.6978 449.0508 673.3594 c
450.3906 674.7964 452.3789 676.6953 453.2793 677.2002 c
454.1953 677.7114 454.7734 677.1323 455.5479 676.8882 c
458.584 675.7061 459.9502 674.2432 461.3867 673.3413 c
461.9531 672.9863 462.4854 672.8193 462.667 671.8188 c
463.0557 669.687 464.2803 667.8882 464.3896 667.2593 c
464.4824 666.8423 464.4727 666.687 464.4209 666.5537 c
464.3359 666.3369 464.5811 666.0571 464.6221 665.6514 c
464.6641 665.4019 464.6777 665.2852 464.7715 665.0625 c
464.2871 664.9941 464.4023 665.4922 463.5176 665.1816 c
463.3281 665.1147 463.1621 664.8018 463.0977 664.6587 c
462.9971 664.2783 463.4785 663.7256 463.6465 663.4878 c
463.7803 663.2983 463.9434 663.0742 464.0928 662.8584 c
464.4902 662.2847 465.1309 662.6401 464.9727 662.4453 c
464.1787 661.46 463.1563 662.832 462.8262 663.2871 c
462.4619 663.7109 462.335 664.2271 462.0361 664.7168 c
461.9951 665.0176 461.1152 665.939 461.7568 666.5669 c
461.8457 666.6855 462.0908 666.895 461.7051 667.0713 c
461.4141 667.2046 460.3984 668.2222 460.5361 668.667 c
460.5996 668.8706 460.6172 669.0283 460.5381 669.2368 c
460.459 669.4453 460.2891 669.4458 460.1445 669.2603 c
459.9629 669.0234 459.6621 668.7515 459.2959 668.979 c
458.9639 669.1704 458.8271 669.293 458.7559 669.5903 c
458.6621 669.8906 458.5264 670.4907 458.3418 670.6479 c
458.1602 670.7422 457.9453 670.7407 458.1221 670.2666 c
458.2725 669.8379 458.1582 669.0151 457.123 668.9644 c
455.5967 668.8877 455.7744 668.5952 453.0771 671.0786 c
452.9521 671.1958 452.8604 671.2446 452.7227 671.2446 c
f
456.9531 666.9858 m
457.04 667.7588 456.9189 668.1646 457.665 668.2734 c
457.7822 668.3145 457.9023 668.1992 458.1523 667.8052 c
458.2852 667.5967 458.1758 666.3398 457.2197 666.3721 c
457.0361 666.4224 456.8584 666.5068 456.9531 666.9858 c
f
455.0605 666.1602 m
454.7871 666.3003 455.4072 667.5938 455.4824 667.6426 c
455.5957 667.7124 455.707 667.7983 456.165 667.4111 c
456.3555 667.2236 456.3398 666.5068 455.8984 666.1396 c
455.5977 665.8901 455.1133 666.1328 455.0605 666.1602 c
f
459.1797 666.8965 m
459.1973 667.2822 459.1563 668.0693 459.4717 668.1558 c
459.8496 668.2578 460.1328 668.2217 460.4111 667.645 c
460.5996 667.2598 460.6768 666.2651 459.5381 666.27 c
459.2891 666.3735 459.1631 666.3794 459.1797 666.8965 c
f
457.8447 661.1924 m
456.915 659.6514 455.6328 661.0967 455.4043 661.9712 c
455.0361 663.3755 454.3926 664.27 454.4395 664.9243 c
454.4668 665.2939 454.7197 666.0537 454.9971 665.8315 c
455.2432 665.6362 455.6289 665.6211 455.8506 665.6152 c
455.9453 665.6138 456.2129 666.0244 456.2793 665.9468 c
456.3193 665.8813 455.876 665.6162 456.3164 664.3491 c
456.5176 663.8125 457 662.7075 457.2217 662.3652 c
457.3926 662.1021 457.5098 661.7837 457.8379 661.3555 c
457.8975 661.2705 457.8672 661.2236 457.8447 661.1924 c
f
461.4521 661.5234 m
460.5625 662.5044 460.1279 662.8208 459.8877 663.0386 c
458.6104 664.0635 458.5352 665.0166 458.6094 665.5923 c
458.5898 666.0479 458.709 666.3003 458.6709 666.6313 c
458.6396 666.897 458.7314 667.3125 458.4404 666.8198 c
458.2988 666.5791 458.335 666.2988 457.8887 666.1016 c
457.5752 666.021 457.4316 665.9282 456.8682 666.0684 c
456.8145 666.0947 456.7617 666.1333 456.7764 666.0811 c
456.7959 665.8892 456.3018 665.1743 457.0254 663.9614 c
457.9863 662.354 458.2451 661.4727 458.4678 661.1567 c
458.5068 661.1035 458.5801 661.0313 458.6475 660.98 c
459.0645 660.6069 459.2754 660.5313 459.5 660.5088 c
459.7236 660.4854 460.9355 660.3931 461.4482 661.2559 c
461.4932 661.3677 461.5107 661.4658 461.4521 661.5234 c
f
465.3438 661.9766 m
465.4355 661.8857 464.2129 660.3345 462.8887 660.9385 c
462.2363 661.2344 462.1016 661.6152 461.6104 662.0684 c
460.832 662.9141 460.1162 663.502 459.791 663.8364 c
459.3125 664.3276 459.0313 664.8101 459.0479 665.3496 c
459.0557 665.6221 458.9814 666.1421 459.2588 666.0254 c
459.5342 665.9097 459.6924 665.8198 460.1816 665.9736 c
460.8213 666.1748 460.8057 666.7485 460.959 666.3784 c
461.0889 666.0596 461.0938 666.0366 461.167 665.627 c
461.4443 664.0586 463.6914 660.459 465.0801 662.0015 c
465.1982 662.0938 465.3682 662.082 465.3438 661.9766 c
f
464.8535 664.4619 m
465.0391 664.3047 465.0605 664.0591 465.1191 663.9131 c
465.2266 663.6514 465.7686 662.8833 465.0889 662.7998 c
464.4082 662.7163 463.8359 663.9307 463.624 664.3467 c
463.5449 664.5308 463.582 664.6743 463.6992 664.7935 c
463.8164 664.9121 464.1816 665.124 464.8535 664.4619 c
f
472.3086 662.1572 m
471.5703 662.8584 470.2734 664.8921 469.2207 665.5913 c
468.334 666.8564 466.2539 668.4907 465.6855 669.1553 c
465.1582 669.6748 464.0879 670.9648 463.1523 671.6523 c
463.2871 671.3374 463.5068 669.8467 464.501 668.1904 c
464.8584 667.6294 465.0195 667.0552 464.8955 666.1899 c
465.6748 665.1216 466.9648 663.7207 467.1563 663.79 c
467.249 663.8228 467.3379 663.8789 467.4727 663.6738 c
467.5928 663.4922 467.4736 663.5303 467.7441 663.2373 c
469.168 661.7549 469.9717 661.0146 y
470.3154 660.7153 470.3262 660.9434 470.4717 660.8594 c
470.5996 660.7861 470.4199 660.7549 470.7236 660.3779 c
470.8848 660.1821 471.2832 659.6553 472.6035 658.3931 c
473.7256 657.2354 475.7021 658.709 473.8379 660.7012 c
472.5703 662.0537 472.4678 661.9219 472.3086 662.1572 c
f
U
U
u
u
0 To
1 0 0 1 297.2588 611.0615 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_TimesNewRomanPS-ItalicMT 64.6448 53.752 -13.9517 Tf
99.244 100 Tz
0 Tt
0 TV
0 Tc
(\176) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 297.2588 600.0615 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 64.6448 53.752 -13.9517 Tf
99.244 100 Tz
0 Tt
0 TV
0 Tc
(\176) Tx 1 0 Tk
TO
U

U
U
u
u
0 R
0 0 0 1 K
2 w
166.6611 484.6782 m
169.4434 486.5142 L
S
u
0 O
0 0 0 1 k
1 w
187.4385 496.9932 m
186.8979 496.6025 l
187.6226 496.2603 188.1655 493.689 186.3203 492.8716 c
187.2715 491.9019 186.7744 490.5908 185.5171 490.1558 c
184.4336 489.7803 183.8296 489.5146 182.4043 488.146 c
180.6357 486.4468 178.7329 484.2983 175.4336 484.1172 c
175.146 484.103 174.9854 483.8213 175.0146 483.6421 c
175.0713 483.3047 175.6665 482.5908 175.0264 482.146 c
172.6006 480.5454 l
171.7349 479.9741 170.2061 480.7837 167.5669 484.8115 c
164.8164 489.0078 163.7822 490.6782 165.5029 491.8364 c
167.1938 492.9727 167.6743 493.269 y
168.2261 493.6108 168.5498 493.3086 168.79 493.1289 c
168.9268 493.0239 169.1714 493.1035 169.269 493.2568 c
169.4233 493.4951 170.9585 495.8423 172.6841 497.2627 c
174.2852 498.5815 174.6147 499.5464 175.8911 500.1338 c
177.4023 500.8291 181.7466 503.9053 183.0635 504.7998 c
184.3516 505.6743 186.7139 506.6299 189.4399 508.52 c
192.043 510.3237 194.0747 507.2734 191.6055 505.8447 c
189.6533 504.7139 189.7432 504.4434 189.041 504.0962 c
187.8091 503.4878 186.6411 502.5239 185.8003 501.8789 c
185.4146 501.585 184.8892 501.4126 183.7876 500.5078 c
184.5396 500.7827 184.687 500.6201 185.896 500.812 c
187.7051 501.0288 188.6392 497.8965 187.4385 496.9932 c
f
1 g
170.7422 487.5283 m
171.7983 485.8286 174.0264 483.1538 174.2959 482.9512 c
174.5483 482.7598 174.4683 482.4844 174.0762 482.2739 c
173.8032 482.1265 172.5063 481.2588 y
171.9341 480.8813 170.8501 481.0098 167.9131 485.4609 c
164.9043 490.0874 164.7026 490.7979 166.062 491.6948 c
167.7783 492.7607 l
167.8916 492.8086 168.0093 492.7974 168.1318 492.7285 c
168.436 492.5586 168.0762 491.8237 170.7422 487.5283 c
f
174.9712 489.6729 m
174.9473 489.5493 175.0034 489.4072 175.0767 489.3677 c
175.4248 489.1768 175.6162 489.6245 175.8633 489.8203 c
176.0679 489.9824 177.1133 490.9551 177.7285 490.9624 c
178.3457 490.9707 179.5522 490.9897 180.6206 490.0088 c
180.811 489.8232 181.6069 489.4111 182.2891 489.6006 c
182.7695 489.7349 182.9692 489.2866 182.6533 489.0313 c
181.8057 488.3477 181.7773 487.7876 178.9585 485.939 c
176.6357 484.583 174.2476 483.6309 172.1401 486.5195 c
171.0127 488.1289 169.5674 490.4678 169.2607 491.4541 c
168.9507 492.4556 169.6377 492.9009 170.0371 493.6074 c
171.8237 496.3325 173.5381 497.3652 174.7192 498.5835 c
175.1841 499.0635 175.4575 499.5493 176.4741 499.5195 c
178.6401 499.457 180.6538 500.2813 181.292 500.2578 c
181.7192 500.2627 181.8691 500.2197 181.9883 500.1416 c
182.1831 500.0137 182.5078 500.1953 182.9131 500.1519 c
183.166 500.1406 183.2832 500.1304 183.52 500.1753 c
183.4863 499.6875 183.0229 499.9038 183.1431 498.9731 c
183.1694 498.7739 183.4409 498.5469 183.5679 498.4541 c
183.9189 498.2764 184.5596 498.6323 184.8271 498.748 c
185.04 498.8398 185.293 498.9531 185.5352 499.0542 c
186.1792 499.3232 185.9644 500.0244 186.1221 499.8281 c
186.9209 498.8477 185.3667 498.1318 184.8525 497.9043 c
184.3628 497.6357 183.8315 497.6187 183.2905 497.4277 c
182.9878 497.4502 181.9038 496.7808 181.4224 497.5381 c
181.3252 497.6504 181.1709 497.9336 180.9185 497.5928 c
180.7275 497.3359 179.5215 496.5542 179.1147 496.7803 c
178.9287 496.8848 178.7783 496.9355 178.5576 496.9009 c
178.3369 496.8662 178.3018 496.7002 178.4531 496.5205 c
178.647 496.2939 178.8506 495.9429 178.5522 495.6328 c
178.2959 495.3477 178.1475 495.2393 177.8418 495.2305 c
177.5288 495.2017 176.9136 495.1934 176.7212 495.0454 c
176.5918 494.8877 176.5483 494.6763 177.0488 494.7515 c
177.4995 494.8091 178.2808 494.5264 178.1152 493.5039 c
177.873 491.9951 178.1968 492.1079 175.207 489.9854 c
175.0664 489.8867 174.9995 489.8071 174.9712 489.6729 c
f
180.0151 492.9263 m
179.2773 493.1719 178.8555 493.1377 178.9038 493.8906 c
178.8882 494.0137 179.0254 494.1064 179.4629 494.2705 c
179.6943 494.356 180.9009 493.9883 180.6714 493.0596 c
180.584 492.8906 180.4644 492.7349 180.0151 492.9263 c
f
180.4302 490.9033 m
180.2363 490.6655 179.0996 491.5405 179.0674 491.625 c
179.0225 491.7495 178.9619 491.877 179.4355 492.2441 c
179.6587 492.3916 180.3569 492.2275 180.6245 491.7197 c
180.8057 491.3735 180.4678 490.9492 180.4302 490.9033 c
f
180.5649 495.0859 m
180.1914 495.1836 179.4131 495.3066 179.394 495.6333 c
179.3726 496.0244 179.4668 496.293 180.0889 496.4463 c
180.5044 496.5498 181.4937 496.4199 181.2524 495.3071 c
181.0996 495.0845 181.0674 494.9629 180.5649 495.0859 c
f
185.8677 492.5962 m
187.1821 491.3667 185.502 490.4126 184.5991 490.3701 c
183.1489 490.3013 182.1406 489.8584 181.5103 490.04 c
181.1543 490.1436 180.4634 490.5488 180.7383 490.7734 c
180.9805 490.9741 181.0752 491.3477 181.1274 491.5635 c
181.1484 491.6558 180.8022 492.0029 180.8921 492.0518 c
180.9639 492.0771 181.1318 491.5889 182.4624 491.7568 c
183.0288 491.8413 184.21 492.084 184.5908 492.2295 c
184.8838 492.3423 185.2197 492.3906 185.707 492.6235 c
185.8022 492.6641 185.8418 492.625 185.8677 492.5962 c
f
186.2925 496.1934 m
185.1484 495.5264 184.749 495.168 184.4858 494.9775 c
183.2183 493.9414 182.27 494.0654 181.7222 494.2578 c
181.2725 494.333 181.0508 494.5024 180.7188 494.5337 c
180.4526 494.5581 180.0649 494.7339 180.4868 494.3467 c
180.6929 494.1582 180.9741 494.1362 181.0742 493.6582 c
181.0884 493.335 181.1494 493.1753 180.895 492.6528 c
180.8584 492.6064 180.8096 492.5625 180.8638 492.5654 c
181.0557 492.5449 181.6523 491.9136 182.9893 492.3696 c
184.7607 492.9761 185.6768 493.0459 186.0322 493.1982 c
186.0918 493.2246 186.1782 493.2817 186.2422 493.3369 c
186.6934 493.6675 186.8115 493.8574 186.8804 494.0728 c
186.9492 494.2871 187.2915 495.4531 186.5542 496.1343 c
186.4536 496.2012 186.3613 496.2388 186.2925 496.1934 c
f
186.6577 500.0942 m
186.7651 500.165 188.0288 498.6475 187.1631 497.4771 c
186.7388 496.9009 186.3379 496.8481 185.793 496.4619 c
184.8037 495.8755 184.0806 495.2979 183.6855 495.0488 c
183.106 494.6826 182.5752 494.5078 182.0508 494.6357 c
181.7861 494.7002 181.2622 494.7354 181.4336 494.9824 c
181.604 495.228 181.7251 495.3638 181.6758 495.874 c
181.6118 496.542 181.0474 496.646 181.4414 496.7188 c
181.7803 496.7798 181.8037 496.7803 182.2197 496.7666 c
183.8115 496.7124 187.7993 498.1621 186.5786 499.8418 c
186.5132 499.9766 186.5596 500.1406 186.6577 500.0942 c
f
184.125 500.1309 m
184.3169 500.2803 184.5615 500.2495 184.7168 500.2769 c
184.9946 500.3271 185.8589 500.6982 185.7993 500.0156 c
185.7397 499.333 184.4336 499.0254 183.9819 498.9043 c
183.7856 498.8647 183.6528 498.9316 183.561 499.0708 c
183.4688 499.2104 183.3374 499.6113 184.125 500.1309 c
f
187.9268 506.9443 m
187.0874 506.3687 184.8291 505.5215 183.9268 504.6372 c
182.5054 504.0327 180.4746 502.3369 179.7065 501.9189 c
179.0889 501.5112 177.6045 500.7319 176.7378 499.96 c
177.0737 500.0259 178.5776 499.9316 180.4043 500.5601 c
181.0273 500.7935 181.6221 500.8315 182.4434 500.5308 c
183.6499 501.0708 185.2881 502.042 185.2598 502.2441 c
185.2476 502.3413 185.2104 502.4399 185.4395 502.5293 c
185.6421 502.6089 185.5801 502.5 185.9229 502.7041 c
187.6685 503.7891 188.5596 504.4219 y
188.9238 504.6958 188.7031 504.7539 188.8149 504.8779 c
188.9131 504.9883 188.9067 504.8066 189.3384 505.0244 c
189.5635 505.1416 190.1616 505.4229 191.6704 506.4521 c
193.0356 507.3086 192.0044 509.5488 189.6685 508.1382 c
188.083 507.1797 188.1904 507.0518 187.9268 506.9443 c
f
U
U
u
0 R
0 0 0 1 K
2 w
300.6377 513.5781 m
303.9707 513.5781 L
S
u
0 O
0 0 0 1 k
1 w
324.7617 512.4131 m
324.0957 512.3848 l
324.5117 511.7002 323.5488 509.2549 321.5586 509.5889 c
321.8184 508.2559 320.6816 507.4355 319.3926 507.7646 c
318.2813 508.0479 317.6309 508.1592 315.6875 507.8018 c
313.2754 507.3574 310.5039 506.6123 307.6504 508.2783 c
307.4023 508.4248 307.1133 508.2783 307.0391 508.1123 c
306.9004 507.7998 307.0039 506.876 306.2246 506.8574 c
303.3184 506.8574 l
302.2813 506.8574 301.4512 508.375 301.4668 513.1904 c
301.4824 518.208 301.5391 520.1719 303.6133 520.1904 c
305.6504 520.208 306.2148 520.1904 y
306.8633 520.1719 306.9668 519.7412 307.0684 519.459 c
307.125 519.2959 307.373 519.2275 307.5391 519.3018 c
307.7988 519.416 310.373 520.5293 312.5957 520.7646 c
314.6582 520.9834 315.4648 521.6074 316.8535 521.3945 c
318.498 521.1426 323.8184 521.3174 325.4102 521.3389 c
326.9668 521.3594 329.4648 520.8555 332.7813 520.9316 c
335.9473 521.0039 335.9629 517.3389 333.1152 517.5059 c
330.8633 517.6377 330.7891 517.3623 330.0117 517.459 c
328.6484 517.6299 327.1426 517.4688 326.0859 517.3936 c
325.6016 517.3604 325.0684 517.5059 323.6504 517.3574 c
324.4297 517.1729 324.4629 516.9561 325.5781 516.4502 c
327.207 515.6348 326.2617 512.5059 324.7617 512.4131 c
f
1 g
305.6133 513.709 m
305.5586 511.709 305.9453 508.249 306.0586 507.9316 c
306.1641 507.6328 305.9453 507.4473 305.502 507.4873 c
305.1934 507.5146 303.6328 507.5049 y
302.9473 507.5049 302.1133 508.209 302.1133 513.542 c
302.1504 519.0605 302.373 519.7646 304.002 519.7646 c
306.0215 519.709 l
306.1426 519.6865 306.2344 519.6123 306.2988 519.4873 c
306.459 519.1777 305.7539 518.7627 305.6133 513.709 c
f
310.3242 513.1699 m
310.2363 513.0801 310.2051 512.9307 310.2441 512.8574 c
310.4297 512.5059 310.8359 512.7744 311.1504 512.8018 c
311.4102 512.8242 312.8184 513.0605 313.3359 512.7275 c
313.8555 512.3945 314.873 511.7461 315.2246 510.3389 c
315.2813 510.0791 315.7188 509.2969 316.3926 509.0791 c
316.8672 508.9268 316.7871 508.4424 316.3828 508.4033 c
315.2988 508.2998 314.9668 507.8477 311.5957 507.8574 c
308.9102 508.0049 306.3926 508.5254 306.2246 512.0977 c
306.1699 514.0615 306.252 516.8096 306.5391 517.8018 c
306.832 518.8086 307.6504 518.8018 308.373 519.1719 c
311.3652 520.4619 313.3652 520.3799 315.0215 520.7461 c
315.6738 520.8906 316.1699 521.1455 317.002 520.5605 c
318.7754 519.3154 320.9102 518.8945 321.4297 518.5234 c
321.7891 518.292 321.8906 518.1738 321.9473 518.043 c
322.0391 517.8291 322.4102 517.8018 322.7246 517.542 c
322.9297 517.3936 323.0215 517.3203 323.2441 517.2275 c
322.9473 516.8389 322.6797 517.2744 322.2676 516.4316 c
322.1797 516.251 322.2813 515.9121 322.3359 515.7646 c
322.5313 515.4229 323.2617 515.3672 323.5488 515.3164 c
323.7773 515.2754 324.0508 515.2305 324.3086 515.1816 c
324.9941 515.0518 325.2012 515.7549 325.2246 515.5049 c
325.3516 514.2461 323.6602 514.5049 323.1055 514.5977 c
322.5488 514.6436 322.0957 514.9219 321.5391 515.0605 c
321.2988 515.2461 320.0254 515.2842 320.041 516.1816 c
320.0215 516.3291 320.0488 516.6504 319.6504 516.5049 c
319.3496 516.3955 317.9121 516.4072 317.6973 516.8203 c
317.5996 517.0098 317.502 517.1348 317.2988 517.2275 c
317.0957 517.3203 316.9746 517.2012 317.002 516.9678 c
317.0391 516.6719 317.0156 516.2666 316.5957 516.1719 c
316.2246 516.0752 316.041 516.0664 315.7813 516.2275 c
315.5039 516.376 314.9863 516.708 314.7441 516.6904 c
314.5488 516.6299 314.3965 516.4775 314.8555 516.2646 c
315.2637 516.0645 315.7598 515.3984 315.0586 514.6357 c
314.0254 513.5098 314.3574 513.4258 310.6934 513.3008 c
310.5215 513.2959 310.4219 513.2666 310.3242 513.1699 c
f
316.3262 513.1074 m
315.8457 513.7188 315.4746 513.9229 315.9297 514.5244 c
315.9844 514.6357 316.1504 514.6377 316.6055 514.5332 c
316.8457 514.4775 317.6504 513.5059 316.9473 512.8574 c
316.7813 512.7646 316.5957 512.7002 316.3262 513.1074 c
f
315.5586 511.1904 m
315.2656 511.0986 314.7988 512.4551 314.8184 512.543 c
314.8496 512.6719 314.8691 512.8115 315.4668 512.8574 c
315.7344 512.8574 316.2266 512.3359 316.1699 511.7646 c
316.1309 511.376 315.6152 511.208 315.5586 511.1904 c
f
317.9746 514.6074 m
317.7168 514.8945 317.1348 515.4258 317.2988 515.709 c
317.4961 516.0469 317.7227 516.2197 318.3262 516.0049 c
318.7305 515.8623 319.4844 515.209 318.6699 514.4131 c
318.4199 514.3115 318.3262 514.2275 317.9746 514.6074 c
f
321.0293 509.6084 m
321.4492 507.8584 319.5215 507.9873 318.7441 508.4492 c
317.4961 509.1904 316.4102 509.376 315.9844 509.875 c
315.7441 510.1572 315.3906 510.876 315.7441 510.9121 c
316.0566 510.9463 316.3418 511.2061 316.5039 511.3574 c
316.5723 511.4229 316.4746 511.9033 316.5762 511.8945 c
316.6504 511.876 316.5215 511.376 317.7246 510.7832 c
318.2441 510.542 319.3633 510.0938 319.7617 510.0059 c
320.0684 509.9385 320.375 509.7939 320.9102 509.7197 c
321.0117 509.7012 321.0234 509.6465 321.0293 509.6084 c
f
323.3652 512.377 m
322.043 512.4502 321.5117 512.3711 321.1875 512.3574 c
319.5586 512.1904 318.8359 512.8164 318.4844 513.2783 c
318.1504 513.5889 318.0586 513.8525 317.7988 514.0615 c
317.5898 514.2285 317.3633 514.5889 317.502 514.0332 c
317.5703 513.7627 317.793 513.5889 317.6133 513.1348 c
317.4473 512.8574 317.4102 512.6904 316.9102 512.3945 c
316.8535 512.376 316.7891 512.3662 316.8359 512.3389 c
316.9844 512.2158 317.1348 511.3604 318.502 511.0049 c
320.3145 510.5352 321.1172 510.0889 321.498 510.0205 c
321.5625 510.0098 321.666 510.0098 321.75 510.0205 c
322.3086 510.0479 322.5117 510.1416 322.6875 510.2832 c
322.8633 510.4238 323.791 511.209 323.5508 512.1836 c
323.5039 512.2949 323.4473 512.377 323.3652 512.377 c
f
325.8184 515.4316 m
325.9473 515.4316 326.166 513.4688 324.7988 512.9688 c
324.127 512.7217 323.7637 512.8984 323.0957 512.876 c
321.9473 512.9316 321.0254 512.8477 320.5586 512.8574 c
319.873 512.8711 319.334 513.0176 318.9668 513.4131 c
318.7813 513.6123 318.3633 513.9307 318.6426 514.042 c
318.9199 514.1533 319.0957 514.2002 319.3359 514.6533 c
319.6504 515.2461 319.2363 515.6436 319.6055 515.4873 c
319.9219 515.3516 319.9414 515.3389 320.2813 515.0986 c
321.5801 514.1768 325.707 513.1904 325.6133 515.2646 c
325.6328 515.4131 325.7617 515.5244 325.8184 515.4316 c
f
323.7246 516.8574 m
323.9668 516.876 324.1543 516.7158 324.2988 516.6533 c
324.5586 516.542 325.4844 516.376 325.0586 515.8389 c
324.6328 515.3018 323.373 515.7646 322.9297 515.9121 c
322.7441 515.9873 322.6699 516.1162 322.6699 516.2832 c
322.6699 516.4502 322.7813 516.8574 323.7246 516.8574 c
f
330.6504 520.4502 m
329.6328 520.4316 327.2813 520.9688 326.041 520.7275 c
324.5215 521.0059 321.8926 520.709 321.0215 520.7832 c
320.2813 520.7832 318.6133 520.9502 317.4648 520.7832 c
317.7813 520.6533 318.9844 519.7461 320.8555 519.2646 c
321.5039 519.1162 322.0215 518.8203 322.541 518.1172 c
323.8457 517.9033 325.748 517.8115 325.8359 517.9961 c
325.8789 518.084 325.9023 518.1865 326.1426 518.1348 c
326.3555 518.0898 326.2441 518.0332 326.6426 518.0146 c
328.6973 517.959 329.7891 517.9961 y
330.2441 518.0244 330.0918 518.1943 330.2539 518.2363 c
330.3965 518.2744 330.291 518.126 330.7715 518.0703 c
331.0234 518.0439 331.6777 517.9492 333.5039 517.9775 c
335.1152 517.9404 335.4883 520.3779 332.7617 520.4873 c
330.9102 520.5605 330.9297 520.3945 330.6504 520.4502 c
f
U
U
u
0 R
0 0 0 1 K
2 w
442.54 504.1782 m
444.8975 501.8208 L
S
u
0 O
0 0 0 1 k
1 w
458.7754 486.2954 m
458.2842 486.7466 l
458.0947 485.9683 455.6846 484.9199 454.5137 486.5635 c
453.7539 485.437 452.3701 485.6611 451.6914 486.8052 c
451.1064 487.791 450.7246 488.3301 449.0977 489.4512 c
447.0781 490.8428 444.5918 492.2754 443.752 495.4712 c
443.6797 495.7505 443.3721 495.8511 443.2021 495.7861 c
442.8828 495.6631 442.3027 494.937 441.7393 495.4746 c
439.6836 497.5298 l
438.9512 498.2632 439.4365 499.9233 442.8525 503.3174 c
446.4121 506.854 447.8408 508.2026 449.3203 506.749 c
450.7734 505.3213 451.1602 504.9097 y
451.6055 504.438 451.374 504.0601 451.2461 503.7891 c
451.1709 503.6333 451.2979 503.4097 451.4678 503.3447 c
451.7324 503.2422 454.3398 502.209 456.0781 500.8037 c
457.6914 499.5 458.7031 499.3706 459.5342 498.2383 c
460.5186 496.8975 464.4043 493.2588 465.5449 492.1484 c
466.6602 491.0625 468.0703 488.9395 470.4697 486.6484 c
472.7588 484.4609 470.1787 481.8584 468.2832 483.9897 c
466.7842 485.6753 466.5371 485.5332 466.0557 486.1514 c
465.2129 487.2358 464.0332 488.187 463.2334 488.8809 c
462.8672 489.1997 462.5928 489.6797 461.4854 490.5776 c
461.9063 489.896 461.7764 489.7192 462.207 488.5728 c
462.7822 486.8447 459.9014 485.3003 458.7754 486.2954 c
f
1 g
446.1514 500.752 m
444.6992 499.3765 442.5254 496.6563 442.3809 496.3516 c
442.2441 496.0659 441.959 496.0894 441.6738 496.4312 c
441.4746 496.6689 440.3643 497.7651 y
439.8789 498.25 439.7871 499.3379 443.5586 503.1089 c
447.4873 506.9844 448.1426 507.3252 449.2939 506.1733 c
450.6826 504.7061 l
450.7529 504.6045 450.7646 504.4868 450.7227 504.353 c
450.6162 504.021 449.8242 504.2261 446.1514 500.752 c
f
449.1016 497.0396 m
448.9756 497.0381 448.8477 496.9546 448.8242 496.875 c
448.707 496.4956 449.1836 496.3979 449.4258 496.1948 c
449.625 496.0273 450.7881 495.1987 450.918 494.5972 c
451.0498 493.9941 451.3115 492.8164 450.5645 491.5728 c
450.4209 491.3486 450.1777 490.4863 450.5 489.856 c
450.7275 489.4126 450.3281 489.127 450.0156 489.3848 c
449.1758 490.0781 448.6211 489.9932 446.2441 492.3838 c
444.4492 494.3872 443.0371 496.5356 445.4443 499.1802 c
446.7949 500.6074 448.7959 502.4927 449.7002 502.9912 c
450.6191 503.4961 451.1934 502.9126 451.9658 502.6631 c
454.9941 501.4595 456.3496 499.9873 457.7803 499.0752 c
458.3438 498.7163 458.875 498.5454 459.0488 497.5435 c
459.4229 495.4092 460.6348 493.6021 460.7402 492.9722 c
460.8301 492.5547 460.8184 492.3994 460.7656 492.2666 c
460.6797 492.0503 460.9229 491.7686 460.9609 491.3628 c
461.002 491.1128 461.0146 490.9961 461.1064 490.7729 c
460.6221 490.708 460.7402 491.2051 459.8535 490.9009 c
459.6631 490.835 459.4951 490.5234 459.4297 490.3809 c
459.3262 490.001 459.8037 489.4453 459.9707 489.2061 c
460.1035 489.0156 460.2646 488.7905 460.4121 488.5737 c
460.8057 487.9971 461.4492 488.3477 461.2891 488.1543 c
460.4883 487.1748 459.4756 488.5537 459.1484 489.0112 c
458.7871 489.4375 458.6641 489.9546 458.3682 490.4463 c
458.3301 490.7476 457.4561 491.6748 458.1016 492.2983 c
458.1924 492.4165 458.4385 492.624 458.0547 492.8032 c
457.7646 492.9385 456.7559 493.9634 456.8965 494.4072 c
456.9609 494.6104 456.9805 494.7676 456.9023 494.9771 c
456.8242 495.186 456.6543 495.1875 456.5088 495.0029 c
456.3262 494.7676 456.0225 494.4976 455.6592 494.7275 c
455.3281 494.9219 455.1924 495.0454 455.1221 495.3428 c
455.0313 495.644 454.9004 496.2446 454.7158 496.4033 c
454.5352 496.499 454.3203 496.499 454.4941 496.0239 c
454.6406 495.5938 454.5205 494.772 453.4854 494.7285 c
451.959 494.6626 452.1348 494.3687 449.4551 496.8711 c
449.3301 496.9893 449.2393 497.0391 449.1016 497.0396 c
f
453.3008 492.7515 m
453.3936 493.5234 453.2754 493.9302 454.0234 494.0337 c
454.1406 494.0737 454.2588 493.9575 454.5068 493.562 c
454.6377 493.3525 454.5195 492.0967 453.5635 492.1353 c
453.3809 492.187 453.2041 492.2729 453.3008 492.7515 c
f
451.4033 491.9385 m
451.1309 492.0811 451.7598 493.3701 451.8359 493.4185 c
451.9492 493.4873 452.0615 493.5723 452.5166 493.1821 c
452.7061 492.9932 452.6855 492.2764 452.2412 491.9121 c
451.9395 491.665 451.4551 491.9111 451.4033 491.9385 c
f
455.5273 492.6465 m
455.5488 493.0317 455.5127 493.8188 455.8291 493.9033 c
456.207 494.0024 456.4893 493.9648 456.7646 493.3857 c
456.9492 492.999 457.0205 492.0044 455.8818 492.0176 c
455.6328 492.1221 455.5078 492.1294 455.5273 492.6465 c
f
454.1523 486.9517 m
453.2119 485.417 451.9404 486.8716 451.7168 487.7476 c
451.3594 489.1543 450.7227 490.0532 450.7744 490.7075 c
450.8037 491.0767 451.0615 491.835 451.3379 491.6104 c
451.583 491.4136 451.9678 491.396 452.1895 491.3882 c
452.2842 491.3862 452.5547 491.7949 452.6201 491.7168 c
452.6602 491.6514 452.2148 491.3892 452.6465 490.1191 c
452.8438 489.5811 453.3184 488.4727 453.5371 488.1289 c
453.707 487.8643 453.8213 487.5454 454.1475 487.1147 c
454.2061 487.0298 454.1758 486.9824 454.1523 486.9517 c
f
457.7617 487.2573 m
456.8789 488.2441 456.4473 488.564 456.209 488.7837 c
454.9385 489.8174 454.8701 490.771 454.9482 491.3462 c
454.9316 491.8018 455.0527 492.0532 455.0176 492.3848 c
454.9873 492.6504 455.082 493.0654 454.7871 492.5747 c
454.6445 492.335 454.6787 492.0547 454.2305 491.8604 c
453.917 491.7817 453.7734 491.6899 453.21 491.8345 c
453.1572 491.8613 453.1045 491.8999 453.1182 491.8477 c
453.1367 491.6553 452.6377 490.9443 453.3535 489.7261 c
454.3027 488.1123 454.5547 487.229 454.7754 486.9116 c
454.8135 486.8584 454.8867 486.7852 454.9541 486.7334 c
455.3682 486.3579 455.5781 486.2803 455.8027 486.2563 c
456.0264 486.2314 457.2373 486.1304 457.7568 486.9893 c
457.8027 487.1016 457.8203 487.1992 457.7617 487.2573 c
f
461.6572 487.6826 m
461.748 487.5918 460.5146 486.0488 459.1943 486.6621 c
458.5449 486.9624 458.4131 487.3447 457.9248 487.8008 c
457.1514 488.6523 456.4404 489.2446 456.1172 489.582 c
455.6426 490.0762 455.3643 490.561 455.3848 491.1001 c
455.3945 491.3726 455.3242 491.8931 455.5996 491.7744 c
455.875 491.6567 456.0322 491.5659 456.5225 491.7163 c
457.1641 491.9131 457.1523 492.4868 457.3027 492.1152 c
457.4307 491.7959 457.4355 491.7729 457.5059 491.3628 c
457.7725 489.7925 459.9932 486.1768 461.3936 487.71 c
461.5127 487.8008 461.6826 487.7886 461.6572 487.6826 c
f
461.1846 490.1714 m
461.3691 490.0132 461.3887 489.7676 461.4463 489.6211 c
461.5508 489.3589 462.0879 488.5869 461.4072 488.5078 c
460.7266 488.4292 460.1631 489.6475 459.9541 490.0649 c
459.876 490.2495 459.9141 490.3931 460.0322 490.5112 c
460.1504 490.6294 460.5176 490.8384 461.1846 490.1714 c
f
468.6221 487.8149 m
467.8896 488.521 466.6064 490.5635 465.5586 491.27 c
464.6816 492.5415 462.6123 494.1904 462.0488 494.8589 c
461.5254 495.3823 460.4639 496.6797 459.5342 497.374 c
459.666 497.0581 459.875 495.5659 460.8574 493.9023 c
461.2109 493.3389 461.3682 492.7637 461.2383 491.8994 c
462.0098 490.8257 463.29 489.4155 463.4824 489.4839 c
463.5752 489.5156 463.6641 489.5713 463.7979 489.3647 c
463.916 489.1826 463.7969 489.2212 464.0664 488.9268 c
465.4795 487.4341 466.2773 486.6885 y
466.6191 486.3867 466.6318 486.6147 466.7764 486.5298 c
466.9043 486.4556 466.7246 486.4253 467.0254 486.0464 c
467.1846 485.8496 467.5801 485.3198 468.8916 484.0488 c
470.0049 482.8828 471.9922 484.3428 470.1416 486.3481 c
468.8838 487.709 468.7803 487.5781 468.6221 487.8149 c
f
U
U
u
u
0 0 0 1 k
118.9185 469.5176 m
152.4995 469.4014 163.5005 472.8672 v
166.8794 474.7549 166.7339 471.1924 v
170.3906 469.6055 149.6606 411.7197 v
150.9634 407.1504 139.7759 406.3125 v
128.5879 405.4746 111.8003 405.1084 94.7363 408.0479 c
91.4277 408.2803 92.6743 412.1035 v
108.4771 445.7891 110.9395 458.0166 v
112.4502 460.3164 112.6694 465.6602 v
111.1973 470.2295 118.9185 469.5176 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
115.8657 468.8916 m
150.2095 468.7383 165.0659 472.6533 v
167.2168 474.4063 165.8721 466.1719 v
164.0796 455.1924 148.688 410.7266 y
149.1255 402.334 94.896 408.8428 v
91.4619 408.8193 94.8555 414.9473 v
98.249 421.0752 113.2734 457.0449 113.6016 465.0605 c
112.8179 468.1084 115.8657 468.8916 v
f
/BBAccumRotation (0.006655) XT
u
0 0 0 1 k
122.6948 419.2705 m
124.1855 434.3594 121.2051 437.3398 v
118.2246 440.3193 120.8325 436.7803 119.7148 438.6436 c
118.5972 440.5059 110.8184 443.5938 115.9893 452.0547 c
120.0874 458.7607 127.1655 455.7803 129.4009 455.9668 c
131.6367 456.1533 133.313 450.9375 132.7544 448.7021 c
132.1958 446.4668 138.436 457.8135 144.8618 456.7119 c
151.3813 455.5938 152.1265 447.3984 150.8228 446.6533 c
149.519 445.9082 149.8916 444.0449 149.1465 442.3682 c
148.4014 440.6914 141.9175 436.4502 138.3423 434.918 c
134.4302 433.2412 132.3813 430.8193 130.3325 428.0254 c
128.5825 425.6377 128.3032 425.8867 122.6948 419.2705 c
f
0.102 0.9294 0.7608 0.0157 k
123.2539 420.5742 m
126.0479 435.6621 120.646 439.3877 v
115.2441 443.1133 112.2642 449.0742 118.4106 453.918 c
119.3569 454.6631 134.187 460.9365 132.3813 447.2119 c
140.2051 457.8291 145.98 455.9668 v
151.7544 454.1035 150.4507 446.2803 148.2153 442.5547 c
145.98 438.8291 138.1558 437.1523 134.6167 433.9863 c
131.0776 430.8193 123.2539 420.5742 y
f
U
U
u
0 0 0 1 k
191.5781 473.9102 m
159.4683 461.9063 147.7085 461.3271 v
143.8042 461.9385 145.2056 458.5791 v
142.2661 455.7646 182.6147 407.6855 v
182.9868 402.8486 193.9946 406.0088 v
205.0024 409.1689 221.2056 414.7637 236.502 423.6221 c
239.5874 425.0156 237.0396 428.2363 v
209.979 454.8906 203.291 465.7256 v
201.0303 467.3916 198.9277 472.4297 v
198.7188 477.3262 191.5781 473.9102 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
194.7231 474.3926 m
161.895 462.082 146.2852 460.5684 v
143.6055 461.4854 147.8086 454.0771 v
153.4136 444.2002 183.8984 407.0791 y
186.4521 398.8887 236.0674 424.3262 v
239.3638 425.5205 233.9443 430.1855 v
228.5244 434.8506 201.4004 463.9678 198.2476 471.5264 c
197.9185 474.7217 194.7231 474.3926 v
f
/BBAccumRotation (0.006655) XT
0 0 0 1 k
203.2974 425.1973 m
214.6914 430.2998 l
216.3906 432.1699 215.7114 433.3604 V
212.8208 433.7002 210.7803 432.6797 206.8691 433.1904 c
202.9575 433.7002 200.2368 433.7002 197.3457 437.9512 C
204.9985 437.9512 208.9092 438.4619 V
210.9497 439.6523 212.3105 441.3525 212.3105 448.1543 C
211.9702 450.0254 211.9702 451.0449 208.0596 452.0654 c
204.1484 453.0859 202.2778 451.0449 195.3052 452.4053 c
188.3335 453.7666 178.3003 458.6973 y
179.3203 451.0459 177.96 444.7539 v
176.6001 438.4619 173.0283 434.2109 174.3892 430.8096 c
175.7495 427.4082 184.2524 425.5381 187.1431 427.4082 c
190.0337 429.2793 191.2236 431.4902 y
194.2847 436.5918 l
197.5156 433.7002 197.3457 430.6396 v
197.1758 427.5791 194.625 424.8584 y
192.2441 422.8174 192.7544 421.9668 v
193.2651 421.1172 194.2847 421.1172 y
203.2974 425.1973 l
f
U
U
u
u
0 R
0 0 0 1 K
2 w
415.6309 505.519 m
422.1699 474.0103 396.7383 484.3198 v
S
0 O
0 0 0 1 k
1 w
391.1455 486.5869 m
394.1729 486.4966 398.1133 486.8394 400.8525 487.7827 c
397.4727 484.0225 l
397.2793 478.9697 l
395.9707 481.5537 393.3809 484.5439 391.1455 486.5869 c
f
U
u
0 R
0 0 0 1 K
2 w
357.8516 520.479 m
350.2695 542.2358 380.9902 533.5581 v
S
0 O
0 0 0 1 k
1 w
386.7979 531.9175 m
383.7783 531.6753 379.8994 530.9033 377.2803 529.665 c
380.2285 533.7734 l
379.8652 538.8169 l
381.4492 536.3916 384.3516 533.7031 386.7979 531.9175 c
f
U
u
396.3965 544.0259 m
416.3457 543.9575 422.8809 546.0161 v
424.8887 547.1382 424.8027 545.021 v
426.9746 544.0786 414.6582 509.6899 v
415.4336 506.9741 408.7871 506.4771 v
402.1406 505.979 392.168 505.7622 382.0293 507.5073 c
380.0645 507.646 380.8047 509.9175 v
390.1934 529.9292 391.6563 537.1938 v
392.5527 538.5601 392.6836 541.7339 v
391.8086 544.4487 396.3965 544.0259 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
394.582 543.6548 m
414.9844 543.563 423.8105 545.8892 v
425.0879 546.9302 424.2891 542.0386 v
423.2246 535.5151 414.082 509.0991 y
414.3418 504.1138 382.125 507.98 v
380.084 507.9663 382.1016 511.6069 v
384.1172 515.2476 393.043 536.6167 393.2383 541.3784 c
392.7715 543.189 394.582 543.6548 v
f
/BBAccumRotation (0.006655) XT
u
0 0 0 1 k
398.6387 514.1753 m
399.5254 523.1392 397.7539 524.9097 v
395.9824 526.6802 397.5332 524.5776 396.8691 525.6841 c
396.2051 526.7905 391.584 528.6245 394.6563 533.6519 c
397.0898 537.6362 401.2949 535.8647 402.623 535.9761 c
403.9512 536.0864 404.9473 532.9878 404.6152 531.6606 c
404.2832 530.3325 407.9902 537.0728 411.8086 536.4185 c
415.6816 535.7534 416.125 530.8853 415.3496 530.4429 c
414.5742 530.0005 414.7969 528.8931 414.3535 527.897 c
413.9102 526.9009 410.0586 524.3813 407.9355 523.4702 c
405.6113 522.4751 404.3945 521.0366 403.1758 519.3755 c
402.1367 517.9575 401.9707 518.106 398.6387 514.1753 c
f
0.102 0.9294 0.7608 0.0157 k
398.9707 514.9497 m
400.6309 523.9136 397.4219 526.1265 v
394.2129 528.3403 392.4434 531.8813 396.0938 534.7583 c
396.6563 535.2017 405.4668 538.9282 404.3945 530.7749 c
409.041 537.0825 412.4727 535.9761 v
415.9023 534.8687 415.1289 530.2212 413.8008 528.0083 c
412.4727 525.7944 407.8242 524.7983 405.7227 522.9175 c
403.6191 521.0366 398.9707 514.9497 y
f
U
U
u
0 0 0 1 k
371.625 521.8198 m
352.5488 514.688 345.5625 514.3442 v
343.2422 514.7075 344.0762 512.7114 v
342.3301 511.0386 366.2988 482.4761 v
366.5215 479.6021 373.0605 481.48 v
379.5996 483.3569 389.2266 486.6812 398.3125 491.9438 c
400.1465 492.772 398.6328 494.6851 v
382.5566 510.52 378.582 516.9565 v
377.2402 517.9468 375.9902 520.9399 v
375.8672 523.8491 371.625 521.8198 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
373.4922 522.106 m
353.9902 514.7925 344.7168 513.8931 v
343.125 514.438 345.6211 510.0366 v
348.9512 504.1685 367.0625 482.1157 y
368.5781 477.2505 398.0547 492.3628 v
400.0137 493.0718 396.793 495.8433 v
393.5742 498.6147 377.459 515.9126 375.5859 520.4038 c
375.3906 522.3013 373.4922 522.106 v
f
/BBAccumRotation (0.006655) XT
0 0 0 1 k
378.5859 492.8794 m
385.3555 495.9106 l
386.3652 497.022 385.9629 497.729 V
384.2441 497.9312 383.0332 497.3247 380.709 497.6274 c
378.3848 497.9312 376.7695 497.9312 375.0508 500.4565 C
379.5977 500.4565 381.9199 500.7593 V
383.1328 501.4673 383.9414 502.4771 383.9414 506.5181 C
383.7383 507.6304 383.7383 508.2358 381.416 508.8413 c
379.0918 509.4478 377.9805 508.2358 373.8379 509.0435 c
369.6973 509.8521 363.7363 512.7817 y
364.3418 508.2358 363.5332 504.4976 v
362.7266 500.7593 360.6035 498.2339 361.4121 496.2144 c
362.2207 494.1938 367.2734 493.0825 368.9902 494.1938 c
370.707 495.3052 371.4141 496.6177 y
373.2324 499.6489 l
375.1523 497.9312 375.0508 496.1128 v
374.9492 494.2944 373.4336 492.6782 y
372.0195 491.4663 372.3242 490.9604 v
372.627 490.4556 373.2324 490.4556 y
378.5859 492.8794 l
f
U
U
u
u
501.918 473.3945 m
535.499 473.2783 546.5 476.7441 v
549.8789 478.6318 549.7334 475.0693 v
553.3896 473.4824 532.6602 415.5967 v
533.9629 411.0273 522.7754 410.1895 v
511.5879 409.3516 494.7998 408.9854 477.7363 411.9238 c
474.4268 412.1572 475.6738 415.9805 v
491.4766 449.666 493.9395 461.8926 v
495.4502 464.1934 495.6689 469.5361 v
494.1973 474.1064 501.918 473.3945 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
498.8652 472.7686 m
533.209 472.6152 548.0654 476.5303 v
550.2168 478.2822 548.8711 470.0488 v
547.0791 459.0693 531.6875 414.6035 y
532.125 406.2109 477.8955 412.7197 v
474.4619 412.6963 477.8555 418.8242 v
481.248 424.9521 496.2725 460.9219 496.6016 468.9375 c
495.8174 471.9844 498.8652 472.7686 v
f
/BBAccumRotation (0.006655) XT
u
0 0 0 1 k
505.6943 423.1475 m
507.1846 438.2363 504.2051 441.2158 v
501.2246 444.1963 503.832 440.6572 502.7139 442.5195 c
501.5967 444.3828 493.8184 447.4697 498.9893 455.9316 c
503.0869 462.6377 510.165 459.6572 512.4004 459.8438 c
514.6357 460.0293 516.3125 454.8145 515.7539 452.5781 c
515.1953 450.3438 521.4355 461.6904 527.8613 460.5879 c
534.3809 459.4697 535.126 451.2744 533.8223 450.5293 c
532.5186 449.7852 532.8906 447.9219 532.1465 446.2451 c
531.4004 444.5684 524.917 440.3271 521.3418 438.7939 c
517.4297 437.1182 515.3809 434.6953 513.332 431.9023 c
511.582 429.5146 511.3027 429.7637 505.6943 423.1475 c
f
0.102 0.9294 0.7608 0.0157 k
506.2539 424.4512 m
509.0479 439.5391 503.6455 443.2646 v
498.2432 446.9902 495.2637 452.9512 501.4102 457.7939 c
502.3564 458.54 517.1865 464.8125 515.3809 451.0879 c
523.2051 461.7061 528.9795 459.8438 v
534.7539 457.9805 533.4502 450.1572 531.2148 446.4316 c
528.9795 442.7061 521.1553 441.0293 517.6162 437.8633 c
514.0771 434.6963 506.2539 424.4512 y
f
U
U
u
0 0 0 1 k
448.5781 471.7861 m
416.4678 459.7822 404.709 459.2031 v
400.8047 459.8145 402.2061 456.4551 v
399.2656 453.6406 439.6143 405.5615 v
439.9873 400.7246 450.9941 403.8848 v
462.002 407.0449 478.2061 412.6406 493.502 421.498 c
496.5879 422.8916 494.0391 426.1123 v
466.9785 452.7666 460.291 463.6016 v
458.0303 465.2676 455.9277 470.3066 v
455.7188 475.2031 448.5781 471.7861 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
451.7227 472.2686 m
418.8945 459.958 403.2852 458.4443 v
400.6055 459.3613 404.8086 451.9531 v
410.4141 442.0762 440.8984 404.9551 y
443.4521 396.7656 493.0674 422.2021 v
496.3643 423.3965 490.9443 428.0615 v
485.5244 432.7275 458.4004 461.8447 455.2471 469.4023 c
454.918 472.5977 451.7227 472.2686 v
f
/BBAccumRotation (0.006655) XT
0 0 0 1 k
460.2979 423.0732 m
471.6914 428.1758 l
473.3906 430.0459 472.7109 431.2363 V
469.8213 431.5771 467.7803 430.5566 463.8691 431.0664 c
459.957 431.5771 457.2373 431.5771 454.3457 435.8281 C
461.998 435.8281 465.9092 436.3379 V
467.9492 437.5283 469.3105 439.2285 469.3105 446.0313 C
468.9707 447.9014 468.9707 448.9219 465.0596 449.9414 c
461.1484 450.9619 459.2773 448.9219 452.3057 450.2822 c
445.334 451.6426 435.3008 456.5732 y
436.3203 448.9219 434.96 442.6299 v
433.5996 436.3379 430.0283 432.0869 431.3887 428.6855 c
432.75 425.2852 441.252 423.4141 444.1436 425.2852 c
447.0332 427.1563 448.2236 429.3662 y
451.2852 434.4678 l
454.5156 431.5762 454.3457 428.5156 v
454.1758 425.4551 451.625 422.7344 y
449.2441 420.6934 449.7539 419.8428 v
450.2646 418.9932 451.2852 418.9932 y
460.2979 423.0732 l
f
U
U
u
u
0 R
0 0 0 1 K
2 w
243.7676 489.4941 m
223.3018 476.6035 223.7222 501.0791 v
S
0 O
0 0 0 1 k
1 w
223.8257 507.1133 m
224.8306 504.2559 226.5679 500.7021 228.4331 498.4863 c
223.7085 500.2871 l
218.9248 498.6494 l
220.8652 500.7998 222.7241 504.292 223.8257 507.1133 c
f
U
u
0 R
0 0 0 1 K
2 w
257.6787 533.1563 m
288.9668 540.6807 279.4629 514.9375 v
S
0 O
0 0 0 1 k
1 w
277.3726 509.2759 m
277.3677 512.3047 276.9014 516.2329 275.8721 518.9404 c
279.7373 515.6807 l
284.7935 515.647 l
282.2515 514.2578 279.3442 511.5752 277.3726 509.2759 c
f
U
u
262.3477 519.6992 m
243.2715 512.5674 236.2852 512.2236 v
233.9663 512.5869 234.7988 510.5918 v
233.0522 508.9189 257.0234 480.3555 v
257.2441 477.4824 263.7832 479.3604 v
270.3223 481.2373 279.9492 484.5615 289.0371 489.8242 c
290.8691 490.6514 289.3555 492.5645 v
273.2793 508.3994 269.3066 514.8369 v
267.9639 515.8262 266.7148 518.8193 v
266.5898 521.7285 262.3477 519.6992 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
264.2168 519.9854 m
244.7139 512.6719 235.4404 511.7734 v
233.8486 512.3174 236.3457 507.917 v
239.6758 502.0488 257.7852 479.9951 y
259.3027 475.1299 288.7793 490.2422 v
290.7363 490.9512 287.5176 493.7227 v
284.2969 496.4941 268.1836 513.793 266.3105 518.2832 c
266.1152 520.1807 264.2168 519.9854 v
f
/BBAccumRotation (0.006655) XT
0 0 0 1 k
269.3105 490.7598 m
276.0801 493.79 l
277.0879 494.9023 276.6855 495.6084 V
274.9688 495.8115 273.7559 495.2051 271.4316 495.5078 c
269.1074 495.8115 267.4922 495.8115 265.7754 498.3369 C
270.3203 498.3369 272.6445 498.6396 V
273.8574 499.3477 274.6641 500.3564 274.6641 504.3984 C
274.4629 505.5098 274.4629 506.1152 272.1406 506.7217 c
269.8164 507.3281 268.7051 506.1152 264.5625 506.9238 c
260.4199 507.7324 254.459 510.6611 y
255.0664 506.1152 254.2578 502.3779 v
253.4502 498.6396 251.3281 496.1143 252.1367 494.0938 c
252.9443 492.0732 257.9961 490.9619 259.7129 492.0732 c
261.4307 493.1846 262.1367 494.498 y
263.9561 497.5293 l
265.875 495.8105 265.7754 493.9922 v
265.6738 492.1738 264.1582 490.5576 y
262.7441 489.3457 263.0469 488.8408 v
263.3496 488.3359 263.9561 488.3359 y
269.3105 490.7598 l
f
U
u
226.1733 546.1455 m
246.123 546.0771 252.6582 548.1357 v
254.666 549.2578 254.5801 547.1406 v
256.752 546.1982 244.4365 511.8096 v
245.2109 509.0947 238.5645 508.5967 v
231.9175 508.0986 221.9448 507.8818 211.8071 509.627 c
209.8413 509.7656 210.582 512.0371 v
219.9702 532.0488 221.4331 539.3135 v
222.3311 540.6797 222.4609 543.8545 v
221.5869 546.5684 226.1733 546.1455 v
f
/BBAccumRotation (0.006655) XT
0.0235 0 0.11 0 k
224.3599 545.7744 m
244.7627 545.6826 253.5889 548.0088 v
254.8672 549.0498 254.0684 544.1582 v
253.0029 537.6357 243.8594 511.2188 y
244.1191 506.2334 211.9019 510.0996 v
209.8623 510.0859 211.8779 513.7266 v
213.894 517.3672 222.8198 538.7363 223.0146 543.498 c
222.5493 545.3086 224.3599 545.7744 v
f
/BBAccumRotation (0.006655) XT
u
0 0 0 1 k
228.417 516.2949 m
229.3022 525.2588 227.5317 527.0293 v
225.7612 528.7998 227.3105 526.6973 226.6465 527.8037 c
225.9824 528.9102 221.3608 530.7451 224.4331 535.7715 c
226.8682 539.7559 231.0728 537.9844 232.4009 538.0957 c
233.729 538.2061 234.7246 535.1074 234.3926 533.7793 c
234.0615 532.4512 237.7686 539.1924 241.5859 538.5381 c
245.459 537.874 245.9023 533.0049 245.127 532.5625 c
244.3525 532.1201 244.5742 531.0127 244.1309 530.0166 c
243.6895 529.0205 239.8369 526.501 237.7129 525.5908 c
235.3887 524.5947 234.1714 523.1553 232.9546 521.4961 c
231.9146 520.0771 231.749 520.2256 228.417 516.2949 c
f
0.102 0.9294 0.7608 0.0157 k
228.749 517.0693 m
230.4087 526.0332 227.1997 528.2461 v
223.9902 530.46 222.2202 534.001 225.8716 536.8779 c
226.4341 537.3213 235.2441 541.0479 234.1714 532.8945 c
238.8193 539.2021 242.25 538.0957 v
245.6807 536.9883 244.9063 532.3408 243.5781 530.1279 c
242.25 527.9141 237.6016 526.918 235.5 525.0371 c
233.397 523.1563 228.749 517.0693 y
f
U
U
U
u
0 To
1 0 0 1 292.2583 413.0615 0 Tp
0 Tv
TP
0 Tr
0 0 0 1 k
/_TimesNewRomanPS-ItalicMT 64.6448 53.752 -13.9517 Tf
99.244 100 Tz
0 Tt
0 TV
0 Tc
(\075) Tx 1 0 Tk
TO
U

0 R
0 0 0 1 K
2 w
306.2578 414.5 m
322.2578 453.5 L
S
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

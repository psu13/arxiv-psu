%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: f.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 75 435 550 765
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips f
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.11.07:0915
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt
vpt_ def /M {moveto} bind def /L {lineto} bind def /R {rmoveto} bind
def /V {rlineto} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow
{ currentpoint stroke M   0 vshift R show } def /Rshow { currentpoint
stroke M   dup stringwidth pop neg vshift R show } def /Cshow { currentpoint
stroke M   dup stringwidth pop -2 div vshift R show } def /UP { dup
vpt_ mul /vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def
/vpt2 vpt 2 mul def } def /DL { Color {setrgbcolor Solid {pop []} if
0 setdash }  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def /AL { stroke userlinewidth
2 div setlinewidth } def /UL { dup gnulinewidth mul /userlinewidth
exch def       10 mul /udl exch def } def /PL { stroke userlinewidth
setlinewidth } def /LTb { BL [] 0 0 0 DL } def /LTa { AL [1 udl mul
2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0 { PL [] 1 0 0 DL
} def /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def /LT2 { PL [2 dl 3 dl] 0
0 1 DL } def /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def /LT4 { PL [5 dl
2 dl 1 dl 2 dl] 0 1 1 DL } def /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1
0 DL } def /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def /LT7 { PL
[2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def /LT8 { PL [2 dl 2
dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def /Pnt { stroke
[] 0 setdash    gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia
{ stroke [] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt
neg V   hpt vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls {
stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt
neg vpt neg R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2
copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V 
 hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke [] 0 setdash
exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash
2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star { 2 copy
Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add
M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill
} def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt
-1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill
} def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (f.dvi) @start
%DVIPSBitmapFont: Fa cmr12 12 8
/Fa 8 56 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>46
D<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848
EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FE
A56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F
806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<000615C0D807C0130701FCEB7F8090B612005D5D5D15E0158026
063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807C07F49EB1F
8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA416F890C712
075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C6C13FE6C6C
485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>53
D<EC07FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01
FC01FE1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA290
38007F80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB
03F04914F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120F
ED03F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFF
F8010313E00100138028447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038
C8120C0030151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D15181538
5D156015E04A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495A
A41307A6130FAA6D5AEB01C02A457BC231>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr12 14.4 5
/Fb 5 102 df<DC1FFC14060303B56C130E031F02F0131E037F14FC912801FFF801FE13
3E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00F04901801579
4990C9123D4948161F4948160F49481607495A494816034A160113FF484916004890CBFC
1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4BB6
12FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C7F
137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE9138
03F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E031F02F8130603
0302E090C7FC9226001FFEC9FC4F567AD35C>71 D<B600FC030FB512E0A4C691CAEBFC00
D97FFCEF3FF06D48EF1FC0011F616E71C7FC130F1A0E6E171E0107181CA26E173C6D1838
816D60A26F16F06D6081027F4C5AA281023F4C5AA26F1507021F94C8FC81020F160EA26F
151E0207161CA26F153C6E1638826E5EA27014F06E5E821801037F5D82033F4A5AA27013
07031F92C9FC82030F140EA270131E0307141CA270133C6F143817806F5CA2EFC0F06F5C
17E017E1047F5B17F193383FF380A217FF7090CAFCA2705AA3705AA3705AA2705AA3705A
53547ED158>86 D<B512C0A500F8C7FCB3B3B3B3B3B3A2B512C0A5127874D921>91
D<B512C0A5EA0007B3B3B3B3B3B3A2B5FCA512787ED921>93 D<EC0FF891B5FC010314C0
90390FF80FF090391FC003FC90397F8001FE49C77E4848EC7F804848143F49EC1FC0485A
000FED0FE05B001F16F01607485AA2007F16F8A25B160312FF90B7FCA30180C9FCA8127F
7FA2123FA26D1538121F17786C6C1570000716F06D15E06C6C14016C6CEC03C06C6C1580
6D6C130F6D6CEB1F00D90FF0133C903907FE01F80101B512E06D6C1380DA07FCC7FC2D36
7DB434>101 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 1
/Fc 1 73 df<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F61
5DA2021F151F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60
A202FCC7120101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F
153F605CA2017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>72
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi12 14.4 1
/Fd 1 78 df<020FB56C0503B512C06565A2DA00076D4D90C7FCDB03BF61F53BFC030719
7766043F18E7F401C7030F19CF706C9338038FF0150EF4070F031EF00E1F66031C181C1C
38033C193F706C04705B15381CE00378943801C07F660370EF0380A203F094380700FF09
0E91C8FC4B6C7E6302014E5A6503C01770A20203F0E003E001C05B4B6C7EF20380020794
38070007650300160EA24A4D130F505C020E6D7E62021E4D131F65021C4C5AA2023C4C48
133F4FC75B02386D7E190E02784C147F6502705EA202F04C14FF4F92C9FC4AEC7F80F081
C0010161DE83805C4A0387C7FCA20103048E1403069C5D5CEF3FF8010719074E5D010F5E
A2011F4C140FD97FC05D2601FFF0F03FFC007FD9FFC06DC7007FB512FEB694B6FC171E4B
011C5F72527AD171>77 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 17.28 1
/Fe 1 73 df<92B700F80107B712C07318E04A4C4916C06E84DB007F01E0C8000391C7FC
041F90CA13F87048715A041F18FFA24D60A2043F5F665FA2047F5F665FA204FF5F9BC8FC
5FA24B60655FA24B181F655FA24B183F6594CAFCA24B187F655EA2031F18FF655EA2033F
5F6593BAFCA25D6504F0C91203A203FF5F9AC9FC5EA24A60645EA24A181F645EA24A183F
6493CAFCA24A187F645DA2021F18FF645DA2023F5F645DA2027F5F645DA202FF5F99CAFC
5DA24960635DA249181F49183F013F01F04BB57E007FB600FC0103B712E0B75CA24C6073
6279E174>72 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr17 17.28 8
/Ff 8 102 df<BB12E0A4C601FCC8123FD93FF8030313F0011FEE007F193F190F190719
03A21901A21900A21A78A41A38A71A1CA51A00B3B3B3A580133F90B57EB712E0A4466279
E153>0 D<150E151E153C157815F0EC01E0EC03C01407EC0F80EC1F00143EA25C5C1301
5C495A13075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3485AA3485AA3120F5B
A3121F5BA3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA57EA27FA3121FA37F12
0FA37F1207A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F8013078013036D7E80
1300147C80A280EC0F80EC07C01403EC01E0EC00F01578153C151E150E1F8F73EA33>40
D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E801307801303801301
80130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F01403A315F8A31401A215
FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715E0A3140F15C0A3EC1F
80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49C7FC5B133E5B5BA248
5A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I<DDFFF015C0040F01FF1401047F14
E00303B600F81303030F9038E003FEDB3FFCC7007F1307DBFFE0EC0FC002030180913803
E00F4A48C83801F01F4A48ED0078DA3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990
CA7E495A4948834948835C013F197F4948183F495A1B1F485B1B0F4890CCFCA248481907
A2485A1B03121F5BA2123F1B015BA2127F98C8FCA35B12FFB06C7EA24EB712E0A3123F95
C7000FEBF0006D06015B64001F857FA2120F7F1207A26C7EA26C7FA26C7FA26D7E6D7E13
1F806D7E6D6C5F6D7E6D6D5E6D7F6E6CEE07BFDA3FF8EE0F3FDA0FFCEE1F1F6EB4163E6E
01C0EDFC0F020001F0913801F807DB3FFEEC0FE092260FFFF09038FF8003030390B538FE
0001DB007F02F81300040F02C091C7FC040001F8CAFC5B667AE368>71
D<B600FC057FB5FCA4C60280050F13F0D93FFECB000313804A953801FE00011F62755A13
0F6E61010762806D4F5AA2816D4F5AA26F17076D97C7FC81027F180EA26F171E023F181C
811B3C021F183881020F60A26F17F0020760811A016E60826E4D5AA27015076E95C8FC82
037F160EA282033F5E821A3C031F163882030F5EA27015F003075E8219016F5E836F4B5A
A27113076F93C9FC83047F140EA283043F5CA271133C041F143883040F5CA27113F00407
5C831801705C188170EB8380A218C77091CAFC18E7EF7FEEA218FE715AA3715AA2715AA3
715AA3715AA260647FE163>86 D<B512F0A500F8C7FCB3B3B3B3B3B3B3A7B512F0A5148F
72EA24>91 D<B512F0A5EA0001B3B3B3B3B3B3B3A7B5FCA5148F7FEA24>93
D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49
C76C7E496E7E49140348488148481401000782491400000F8283485A1880123F49153FA2
007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C
6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D9
03FC495A902700FF803FC7FC91383FFFFC020F13F00201138032417CBF3A>101
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black 82 2808 a @beginspecial
@setspecial
 gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray newpath
1.000 UL LTb 400 300 M 63 0 V 4067 0 R -63 0 V 400 442 M 31 0 V 4099
0 R -31 0 V 400 631 M 31 0 V 4099 0 R -31 0 V 400 727 M 31 0 V 4099
0 R -31 0 V 400 773 M 63 0 V 4067 0 R -63 0 V 400 916 M 31 0 V 4099
0 R -31 0 V 400 1104 M 31 0 V 4099 0 R -31 0 V 400 1201 M 31 0 V 4099
0 R -31 0 V 400 1247 M 63 0 V 4067 0 R -63 0 V 400 1389 M 31 0 V 4099
0 R -31 0 V 400 1578 M 31 0 V 4099 0 R -31 0 V 400 1674 M 31 0 V 4099
0 R -31 0 V 400 1720 M 63 0 V 4067 0 R -63 0 V 400 1862 M 31 0 V 4099
0 R -31 0 V 400 2051 M 31 0 V 4099 0 R -31 0 V 400 2147 M 31 0 V 4099
0 R -31 0 V 400 2193 M 63 0 V 4067 0 R -63 0 V 400 2336 M 31 0 V 4099
0 R -31 0 V 400 2524 M 31 0 V 4099 0 R -31 0 V 400 2621 M 31 0 V 4099
0 R -31 0 V 400 2667 M 63 0 V 4067 0 R -63 0 V 400 2809 M 31 0 V 4099
0 R -31 0 V 400 2998 M 31 0 V 4099 0 R -31 0 V 400 3094 M 31 0 V 4099
0 R -31 0 V 400 3140 M 63 0 V 4067 0 R -63 0 V 672 300 M 0 63 V 0 2777
R 0 -63 V 1112 300 M 0 63 V 0 2777 R 0 -63 V 1460 300 M 0 63 V 0 2777
R 0 -63 V 1834 300 M 0 63 V 0 2777 R 0 -63 V 2513 300 M 0 63 V 0 2777
R 0 -63 V 3369 300 M 0 63 V 0 2777 R 0 -63 V 3932 300 M 0 63 V 0 2777
R 0 -63 V 4530 300 M 0 63 V 0 2777 R 0 -63 V 1.000 UL LTb 400 300 M
4130 0 V 0 2840 V -4130 0 V 400 300 L 3.000 UL LT0 672 500 M 17 2 V
16 2 V 17 3 V 16 2 V 16 3 V 16 2 V 16 3 V 15 3 V 16 3 V 15 3 V 15 3
V 15 4 V 15 3 V 15 4 V 14 4 V 15 4 V 14 4 V 15 4 V 14 5 V 14 5 V 14
5 V 13 6 V 14 5 V 14 6 V 13 7 V 13 6 V 14 7 V 13 7 V 13 8 V 13 8 V
13 8 V 12 9 V 13 8 V 13 10 V 12 9 V 12 11 V 13 10 V 12 11 V 12 11 V
12 12 V 12 12 V 12 13 V 12 13 V 11 14 V 12 14 V 11 15 V 12 16 V 11
16 V 11 17 V 12 19 V 11 19 V 11 20 V 11 22 V 11 24 V 11 26 V 10 29
V 11 33 V 11 38 V 10 45 V 11 57 V 10 62 V 11 60 V 10 53 V 10 39 V 10
29 V 10 23 V 10 19 V 10 17 V 10 15 V 10 14 V 10 12 V 10 12 V 10 11
V 9 10 V 10 10 V 9 9 V 10 10 V 9 9 V 10 9 V 9 9 V 9 10 V 10 11 V 9
12 V 9 12 V 9 12 V 9 11 V 9 10 V 9 9 V 9 9 V 9 8 V 8 7 V 9 8 V 9 6
V 9 7 V 8 7 V 9 6 V 8 6 V 9 6 V 8 6 V 9 6 V 16 11 V 17 11 V 16 10 V
16 10 V 16 10 V 16 10 V 16 9 V 16 9 V 15 9 V 15 9 V 15 8 V 15 9 V 15
8 V 15 8 V 15 9 V 14 7 V 15 8 V 14 8 V 14 8 V 14 7 V 14 8 V 14 7 V
13 7 V 14 7 V 13 7 V 14 7 V 13 7 V 13 7 V 13 7 V 13 6 V 13 7 V 13 6
V 12 7 V 13 6 V 12 6 V 13 6 V 12 7 V 12 6 V 12 6 V 12 6 V 12 6 V 12
5 V 12 6 V 11 6 V 12 6 V 12 5 V 11 6 V 11 5 V 12 6 V 11 5 V 11 5 V
11 6 V 11 5 V 11 5 V 11 5 V 11 5 V 10 5 V 11 5 V 11 5 V 10 5 V 10 5
V 11 5 V 10 5 V 10 5 V 11 5 V 10 4 V 10 5 V 10 4 V 10 5 V 10 5 V 4
2 V 5 2 V 5 2 V 5 3 V 5 2 V 5 2 V 5 2 V 5 3 V 4 2 V 5 2 V 5 2 V 5 2
V 4 3 V 5 2 V 5 2 V 5 3 V 4 2 V 5 2 V 5 3 V 4 3 V 5 3 V 5 2 V 4 3 V
5 3 V 4 3 V 5 3 V 5 3 V 4 3 V 5 2 V 4 3 V 5 3 V 4 3 V 5 2 V 4 3 V 5
3 V 4 3 V 5 2 V 4 3 V 5 3 V 4 2 V 4 3 V 5 3 V 4 2 V 4 3 V 5 2 V 4 3
V 5 2 V 4 3 V 4 2 V 4 3 V 5 2 V 4 3 V 4 2 V 5 3 V 4 2 V 4 2 V 4 3 V
4 2 V 5 2 V 4 3 V 41 22 V 41 21 V 39 20 V 39 18 V 37 18 V 37 17 V 36
16 V 35 16 V 35 14 V 34 15 V 33 14 V 32 13 V 32 13 V 32 13 V 30 12
V 31 12 V 29 12 V 29 12 V 29 11 V 28 11 V 28 11 V 27 10 V 27 11 V 26
10 V 26 10 V 26 10 V 25 10 V 25 10 V 24 9 V 24 9 V 24 10 V 24 9 V 23
9 V 23 9 V 22 9 V 22 9 V 22 8 V 22 9 V 21 9 V 21 8 V 21 9 V 21 8 V
20 8 V 20 8 V 20 9 V 19 8 V 20 8 V 19 8 V 19 8 V 18 7 V 19 8 V 18 8
V 18 8 V 18 7 V 18 8 V 18 8 V 17 7 V 17 8 V 17 7 V 17 8 V stroke grestore
end showpage
 
@endspecial 574 433 a Ff(\000\()p Fe(H)11
b Ff(\))43 b([GeV])1872 2796 y Fd(M)1985 2814 y Fc(H)2104
2796 y Fb([GeV])3759 2673 y Fa(1000)-670 b(700)-616 b(500)-860
b(300)-713 b(200)-459 b(160)-437 b(130)-513 b(100)179
223 y(1000)227 618 y(100)276 1013 y(10)325 1407 y(1)249
1801 y(0.1)200 2196 y(0.01)151 2590 y(0.001)p Black Black
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

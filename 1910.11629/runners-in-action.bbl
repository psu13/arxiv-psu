\begin{thebibliography}{10}
\providecommand{\url}[1]{\texttt{#1}}
\providecommand{\urlprefix}{URL }
\providecommand{\doi}[1]{https://doi.org/#1}

\bibitem{ahman19:HaskellCoop}
Ahman, D.: Library \textsc{Haskell-Coop}. Available at
  \url{https://github.com/danelahman/haskell-coop} (2019)

\bibitem{Ahman:RecallingAWitness}
Ahman, D., Fournet, C., Hritcu, C., Maillard, K., Rastogi, A., Swamy, N.:
  Recalling a witness: foundations and applications of monotonic state.
  {PACMPL}  \textbf{2}({POPL}),  65:1--65:30 (2018)

\bibitem{Bauer:EffectSystem}
Bauer, A., Pretnar, M.: An effect system for algebraic effects and handlers.
  Logical Methods in Computer Science  \textbf{10}(4) (2014)

\bibitem{Bauer:AlgebraicEffects}
Bauer, A., Pretnar, M.: Programming with algebraic effects and handlers. J.
  Log. Algebr. Meth. Program.  \textbf{84}(1),  108--123 (2015)

\bibitem{Bauer:WhatIsAlgebraic}
Bauer, A.: What is algebraic about algebraic effects and handlers? CoRR
  \textbf{abs/1807.05923} (2018)

\bibitem{bauer19:Coop}
Bauer, A.: Programming language {\textsc{coop}}. Available at
  \url{https://github.com/andrejbauer/coop} (2019)

\bibitem{Benton:ExceptionalSyntax}
Benton, N., Kennedy, A.: Exceptional syntax. Journal of Functional Programming
  \textbf{11}(4),  395--410 (2001)

\bibitem{DelignatLavaud:TLS}
{Delignat-Lavaud}, A., {Fournet}, C., {Kohlweiss}, M., {Protzenko}, J.,
  {Rastogi}, A., {Swamy}, N., {Zanella-Beguelin}, S., {Bhargavan}, K., {Pan},
  J., {Zinzindohoue}, J.K.: Implementing and proving the tls 1.3 record layer.
  In: 2017 IEEE Symp.~on Security and Privacy (SP). pp. 463--482 (2017)

\bibitem{Dolan:MulticoreOCaml}
Dolan, S., Eliopoulos, S., Hillerstr{\"o}m, D., Madhavapeddy, A.,
  Sivaramakrishnan, K.C., White, L.: Concurrent system programming with effect
  handlers. In: Wang, M., Owens, S. (eds.) Trends in Functional Programming.
  pp. 98--117. Springer International Publishing, Cham (2018)

\bibitem{Foster:Lenses}
Foster, J.N., Greenwald, M.B., Moore, J.T., Pierce, B.C., Schmitt, A.:
  Combinators for bidirectional tree transformations: A linguistic approach to
  the view-update problem. ACM Trans. Program. Lang. Syst.  \textbf{29}(3)
  (2007)

\bibitem{Hyland:CombiningEffects}
Hyland, M., Plotkin, G., Power, J.: Combining effects: Sum and tensor. Theor.
  Comput. Sci.  \textbf{357}(1--3),  70--99 (2006)

\bibitem{Kammar:Handlers}
Kammar, O., Lindley, S., Oury, N.: Handlers in action. In: Proc. of 18th {ACM}
  {SIGPLAN} Int. Conf. on Functional Programming, ICFP 2013. ACM (2013)

\bibitem{Katsumata:InteractionLaws}
Katsumata, S., Rivas, E., Uustalu, T.: Interaction laws of monads and comonads.
  CoRR  \textbf{abs/1912.13477} (2019)

\bibitem{Kiselyov:Freer}
Kiselyov, O., Ishii, H.: Freer monads, more extensible effects. In: Proc.~of
  2015 ACM SIGPLAN Symp.~on Haskell. pp. 94--105. Haskell '15, ACM (2015)

\bibitem{Koopman:FPinClean}
Koopman, P., Fokker, J., Smetsers, S., van Eekelen, M., Plasmeijer, R.:
  Functional Programming in Clean. University of Nijmegen (1998), draft

\bibitem{Leijen:AsyncAwait}
Leijen, D.: Structured asynchrony with algebraic effects. In: Proceedings of
  the 2nd {ACM} {SIGPLAN} International Workshop on Type-Driven Development,
  TyDe@ICFP 2017, Oxford, UK, September 3, 2017. pp. 16--29. {ACM} (2017)

\bibitem{Leijen:Finalisation}
Leijen, D.: Algebraic effect handlers with resources and deep finalization.
  Tech. Rep. MSR-TR-2018-10, Microsoft Research (April 2018)

\bibitem{Leijen:Ambients}
Leijen, D.: Programming with implicit values, functions, and control (or,
  implicit functions: Dynamic binding with lexical scoping). Tech. Rep.
  MSR-TR-2019-7, Microsoft Research (March 2019)

\bibitem{Levy:CBPV}
Levy, P.B.: Call-By-Push-Value: A Functional/Imperative Synthesis, Semantics
  Structures in Computation, vol.~2. Springer (2004)

\bibitem{Miltner:SynthesizingSymmLenses}
Miltner, A., Maina, S., Fisher, K., Pierce, B.C., Walker, D., Zdancewic, S.:
  Synthesizing symmetric lenses. Proc. ACM Program. Lang.  \textbf{3}(ICFP),
  95:1--95:28 (2019)

\bibitem{Mogelberg:LinearUsageOfState}
M{\o}gelberg, R.E., Staton, S.: Linear usage of state. Logical Methods in
  Computer Science  \textbf{10}(1) (2014)

\bibitem{Moggi:ComputationalLambdaCalculus}
Moggi, E.: Computational lambda-calculus and monads. In: Proc. of 4th Ann.
  Symp. on Logic in Computer Science, LICS 1989. pp. 14--23. IEEE (1989)

\bibitem{Moggi:NotionsofComputationandMonads}
Moggi, E.: Notions of computation and monads. Inf. Comput.  \textbf{93}(1),
  55--92 (1991)

\bibitem{OConnor:Lens}
O'Connor, R.: Functor is to lens as applicative is to biplate: Introducing
  multiplate. CoRR  \textbf{abs/1103.2841} (2011)

\bibitem{Plotkin:SemanticsForAlgOperations}
Plotkin, G., Power, J.: Semantics for algebraic operations. In: Proc. of 17th
  Conf. on the Mathematical Foundations of Programming Semantics, MFPS XVII.
  ENTCS, vol.~45, pp. 332--345. Elsevier (2001)

\bibitem{Plotkin:AlgOperations}
Plotkin, G., Power, J.: Algebraic operations and generic effects. Appl.
  Categor. Struct. (1),  69--94 (2003)

\bibitem{Plotkin:TensorsOfModels}
Plotkin, G., Power, J.: Tensors of comodels and models for operational
  semantics. In: Proc. of 24th Conf. on Mathematical Foundations of Programming
  Semantics, MFPS XXIV. ENTCS, vol.~218, pp. 295--311. Elsevier (2008)

\bibitem{Plotkin:NotionsOfComputation}
Plotkin, G.D., Power, J.: Notions of computation determine monads. In: Proc. of
  5th Int. Conf. on Foundations of Software Science and Computation Structures,
  FOSSACS 2002. LNCS, vol.~2303, pp. 342--356. Springer (2002)

\bibitem{Plotkin:Logic}
Plotkin, G.D., Pretnar, M.: A logic for algebraic effects. In: Proc. of 23th
  Ann. {IEEE} Symp. on Logic in Computer Science, LICS 2008. pp. 118--129. IEEE
  (2008)

\bibitem{Plotkin:HandlingEffects}
Plotkin, G.D., Pretnar, M.: Handling algebraic effects. Logical Methods in
  Computer Science  \textbf{9}(4:23) (2013)

\bibitem{Power:Comodels}
Power, J., Shkaravska, O.: From comodels to coalgebras: State and arrays.
  Electr. Notes Theor. Comput. Sci.  \textbf{106},  297--314 (2004)

\bibitem{Power:EnrichedLawvereTheories}
Power, J.: Enriched {Lawvere} theories. Theory Appl. Categ  \textbf{6}(7),
  83--93 (1999)

\bibitem{Pretnar:Thesis}
Pretnar, M.: The Logic and Handling of Algebraic Effects. Ph.D. thesis, School
  of Informatics, University of Edinburgh (2010)

\bibitem{Saleh:ExplicitSybTyping}
Saleh, A.H., Karachalias, G., Pretnar, M., Schrijvers, T.: Explicit effect
  subtyping. In: Proc. of 27th European Symposium on Programming, {ESOP} 2018.
  pp. 327--354. LNCS, Springer (2018)

\bibitem{Uustalu:Runners}
Uustalu, T.: Stateful runners of effectful computations. Electr. Notes Theor.
  Comput. Sci.  \textbf{319},  403--421 (2015)

\bibitem{Wadler:Monads}
Wadler, P.: The essence of functional programming. In: Sethi, R. (ed.) Proc. of
  19th Ann. {ACM} {SIGPLAN-SIGACT} Symp. on Principles of Programming
  Languages, POPL 1992. pp. 1--14. ACM (1992)

\end{thebibliography}

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:  0 30 180 270
% the above is for eps files
% postscript subroutines G. 't Hooft.                   Version 25/1/06
% updated: sethclcolor shift, acco1, acco2, rarrow, rarrowback; all repeated commands begin with [, except xset, oset.
 
/arceer {5 2 roll /harceer exch def 
gsave clip newpath translate dup 0 gt
        {exch dup 0 gt
            {exch 2 copy atan neg rotate
                1 exch div dup mul exch 1 exch div dup mul add 
                sqrt 1 exch div}
            {pop abs -90 rotate}ifelse}
        {pop abs}ifelse 
    harceer neg exch harceer
        {harceer neg 0 harceer 2 mul rline stroke}for 
grestore newpath}def
     
/rarrow{5 3 roll 
    gsave moveto 3 1 roll 2 copy rlineto currentpoint stroke translate exch atan
        rotate neg dup 2 copy moveto 0 0 lineto neg lineto []0 setdash stroke
    grestore}def
/arrow{3 2 roll 4 index sub 3 2 roll 3 index sub 3 2 roll rarrow}def

/rarrow2{5 3 roll 3 index add exch 4 index add exch 
    gsave translate 3 1 roll neg exch neg 2 copy exch moveto atan rotate 
    dup .6 mul dup 0 lineto stroke 2 copy dup % R r R r r
        0 moveto lineto 0 0 lineto neg lineto closepath fill
    grestore}def
/arrow2 {3 2 roll 4 index sub 3 2 roll 3 index sub 3 2 roll rarrow2}def 

/bol {storecolor 
gsave newpath 3 1 roll translate /rb exch def 63 rotate 0 0 rb 0
    360 arc clip 0 0.02 1 
        {dup dup .2 add   mul 1.27 sub neg rb mul exch 1.6 mul
        .2 add dup tint  rb mul 2.4 div 0 3 2 roll  0 360 arc  fill}for 
grestore}def

/schitter{
gsave 3 1 roll translate dup scale 0 0 .82 55 75 arc 0 0 .73 75 55
    arcn closepath 1.8 tint fill 0 0 .82 40 52 arc 0 0 .73 52 40 arcn closepath
    fill .035 setlinewidth 0 0 .87 55 75 arc stroke 0 0 .87 40 52 arc stroke
grestore} def
/bols   {3 copy bol schitter} def

/blok   {2 copy moveto 3 index exch lineto 3 2 roll 2 index lineto
        exch lineto closepath} def 
/rblok  {2 index add exch 3 index add exch blok} def  

/storecolor {currenthsbcolor /bcl exch def /scl exch def /hcl exch def}def
 
/tint {dup 1 sub hueshift mul hcl add dup floor sub exch dup 1 gt 
    {2 sub dup neg scl mul exch bcl 1 sub mul 1 sub neg} 
    {dup dup 1 sub mul neg scl mul scl .05 add div scl add dup 
        1 gt {pop 1} if exch 1 index scl sub add bcl mul}  
ifelse sethsbcolor}def

/stacksize {gsave 20 0 font 50 kcheck moveto count npr 
        /kcheck kcheck 20 sub def grestore}def 
/stackcheck {gsave 16 0 font 10 kcheck moveto count dup 
    /stk exch def 1 sub -1 0
        {index dup type (realtype)ne
        {dup type(integertype)ne
            {pop ([]  )}{npr(  )}ifelse}
        {npr(  )}ifelse
    show}for /kcheck kcheck 18 sub def grestore}def 
 
/blob   {6 copy counttomark 6 roll curv} def 

/curv   {4 copy pop pop moveto ccurv} def
/ccurv  {/dxc {2 index sub neg exch 3 index sub
                neg exch dup dup mul 2 index dup mul add} def 
        /yc  {dup 5 index mul exch 6 index mul 4 -1 roll 4 index mul add 
                exch 3 2 roll 3 index mul add dup dup mul 
                2 index dup mul add curvetension mul} def 
            dxc 7 3 roll dxc  8 5 roll yc 11 2 counttomark 
            {pop 3 index div sqrt 3 -1 roll 1 index div 3 1 roll div 
            9 5 roll dxc 10 7 roll 3 copy 9 3 roll yc dup 7 index div 
            sqrt 9 index 4 index 2 index div sub 9 index 4 index 3 index div 
            sub 16 -2 roll 4 2 roll 14 -3 roll pop rcurveto pop} for 
    9 {pop} repeat} def
 
/curve {counttomark -6 roll 4 2 roll 6 4 roll xxcurve 8 2 roll 4 2 roll 6 4 roll
    counttomark 8 roll xxcurve curv} def
    /xxcurve {3 index 2 index add 6 index 2 mul sub 3 index 2 index add 
        6 index 2 mul sub 5 index 4 index sub 5 index 4 index sub 2 copy dup 
        mul exch dup mul add 5 -2 roll 3 index mul exch 4 index mul add exch 
        div dup 4 3 roll mul 8 index add 3 1 roll mul 6 index add} def

/curvearrow {curvearr arrow curv stroke}def
/curvearrow2{curvearr arrow2 curv stroke}def    
      /curvearr{/asize exch def xxcurve counttomark -2 4 {2 roll} for 
        2 copy 4 index add  2 div exch 5 index add 2 div exch 4 2 roll
        4 copy asize} def  
         
/curveline {moveto curvepart}def
    /curvepart{counttomark 1 lt{pop}{counttomark 3 lt{lineto pop}{currentpoint  
    counttomark -6 roll 4 2 roll 6 4 roll xxcurve 8 2 roll 4 2 roll 6 4 roll
    counttomark 8 roll xxcurve ccurv}ifelse curvepart}ifelse}def 

/dot {gsave 4 1 roll 0 360 newpath arc gsave fill grestore exec stroke grestore} def

/ellipse {/eaellips exch def /saellips exch def /yradell exch def /xradell exch def
        /smellips matrix currentmatrix def 
    translate xradell yradell scale 0 0 1 saellips eaellips arc 
        smellips setmatrix} def
 
    /ellipsearr{7 1 roll dup dup sin 5 index mul exch cos 4 index mul atan
        7 1 roll ellipse gsave currentpoint stroke translate 
        rotate 0 0 0 4 3 roll dup .8 mul exch}def
/ellipsearrow2{ellipsearr arrow2 grestore}def
/ellipsearrow {ellipsearr arrow grestore}def

/rarrowline{rarrline rarrow}def
/rarrowline2{rarrline rarrow2}def
    /rarrline {/arrdist exch def 5 1 roll 4 copy rline stroke 
        arrdist mul exch arrdist mul exch 5 4 roll}def
    /arrline{6 2 roll 2 index sub exch 3 index sub exch 6 4 roll rarrline}def
/arrowline{arrline rarrow}def
/arrowline2{arrline rarrow2}def
/rarrowback {6 4 roll 4 index add exch 5 index add exch 6 4 roll neg exch neg exch 6 4 roll  rarrowline}def
/rarrowback2 {6 4 roll 4 index add exch 5 index add exch 6 4 roll neg exch neg exch 6 4 roll  rarrowline2}def

           
/line   {moveto lineto} def     /rline {4 2 roll moveto rlineto} def
 
/polygon  {1 sub polyline closepath}def
/polyline  {3 1 roll moveto {lineto}repeat}def 


    /rwalkto {2 copy dup mul exch dup mul add sqrt awalk abs div pwalk mul .6 add
        cvi dup 1 lt {pop 1} if dup  4 1 roll div exch 2 index div exch 3 2 roll
        {2 copy rdrawto} repeat pop pop} def        % dx dy rwalkto
    /drawto {currentpoint 3 2 roll sub neg 3 1 roll sub exch rdrawto}def
    /walkarc {1 index sub dup 3 index mul 57 awalk mul div pwalk mul abs .6 add
        cvi dup 1 lt {pop 1} if 1 index abs 359 gt {2 div cvi 2 mul cvi} if dup 7 1
        roll div /dwalk exch def /swalk exch def /rwalk exch def /ywalk exch def /xwalk exch
        def rwalk swalk cos mul xwalk add rwalk swalk sin mul ywalk add moveto {/swalk swalk dwalk
        add def rwalk swalk cos mul xwalk add rwalk swalk sin mul ywalk add drawto}repeat}def
    /rwaggelto {2 copy dup mul exch dup mul add sqrt awalk exch div dup 2 index
        mul 3 index 4 div add exch 3 index mul neg 2 index 4 div add
        2 copy 4 index 2 div add exch 5 index 2 div add exch 6 4 roll
        rcurveto /awalk awalk neg def} def  % dx dy rwaggelto (1 waggel)
/rwiggleto {/rdrawto {rwaggelto} def rwalkto} def   % dx dy rwiggleto
/wiggleto {currentpoint exch 4 -1 roll exch sub 3 1 roll sub rwiggleto} def
/wigglearc {/rdrawto {rwaggelto} def walkarc} def  %  x y r ang1 ang2  wigglearc
/wiggle {moveto wiggleto}def /rwiggle{4 2 roll moveto rwiggleto}def

/x {3 1 roll moveto dup 2 div dup rmoveto dup neg dup rlineto 
        dup 0 rmoveto neg dup neg rlineto gsave 
        2 setlinewidth wit stroke grestore stroke} def
/xset {/xsize exch def count /nxs exch def nxs copy xsetm}def 
    /xsetm {count nxs gt {dup type /marktype eq {pop}{xsize x}ifelse xsetm} if}def
/oset {/xsize exch def count /nxs exch def nxs copy osetm}def 
    /osetm {count nxs gt {dup type /marktype eq {pop}{xsize 0 360 arc stroke}
    ifelse osetm} if}def

    /ffont {fontlist exch get findfont exch scalefont setfont} def 
                % scale  fonttype  ffont
/font   {dup /fnt exch def exch dup 
        /sfont exch def exch ffont}def

/pr     {3 3 counttomark {pop moveto show} for pop} def
/cpr    {( ) dup 0 4 -1 roll  put show} def 
/rpr    {4 3 counttomark {pop gsave translate counttomark 1 sub index rotate 0 0 moveto
        show currentpoint transform grestore itransform moveto} for pop pop} def

/npr    {14 string cvs show} def 
/boxpr {4 1 roll gsave moveto currentpoint gsave translate dup stringwidth pop 
        sfont -4 div dup 3 2 roll sfont 4 div add sfont .85 mul
        blok fill grestore exch exec show grestore} def 

/left {letter regel moveto} def

/mshow {/regel exch def /letter exch def letter regel moveto counttomark -1 2 {1 roll}for 
	{dup type (stringtype) eq {show}{exec}ifelse counttomark 1 lt {exit}if}loop pop}def

% inside mshow:
        /fntmake{dup /fnt exch def ffont}def
    /fnt0 {{sfont 0 fntmake}}def
    /fnt1 {{sfont 1 fntmake}}def
    /fnt2 {{sfont .9 mul 2 fntmake}}def
/shft {sfont mul exch sfont mul exch rmoveto}def
/shift {{sfont mul exch sfont mul rmoveto}3 1 roll}def   
/up     {{.03 .36 shft}}def 
/down {{0 -.35 shft}} def
/small  {{sfont fnt 2 eq 
            {.6 mul 2 ffont}
            {.7 mul fnt 1 eq 
                {1 ffont}{0 ffont}ifelse}
        ifelse}}def
/big    {{sfont fnt 2 eq 
            {.9 mul 2 ffont}
            {fnt 1 eq {1 ffont}{0 ffont}ifelse}
        ifelse}}def
/subscr {down exch small exch big up}def  
/superscr{up exch small exch down big}def 
/back    {{ sfont -.3 mul 0 rmoveto}}def
/vector {{gsave []0 setdash sfont 25 div setlinewidth  /arrowsize 
        sfont 6 div def currentpoint sfont .7 mul add 2 index stringwidth pop 0 arrowsize rarrow 
        grestore}exch}def 
/gvector {{gsave []0 setdash sfont 25 div setlinewidth  /arrowsize 
        sfont 6 div def currentpoint sfont .8 mul add 2 index stringwidth pop 0 arrowsize rarrow 
        grestore}exch}def  
/underline{{gsave 0 sfont -7 div rmoveto sfont 25 div setlinewidth dup
    stringwidth pop []0 setdash 0 rlineto stroke grestore}exch}def 
/overline   {{gsave 0 sfont .62 mul rmoveto sfont 25 div setlinewidth dup
    stringwidth pop []0 setdash 0 rlineto stroke grestore}exch}def
/right  {{dup stringwidth pop neg rkant add regel moveto}exch}def
/ret    {{/regel regel sfont sub def left}} def
/tab    {{currentpoint exch sfont .3 mul add 50 div ceiling 50 mul exch moveto}} def
/half   {{currentpoint 2 copy sfont 2 ffont (-) show moveto sfont .15 mul sfont .4 mul rmoveto sfont .7 mul 2 ffont
    (1) show moveto sfont .1 mul sfont -.32 mul rmoveto (2) show 0 sfont .32 mul rmoveto}big}def
/trema {{gsave sfont 0 font sfont .1 mul 0 rmoveto (\310) show grestore}exch}def 
/acco1{gsave currentpoint sfont 4 div add translate 1.2 exch scale sfont 2 ffont 
    0 -.25 sfont mul moveto ({) show  grestore .7 0 shift}def % {size acco1}
/acco2{gsave currentpoint sfont 4 div add  translate 1.2 exch scale sfont 2 ffont 
    0 -.25 sfont mul moveto (}) show  grestore .7 0 shift}def % {size acco2}

/display{left 0 1 7{sfont 3 mul 0 rmoveto gsave npr grestore}for ret exec
    0  1 3
        {0 1 7
            {2 copy exch  gsave sfont 0 font (\134)show npr npr (x) show 
                       grestore 1 index 8 mul add  0 1 7
                {1 index 8 mul add sfont 3 mul 0 rmoveto gsave cpr grestore}for 
            pop ret exec}for
        pop}for} def

/centerline {moveto dup stringwidth pop -2 div 0 rmoveto show} def
 
/rood       {1 0 0  setrgbcolor} def
/bruin      {.07 .8 .6  sethsbcolor}def
/beige      {.11 .6 .9  sethsbcolor}def
/oranje     {1 .5 0     setrgbcolor} def
/geel       {1 1 0  setrgbcolor }def
/groen      {0 1 0  setrgbcolor}def
/blauw      {0 0 1  setrgbcolor}def
/paars      {1 0 1 setrgbcolor}def
/wit        {1 setgray} def
/grijs      {.5 setgray } def
/zwart      {0 setgray} def
  
    /color1 {currenthsbcolor /brightcol exch def /shadecol exch def 
        shadecol dup 1 sub brightcol mul 1.000001 add div brightcol 
        1.000001 shadecol add brightcol sub  div}def  % hc ac bc
    /color2 {/brightc2 exch def /shadec2 exch def 2 shadec2 mul 1 brightc2 
        add dup dup mul 2 shadec2 mul dup mul brightc2 mul sub sqrt add div 
        dup 1 add brightc2 mul 1 brightc2 add div sethsbcolor} def
/light {2 exch exp color1 4 3 roll mul color2}def 
/grauw {-10 div color1 exch 4 3 roll add dup 1 gt {pop 1}if dup 0 lt 
            {pop 0}if exch color2}def
/hueup{currenthsbcolor 4 2 roll exch 10 div add dup floor sub 3 1 roll 
        sethsbcolor}def
/sethclcolor {dup /licc exch def .5 gt{2 licc 2 mul sub mul}if
  dup 1 add licc mul sethsbcolor}def 

/random{ krand rseed mul dup prand div round prand mul sub dup mul dup
    prand div floor prand mul sub dup 1 eq{/rseed rseed 1 add dup 1900 gt 
    {pop 100}if def}if dup /krand exch def .5 sub prand 1 sub div mul}def  
/seed {/prand 7607 def dup 1600 div floor      % (359 2039) 5639 7559 7607
    1600 mul sub 100 add /rseed exch def /krand 1 def}def  % G.'tH. 19/9/99 %  
/srandom{dup 2 mul random exch sub}def 
/grid{gsave -300 100 1000{dup -300 0 1300 rline -300 exch 1300 0 rline 1 setlinewidth stroke}for grestore}def
/colormix{dup 1 gt{pop 1}if dup 0 lt {pop 0} if
    /xxx exch def exec currentrgbcolor 3 {xxx mul 3 1 roll}repeat 
    4 3 roll exec currentrgbcolor 3{1 xxx sub mul 3 1 roll}repeat
    4 3 roll add 5 1 roll 3 2 roll add 4 1 roll add 3 1 roll setrgbcolor}def

% ********************************  MENU  **********************************    

% ARCEER:   path x y dx   deltax deltay arceer  (infty=0, use setdash etc.)
% (R)ARROW[2]:  x y (d)xA (d)yA size (r)arrow[2]
% (R)ARROWLINE(2):  x y (d)x (d)y size ratio (r)arrowline(2) (gives line with arrow inside, at position ratio)
% RARROWBACK(2):    x y dx dy size ratio rarrowback (gives line with arrow pointing other direction)

% BOL(S):       x y r bol(s = with window refl) in given color
    % schitter: x y r schitter     (window refl in bol)
% (R)BLOK:      x1 y1 (d)x3 (d)y3  (r)blok
% BLOB:         [ x1 y1 (d)x2 (d)y2 ... (d)xn (d)yn (r)blob
% COLORMIX      {color1}{color2} x colormix  
% CURV:         [ xN+1 yN+1 ... x0 y0  curv (edge points to indicate orientations)
% CURVE:        [ xN yN ... x1 y1 curve (generates its own edge points)
    /curvetension 9 def      % try other values 3 - 30
% CURVELINE:    [[ xN yN ... [ xk yk ... x1 y1 curveline (with sharp corners at Xk)
% CURVEARROW(2):[ xA yA ... xN yN size curvearrow(2)
% DOT:          x y r {kleur} dot (circle with existing linewidth, fills in with existing color, border with kleur)
% ELLIPSE:      x y xrad yrad startangle endangle ellipse
% ELLIPSEARROW(2): x y xr yr startangle arrowangle arrowsize ellipsearrow(2)   
% (R)LINE:      x y (d)x (d)y (r)line
% POLYGON:      x1 y1 ... xn yn  n  polygon 
% POLYLINE:     x1 y1 ... x(n+1) y(n+1) n polyline
    /hueshift .1 def     % active in  tint  and   dimvlakvul
% LIGHT:        n light (n = -5 .. +5)
% GRAUW:        n grauw (n = -9 .. +10)
% HUEUP:        n hueup (n => -10 to 10)
% SETHCLCOLOR   hue colorfulness lightess  sethclcolor
% RANDOM:       n random  [rand numb in (0,n) ] period ~ 6000000
% SRANDOM:      n srandom [rand numb in (-n,n)] 
    129  seed    % 0 - 1600 seed
% STORECOLOR:   enables: x (0-2) tint  (0=zwart 2=wit)
% STACKSIZE:    (gives number of entries in stack at pos. [50 kcheck])
    /kcheck 300 def  
% STACKCHECK:   (gives complete stack contents - only numbers visible) 
    /awalk 4 def  /pwalk 1.2 def % pwalk = pitch, awalk = amplitude, used for wiggling.
% (R)WIGGLE:    x y (d)x (d)y (r)wiggle
% WIGGLEARC:    x y r ang1 ang2  wigglearc
% (R)WIGGLETO:  (d)x (d)y (r)wiggleto
% X:            x y size  x (zet kruisje op (x y)
% XSET(OSET):   x1 y1 ([)... xn yn size  xset(oset) 
                % >> x1 ... yn  (n kruisjes/rondjes, ignores marks)
    /fontlist [/Times-Roman  /Times-Italic  /Symbol /Helvetica  
        /Helvetica-Bold  /Helvetica-Oblique /Courier-Bold /Courier-Oblique 
        /Courier-Bold-Oblique/Zapf-Chancery] def  %[0 1 2 ... ]
% FONT:         scale n font (n = number in fontlist)
% PR:           [ (..) x y  (..) x' y' ... pr
% CPR:          int cpr     (print character of that number)
% RPR:          [ angle (..) x y  (..) x' y' ... rpr           
% NPR:          x y moveto number npr ( 12=length )
% BOXPR:        (text) x y {kleur} boxpr (clears space for text, prints with kleur)
    /kant 30 def  /regel 700 def /rkant 400 def  % kantlijn, regelhoogte, rechterkantlijn
% MSHOW:        [ (series) x y mshow   Examples:
%   {left} (abc) {blauw 20 2 font} (p1) (doc number) right 
%   fnt0 (2)subscr (3)superscr up down small big   2 .2 shift (text) ...
%   fnt1 (v)vector (A)gvector (NN)underline (TT)overline (a) trema
%   fnt2 ret tab sp back {size acco1} {size acco2} 
%   Use: fnt0: \(  \)
%        fnt2: int=\362  prod=\325  times=\264  acc=\242  root=\326
%        fnt2: bra=\341  ket=\361   |=\357    infty=\245  scri=\301  sum=\345
% DISPLAY:      20 n font display   (shows all characters of font n)
% CENTERLINE:   (text) x y centerline   (centers text)
% GRID
%    w a r n i n g :  do not use   count, oset, xset, clear  in LaTeX epsffile pictures

% 0 30 180 270 blok oranje stroke zwart
0 30 translate
gsave .6 .8 scale 
150 82 translate
[[ 60 200 60 120 60 117  30 30  
[0 0 -30 30  -60 117 -60 120 -60 200 curveline closepath beige 1 grauw .8 light fill
zwart .5 setlinewidth
-48 24 -5 {-150 exch 300 0 rline}for stroke
-150 2 0 -2 150 2 2 polyline stroke
gsave 150 40   30 122   30 220   -150 240  -150 -10  150 -10  6 polygon 
 clip newpath
2{
[ 0 0  30 29  60 112 61 118  75 160 95 200 curve 
[ 0 0  30 25  60 73  62 80  140 200   curve stroke
[ 0 0  30 20  64 60  69 72  150 170   curve stroke  
[ 0 0  30 15  80 60  85 66  150 120   curve stroke  
[ 0 0  30 10  80 37  85 40  150 70     curve stroke  
[ 0 0  30  5  80 15  85 16.3  150 35     curve stroke  
-1 1 scale}repeat
grestore 
0 85 0 150 zwart rwiggle stroke 1 setlinewidth
150 40 -120 82 5 rarrow  stroke   .5 setlinewidth
  150 40   30 122   30 220 200 200 4 polygon clip newpath
[ 0 0  30 29  52 102 46 128  31 150    curve stroke
[ 0 0  30 29  67 112  69 118 84 155 135 220  curve stroke
[ 0 0  30 26  61 70  73 94  106 145 240 230  curve stroke  
[ 0 0  30 15  76 64  83 73  150 130    curve stroke  
[ 0 5  30 15  80 42  85 45  150 75     curve stroke  
% [ 0 0  30  5  80 15  85 16.3  150 35     curve stroke  
grestore

90 65.6 translate 
7 setlinewidth [20 80 45 60 65 20 70 -20 75 -50 
5{.8 mul exch .65 mul exch 10 2 roll}repeat
15 groen 2 grauw 1 light curvearrow2
gsave -1 1 scale 0 25 translate [20 80 45 60 65 20 70 -20 75 -50 
5{.8 mul exch .65 mul exch 10 2 roll}repeat
15 blauw 2 grauw 1.4 light curvearrow2
grestore gsave -30 -20 translate 
12 3 font 3 setlinewidth (time) 90 135 wit {zwart} boxpr 
zwart 100 148 0 40 10 rarrow2	grestore 12 3 font gsave -40 -75 translate
3 setlinewidth (space) 46 20 wit {zwart} boxpr 
zwart 0 25 40 0 10 rarrow2 grestore 
1 setlinewidth
23 113 3 0 360 arc rood stroke
46 110 3 0 360 arc blauw stroke
showpage





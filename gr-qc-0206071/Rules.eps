%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: Rules.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 220 430 515 710
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -O 0.in,0.7in Rules -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.03.23:2306
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /ed{exch def}def /gs{gsave dup scale}def /gsw{gs /width ed width setlinewidth}def
/p1{/y1 ed /x1 ed}def /p2{/y2 ed /x2 ed}def /abox{newpath x1 y1 moveto
x1 y2 lineto x2 y2 lineto x2 y1 lineto closepath}def

 /arrowdown{ /nwidth { width 1 add } def newpath 0 nwidth 1.5 mul neg
moveto nwidth 1.2 mul nwidth 3 mul rlineto nwidth 2.4 mul neg 0 rlineto
nwidth 1.2 mul nwidth 3 mul neg rlineto closepath fill } def

 /arrowup{ /nwidth { width 1 add } def newpath 0 nwidth 1.5 mul moveto
nwidth 1.2 mul nwidth 3 mul neg rlineto nwidth 2.4 mul neg 0 rlineto
nwidth 1.2 mul nwidth 3 mul rlineto closepath fill } def

 /arrowright{ /nwidth { width 1 add } def newpath nwidth 1.5 mul 0
moveto nwidth 3 mul neg nwidth 1.2 mul rlineto 0 nwidth 2.4 mul neg
rlineto nwidth 3 mul nwidth 1.2 mul rlineto closepath fill } def

 /gluon{ gsw /num ed /ampi ed /dy ed /dx ed p1 /dy dy y1 sub def /dx
dx x1 sub def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate
dy dx atan rotate /num num 0.5 sub round def /inc dr num 2 mul 2 add
div def /amp8 ampi 0.9 mul def amp8 0 lt {/amp8 amp8 neg def} if /x1
inc 2 mul def newpath 0 0 moveto inc 0.1 mul ampi 0.5 mul inc 0.5 mul
ampi inc 1.4 mul ampi curveto x1 amp8 add dup ampi exch ampi neg dup
x1 exch curveto 2 1 num { pop x1 amp8 sub dup ampi neg exch ampi dup
x1 inc add exch curveto /x1 x1 inc dup add add def x1 amp8 add dup
ampi exch ampi neg dup x1 exch curveto } for x1 amp8 sub dup ampi neg
exch ampi dup x1 inc 0.6 mul add exch curveto x1 inc 1.5 mul add ampi
dr inc 0.1 mul sub ampi 0.5 mul dr 0 curveto stroke grestore } def

 /photon{ gsw /num ed /ampi ed p2 p1 /dy y2 y1 sub def /dx x2 x1 sub
def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate dy dx atan
rotate /num num 2 mul 0.5 sub round def /x2 dr num div def /pi 3.141592
def /sign 1 def 1 1 num { pop newpath 0 0 moveto 4 3 div x2 mul pi
div dup neg x2 add 4 3 div ampi sign mul mul dup 3 1 roll x2 0 curveto
stroke /sign sign neg def x2 0 translate } for grestore } def

 /zigzag{ gsw /num ed /ampi ed p2 p1 /dy y2 y1 sub def /dx x2 x1 sub
def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate dy dx atan
rotate /num num 2 mul 0.5 sub round def /x2 dr num div def /pi 3.141592
def /sign 1 def 1 1 num { pop newpath 0 0 moveto x2 2 div ampi sign
mul lineto x2 0 lineto stroke /sign sign neg def x2 0 translate } for
grestore } def

 /photonarc{ gsw /num ed /ampli ed /arcend ed /arcstart ed /radius
ed translate /num num 2 mul round def arcend arcstart lt { /arcend
arcend 360 add def } if /arcend arcend arcstart sub num div def arcstart
rotate /arcstart arcend 2 div def /cp arcend cos def /sp arcend sin
def /cp2 arcstart cos def /sp2 arcstart sin def newpath 1 1 num { pop
radius 0 moveto /beta radius arcend mul 180 ampli mul div def /tt sp
cp beta mul sub cp sp beta mul add div def /amp1 radius ampli add 8
mul beta cp2 mul sp2 sub mul beta 4 cp add mul tt cp mul 3 mul sp 4
mul sub add radius mul sub beta tt sub 3 mul div def radius ampli add
8 mul cp2 mul 1 cp add radius mul sub 3 div amp1 sub dup radius sub
beta mul amp1 dup radius cp mul sub tt mul radius sp mul add radius
cp mul radius sp mul curveto /ampli ampli neg def arcend rotate } for
stroke grestore } def

 /gluearc{ gsw /num ed /ampi ed /arcend ed /arcstart ed /radius ed
translate arcstart rotate /darc arcend arcstart sub def /dr darc 180
div 3.141592 mul radius mul def /const darc dr div def /num num 0.5
sub round def /inc dr num 2 mul 2 add div def /amp8 ampi 0.9 mul def
/amp1 radius ampi add def /amp2 radius ampi sub def /amp3 radius ampi
2 div add def /amp4 amp1 inc amp8 add const mul cos div def /amp5 amp2
amp8 const mul cos div def /amp6 amp1 inc 0.6 mul amp8 add const mul
cos div def /amp7 amp1 inc 0.9 mul const mul cos div def amp8 0 lt
{/amp8 amp8 neg def} if /x1 inc 2 mul def newpath radius 0 moveto inc
0.1 mul const mul dup cos amp3 mul exch sin amp3 mul inc 0.5 mul const
mul dup cos amp7 mul exch sin amp7 mul inc 1.4 mul const mul dup cos
amp1 mul exch sin amp1 mul curveto x1 amp8 add const mul dup cos amp6
mul exch sin amp6 mul x1 amp8 add const mul dup cos amp5 mul exch sin
amp5 mul x1 const mul dup cos amp2 mul exch sin amp2 mul curveto 2
1 num { pop x1 amp8 sub const mul dup cos amp5 mul exch sin amp5 mul
x1 amp8 sub const mul dup cos amp4 mul exch sin amp4 mul x1 inc add
const mul dup cos amp1 mul exch sin amp1 mul curveto /x1 x1 inc dup
add add def x1 amp8 add const mul dup cos amp4 mul exch sin amp4 mul
x1 amp8 add const mul dup cos amp5 mul exch sin amp5 mul x1 const mul
dup cos amp2 mul exch sin amp2 mul curveto } for x1 amp8 sub const
mul dup cos amp5 mul exch sin amp5 mul x1 amp8 sub const mul dup cos
amp6 mul exch sin amp6 mul x1 inc 0.6 mul add const mul dup cos amp1
mul exch sin amp1 mul curveto x1 inc 1.5 mul add const mul dup cos
amp7 mul exch sin amp7 mul dr inc 0.1 mul sub const mul dup cos amp3
mul exch sin amp3 mul dr const mul dup cos radius mul exch sin radius
mul curveto stroke grestore } def

 /arrowarc{ gsw /arcend ed /arcstart ed /radius ed translate newpath
0 0 radius arcstart arcend arc stroke arcstart arcend gt { /arcend
arcend 360 add def } if arcstart arcend add 2 div rotate radius 0 translate
arrowup grestore } def

 /longarrowarc{ gsw /arcend ed /arcstart ed /radius ed translate arcstart
arcend gt { /arcend arcend 360 add def } if /arcmid 540 width 1 add
mul 3.14159 div radius div def newpath 0 0 radius arcstart arcend arcmid
sub arc stroke arcend arcmid 2 div sub rotate radius 0 translate arrowup
grestore } def

 /dasharrowarc{ gsw /dsize ed /arcend1 ed /arcstart1 ed /radius ed
translate arcend1 arcstart1 lt { /arcend1 arcend1 360 add def } if
/arcmid1 arcend1 arcstart1 add 2 div def 0 0 radius arcstart1 arcmid1
dsize width 1 dashcarc 0 0 radius arcmid1 arcend1 dsize width 1 dashcarc
arcmid1 rotate radius 0 translate arrowup grestore } def

 /arrowarcn{ gsw /arcend ed /arcstart ed /radius ed translate newpath
0 0 radius arcstart arcend arcn stroke arcstart arcend lt { /arcstart
arcstart 360 add def } if arcstart arcend add 2 div rotate radius 0
translate arrowdown grestore } def

 /longarrowarcn{ gsw /arcend ed /arcstart ed /radius ed translate arcstart
arcend lt { /arcstart arcstart 360 add def } if /arcmid 540 width 1
add mul 3.14159 div radius div def newpath 0 0 radius arcstart arcend
arcmid add arcn stroke arcend arcmid 2 div add rotate radius 0 translate
arrowdown grestore } def

 /dasharrowarcn{ gsw /dsize ed /arcend1 ed /arcstart1 ed /radius ed
translate arcstart1 arcend1 lt { /arcstart1 arcstart1 360 add def }
if /arcmid1 arcstart1 arcend1 add 2 div def 0 0 radius arcmid1 arcstart1
dsize width 1 dashcarc 0 0 radius arcend1 arcmid1 dsize width 1 dashcarc
arcmid1 rotate radius 0 translate arrowdown grestore } def

 /arrowline{ gsw p2 p1 /dx x2 x1 sub def /dy y2 y1 sub def /dr dx dx
mul dy dy mul add sqrt def x1 y1 translate newpath 0 0 moveto dx dy
rlineto stroke dy dx atan rotate dr 2.0 div 0 translate arrowright
grestore } def

 /longarrow{ gsw p2 p1 /dx x2 x1 sub def /dy y2 y1 sub def /dr dx dx
mul dy dy mul add sqrt def x1 y1 translate dy dx atan rotate newpath
0 0 moveto dr width 3 mul sub 0 rlineto stroke dr width 1.5 mul sub
0 translate arrowright grestore } def

 /dasharrowline{ gsw /dsize ed p2 p1 /dx x2 x1 sub def /dy y2 y1 sub
def /dr dx dx mul dy dy mul add sqrt 2 div def x1 y1 translate dy dx
atan rotate 0 0 dr 0 dsize width 1 dashline dr 0 translate 0 0 dr 0
dsize width 1 dashline arrowright grestore } def

 /line{ gsw p2 p1 newpath x1 y1 moveto x2 y2 lineto stroke grestore
} def

 /dashline{ gsw /dsize ed p2 p1 /r y2 y1 sub dup mul x2 x1 sub dup
mul add sqrt def /dsize r dsize 2 mul div 0.5 sub round dup 0 le {
pop 0 } if 2 mul 1 add r exch div def [dsize dsize] 0 setdash newpath
x1 y1 moveto x2 y2 lineto stroke grestore } def

 /carc{ gsw /arcend ed /arcstart ed /radius ed translate newpath 0
0 radius arcstart arcend arc stroke grestore } def

 /dashcarc{ gsw /dsize ed /arcend ed /arcstart ed /radius ed translate
/dr arcend arcstart sub dup 0 lt { 360 add } if 3.14159 mul 180 div
radius mul def /dsize dr dsize 2 mul div 0.5 sub round dup 0 le { pop
0 } if 2 mul 1 add dr exch div def [dsize dsize] 0 setdash newpath
0 0 radius arcstart arcend arc stroke grestore } def

 /vertex{ gs /dotsize ed translate newpath 0 0 dotsize 0 360 arc fill
stroke grestore } def

 /bcirc{ gsw /radius ed translate gsave 1 setgray newpath 0 0 radius
0 360 arc fill grestore newpath 0 0 radius 0 360 arc stroke grestore
} def

 /gcirc{ gsw /gcolor ed /radius ed translate 1 setgray newpath 0 0
radius 0 360 arc fill gcolor setgray newpath 0 0 radius 0 360 arc fill
0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def

 /ccirc1{ gsw /radius ed translate newpath 0 0 radius 0 360 arc fill
grestore } def

 /ccirc2{ gsw /radius ed translate newpath 0 0 radius 0 360 arc stroke
grestore } def

 /box{ gsw p2 p1 abox stroke grestore } def

 /bbox{ gsw p2 p1 gsave 1 setgray abox fill grestore abox stroke grestore
} def

 /gbox{ gsw /gcolor ed p2 p1 1 setgray abox fill gcolor setgray abox
fill 0 setgray abox stroke grestore } def

 /cbox1{ gsw p2 p1 abox fill grestore } def

 /cbox2{ gsw p2 p1 abox stroke grestore } def

 /btext{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def gsave 1 setgray abox fill grestore
abox stroke hsize 2 div neg fsize 3 div neg moveto thetext show grestore
} def

 /b2text{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def gsave 1 setgray abox fill grestore abox stroke hsize1 2
div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /gtext{ gsw /fsize ed /thetext ed /graysc ed translate /hsize thetext
stringwidth pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul
3 div neg def /x2 x1 neg def /y2 y1 neg def graysc setgray abox fill
0 setgray abox stroke hsize 2 div neg fsize 3 div neg moveto thetext
show grestore } def

 /ctext1{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox fill grestore } def

 /ctext2{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox stroke hsize 2 div neg fsize
3 div neg moveto thetext show grestore } def

 /g2text{ gsw /fsize ed /text2 ed /text1 ed /graysc ed translate /hsize1
text1 stringwidth pop def /hsize2 text2 stringwidth pop def hsize1
hsize2 lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize
fsize add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def
/y2 y1 neg def graysc setgray abox fill 0 setgray abox stroke hsize1
2 div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /c2text1{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox fill grestore } def

 /c2text2{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox stroke hsize1 2 div neg fsize 6 div moveto text1 show
hsize2 2 div neg fsize 5 mul 6 div neg moveto text2 show grestore }
def

 /ptext{ gs /text ed /fsize ed /mode ed 3 1 roll translate rotate mode
3 lt { 0 fsize neg translate } { mode 6 lt { /mode mode 3 sub def 0
fsize 2 div neg translate } { /mode mode 6 sub def } ifelse } ifelse
/fsize text stringwidth pop def mode 1 eq { fsize 2 div neg 0 translate
} { mode 2 eq { fsize neg 0 translate } if } ifelse 0 0 moveto text
show grestore } def

 /goval{ gsw /gcolor ed /x1 ed /x2 ed /radius ed translate x1 rotate
x2 radius div 1.0 scale 1 setgray newpath 0 0 radius 0 360 arc fill
gcolor setgray newpath 0 0 radius 0 360 arc fill 0 setgray newpath
0 0 radius 0 360 arc stroke grestore } def

 /coval1{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc fill grestore } def

 /coval2{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /oval{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def

 /docurve{ x1 2 mul x2 add 3 div y1 y0 sub x1 x0 sub div x2 x0 sub
mul y2 y0 sub x2 x0 sub div x1 x0 sub mul add y1 add y0 2 mul add 3
div x1 x2 2 mul add 3 div y2 y3 sub x2 x3 sub div x1 x3 sub mul y1
y3 sub x1 x3 sub div x2 x3 sub mul add y2 add y3 2 mul add 3 div x2
y2 curveto } def

 /makecurve{ gsw /points ed /ss points length 2 idiv 2 mul def newpath
ss 4 gt { /x1 points 0 get def /y1 points 1 get def /x2 points 2 get
def /y2 points 3 get def /x3 points 4 get def /y3 points 5 get def
/x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div y2 y1 sub x2 x1
sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul y1 2 mul add
y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed /x0 points ii
get def /y0 points ii 1 add get def /x1 points ii 2 add get def /y1
points ii 3 add get def /x2 points ii 4 add get def /y2 points ii 5
add get def /x3 points ii 6 add get def /y3 points ii 7 add get def
docurve } for /x0 points ss 6 sub get def /y0 points ss 5 sub get def
/x1 points ss 4 sub get def /y1 points ss 3 sub get def /x2 points
ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul x1 sub def
/y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub 2 mul x2 x1
sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve } { ss
4 eq { points 0 get points 1 get moveto points 2 get points 3 get lineto
} if } ifelse stroke grestore } def

 /makedashcurve{ gsw /dsize ed /points ed /ss points length 2 idiv
2 mul def newpath ss 4 gt { /x1 points 0 get def /y1 points 1 get def
/x2 points 2 get def /y2 points 3 get def /x3 points 4 get def /y3
points 5 get def /x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div
y2 y1 sub x2 x1 sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul
y1 2 mul add y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed
/x0 points ii get def /y0 points ii 1 add get def /x1 points ii 2 add
get def /y1 points ii 3 add get def /x2 points ii 4 add get def /y2
points ii 5 add get def /x3 points ii 6 add get def /y3 points ii 7
add get def docurve } for /x0 points ss 6 sub get def /y0 points ss
5 sub get def /x1 points ss 4 sub get def /y1 points ss 3 sub get def
/x2 points ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul
x1 sub def /y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub
2 mul x2 x1 sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve
} { ss 4 eq { points 0 get points 1 get moveto points 2 get points
3 get lineto } if } ifelse centerdash stroke grestore } def

 /pathlength{ flattenpath /dist 0 def { /yfirst ed /xfirst ed /ymoveto
yfirst def /xmoveto xfirst def } { /ynext ed /xnext ed /dist dist ynext
yfirst sub dup mul xnext xfirst sub dup mul add sqrt add def /yfirst
ynext def /xfirst xnext def } {} {/ynext ymoveto def /xnext xmoveto
def /dist ynext yfirst sub dup mul xnext xfirst sub dup mul add sqrt
add def /yfirst ynext def /xfirst xnext def } pathforall dist } def

 /centerdash{ /pathlen pathlength def /jj pathlen dsize div 2.0 div
cvi def /ddsize pathlen jj 2.0 mul div def [ddsize] ddsize 2 div setdash
} def

 /logaxis{ gsw /offset ed /hashsize ed /nlogs ed p2 p1 x1 y1 translate
/y2 y2 y1 sub def /x2 x2 x1 sub def y2 x2 atan rotate /rr x2 dup mul
y2 dup mul add sqrt def offset 0 ne { /offset offset ln 10 ln div def
} if /offset offset dup cvi sub def newpath 0 0 moveto rr 0 lineto
/lsize rr nlogs div def 0 1 nlogs { /x2 ed x2 offset ge { /y2 x2 offset
sub lsize mul def y2 rr le { y2 0 moveto y2 hashsize 1.2 mul lineto
} if } if } for stroke width 0.6 mul setlinewidth newpath 0 1 nlogs
{ /x2 ed 2 1 9 { ln 10 ln div x2 add /xx2 ed xx2 offset ge { /y2 xx2
offset sub lsize mul def y2 rr le { y2 0 moveto y2 hashsize 0.8 mul
lineto } if } if } for } for stroke grestore } def

 /linaxis{ gsw /offset ed /hashsize ed /perdec ed /numdec ed p2 p1
x1 y1 translate /y2 y2 y1 sub def /x2 x2 x1 sub def y2 x2 atan rotate
/rr x2 dup mul y2 dup mul add sqrt def newpath 0 0 moveto rr 0 lineto
/x1 rr numdec perdec mul div def /y1 rr numdec div def /offset offset
x1 mul def 0 1 numdec { y1 mul offset sub dup 0 ge { dup rr le { dup
0 moveto hashsize 1.2 mul lineto } if } if } for stroke width 0.6 mul
setlinewidth newpath offset cvi 1 numdec perdec mul offset add { x1
mul offset sub dup 0 ge { dup rr le { dup 0 moveto hashsize 0.8 mul
lineto } if } if } for stroke grestore } def
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (Rules.dvi) @start
%DVIPSBitmapFont: Fa cmsy8 8 1
/Fa 1 113 df<18031807180F180E181E181C183C18381878187018F018E01701EF03C0
1880170718005F170E171E171C173C17381778177017F05F16015F16035F160701C092C7
FC486C5C0007151E486C141C003F153CD873F8143800E31578D801FC147016F06C6C5C15
01017F5C1503D93F805B1507D91FC090C8FC5D90380FE00E151E903807F01C153C903803
F83815786D6C5A5DEB00FF5D147F5D143F92C9FC80141E140E38427C823B> 112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi8 8 8
/Fb 8 106 df<131C013EEB0380ED07C0017E130F1680137CA201FC131F16005BA20001
5C153E5BA20003147E157C5BA20007ECFC08EDF8185BA2000F0101133816309038E003F0
02071370001F90380EF8609039F83C78E090397FF03FC090391FC00F0048C9FCA2123EA2
127EA2127CA212FCA25AA21270252C7E9D2A> 22 D<D801F01307003FEC0F80A2000314
1F16005B5D0007143EA2495BA2000F5C140101805B4A5A001F13075D49485A4AC7FC4813
3E5C003E13F0EB03E0387E07C049C8FCEA7C3E13F8EAFFE090C9FC12F8211E7D9D23> I<
EC1F80EC7FF0903801F0F8903803E07C903807803EEB0F0049131F133E5BA25B153F1201
5BA20003147F157E5BA2000714FCA24913F81401000FEB03F015E09038E007C0EC0F8039
1FF01F00EBB83EEB1FF8EB07C048C8FCA2123EA2127EA2127CA212FCA25AA21270202C7E
9D24> 26 D<0103B512F0131F137F90B612E03A01FC1F80003903F00FC03807C0074848
6C7E121F1300123EA25AA2140700FC5C5AA2140F5D141F92C7FC143E0078133C147C007C
5B383C01E0381F07C0D807FFC8FCEA01F8241E7D9C28> I<EB07E0EB1FF890387C1CE0EB
F80D3801F00F3803E007EA07C0120FD81F8013C0A2EA3F00140F481480127EA2141F00FE
14005AA2EC3F02EC3E06A25AEC7E0E007CEBFE0C14FC0101131C393E07BE18391F0E1E38
390FFC0FF03903F003C01F1F7D9D25> 97 D<13F8121FA21201A25BA21203A25BA21207
A25BA2120FEBC7E0EB9FF8EBB83C381FF01EEBE01F13C09038800F80EA3F00A2123EA200
7E131FA2127CA2143F00FC14005AA2147EA2147C14FC5C387801F01303495A383C0F806C
48C7FCEA0FFCEA03F0192F7DAD1E> I<EB01F8EB0FFE90383E0780EB7C01D801F813C038
03F0073807E00FEA0FC001801380121F48C8FCA25A127EA312FE5AA51560007C14E0EC01
C0EC03806CEB0F00001E131C380F81F83807FFE0C648C7FC1B1F7D9D1F> I<1307EB0F80
EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E123812301270EA607EEA
E07C12C013FC485A120012015B12035BA21207EBC04014C0120F13801381381F01801303
EB0700EA0F06131EEA07F8EA01F0122E7EAC18> 105 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr8 8 2
/Fc 2 51 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
> 49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000
FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A
495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6
FCA21C2C7DAB23> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10.95 2
/Fd 2 113 df<007FB812F8B912FCA26C17F83604789847> 0 D<1A03F207801A0FA2F2
1F00A21A3EA262A262A24F5AA24F5AA24F5AA24F5AA24FC7FCA2193EA261A261A24E5AA2
4E5AA24E5AA24E5AA24EC8FCA2183EA260A260A24D5A131C017C5E01FE15031201D807FF
4B5A120E484C5A00787FD8E07F4BC9FC00C07FD8003F153E80011F5D80010F5D8001074A
5A8001034A5AA26E495A13016E495A7F6F48CAFC147FEDC03E143F6F5A141F6F5A140FED
F1F015F9913807FBE015FF6E5BA26E5BA26E90CBFCA2157EA2153C1538495B7B834C>
112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi10 10.95 6
/Fe 6 108 df<EB03F8D90FFE140F90383FFF8090B56C131E4880486E131C2607FC1F14
3C270FE003F81338261F8000147890C7007C1370003E023C13F0003C023E13E048EC1E01
0070020E13C000F0EC0F034816801507C81307EE8700168FED038E169E169CA216BC16B8
A216F85EA25EA35EA35EA31507A293C7FC5DA4151EA3153E153CA45DA31570A21560303C
7FA72F> 13 D<EC01C0EC0FFF023F13E0027913F0ECE03F903801C00FEC8007ED01E001
0390C7FCA280130180A280A26D7E80A2147E147F6E7EA26E7E81140FEC7FF0903801F7F8
EB07C790381F83FCEB3E03EB7C0101F87F12013803F000485AA24848137E485AA2123F90
C7FCA25A127EA300FE147C5A15FCA25D1401A25D007C13035DA26C495A4A5A6C91C7FC6C
131E6C6C5A3803E0783800FFE0EB3F8024427CC028> I<D801F0EB0FE0D803FCEB7FFC3A
071F01F03E3A0E0F03801F001E90398F000F80001C139E003C01FC14C000385B5C38781F
E012705CA200F049131F013F1580000090C7FCA2163F5B017E1500A25E13FE49147EA216
FE1201495CA215011203495CA215031207495CA21507120F495CEA0380C8120FA25EA215
1FA25EA2153FA293C7FCA25DA2157EA3157C15382A3C7EA72D> 17
D<163EEEFFC0923803E1E0923807C0F0ED0F811687ED1F8F160F153FA217E092387E0380
93C7FCA45DA514015DA30103B512FCA390260003F0C7FCA314075DA4140F5DA5141F5DA4
143F92C8FCA45C147EA414FE5CA413015CA4495AA35CEA1E07127F5C12FF495AA200FE90
C9FCEAF81EEA703EEA7878EA1FF0EA07C02C537CBF2D> 102 D<143C14FEA21301A314FC
EB00701400AD137E3801FF803803C7C0EA0703000F13E0120E121C13071238A2EA780F00
7013C0A2EAF01F14801200133F14005B137EA213FE5BA212015B0003130E13F0A2000713
1EEBE01CA2143CEBC0381478147014E013C13803E3C03801FF00EA007C173E7EBC1F>
105 D<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C9FC
16FC49EB03FE92380F0780017EEB3C0FED703F01FE13E0913801C07F9038FC0380EC0700
0001010E14004A131C494890C7FC5C00035BEBF9C0495A01FFC9FC5A14F0EBE3FE9038E0
7F80000FEB1FC06E7EEBC00781001F1303160E1380A2003F151E0207131C010013E0A248
5DA2007E01031378167000FE01015B15F1489038007F800038023EC7FC29407CBE2F>
107 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr10 10.95 9
/Ff 9 122 df<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B1201
5B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E
123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB
01C0EB00E014701430145A77C323> 40 D<12C07E12707E7E121E7E6C7E7F12036C7E7F
12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307
A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC
121E121C5A5A5A5A145A7BC323> I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000F
C9FCB3A915063C3C7BB447> 43 D<EB07FC90383FFF8090B512E03903F01FF83907C007
FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6C
C7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC14
7E147C5C495A495A495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6
FCA25A4815C0B7FCA3243D7CBC2D> 50 D<007FB912E0BA12F0A26C18E0CDFCAE007FB9
12E0BA12F0A26C18E03C167BA147> 61 D<49B4FC010F13E090383F00F8017C131E4848
131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C
7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C13789038
3F01F090380FFFC0D901FEC7FC222A7DA828> 99 D<EA01E0EA07F8A2487EA46C5AA2EA
01E0C8FCACEA01FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A> 105
D<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A> 108
D<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC
8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2EC
FEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438A214780018137012
7EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630> 121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi12 12 7
/Fg 7 100 df<147002F8140E0101153FA301035DA24A147EA2010715FEA24A5CA2010F
1401A24A5CA2011F1403A24A5CA2013F1407A291C75BA249140FA2017E5DA201FE021F13
18183849ED8030A20001033F13701860EE7F005E486C16E0DB01DF13C09238039F016DD9
071F1380489039801E0F83903BF7C078078700903AE1FFE003FE903AE07F8000F8000F90
CAFCA25BA2121FA25BA2123FA290CBFCA25AA2127EA212FEA25A123835417DAB3B> 22
D<D93F801470D81FFF15F848150191C7FCC67E160317F0137E160701FE15E0A249EC0FC0
A20001151F178049143F17000003157EA2495C4B5A12074B5A49495A5E000F140F4B5A49
49C7FC157E001F5C4A5A49485AEC07C0003F495A4AC8FCEB003C14F8387F01E0EB07C0D8
7E1FC9FC13FCEAFFE0138000F8CAFC2D2C7BAB30> I<ED07F0ED1FFEED7C1F913901F00F
C0913907C007E091380F8003DA1F0013F0023EEB01F8147E5C4A14FC1301495AA2495AA2
495A1603131F5CA21607013F15F891C7FCA249140F17F0137E17E001FE141F17C049143F
17800001157F170016FE5E486C495A4B5A01F7495A9039F3800FC02707F1C01FC7FC9038
F0E07E9038E07FF8EC1FC0000F90C9FCA25BA2121FA25BA2123FA290CAFCA25AA2127EA2
12FEA25A12382E417DAB32> 26 D<0203B612E0021F15F091B7FC4916E0010716C09027
0FF80FF8C7FC90381FC00349486C7E017EC7FC49147E485A4848143E0007153F5B485AA2
485AA2123F90C8FC5E48157E127EA216FE00FE5D5A15015EA24B5A007C5D15074B5A5E6C
4AC8FC153E6C5C5D390F8003F03907C007C02601F03FC9FC38007FFCEB1FE0342C7DAA37
> I<EC0FC0EC7FF0903901F8381C903907E01C7E90380FC00E90393F0007FE496D5A13FE
485A49130100035D485A120F491303001F5DA2485A1507007F5D5BA2150F00FF5D90C7FC
A2151F5E5AA2033F1330EE00701760A24B13E017C015FE007E130102031301003ED9073E
1380003F010E13036C011C14006C6C486C5A3A07C0F00F0E3A01FFC007FC3A007F0001F0
2C2D7CAB33> 97 D<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B137E
A313FE5BA312015BEC0FC0EC3FF00003EBF07C9038F3C03E9038F7001F01FE1480484813
0F4914C05B16E0485A5BA3121F5BA2151F123F90C7FCA2153F4815C0127EA2157F16805A
16005DA24A5A007C5CA24A5A4A5A5D003C130F003E495A001E495A001F017EC7FC6C5B38
07C1F03801FFC06C6CC8FC23467CC429> I<EC07F8EC3FFF9138FC07C0903903F000E049
481370D91F80133049C71270017EEB03F801FE1307485A4848EB0FF012075B000FEC07C0
484890C7FCA2485AA2127F5BA312FF90C9FCA45AA5161816381670007E15E0ED01C06CEC
0380ED07006C6C131E000F14383907C001F03903F00FC02600FFFEC7FCEB1FF0252D7CAB
2A> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr12 12 3
/Fh 3 52 df<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6
FCA3204278C131> 49 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C
7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F
1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A
4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B48
5A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131> I<49B4FC01
0F13E0013F13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0F
E0486C14F8A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE
4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07
F816FC150316FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407
003015F80038140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFF
F8010F13E0010190C7FC28447CC131> I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 0 1
0 0 bop 1331 1033 a @beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 16 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial
@beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 50 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial @beginspecial
@setspecial
 23 0 add 33 0 add 48 0 add 33 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial Fh 1315 933 a(1) p Fg 1418 962
a(\026) p Fh 1307 650 a(2) p Fg 1420 623 a(\027) p Fh
1705 692 a(3) p Fg 1705 829 a(\032) p Ff 1813 778 a(=) p
Fe 1964 717 a(i) p 1919 757 122 4 v Fd 1919 774 a(p) p
1995 774 46 4 v Ff 1995 849 a(2) 2050 778 y(\() p Fe(k) p
Fc 2132 792 a(1) p Fd 2193 778 a(\000) p Fe 20 w(k) p
Fc 2331 792 a(2) p Ff 2370 778 a(\)) p Fb 2405 741 a(\032) p
Fe 2446 778 a(\021) p Fb 2494 741 a(\026\027) p Ff 2580
778 a(+) 30 b(cyclic) 1331 1496 y @beginspecial @setspecial
 5 0 add 18 0 add 45 0 add 48 0 add 2.5 6 0.5 1.0 gluon showpage


@endspecial @beginspecial @setspecial
 45 0 add 18 0 add 5 0 add 48 0 add 2.5 6 0.5 1.0 gluon showpage
 
@endspecial Fg
1289 1359 a(\026) 1294 1119 y(\027) 1730 1110 y(\032) 1730
1368 y(\033) p Ff 1830 1252 a(=) p Fe 24 w(i\021) p Fb
2004 1214 a(\026\032) p Fe 2088 1252 a(\021) p Fb 2136
1214 a(\027) t(\033) p Fd 2242 1252 a(\000) p Fe 2350
1190 a(i) p 2343 1231 V Ff 2343 1314 a(2) 2414 1252 y(\() p
Fe(\021) p Fb 2497 1214 a(\026\027) p Fe 2583 1252 a(\021) p
Fb 2631 1214 a(\032\033) p Ff 2735 1252 a(+) p Fe 20
w(\021) p Fb 2874 1214 a(\026\033) p Fe 2963 1252 a(\021) p
Fb 3011 1214 a(\027) t(\032) p Ff 3091 1252 a(\)) 1331
1959 y @beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 16 0 add 3 0.5 1.0 dashline showpage
 
@endspecial @beginspecial
@setspecial
 23 0 add 33 0 add 6 0 add 50 0 add 3 0.5 1.0 dashline showpage
 
@endspecial @beginspecial @setspecial
 23 0 add 33 0 add 48 0 add 33 0 add 3 0.5 1.0 dashline showpage
 
@endspecial
Fg 1306 1848 a(a) 1311 1579 y(b) 1705 1657 y(c) p Ff
1805 1726 a(=) p Fd 1901 1651 a(p) p 1977 1651 V Ff 1977
1726 a(2) p Fe(f) p Fb 2077 1693 a(abc) 1331 1959 y @beginspecial
@setspecial
 148 0 add 33 0 add 131 0 add 16 0 add 3 0.5 1.0 dashline showpage
 
@endspecial @beginspecial @setspecial
 148 0 add 33 0 add 131 0 add 50 0 add 3 0.5 1.0 dashline showpage
 
@endspecial
@beginspecial @setspecial
 148 0 add 33 0 add 172 0 add 33 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial Fh 2353 1859 a(1) 2353
1576 y(2) p Fg 2427 1881 a(a) 2431 1512 y(b) 2730 1755
y(\026) p Ff 2826 1704 a(=) p Fd 25 w(\000) p Fe 3048
1643 a(i) p 3003 1683 122 4 v Fd 3003 1701 a(p) p 3079
1701 46 4 v Ff 3079 1776 a(2) p Fe 3134 1704 a(\016) p
Fb 3177 1667 a(ab) p Ff 3250 1704 a(\() p Fe(k) p Fc
3332 1718 a(1) p Fd 3392 1704 a(\000) p Fe 20 w(k) p
Fc 3530 1718 a(2) p Ff 3570 1704 a(\)) p Fb 3605 1667
a(\026) 1331 2422 y @beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 16 0 add 3 0.5 1.0 dashline showpage
 
@endspecial
@beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 50 0 add 3 0.5 1.0 dashline showpage
 
@endspecial @beginspecial
@setspecial
 23 0 add 33 0 add 45 0 add 48 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial @beginspecial @setspecial
 23 0 add 33 0 add 45 0 add 18 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial
Fg 1306 2311 a(a) 1311 2042 y(b) 1717 2036 y(\026) 1719
2294 y(\027) p Ff 1780 2161 a(=) p Fe 1893 2100 a(i) p
1886 2140 V Ff 1886 2224 a(2) p Fe 1956 2161 a(\016) p
Fb 1999 2124 a(ab) p Fe 2072 2161 a(\021) p Fb 2120 2124
a(\026\027) 1331 2422 y @beginspecial @setspecial
 131 0 add 16 0 add 148 0 add 33 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial
@beginspecial @setspecial
 148 0 add 33 0 add 131 0 add 50 0 add 3 0.5 1.0 dashline showpage
 
@endspecial @beginspecial
@setspecial
 148 0 add 33 0 add 170 0 add 48 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial @beginspecial @setspecial
 148 0 add 33 0 add 170 0 add 18 0 add 3 0.5 1.0 dashline showpage
 
@endspecial
Fg 2350 2319 a(\027) 2357 2042 y(b) 2772 2036 y(\026) 2775
2294 y(a) p Ff 2801 2181 a(=) p Fd 25 w(\000) p Fe(i) 15
b(\016) p Fb 3057 2144 a(ab) p Fe 3130 2181 a(\021) p
Fb 3178 2144 a(\026\027) 1331 2885 y @beginspecial @setspecial
 6 0 add 16 0 add 23 0 add 33 0 add 0.5 1.0 arrowline showpage


@endspecial @beginspecial @setspecial
 23 0 add 33 0 add 6 0 add 50 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial
@setspecial
 23 0 add 33 0 add 48 0 add 33 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial Fg 1306 2774 a(a) 1311 2505
y(b) 1692 2673 y(\026) p Ff 1788 2625 a(=) p Fb 1929
2590 a(i) p 1894 2605 95 4 v Fa 1894 2614 a(p) p 1953
2614 36 3 v Fc 1953 2669 a(2) p Fe 2013 2625 a(\016) p
Fb 2056 2593 a(ab) p Fe 2144 2625 a(\015) p Fb 2196 2593
a(\026) 1331 2885 y @beginspecial @setspecial
 148 0 add 33 0 add 131 0 add 16 0 add 0.5 1.0 arrowline showpage
 
@endspecial
@beginspecial @setspecial
 131 0 add 50 0 add 148 0 add 33 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial
@setspecial
 148 0 add 33 0 add 173 0 add 33 0 add 2.5 3 0.5 1.0 gluon showpage
 
@endspecial Fg 2344 2774 a(a) 2348 2505
y(b) 2730 2673 y(\026) p Ff 2826 2625 a(=) p Fd 25 w(\000) p
Fb 3038 2590 a(i) p 3003 2605 95 4 v Fa 3003 2614 a(p) p
3062 2614 36 3 v Fc 3062 2669 a(2) p Fe 3122 2625 a(\016) p
Fb 3165 2593 a(ab) p Fe 3253 2625 a(\015) p Fb 3305 2593
a(\026) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

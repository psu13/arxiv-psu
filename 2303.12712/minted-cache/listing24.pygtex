\begin{Verbatim}[commandchars=\\\{\}]
Can you write a python GUI with the following properties:
(1). The GUI contains three text fields, one single line (editable) on top, and one large multi\PYGZhy{}line text field (editable)in the middle, one single line (non\PYGZhy{}editable) on the bottom.
\PYGZhy{}\PYGZhy{} I want the multi\PYGZhy{}line text field to highlight things like a latex compiler.
(2). It also contains three buttons: Submit and Cancel and Load.
(3). When hitting the submit button, the button becomes unhittable, and
\PYGZhy{}\PYGZhy{} The program parses the input in the first text field, the input should be of form \PYGZdq{}\PYGZhy{}Ai=Bi\PYGZdq{} for a i = 1, 2, 3 , ..., separated by ; . The program creates a dictionary called input\PYGZus{}parameters with keys of those Ai and values those Bi.
\PYGZhy{}\PYGZhy{}The program parses the second large text field, and store it as a string called input\PYGZus{}text.
\PYGZhy{}\PYGZhy{} The program calls a function called query\PYGZus{}model (you don\PYGZsq{}t need to write it) with input\PYGZus{}text and input\PYGZus{}parameters as inputs.
\PYGZhy{}\PYGZhy{}The program wait for the query\PYGZus{}model to run, the query\PYGZus{}model will return two strings: result\PYGZus{}str, debug\PYGZus{}info.
\PYGZhy{}\PYGZhy{}The program will fill the bottom text field with the debug\PYGZus{}info, and append the result\PYGZus{}str to the text in the multi\PYGZhy{}line text field.
\PYGZhy{}The program keeps running query\PYGZus{}model again and again, until either of the following:
\PYGZhy{}(a). the returned result\PYGZus{}str has length \PYG{err}{\PYGZlt{}}= 10.
\PYGZhy{}(b). The cancel button is hitted.
\PYGZhy{}After the model stops, it saves the text to ./data folder, with name text\PYGZus{}XY, where X is the current time, Y is a k\PYGZhy{}word summarization of the text.
\end{Verbatim}

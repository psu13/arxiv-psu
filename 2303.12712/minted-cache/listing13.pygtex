\begin{Verbatim}[commandchars=\\\{\}]
One possible execution of rec([5, 10, 88], 6) with intermediate steps is:
\PYGZhy{} Since the length of A is 3, which is less than k = 6, we first call rec(A + [length(A)], k) to get B. That is, we call rec([5, 10, 88, 3], 6).
\PYGZhy{} In the recursive call, the length of A is 4, which is still less than k = 6, so we again call rec(A + [length(A)], k) to get B. That is, we call rec([5, 10, 88, 3, 4], 6).
\PYGZhy{} In the second recursive call, the length of A is 5, which is still less than k = 6, so we again call rec(A + [length(A)], k) to get B. That is, we call rec([5, 10, 88, 3, 4, 5], 6).
\PYGZhy{} In the third recursive call, the length of A is 6, which is equal to k = 6, so we return A as B. That is, we return [5, 10, 88, 3, 4, 5] as B.
\PYGZhy{} In the second recursive call, we have B = [5, 10, 88, 3, 4, 5], so we call merge\PYGZus{}array(B, B) to get C. The merge\PYGZus{}array function takes the first m \PYGZhy{} 1 = 5 elements of the first array and the last n \PYGZhy{} 1 = 5 elements of the second array and merges them into a new array. That is, C = [5, 10, 88, 3, 4, 10, 88, 3, 4, 5]. We return C as B.
\PYGZhy{} In the first recursive call, we have B = [5, 10, 88, 3, 4, 10, 88, 3, 4, 5], so we call merge\PYGZus{}array(B, B) to get C. The merge\PYGZus{}array function takes the first m \PYGZhy{} 1 = 9 elements of the first array and the last n \PYGZhy{} 1 = 9 elements of the second array and merges them into a new array. That is, C = [5, 10, 88, 3, 4, 10, 88, 3, 4, 10, 88, 3, 4, 10, 88, 3, 4, 5]. We return C as B.
\PYGZhy{} In the original call, we have B = [5, 10, 88, 3, 4, 10, 88, 3, 4, 10, 88, 3, 4, 10, 88, 3, 4, 5], so we return B as the final output of rec([5, 10, 88], 6).
\end{Verbatim}

%!PS-Adobe-2.0 EPSF-2.0
%%Title: C:\Documents and Settings\Mark\My Documents\My Dropbox\patch_AdS\sing2.fig
%%Creator: fig2dev.exe Version 3.2 Patchlevel 5c WinFIG version 2 (06/15/2010) by Andreas Schmidt
%%CreationDate: Thu Apr 05 01:25:03 2012
%%For: Mark@LEROY (LEROY)
%%BoundingBox: 0 0 307 554
%Magnification: 1.0000
%%EndComments
%
%  Created by WinFIG version 4.62 
%  METADATA <version>1.0</version> 
%
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 554 moveto 0 0 lineto 307 0 lineto 307 554 lineto closepath clip newpath
-26.1 568.4 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 51
%  METADATA <id>38</id> 
% Polyline
0 slj
0 slc
7.500 slw
n 2982 3611 m 3282 3371 l 3621 3118 l 4062 2816 l 4358 2672 l 4647 2561 l
 4887 2516 l 4992 2516 l 5082 2576 l 5172 2726 l 5157 2906 l
 5097 3146 l 4887 3551 l 4737 3821 l 4433 4259 l 4107 4646 l
 3792 5006 l 3408 5390 l 2967 5801 l 3192 5351 l 3315 5010 l
 3390 4650 l 3372 4301 l 3300 4065 l 3225 3885 l 3120 3720 l

 2982 3596 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 197.80 167.73] PATmp PATsp ef gr PATusp gs col0 s gr 
% Ellipse
%  METADATA <id>36</id> 
n 2967 8388 2215 1079 0 360 DrawEllipse gs col0 s gr

%  METADATA <id>24</id> 
/Times-Roman ff 400.00 scf sf
465 2743 m
gs 1 -1 sc (c) col0 sh gr
%  METADATA <id>30</id> 
% Polyline
n 750 8389 m
 750 1303 l gs col0 s gr 
%  METADATA <id>32</id> 
% Polyline
n 5175 8400 m
 5175 1314 l gs col0 s gr 
%  METADATA <id>23</id> 
/Times-Roman ff 400.00 scf sf
5295 6883 m
gs 1 -1 sc (b) col0 sh gr
% Ellipse
%  METADATA <id>34</id> 
n 2971 1327 2215 1079 0 360 DrawEllipse gs col0 s gr

%  METADATA <id>22</id> 
/Times-Roman ff 400.00 scf sf
5280 2788 m
gs 1 -1 sc (a) col0 sh gr
%  METADATA <id>25</id> 
/Times-Roman ff 400.00 scf sf
450 6838 m
gs 1 -1 sc (d) col0 sh gr
%  METADATA <id>37</id> 
% Polyline
n 2952 5794 m 2757 5479 l 2637 5254 l 2517 4879 l 2457 4579 l 2442 4369 l
 2487 4174 l 2625 3930 l 2760 3765 l 2952 3619 l 2667 3379 l
 2322 3124 l 1962 2869 l 1557 2674 l 1227 2539 l 987 2524 l
 882 2554 l 792 2629 l 762 2794 l 792 3064 l 1002 3529 l
 1332 4039 l 1692 4504 l 2187 5074 l
 2922 5779 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 50.80 168.27] PATmp PATsp ef gr PATusp gs col0 s gr 
%  METADATA <id>39</id> 
% Polyline
n 762 2743 m 807 3058 l 1077 3613 l 1542 4288 l 2232 5083 l 2976 5800 l
 3522 5290 l 3978 4813 l 4280 4456 l 4616 4012 l 4881 3586 l
 5082 3178 l 5157 2908 l 5157 2713 l 5187 2818 l 5187 6673 l
 5157 6793 l 5097 6868 l 4977 6928 l 4782 6913 l 4467 6808 l
 4062 6613 l 3657 6328 l 2976 5800 l 2607 6103 l 2022 6523 l
 1542 6778 l 1227 6898 l 987 6913 l 927 6898 l 837 6868 l
 747 6718 l
 762 2848 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 49.80 180.87] PATmp PATsp ef gr PATusp gs col0 s gr 
%  METADATA <id>17</id> 
% Polyline
2 slj
15.000 slw
 [45] 0 sd
gs  clippath
5104 1587 m 5277 1357 l 5181 1285 l 5008 1515 l 5008 1515 l 5200 1359 l 5104 1587 l cp
eoclip
n 750 6748 m 750 6747 l 752 6746 l 754 6744 l 757 6740 l 761 6734 l
 767 6726 l 775 6717 l 785 6705 l 796 6691 l 809 6675 l
 823 6657 l 839 6636 l 857 6614 l 876 6591 l 897 6565 l
 919 6538 l 941 6510 l 966 6480 l 991 6449 l 1017 6416 l
 1045 6382 l 1073 6346 l 1104 6309 l 1135 6270 l 1169 6229 l
 1204 6186 l 1241 6140 l 1281 6092 l 1323 6040 l 1367 5986 l
 1414 5928 l 1464 5867 l 1517 5803 l 1572 5737 l 1628 5668 l
 1677 5608 l 1726 5550 l 1773 5492 l 1817 5438 l 1859 5388 l
 1897 5341 l 1932 5300 l 1963 5262 l 1990 5230 l 2013 5202 l
 2032 5179 l 2048 5160 l 2061 5145 l 2070 5133 l 2078 5125 l
 2083 5119 l 2086 5115 l 2088 5113 l 2088 5112 l 2088 5113 l
 2089 5113 l 2090 5112 l 2092 5109 l 2095 5105 l 2101 5098 l
 2109 5089 l 2121 5075 l 2136 5057 l 2155 5035 l 2178 5007 l
 2206 4973 l 2240 4933 l 2279 4885 l 2324 4831 l 2375 4769 l
 2433 4700 l 2496 4623 l 2566 4539 l 2641 4449 l 2721 4352 l
 2805 4251 l 2865 4178 l 2927 4104 l 2989 4029 l 3051 3954 l
 3113 3879 l 3175 3804 l 3237 3729 l 3298 3655 l 3359 3582 l
 3419 3510 l 3478 3438 l 3537 3367 l 3595 3297 l 3652 3228 l
 3709 3159 l 3765 3091 l 3821 3024 l 3876 2958 l 3930 2892 l
 3985 2826 l 4038 2762 l 4091 2697 l 4144 2633 l 4197 2570 l
 4249 2507 l 4300 2445 l 4351 2384 l 4401 2323 l 4451 2263 l
 4500 2203 l 4549 2145 l 4596 2087 l 4643 2031 l 4688 1976 l
 4732 1923 l 4775 1871 l 4817 1821 l 4856 1773 l 4895 1726 l
 4931 1682 l 4965 1641 l 4998 1602 l 5028 1565 l 5056 1532 l
 5081 1501 l 5104 1473 l 5125 1447 l 5144 1425 l 5160 1405 l
 5174 1389 l 5186 1374 l 5195 1363 l 5203 1353 l 5209 1346 l
 5214 1341 l
 5220 1333 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 5104 1587 m 5200 1359 l 5008 1515 l  col0 s
%  METADATA <id>41</id> 
% Polyline
2 slj
 [45] 0 sd
gs  clippath
866 7777 m 706 8017 l 806 8083 l 966 7843 l 966 7843 l 783 8010 l 866 7777 l cp
eoclip
n 5115 2638 m 5113 2639 l 5110 2643 l 5103 2649 l 5093 2659 l 5079 2672 l
 5060 2690 l 5038 2711 l 5011 2737 l 4980 2766 l 4947 2797 l
 4911 2831 l 4874 2867 l 4835 2903 l 4797 2940 l 4759 2976 l
 4721 3012 l 4684 3047 l 4649 3081 l 4615 3113 l 4582 3144 l
 4551 3174 l 4520 3203 l 4492 3231 l 4464 3258 l 4437 3284 l
 4411 3309 l 4385 3334 l 4360 3358 l 4335 3382 l 4310 3406 l
 4285 3431 l 4263 3452 l 4240 3474 l 4218 3496 l 4195 3519 l
 4172 3542 l 4148 3565 l 4124 3589 l 4099 3614 l 4074 3639 l
 4048 3664 l 4022 3691 l 3996 3718 l 3969 3745 l 3942 3774 l
 3914 3802 l 3886 3832 l 3857 3861 l 3829 3892 l 3800 3922 l
 3771 3953 l 3742 3985 l 3712 4016 l 3683 4048 l 3654 4080 l
 3625 4112 l 3596 4145 l 3567 4177 l 3539 4210 l 3510 4242 l
 3482 4275 l 3453 4308 l 3425 4341 l 3397 4374 l 3369 4407 l
 3341 4441 l 3313 4476 l 3289 4504 l 3266 4533 l 3242 4562 l
 3217 4592 l 3193 4623 l 3168 4654 l 3143 4686 l 3117 4719 l
 3091 4753 l 3064 4787 l 3037 4822 l 3009 4857 l 2981 4894 l
 2953 4931 l 2924 4969 l 2895 5007 l 2865 5046 l 2835 5086 l
 2805 5126 l 2775 5166 l 2745 5207 l 2714 5248 l 2683 5290 l
 2652 5332 l 2621 5373 l 2591 5415 l 2560 5457 l 2529 5499 l
 2499 5541 l 2468 5583 l 2438 5624 l 2408 5666 l 2379 5707 l
 2350 5747 l 2321 5788 l 2292 5828 l 2263 5868 l 2235 5907 l
 2207 5947 l 2179 5986 l 2152 6025 l 2124 6063 l 2097 6102 l
 2070 6141 l 2044 6177 l 2018 6215 l 1992 6252 l 1965 6289 l
 1939 6327 l 1912 6366 l 1885 6405 l 1857 6445 l 1828 6486 l
 1799 6528 l 1770 6571 l 1739 6615 l 1707 6661 l 1675 6708 l
 1641 6757 l 1606 6808 l 1571 6860 l 1534 6914 l 1496 6969 l
 1456 7026 l 1416 7084 l 1375 7144 l 1334 7205 l 1291 7267 l
 1249 7329 l 1206 7392 l 1164 7454 l 1122 7515 l 1081 7575 l
 1041 7633 l 1003 7689 l 967 7741 l 934 7790 l 903 7835 l
 876 7876 l 851 7912 l 830 7943 l 812 7969 l 797 7990 l
 786 8007 l 777 8020 l
 765 8038 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 866 7777 m 783 8010 l 966 7843 l  col0 s
% here ends figure;
$F2psEnd
rs
end
showpage
%%Trailer
%EOF

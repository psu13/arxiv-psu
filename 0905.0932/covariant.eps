%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: Strong.dvi
%%CreationDate: Sat Apr 11 22:18:55 2009
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 135 337 480 541
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Strong.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2009.04.11:2218
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 6, 05/05/20
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.04, 2004/06/23 (adding %GradientCircle style - D.G.)
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 rotate
 /MidPoint ED
 /NumLines ED
 /LastBlue ED
 /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
/FirstRed ED
% D.G. modification begin - Apr.  9, 1998
/GradientPosY ED
/GradientPosX ED
  /GradientScale ED
  /ifGradientCircle ED
% D.G. modification end
  % This avoids gaps due to rounding errors:
    clip
  pathbbox           %leave llx,lly,urx,ury on stack
% D.G. modification begin - Apr. 10, 1998
  4 copy /ury ED /urx ED /lly ED /llx ED
% D.G. modification end
  /y ED /x ED
% D.G. modification begin - Apr. 10, 1998
ifGradientCircle
   {0 GradientPosX eq
    {0 GradientPosX eq {2 copy translate} if} if}
   {2 copy translate} ifelse
% D.G. modification end
    y sub neg /y ED
  x sub neg /x ED  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
   LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
    setrgbcolor
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {/YSizePerLine y NumLines div def
    /CurrentY y 2 div def
    /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def}
       {fill
    /YSizePerLine y NumLines div def
        /CurrentY 0 def
    /MidLine NumLines 1 MidPoint sub mul abs cvi def} ifelse
% DG modification end
  MidLine NumLines 2 sub gt
    { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
   ifelse
    MidLine 0 gt
      {
    /Red FirstRed def
       /Green FirstGreen def
           /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
      } if
       MidLine NumLines lt
         {
    /Red LastRed def
       /Green LastGreen def
       /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat  }
     if
     } def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      Red Green Blue setrgbcolor fill
      /CurrentY CurrentY YSizePerLine sub def
      /Blue Blue BlueIncrement add def
      /Green Green GreenIncrement add def
      /Red Red RedIncrement add def} if}   {0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
    Red Green Blue setrgbcolor fill    /CurrentY CurrentY YSizePerLine add def
    /Blue Blue BlueIncrement add def    /Green Green GreenIncrement add def
    /Red Red RedIncrement add def} ifelse% D.G. modification end
    }def
    end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39139633 55388455 1000 600 600 (Strong.dvi)
@start
%DVIPSBitmapFont: Fa cmti12 17.28 7
/Fa 7 118 df<ED0FF0ED7FFC913A01FFFE01E0913A07F81F83F891390FE0078791393F
8003CFDA7F0013EF02FE13014948EB00FF49485D13074948147F495A013F5E5C017F153F
4948147F604890C8FC5A4915FF00075FA2485A5E95C7FC485AA25E003F5E5BA21607007F
5E5BA2160F5F5B12FF161F4D13E018015B163FEFE003007F18C0A2047F130704FF148017
C0003F5C4BEC0F006D5B001F03BF5BDB0F3F131E6C6C011E143E037C143C6C6CD9F81F13
7C6C6C48486C6C5A3C01FC0FE007E1F03C007FFF8003FFE06D48486C5BD907F0D9003FC7
FC3B4070BE48>97 D<ED03FE92381FFFC092B512F0913903FE03FC91390FF0007EDA1FC0
7FDA7F807F4AC7EA0F80494814074948141F4948147F494814FF49485B49485B137F495A
A24890C7140048486E5AEE00F8000793C7FC5B120F5B121FA2485AA3127F5BA312FF5BA4
5BA890C912066D1507EF0F80007FEE1F00173E177E003F5E6D4A5A001F4B5A6DEC0FC000
0F4B5A6C6C027FC7FC6C6CEB01FC6C6CEB0FF06CB4EBFFC0013FB5C8FC010F13F8010113
8031406FBE41>99 D<ED03FE92383FFF804AB512E0913907FE03F891390FF000FCDA3FC0
137E02FFC7123E4948143F494880495A495A495A495A137F495A5A91C85A48163E484815
7E177C484815FC4C5A4848EC07F0EE1FE0EE7F80003FDA07FEC7FC9039F003FFF890B612
C003FCC8FC4849C9FC01E0CAFCA4485AA55BA6127F17061707EF0F80EF1F00003F163E6D
157E5F001F4B5A6D4A5A000FED0FC06C6C4A5A047FC7FC6C6CEB01FC6C6CEB0FF0D8007F
EBFFC06DB5C8FC010F13F80101138031406FBE41>101 D<F00FE0F03FFC95B5FC943901
F81F80943907F007C094380FE00F051FEB3FE0F0C07F053F13FF60177F068113C017FF06
0013804C1500193C96C7FC5F1603A316075FA4160F5FA4161F5FA4163F5FA20203B77E4A
82A26191C7D87FC0C8FCA416FF5FA45D94C9FCA45D5EA415075EA4150F5EA4151F5EA415
3F5EA4157F5EA415FF5EA45C93CAFCA45C5DA44A5AA35D140FA35DA2141F5DA2D807805B
381FE03F123FD87FF05BA2484848CBFCA2147E495A1380387E01F8387C03F0383F07E06C
B45A000790CCFCEA01FC438283E42B>I<D90FC049B4FCD93FF0010F13E0D9FFFC013F13
F82601F0FE9038FE01FC3C03E07F01F8003E01C0D983E0137F000790263F87C013FF0180
90388F8003000FECDF00010001FE5B485C121E4A5A003E4A14FE003CEE03FC4BEB01F094
C7FC007C495A00785CA212F8485A007091C9FC1200A25B5CA313075CA3130F5CA3131F5C
A3133F5CA3137F5CA313FF5CA35A91CAFCA35A5BA35B5BC65A384074BE3B>114
D<ED0FF8ED7FFF0203B512C0913907F807F091391FC001F891393F8000FC027EC7127C02
FE143E4948141E495A173E494814FE1601010F14035CA2131F17FCEE00F06E1400A28080
80ECFFE06D13FF16C016F06D14FC6D806D806D1580143F020F14C01400030713E0150181
167F163FA2161FEA07C0EA1FE0487E007F16C0A3163F48481580A20180EC7F006CC8FC00
7815FE5E007C4A5A6C4A5A003F4A5A6C6CEB1FC06C6C495A2703F803FEC7FC6CB512F86C
6C13E0D907FEC8FC2F4075BE39>I<EB01F8D90FFEED01E0496C6CEC07F090267E1FC014
0F9026F80FE08101F04C5A48486C7EEA03C00007010F153F1380D80F005FA2001E177F14
1F003E60123C023F15FF007C5C0078017F5E5D5F00F813FF00704A92C7FCC7FC495D92C7
FC605B4A1407A201075E5C170F130F4A5DA2171F131F4A5DA2173F013FEF01C04AEDE003
A2057F13071A8018C0A24A160F05FF14001880616E49141E5E011F173E4C143C6ED90F7F
137C010F021E14786D6CD93C3F13F86D6C9039F81FC1F0902701FE03F0EBC3E06DB539C0
07FFC0023FD900035BDA07F8D9007EC7FC424074BE4B>117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi12 12 1
/Fb 1 66 df<1830187018F0A217011703A24D7EA2170F171FA21737A2176717E717C793
380187FCA2EE0307EE07031606160CA216181638163004607FA216C0030113011680ED03
00A21506150E150C5D845D03707F15605DA24A5A4AB7FCA25C0206C87F5C021C157F1418
5CA25C14E05C495A8549C9FC49163F1306130E5B133C137C01FE4C7ED807FFED01FF007F
01F0027FEBFFC0B5FC5C42477DC649>65 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr17 17.28 6
/Fc 6 62 df<BDFCA4D87FF8CA7E070114806C6CEF001F6C6C1807866C6C18006C6D187F
1B3F6C7F6E181F6C1A0F6C7F6EF007C0137F6D7E6E1803131F6D7E6F17017F6D7FA26D7F
6D6D18E01B006E7E6E7EA26E6C180081806E7F82806E7F82806F7EA26F7E6F7EA26F7E6F
7FA281A26F90CBFC6F5A5E1678A25E4B5A4B5A4B5AA24BCCFC151E5D5D1CE05D4A5A4A5A
020718014B18C04ACBFC141E5C147C027818035C495A4948180713075C49CCEA0F80131E
49191F1B3F5B49197F484819FF48481803624848183F48CB48B5FC001E95B61200003FBC
FCA25ABDFCA253627AE160>6 D<150E151E153C157815F0EC01E0EC03C01407EC0F80EC
1F00143EA25C5C13015C495A13075C130F5C131F91C7FC5B133E137E137C13FCA2485AA3
485AA3485AA3120F5BA3121F5BA3123FA390C8FCA25AA5127EA312FEB3A7127EA3127FA5
7EA27FA3121FA37F120FA37F1207A36C7EA36C7EA36C7EA2137C137E133E133F7F80130F
8013078013036D7E801300147C80A280EC0F80EC07C01403EC01E0EC00F01578153C151E
150E1F8F73EA33>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2137C7F133F7F6D7E
80130780130380130180130080147C147EA280A3EC1F80A3EC0FC0A315E01407A315F014
03A315F8A31401A215FCA51400A315FEB3A715FCA31401A515F8A21403A315F0A3140715
E0A3140F15C0A3EC1F80A3EC3F00A3147EA2147C14FC5C13015C13035C13075C130F5C49
C7FC5B133E5B5BA2485A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA33>I<B712F0A724
0780A12B>45 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCB3B3A2120FEA
3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3E74BD24>58 D<007FBD1280BE12C0A36C
1C80D1FCB3A3007FBD1280BE12C0A36C1C805A1F7AB267>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 12 1
/Fd 1 44 df<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3AB6F5A41407B
B84C>43 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi12 17.28 13
/Fe 13 117 df<4AB4FC020F01E0ED0380023F13F891B56C1507496E160001076E5D496F
140E496F141E496F141C49183C9026FFF0006D1438480180131F4848C76C6C147801F802
03157048486E6C14F0D80FC002005D49037E130148C9003E5C001E041E1303003E041F5C
003C82003818070078DC078090C7FC0070600503130E00F0181E48EFC01CCA1201193C19
381978F0E070170019F06118E161A218F3611873187796C8FC187F187EA3187CA31878A2
18F860A360A31701A3170360A21707A360170FA44DC9FCA35FA2173EA35FA45FA45FA25F
A25F495E7EBE49>13 D<92B8FC865C6E94C8FCDB007F01F0C9FC041F13807090CAFC4C5A
A25FA2163FA25FA2167FA25FA216FFA25FA25DA25FA25DA25FA25DA294CBFCA25DA25EA2
151FA25EA2153FA25EA2157FA25EA215FFA25EA25CA25EA25CA24C17401CE04A18011CC0
93CAFC1B034A19801B075D1C00021F601B0E4B171EA2023F60A24B177C1B78027F18F850
5A5D1A0302FF4D5A1A0F4B161F505A49187F1AFF4B03035B190F49053F90C7FC494CB5FC
013F163F007FBA5ABBFCA262536279E160>76 D<92B66C073FB512C04A5314E09DB6FC6E
20C0DB007F6D4E91C7FC041E1CF8040E973803BFF0041EF2077FA2041C080E5B1F1C9326
3C7FE019FF555B043862A204781AE1690470F101C1F603819326F03FF01883E4070390C8
FC04E0190EA20301505A0C385B16C0716C177003031B0F0CE05B0480F001C0A203079638
03801FE307005B1600716C160E4B1B3F535C030E61A2031E4F137F535C031C6D7E525A03
3C4E4813FF6803384EC7FCA20378060E5B525D03706D7E6403F04E5B9DC9FC4B60A20201
4E485B51485C4B6D7F51C7FC0203060E140F674B5F6302071B1F716D495D92C8FC634A4D
48143F67020E4D5A50C8FC021E1B7F95267FE00E5E021C5FA2023C4D15FF6702385F6202
78DB3FF05DDFF1C05E0270EEF380A202F004F7C85A9CCAFC4A16FE610101041F5E01034D
5E61497E010F4D150FD93FF84C151F48B597B57E007F02FC6E4849B712E0B66096C7FC4B
020E618B6279E188>I<ED03F8ED3FFF92B5EA803C913A03FE07E07F913A0FF001F0FF91
391FE000F14A48137902FFC7123D4948143F01036F5A495A4948140F495A604948140713
7F4948140F60485BA24890C8121F485FA25B000F163F60485AA2177F003F5F5BA217FF00
7F5F5BA25E95C7FC5BA200FF5D4D1306190E5B007F15074D131E191CA2040F143C193800
3F4B5A043F14786D027F1470001F15FFDB01E714F0000F020315E06DD907C713016C6CD9
0F8314C0000391391E03FC036C6CD97C01EB07803D00FF03F800FE0F0090263FFFE0EB7F
FE010F0180EB1FFCD903FCC7EA07F03F407BBE4A>97 D<4BB47E030F13F0037F13FC4A48
C67EDA07F8EB1F80DA1FE0130FDA7FC0EB07C04AC7EA03E049481401EB07FC495A495A13
3F495A495AA2484914034817C091C8120748178049150F000FEE1F00177E48485DEE07F0
003FED7FE049D93FFFC7FC90B612FC16C04802C0C8FC01F0CAFCA4485AA55BA4127FA318
301878123F18F06DED01E0001FEE03C0EF07806C6CED0F00173E6C6C5D0003ED01F06DEC
07E06C6CEC1F80D8007F02FEC7FC90393FC01FF8010FB512E0010391C8FC9038007FE035
407ABE41>101 D<EE03F8EE3FFF93B5EA803C923A03FE07E07F923A0FF001F0FF92391F
E000F1DB3F80137903FFC7123D4A48143F0203814A4815FE4A48140F4A5A143F4BEC07FC
4A5A02FF150FA2494915F85B92C8121F5B19F0495A183FA2494816E0A2187F133F4A16C0
A218FF137F4A1680A25FA24A1600A25FA2605C1707A260A2170F013F151F6E4A5AA2011F
157F17FF6D6C495B0107EC03DF6EEB0FBF0103EC1F3F6D6C017C5B903900FF01F891393F
FFE07F020F1380912601FC005B91C8FC17FFA260A25EA295C7FCA25E5FA21607D807C05D
D81FE0140F486C5D007F151F5F00FF4B5A4C5A4C5A494990C8FC4B5A0180EB0FF8007EC7
EA3FF06C6CEBFFC06CB548C9FC000314F8D8003F1380405C7EBE43>103
D<153F91387FFF80010FB5FC93CAFC5B7FEB000F6E5A14031407A25DA2140FA25DA2141F
A25DA2143FA25DA2147FA25DA214FFA25DA25BA292CBFCA249EC07FC93387FFF804A48B5
12E0923907F80FF8010790390FC003FC92393E0001FE4A5A4B6D7E90380FFDE0DAFFC081
5D187F4990C8FC5C4A15FFA2495A5CA25C017F5D96C7FC5CA201FF5D605CA24816076091
C8FC170F485FA249151F601207173F495EA2000F167F4E13604918E017FF001FEF80011A
C0495CF00003003F4B15805F4917071A00007F604D130E49171E6100FF18380401147849
5F933900FE03E094387E07C090C96CB4C7FC48705A003CEE03F0436578E351>I<150FED
3FC0ED7FE015FF5CA416C016806E1300153C92C7FCB3A2EB01F8EB0FFF497F90387E0FC0
01F87F496C7EEA01E0D803C07FEA078013005A000E130F121E121C123C0038131F5D0078
133F00705CA2147F00F05C1260C712FF5D5B92C7FCA25B5CA213075CA2130F5C131F5CA2
133F5C1660017F14E05C01FF1301028013C0A248140302001380A2150749140000035C15
0E0001141E5D1538157800005C4A5A90387F07C06DB45AD90FFEC7FCEB03F823607CDE30
>I<15FC903801FFFE133F15FCA3EB003FEC1FF8140F141FA215F0A2143FA215E0A2147F
A215C0A214FFA21580A25BA21500A25BA25CA21307A25CA2130FA25CA2131FA25CA2133F
A25CA2137FA25CA213FFA25CA25AA291C7FCA25AA25BA21207A25BA2120FA25BA2121FA2
5BA2123F15C0EBE001A2127F140301C01380A2140700FF14001380A25C140E007F131E14
1C143C123F5C6C6C5AEA0FE16CB45A00011380D8007EC7FC1F657AE32A>108
D<D90FC0DA0FFCED1FF0D93FF891267FFF80903801FFFED9FFFC49B500E001076D7E2601
F0FF902707F00FF890391FE03FE02B03C07F801F8003FC90393F000FF0023FD93E006D01
F86D7ED80780D9C0780101495A0100D9C1F06D6C48486D7E4890261FE3E0ED0780000E4B
038FC77F001EDAE780159E001CD93FEFC8160103FEED7FBC003C4A16F800384A4B481403
A24B5E007849485E12704B5E00F04D16074801FF94C85B00605CC7FC4E160F496492C85B
A20607161F49644A5E1D3F060F5F13074A4C157F66181F010F1BFF4A4C5EA2063F5D011F
99380001804A4C170364067F4C1307013F1E004A4C1407535B06FF030F140E017F634A4C
171E1F1C4D193C01FF5113384A93C81578674D61480907130191C8494D5A993903F80F80
766C48C7FC494C923800FFFC494C705AD80078DB00F0EE0FC071407CBE7B>I<D90FC0EC
0FF8D93FF891B5FCD9FFFC010314C02601F0FF90390FF01FF03D03C07F801F8007F8023F
90397C0003FCD807806D5A0100D9C1F06D7E4890381FE3C0000EDAE78080001E02EFC7FC
001C013F8115FE003C5C00384A5CA25D0078495A12705D00F05F4801FF5E00605CC7FC18
07495F92C8FCA2180F495F5C181F6113074A153F61A2010F167F4A5EA218FF011F4D13C0
4A17015FF10003013F19804A5C4E130705071500017F5E4A5F1A0E1A1E01FF4C131C4A17
3C621A7048040314F091C84A5A943901FC07C0716C485A49DC7FFEC7FC49705AD80078EE
07E04A407CBE54>I<ED03FF033F13F092B512FC913903FC00FEDA0FE0131FDA1F80EB07
804AC7EA03C0027EEC01E05C4A14000101150F4948141F173F0107157F5CA2130F18C06E
EC3F80EF0C006E91C7FC80806E7E15FC6DEBFFC016FC6D14FF6D15C0836D6C806E80020F
801403DA001F7F1500EE1FFF1607828282A2D807E081EA1FF0487E007F167EA35F485AA2
494A5AD87F805D0070C8120300784B5A4C5A6C4B5A6C4BC7FC6C6C14FED807E0EB03F8D8
03FEEB3FE0C6B61280011F49C8FC010313C0334079BE42>115 D<153C157F5D5CA35CA2
5DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147F007FB712C0B8FCA21780C701
C0C7FC5DA25BA292C8FCA25BA25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA213
7FA25CA213FFA25CA25A160691C7120EA248151E161C49143C16381678000715704914F0
4B5AA24B5A00034A5A93C7FC5D0001141E6D137C00005C90387F03E06DB45A010F90C8FC
EB03F82A5A7DD833>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr10 10 3
/Ff 3 42 df<B812FEA3D87FE0C7121F16016C6CEC007F6C6C151FA26C6C816C6C81A26C
6C816C7F7E6E15806D6C14016D7EA26D7E6D6C91C7FCA26D7E6D7EA26D7F6D7FA26E7E14
3FA26E5A6E5A6EC9FC140E5C5C14300270EC01805C495A495A49C81203010E16005B5B49
5D5B48485D48485D90C95A485E000E4B5A48ED1FFE003FB7FC5AB8FCA231397BB83C>6
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40 D<12C07E12707E7E7E12
0F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03
E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48
C7FC120E5A5A5A5A5A13527CBD20>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr7 7 1
/Fg 1 44 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi10 10 2
/Fh 2 77 df<EC03FC91381FFF80027F7F903901F807F0903903C001F890390780007C91
C7127E010E804980011F1580D93FC0130F17C01607A24A14E0A2011EC7FC90C8FCA5EC0F
F0ECFFFC903803F00E903907C0078F90381F8001D93E0013CF491300484814FF0003ED7F
C05B485A120F48481580A2485AA2007F160090C8FC167E16FE5A485D15015E1503485D15
075E4B5AA2007E4A5A4BC7FC003E147E003F5C6C6C485A390FC007F03907F01FC06CB5C8
FCC613FCEB1FE02B3E7DBB2C>64 D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA214
1FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA2130718404A15
C0A2010F150118804A1403A2011F16005F4A1406170E013F151E171C4A143C177C017F5D
160391C7120F49EC7FF0B8FCA25F32397DB839>76 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi12 14.4 15
/Fi 15 123 df<191C193C193E197E19FEA21801A218031807A2180F8560183D18391871
A218E1170118C1DD03817FA2EF07014D7E170E5FA25F177817704D80A24C5A0403147F5F
4CC7FCA2160E161E161C4C81A25E04F0143F5E4B5AA24B5A150793C8FC030E82A2031FB7
FC5DA25D0370C8121F5D14015D4A4882A24AC9FC4A160F140E5CA25C147814704A83A249
5A01031707495AA2130F133F496C4C7E2603FFE0EE3FFFB500FE031FB6FCA260A250557C
D458>65 D<020FB812E01AFCF2FF808791260007FEC813F06F48ED3FF8747E0307707E74
7E4C811C80030F82A24C17C0A2151FA25EA2153F1C805E62037F1800624C5E1A0F03FF5F
505A93C9485A505A4A4D5A4F5B4B4B90C7FCF10FFC0203EE3FF8F1FFE04B020F138092B7
00FCC8FC5CF1FF8003F8C8EA7FE0F11FF8020FEE07FC737E4B6F7E87021F707FA24B707E
A2023F84A25DA2147FA25DA214FF6392CA12FFA24961614A4C5BA201034D90C7FC4F5A5C
4F5A01074D5AF1FFF04A4B5B4E1380010F040F90C8FCF07FFC013F923803FFF8007FB912
E0BA128006FCC9FC18C052527AD159>I<4CB46C1338041F13F0047F01FC13704BB613F0
922607FE001381DB1FE0EB1FC3DB3F80903807E7E0037EC7EA03F74A48EC01FF4A48804B
ED7FC04A48153F4A5A4A5AF11F804AC9FC147EA202FEEE0F005CA30101170EA3191E191C
A26E93C7FCA280816D7F8115F86EB4FC16F06E13FF6E14E06E14FE6E6E7E020115E06E6C
80031F80030180DB001F7F04037FEE003F05077F83170085187F183FA2181FA3EA0380A3
120761A290CAFC48173F96C7FCA26D167E121F60A26D4B5A003F4C5A6D4B5A6D4B5A6D15
1F486C4B5A017E037EC8FC267E3F80495A267C1FE0EB07F826F80FFEEB3FE00103B65A48
C64AC9FC48011F13F848010113C045567AD348>83 D<157F913807FFC0021FEBE03C9139
7F81F87E9139FE0078FF4948133DD907F0131F49486D5A131F4948130749485C49C7FCA2
485A00035E5B120749140F000F5EA2485A161F003F5E5BA2163F007F5E5BA2167F5F485A
A216FFEF0038A290C8FC5D6C4B1378187015036D010714F0003F17E0150F92381FFC016C
6C013D14C0000F913879FE039026E001F014802707F003E013073C03F81F807F0F00C6B5
38003FFED97FFCEB0FFCD90FE0EB03F035357CB33D>97 D<F0FF804CB5FC4C1400A3EE00
036017011703A260A21707A260A2170FA260A2171FA260A2173FA260A2177FA260157F91
3907FFC0FF021F7F91267F81F890C7FC9138FE00784948133DD907F0131F49486D5A131F
49481307495A49C75BA2485A1203495D120749140F120F5F485A161F123F495DA2163F12
7F495DA2167FA248485DA216FF1838170090C8FC5D6C17784C137015036D010714F0003F
5F150F92381FFC016C6C013D5C000F913879FE039026E001F05C2707F003E013072903F8
1F807F0FC7FCC6B538003FFED97FFCEB0FFCD90FE0EB03F039547CD23D>100
D<EC1FF0EB3FFF5D5BA2EB007F5D143F147FA25DA314FF92C9FCA35B5CA313035CA31307
5CA3130F5C177E933803FF80011F020F13C04A90381F03E0EE7C019338F007F0013F9038
01E01F9139C003C03FED078092380F007F017F131E4A4814E05D4BEB3FC09026FF81E0EB
0F004A4890C7FC4A5A4AC9FC48131EEBFE7CEBFFF05C487F14FF15C09038FC7FF00007EB
0FFC9038F803FE6E7E6E7F000F147F4980153FA2001FEE03805BA21707003F027F140049
1480A25F007F160E49151E171C153F00FF5E90C714786F6C5A92380FE1E0486EB45A0301
5B0078DA007EC7FC345479D23D>107 D<EC7FC090B5FC15805AA2EA00016D1300A25BA2
5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25CA213FFA291
C7FCA25AA25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA25BA2127F141C
1380A200FF133C14381300A2147814705A14F05C1301007F5B1303383F87806CB4C7FCEA
07FEEA01F81A547BD223>I<013FEC0FF8D9FFC0EB7FFF00036D48B512C0903BC3F803F0
1FE0D8078190390F800FF03C0F01FC1F0007F8000E023C1303001E6D4880001C5C6E5A00
3C5C00385CA2D8780390C7FC00705BA25CD8F00715076000005BA2010F150F605CA2011F
151F605C173F013F5EA24A147F60137F05FF131C4A15005E01FF4B133C193891C712034D
137848187019F0494B13E01801000318C0180349EE07800401EB0F00933800FC3E49ED7F
FCEF3FF0D801E0ED0FC03E357DB346>110 D<ED1FF0EDFFFE02076D7E91391FF01FE091
397F8007F09139FE0003F8D903FC6D7E49486D7E495A4948147F49481580495A49C8123F
4817C05B485A1207A2485AA2485A177F123F5BA217FF007F17805BA25E18005B4C5A12FF
007F5E16075F160F5F4C5A163F003F5E6D4A5A001F4BC7FC4B5A6C6C495A6C6CEB07F06C
6CEB1FE06C6CEB3F806CB448B4C8FC90383FFFFC010F13E0010190C9FC32357CB338>I<
013FEC3F80903AFFC001FFE048D9E00713F03B03C3F80FC0F8D8078190383E003C270F01
FC7C13FC000E9138F803FE001E9038FEF007001CEBFFE0EDC00F003C1480003816FC1500
4948EB07F80078ED01E000704990C7FCA2EAF007A200005BA2130FA25CA2131FA25CA213
3FA25CA2137FA25CA213FFA291C9FCA25AA25BA21203A25BA35BA2EA01E02F357DB335>
114 D<EC01C0EC07F0140FA2141FA25DA2143FA25DA2147FA25DA214FFA292C7FCA25BA2
5CA2007FB612F0B7FC16E0A2260007FCC7FCA25CA2130FA25CA2131FA25CA2133FA25CA2
137FA25CA213FFA291C8FCA25AA25BA21203ED03805B150700071500A2495B150E151E5D
15384913785D6D485A0003495A4A5A2601FC1FC7FC3800FFFEEB3FF8EB0FE0244C7ECA2A
>116 D<EB0FC0D93FF81570496CEC01FCD9F07E14033801E07F48486C1407D807806D5C
EA0F00000E137F001E160F001C5F123C003813FF92C7121F00785FEA70015C00F0163F01
035E00005B13074A147F60130F5C17FF011F93C7FC5CA25E013F5D5CA21603017F4B13E0
5CA21607EFF80119C0A2040F13031980161F013F91383FF0076E017F1400011F9138F7F8
0F9126E001E3130E90270FF003C3131E903B07F81F81FC3C6DB53800FFF8010001FCEB3F
F0DA1FE0EB0FC03B357DB343>I<DA3F80EB3F80DAFFE0EBFFE00103D9F80313F8903B0F
C0FC07C0FC903B1F007E0F001E013CD93F1E137E4991389C01FF49ECBC0349EB1FF80001
4B5A485A4902E013FE120790C7003FEB03FC489238C000F0000E1700A2001E147FA2C85B
A215FF93C8FCA35C5DA314035DA314074B1470A3020F15F0000F17E0D83FC0491301007F
17C0021F140300FF1780023F1407EF0F00D9807B141E90260073F85B00FC01F1147C2778
01E0FC13F03B3E07C07E07E06CB4486CB45A270FFE000F90C7FCD801F8EB03F838357CB3
43>120 D<EB0FE0D93FF815E0496CEC03F8D9F07E14073801E07F48486C140FD807806D
14F0EA0F00000E137F001E161F001C17E0123C003813FF92C7123F007817C0EA70015C00
F0167F0103168000005B13074A14FF1800130F5C5E011F5D5CA21603013F5D5CA2160701
7F5D5CA2160F5FA3161F5F163F013F147FA26E495A011F13036D6C5A903807F81F903A03
FFFE7F80010013F8EC1FE091C712FF94C7FCA25D5EA2D807E0495A487E001F4A5A123F4B
5A4B5A5E49495A018049C8FC003CC712FE4A5A6C495A6CEB0FF09038E03FC00003B5C9FC
C613FCEB3FE0354C7DB339>I<DA07C0EB01C0DA3FF01303DA7FFC148049486C1307496D
EB0F0049EC801E5F49ECE07C903A1FC03FFFF8DA00075B013E01005B013CEC01C0013814
034C5A90C848C7FC161E5E5E5E4B5A4B5AED0F80031EC8FC5D5D5D4A5A4A5A4A5A021FC9
FC143C5C5C495A494814184948143849C8FC011E15784915704915F0494A5A4848140326
03FFE0495A02FC131F489039FF80FF80D80F8090B5C7FC48487E001E6D5B486D5B486D13
F000706D5B00F00101138048D9007EC8FC32357BB336>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
515 2723 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  [ 111.95279 83.25084 111.95279 -59.01286 23.7491 -87.4656 23.7491 54.7981  /Lineto /lineto load def false Polygon  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.50565 3.0 Arrow  EndArrow  } def [ 85.20714 91.78674 23.7491 69.59364  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.50565 3.0 Arrow  EndArrow  } def [ 4.40144 30.32872 4.40144 -68.11752  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
1261 1969 a Fi(x)541 2423 y(t)515 2723 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.50565 3.0 Arrow  EndArrow  } def [ 134.14589 -96.00153 63.58278 -36.25058  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 1683 3599 a(z)p 0.8 0.8 1 TeXcolorrgb
0 TeXcolorgray 515 2723 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 95.45015 7.56644 61.87569 40.00298 41.95885 -9.50493  /Lineto /lineto load def false Line  gsave 0.8 0.8 1  setrgbcolor fill grestore gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
1 0.2 0.2 TeXcolorrgb 0 TeXcolorgray 0.8 0.8 1 TeXcolorrgb
0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 41.95885 -8.36702 56.41966 -36.81976 97.15724 -21.53362 94.88097 8.1356  false OpenBezier  gsave 0.8 0.8 1  setrgbcolor fill grestore gsave 1.13791 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial
1 0.2 0.2 TeXcolorrgb 0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56917 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 50.49475 -18.61002 61.87569 39.4338  /Lineto /lineto load def false Line  gsave 0.56917 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial 1 0.2 0.2 TeXcolorrgb 0 TeXcolorgray @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.56917 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 60.16858 -22.59338 61.87569 39.4338  /Lineto /lineto load def false Line  gsave 0.56917 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial 1 0.2 0.2 TeXcolorrgb 0 TeXcolorgray
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.56917 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 74.39496 -22.02422 61.87569 39.4338  /Lineto /lineto load def false Line  gsave 0.56917 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial 1 0.2 0.2 TeXcolorrgb
0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56917 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 87.48341 -13.4883 61.87569 39.4338  /Lineto /lineto load def false Line  gsave 0.56917 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end
 @endspecial
1 0.2 0.2 TeXcolorrgb 0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56917 SLW 1 0.2 0.2  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def [ 93.74304 -2.67612 61.87569 39.4338  /Lineto /lineto load def false Line  gsave 0.56917 SLW 1 0.2 0.2  setrgbcolor 0 setlinecap stroke  grestore end

@endspecial 1340 2764 a(A)754 2929 y(A)1058 2835 y(B)515
2723 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85355 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 111.3836 13.82608 24.31828 -14.05748  /Lineto /lineto load def false Line  gsave 0.85355 SLW 0  setgray 2.84544 0 0 add DotLine  grestore end
 @endspecial 1081 2381
a Fh(@)5 b(L)1187 2350 y Fg(+)1241 2381 y Ff(\(\006\))727
2439 y Fh(@)g(L)833 2409 y Fg(+)887 2439 y Ff(\(\006\))1565
2485 y Fe(L)1661 2433 y Fd(+)1740 2485 y Fc(\(\006\))39
b(:)h Fe(Lig)5 b(ht)p Fc(-)p Fe(sheet)515 2723 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 74.96413 7.56644 116.5049 31.46707  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 150.64853 -41.94104 88.05215 -15.1954  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
1799 3117 a Fc(\006)40 b(=)g Fe(\015)2151 3138 y Fb(A)2268
3117 y Fc(:)g Fe(M)15 b(inimal)45 b Fa(surfac)-7 b(e)1615
3396 y Fi(B)6 b(ul)s(k)42 b(AdS)723 3261 y(B)6 b(oundar)s(y)515
2723 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 95.45015 8.70479 41.95885 -8.36702  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial Black 0
TeXcolorgray Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

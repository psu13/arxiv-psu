%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 56 633 312 705 
%%Creator: CorelDRAW
%%Title: 
%%CreationDate: Mon Mar 10 16:03:59 1997
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness true def
/AutoSteps 0 def
/CMYKMarks false def
/UseLevel2 false def
%Color profile: Disabled
%%BeginResource: procset wCorel6Dict 6.0 0
% Copyright (c)1992-96 Corel Corporation
% All rights reserved.     v6.0 r1.1
/wCorel6Dict 300 dict def wCorel6Dict begin/bd{bind def}bind def/ld{load def}
bd/xd{exch def}bd/_ null def/rp{{pop}repeat}bd/@cp/closepath ld/@gs/gsave ld
/@gr/grestore ld/@np/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd
/@rs{$sv restore}bd/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp
/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr
/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1 roll
pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5 0
def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}ifelse
/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def
/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1
def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def
/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/$ffpnt
true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known{end}if}bd AutoFlatness
{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/SetCmyk_5/setcmykcolor ld}{/SetCmyk_5{
cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk/currentcmykcolor
ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{
/$op xd}bd}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/@trp{exch pop 5 1 roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0
4 $ink_5 sub index exch pop 5 1 roll pop pop pop pop SepsColor true eq{$ink_5 3
gt{1 sub neg SetGry}{0 0 0 4 $ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}
ifelse}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array
astore}bd}ifelse/setcustomcolor where{pop}{/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}
ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type
/booleantype eq{setoverprint}{1 eq setoverprint}ifelse dup _ eq{pop
setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse SepMode_5
0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd pop/dataaq xd{dataaq
ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index
get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}bd
}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/@pf{@gs $ctm
setmatrix $pm concat @stb eoclip Bburx Bbury $pm itransform/$tury xd/$turx xd
Bbllx Bblly $pm itransform/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei
$tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{eofill}if}{$t $c $m $y
$k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1
false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt
$hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub
/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add
/$tly xd $psx 0 eq{@tv}{@th}ifelse}if @gr @np/$bkg false def}bd/@dlt_hsb{$fco
nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub
div/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg
dup 0 eq{pop $frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}
if dup $frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub
div/kdh2 xd}bd/@dlt_cmyk{$fmp 50 eq{sub neg nff dup 1 gt{1 sub}if div/$dk xd
sub neg nff dup 1 gt{1 sub}if div/$dy xd sub neg nff dup 1 gt{1 sub}if div/$dm
xd sub neg nff dup 1 gt{1 sub}if div/$dc xd sub neg nff dup 1 gt{1 sub}if div
/$dt xd}{$fco nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/$dk xd
nff $fco sub div/$dk2 xd sub neg 2 div dup $fco div/$dy xd nff $fco sub div
/$dy2 xd sub neg 2 div dup $fco div/$dm xd nff $fco sub div/$dm2 xd sub neg 2
div dup $fco div/$dc xd nff $fco sub div/$dc2 xd sub neg 2 div dup $fco div
/$dt xd nff $fco sub div/$dt2 xd}ifelse}bd/@dlt{$fse $fss sub dup/nff xd $fmp
mul $fmp add 100 div round cvi dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1
eq exch 2 eq or{$frt dup $frc $frm $fry $frk @tc_5 4 copy cmyk2rgb rgb2hsb 3
copy/myb xd/mys xd/myh xd $tot $toc $tom $toy $tok @tc_5 cmyk2rgb rgb2hsb 3 1
roll 4 1 roll 5 1 roll @dlt_hsb}{$frt dup $frc $frm $fry $frk @tc_5 5 copy $tot
dup $toc $tom $toy $tok @tc_5 5 1 roll 6 1 roll 7 1 roll 8 1 roll 9 1 roll
@dlt_cmyk}ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop
pop pop pop myh mys myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3
1 roll}{kdb2 add 3 1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy
/myb xd/mys xd/myh xd hsb2rgb rgb2cmyk}{$fi $fco lt $fmp 50 eq or{$dk add 5 1
roll $dy add 5 1 roll $dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}{$dk2
add 5 1 roll $dy2 add 5 1 roll $dm2 add 5 1 roll $dc2 add 5 1 roll $dt2 add 5 1
roll}ifelse}ifelse}bd/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode_5 0 ne
{$frn findcmykcustomcolor exch setcustomcolor}{pop pop pop pop $frc $frm $fry
$frk $frn findcmykcustomcolor exch setcustomcolor}ifelse}ifelse}bd/@ftl{1 index
4 index sub dup $pad mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub
/$hei xd pop Tl @dlt $fss 0 eq{ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp
$ffpnt{fill}{@np}ifelse}if $fss $wid mul $pdw add 0 Tl nff{ffcol n 0 0 m 0 $hei
l $wid $hei l $wid 0 l @cp $ffpnt{fill}{@np}ifelse $wid 0 Tl @ffnxt}repeat 5 rp
$tot dup $toc $tom $toy $tok @tc_5 ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l
@cp $ffpnt{fill}{@np}ifelse 5 rp}bd/@ftrs{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl $fan rotate
pop pop pop pop @dlt $fss 0 eq{ffcol $fty 3 eq{$hei dup neg dup m 2 mul @sqr}{
0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse}if 1.0 $pad 2 mul sub
dup scale $hei $fss $wid mul sub/$hei xd nff{ffcol $fty 3 eq{n $hei dup neg dup
m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse/$hei
$hei $wid sub def @ffnxt}repeat 5 rp}bd/@ftc{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl pop pop pop
pop @dlt $fss 0 eq{ffcol $ffpnt{fill}{@np}ifelse}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{ffcol n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
$ffpnt{fill}{@np}ifelse 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add
arc $ffpnt{fill}{@np}ifelse/$sang $eang def/$eang $eang $dang add def @ffnxt}
repeat 5 rp}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul
exch dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst
def/$adj 1 def/$fss 0 def $o 1 eq setoverprint AutoSteps 0 gt{@fstAdjust}if 1 1
$fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul 5 getinterval aload pop pop
/$frk xd/$fry xd/$frm xd/$frc xd/$frn _ def/$frt 1 def $fsa exch 5 mul 5
getinterval aload pop $adj mul cvi $fss add/$fse xd/$tok xd/$toy xd/$tom xd
/$toc xd/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload pop pop
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd $fsa exch 7 mul 7 getinterval
aload pop $adj mul cvi $fss add/$fse xd/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd
/$toc xd}ifelse $fsit 0 eq SepMode_5 0 eq or dup not CurrentInkName_5 $frn eq
and or{@sv $ctm setmatrix eoclip Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{1
index 3 index m 2 copy l 3 index 1 index l 3 index 3 index l @cp $fty dup 1 eq
exch 3 eq or{@ftrs}{pop pop pop pop $fan rotate pathbbox @ftl}ifelse}ifelse @rs
/$fss $fse def}{1 0 0 0 0 _ $o @scc_5{fill}if}ifelse}for @np/$fst old$fst def}
bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or $ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y
$k $n $o @scc_5 pop $ctm setmatrix 72 1000 div dup matrix scale dup concat dup
Bburx exch Bbury exch itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd
Bbllx exch Bblly exch itransform floor cvi/Bblly xd floor cvi/Bbllx xd $Prm
aload pop $Psn load exec}{1 SetGry eofill}ifelse @rs @np}bd/F{matrix
currentmatrix $sdf{$scf $sca $scp @ss}if $fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3
eq{@Pf}{$t $c $m $y $k $n $o @scc_5{eofill}{@np}ifelse}ifelse}ifelse}ifelse
$sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array astore
exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm $ctm
currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{
/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd/@P
{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/@k{/$fil 2 def/$fmp xd
/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst
xd/$fsc xd/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$fmp xd/$roy xd/$rox xd/$pad
xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst xd/$fsc xd/$fsa xd
/$fsit 1 def}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii
6 index 1 ne{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5
/$frg xd}{/$frg false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np
/$ury xd/$urx xd/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8
div ceiling cvi string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl
$urx $llx sub $ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid
$hei abs $bts 1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa
$dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs
@ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx $llx $lly Tl $urx $llx
sub $ury $lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]/@cc load false $ncl ColorImage $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd
/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter def currentdict end image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/z{exch findfont
exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll/FontType 3 def
/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{Encoding exch
/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}put/Metrics 256
dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup/$char exch/Encoding
get 3 index get def dup/Metrics get $char get aload pop setcachedevice begin
Encoding exch get CharStrings exch get end exec}def end definefont pop}bd
/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3 1 roll put
CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup maxlength 2
add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}ifelse}forall
pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch put dup
/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type eq{exch
pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict dup
/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3 index
length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3 -1
roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop}bd
/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true charpath
$ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}forall}bd
/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq{/@@txt/@pf
ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld @ftx}{$t $c $m
$y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/@B{@gs S @gr F}
bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}{
CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/@smc{CMYKMarks{0 exch eq{1 1 1 1 1 _ 0 @scc_5
pop}{1 0 0 0 0 _ 0 @scc_5 pop}ifelse}{SetGry}ifelse}bd/@gmc{CMYKMarks{GetCmyk
pop pop pop 1 eq{0}{1}ifelse}{GetGry}ifelse}bd/@sqr{dup 0 rl dup 0 exch rl neg
0 rl @cp}bd/corelsym{@gs @np Tl -90 rotate 7{45 rotate -.75 2 m 1.5 @sqr fill}
repeat @gr}bd/@reg_cor{@gs @np Tl -6 -6 m 12 @sqr @gs 1 @gmc sub @smc fill @gr
4{90 rotate 0 4 m 0 4 rl}repeat stroke 0 0 corelsym @gr}bd/@reg_std{@gs @np Tl
.3 w 0 0 5 0 360 arc @cp @gs 1 @gmc sub @smc fill @gr 4{90 rotate 0 0 m 0 8 rl
}repeat stroke @gr}bd/@reg_inv{@gs @np Tl .3 w 0 0 5 0 360 arc @cp @gs 1 @gmc
sub @smc fill @gr 4{90 rotate 0 0 m 0 8 rl}repeat stroke 0 0 m 0 0 5 90 180 arc
@cp 0 0 5 270 360 arc @cp fill @gr}bd/@reg_sqr{@gs @np Tl .3 w -7 -7 m 14 @sqr
fill @gs 1 @gmc sub @smc 0 0 5 0 360 arc @cp save fill restore 4{90 rotate 0 0
m 0 8 rl}repeat stroke @gr 4{90 rotate 0 0 m 0 5 rl}repeat stroke @gr}bd
/@reg_lng{@gs @np 0 eq{/$Xlen 16 def/$Ylen 8 def}{/$Xlen 8 def/$Ylen 16 def}
ifelse Tl .3 w 0 0 5 0 360 arc @cp @gs 1 @gmc sub @smc fill @gr 90 rotate 0 0 m
0 $Xlen rl 90 rotate 0 0 m 0 $Ylen rl 90 rotate 0 0 m 0 $Xlen rl 90 rotate 0 0
m 0 $Ylen rl stroke @gr}bd/@setdcol{0 $dcol eq{0 exch 1 exch sub 0 0 0 _ 0
@scc_5 pop}{1 $dcol eq{0 exch 0 exch 1 exch sub 0 0 _ 0 @scc_5 pop}{2 $dcol eq
{0 exch 0 exch 0 exch 1 exch sub 0 _ 0 @scc_5 pop}{SetGry}ifelse}ifelse}ifelse
}bd/$corelmeter[1 .95 .75 .50 .25 .05 0]def/@colormeter{@gs @np 0 @setdcol 0.3
w/Courier findfont 5 scalefont setfont/yy xd/xx xd 0 1 6{dup xx 20 sub yy m 20
@sqr @gs $corelmeter exch get dup @setdcol fill @gr stroke xx 18 sub yy 2 add m
exch dup 3 ge{1 SetGry}{0 @setdcol}ifelse 3 eq{pop}{100 mul 100 exch sub cvi 20
string cvs show}ifelse/yy yy 20 add def}for @gr}bd/@calbar{@gs Tl @gs @np 0 0 m
@gs 20 @sqr 1 1 0 0 0 _ 0 @scc_5 pop fill @gr 20 0 Tl 0 0 m @gs 20 @sqr 1 1 0 1
0 _ 0 @scc_5 pop fill @gr 20 0 Tl 0 0 m @gs 20 @sqr 1 0 0 1 0 _ 0 @scc_5 pop
fill @gr 20 0 Tl 0 0 m @gs 20 @sqr 1 0 1 1 0 _ 0 @scc_5 pop fill @gr 20 0 Tl 0
0 m @gs 20 @sqr 1 0 1 0 0 _ 0 @scc_5 pop fill @gr 20 0 Tl 0 0 m @gs 20 @sqr 1 1
1 0 0 _ 0 @scc_5 pop fill @gr 20 0 Tl 0 0 m @gs 20 @sqr 1 1 1 1 0 _ 0 @scc_5
pop fill @gr @gr @np -84 0 Tl @gs 0 0 m 20 @sqr clip 1 1 0 0 0 _ 0 @scc_5 pop
@gain @gr 20 0 Tl @gs 0 0 m 20 @sqr clip 1 0 1 0 0 _ 0 @scc_5 pop @gain @gr 20
0 Tl @gs 0 0 m 20 @sqr clip 1 0 0 1 0 _ 0 @scc_5 pop @gain @gr 20 0 Tl @gs 0 0
m 20 @sqr clip 1 0 0 0 1 _ 0 @scc_5 pop @gain @gr @gr}bd/@gain{10 10 Tl @np 0 0
m 0 10 360{0 0 15 4 -1 roll dup 5 add arc @cp}for fill}bd/@crop{@gs 10 div
/$croplen xd .3 w 0 @smc Tl rotate 0 0 m 0 $croplen neg rl stroke @gr}bd
/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type/arraytype eq{{}forall}if}bd
/@BMP{/@cc xd 12 index 1 gt UseLevel2 true eq and{7 -2 roll pop pop @I_2}{11
index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/@BeginEPS{$ngx 0 SetGry 0 J 0 j 1
w[]0 d 10 M false setoverprint @np/EPSDict 200 dict def EPSDict begin @sv
SepMode_5 0 ne{/colorimage{@gs/sepdict 50 dict def sepdict begin[{1 exch sub}
/exec cvx currenttransfer/exec cvx]cvx settransfer 3 eq/$rgb xd{$rgb{/daq0 xd
/daq1 xd/daq2 xd/daq_rgb load}{/daq0 xd/daq1 xd/daq2 xd/daq3 xd/daq_cmyk load}
ifelse}{/daq0 xd/daq_one load}ifelse 2 index 8 eq/8bit xd $ink_5 dup 0 lt exch
3 gt or{}{image}ifelse end @gr}bd/2cmyk{3{255 exch sub 3 1 roll}repeat 3 copy
@MN @MN 3{dup 5 -1 roll sub neg exch}repeat}bd/daq_rgb{/i 0 def/daq2 load exec
/daq1 load exec/daq0 load exec dup dup length 0 exch getinterval/$data xd{8bit
{1 index i get 3 index i get 2cmyk 4 $ink_5 neg roll pop pop pop}{pop 0}ifelse
$data i 3 -1 roll put/i i 1 add def}forall pop pop $data}bd/daq_cmyk{/daq3 load
exec/daq2 load exec/daq1 load exec/daq0 load exec 4 $ink_5 neg roll pop pop pop
}bd/daq_one{/$in 0 def/$out 0 def/daq0 load exec dup dup length $rgb{3}{4}
ifelse idiv 0 exch getinterval/$data xd $data{pop 8bit{$rgb{0 index $in 2 add
get 1 index $in 1 add get 2 index $in get 2cmyk}{0 index $in get 1 index $in 1
add get 2 index $in 2 add get 3 index $in 3 add get}ifelse 4 $ink_5 neg roll
pop pop pop}{0}ifelse $data $out 3 -1 roll put/$in $in $rgb{3}{4}ifelse add def
/$out $out 1 add def}forall pop $data}bd}if}bd/@EndEPS{@rs end}bd end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel6Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
58.55981 672.30510 149.13468 697.42375 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.01600 2.01600 0.00000 @w
58.55981 697.42375 m
149.13468 697.42375 L
149.13468 672.30510 L
58.55981 672.30510 L
58.55981 697.42375 L
@c
S

@rax 88.55036 680.42296 119.14384 689.30561 @E
[0.00028346 0.00000000 0.00000000 0.00028346 88.55035897 680.57090424] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 42333.00000 z
%CHAR: 0 0 (C) @t
24886 10625 m
28894 9611 L
28054 6318 26542 3804 24358 2076 c
22174 348 19505 -522 16349 -522 c
13085 -522 10421 144 8381 1470 c
6336 2802 4776 4728 3708 7247 c
2640 9767 2106 12485 2106 15377 c
2106 18533 2712 21286 3912 23632 c
5118 25984 6840 27772 9059 28984 c
11285 30202 13739 30814 16409 30814 c
19439 30814 21994 30040 24058 28504 c
26122 26962 27568 24784 28378 21988 C
24430 21059 L
23728 23266 22702 24874 21370 25876 c
20039 26884 18353 27388 16325 27388 c
13997 27388 12047 26830 10487 25714 c
8927 24598 7823 23092 7193 21214 c
6558 19337 6240 17393 6240 15395 c
6240 12821 6618 10571 7367 8651 c
8117 6732 9287 5286 10871 4338 c
12455 3390 14171 2910 16019 2910 c
18263 2910 20165 3558 21718 4854 c
23278 6150 24334 8075 24886 10619 c
24886 10625 L
@c
F
%CHAR: 30576 0 (l) @t
33282 0 m
33282 30298 L
37002 30298 L
37002 0 L
33282 0 L
@c
F
%CHAR: 39984 0 (i) @t
42798 26026 m
42792 30298 L
46512 30298 L
46512 26020 L
42798 26026 L
@c
42798 0 m
42792 21946 L
46512 21946 L
46512 0 L
42798 0 L
@c
F
%CHAR: 49392 0 (e) @t
67211 7067 m
71050 6594 L
70451 4350 69323 2598 67685 1362 c
66047 126 63947 -498 61397 -498 c
58187 -498 55638 492 53760 2466 c
51882 4446 50940 7223 50940 10787 c
50940 14477 51894 17345 53790 19385 c
55692 21424 58163 22444 61193 22444 c
64127 22444 66527 21442 68387 19451 c
70247 17453 71176 14639 71176 11015 c
71176 10799 71164 10463 71152 10019 C
54786 10019 L
54918 7613 55602 5766 56825 4488 c
58049 3204 59585 2562 61421 2562 c
62783 2562 63953 2922 64913 3636 c
65873 4350 66641 5496 67205 7067 C
67211 7067 L
@c
54996 13085 m
67247 13079 L
67085 14927 66611 16313 65843 17237 c
64661 18665 63119 19385 61235 19385 c
59525 19385 58085 18809 56921 17669 c
55758 16529 55110 14993 54990 13079 C
54996 13085 L
@c
F
%CHAR: 72936 0 (n) @t
75726 0 m
75726 21946 L
79074 21946 L
79074 18827 L
80681 21238 83015 22444 86057 22444 c
87377 22444 88601 22204 89705 21730 c
90815 21256 91649 20633 92195 19865 c
92747 19097 93137 18173 93353 17111 c
93491 16427 93563 15215 93563 13493 c
93563 0 L
89843 0 L
89843 13349 l
89843 14861 89699 16001 89411 16751 c
89123 17501 88601 18107 87869 18551 c
87131 18995 86261 19223 85271 19223 c
83687 19223 82319 18719 81173 17717 c
80021 16709 79446 14795 79446 11987 c
79446 0 L
75726 0 L
@c
F
%CHAR: 96480 0 (t) @t
107393 3330 m
107927 36 L
106883 -180 105941 -294 105119 -294 c
103769 -294 102720 -78 101976 348 c
101232 774 100704 1338 100404 2034 c
100104 2730 99948 4194 99948 6426 c
99948 19055 L
97224 19055 L
97224 21946 L
99948 21946 L
99948 27388 L
103649 29620 L
103649 21946 L
107393 21946 L
107393 19055 L
103649 19055 L
103649 6222 l
103649 5160 103715 4476 103841 4176 c
103973 3876 104189 3630 104483 3450 c
104783 3270 105209 3180 105755 3180 c
106169 3180 106721 3228 107393 3324 C
107393 3330 L
@c
F
T
@rax %Note: Object
220.29846 672.30510 310.87332 697.42375 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.01600 2.01600 0.00000 @w
220.29846 697.42375 m
310.87332 697.42375 L
310.87332 672.30510 L
220.29846 672.30510 L
220.29846 697.42375 L
@c
S

@rax 247.83137 680.42296 283.34013 689.30561 @E
[0.00028346 0.00000000 0.00000000 0.00028346 247.83136101 680.57090424] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 42333.00000 z
%CHAR: 0 0 (S) @t
1902 9737 m
5682 10061 L
5862 8549 6282 7301 6930 6336 c
7583 5364 8603 4578 9977 3978 c
11357 3378 12911 3078 14633 3078 c
16157 3078 17513 3306 18683 3756 c
19853 4212 20729 4836 21298 5628 c
21868 6420 22156 7289 22156 8225 c
22156 9173 21880 10001 21328 10709 c
20777 11417 19865 12023 18599 12503 c
17789 12815 15989 13313 13205 13979 c
10421 14645 8471 15281 7355 15875 c
5910 16631 4830 17573 4122 18695 c
3414 19817 3054 21077 3054 22468 c
3054 23992 3492 25426 4356 26752 c
5226 28084 6498 29098 8159 29782 c
9827 30466 11681 30814 13721 30814 c
15965 30814 17951 30454 19667 29734 c
21382 29014 22702 27946 23620 26542 c
24544 25138 25042 23536 25114 21760 C
21268 21472 L
21065 23386 20357 24838 19169 25810 c
17981 26788 16217 27280 13889 27280 c
11465 27280 9689 26836 8585 25948 c
7481 25060 6924 23986 6924 22732 c
6924 21646 7319 20747 8099 20045 c
8867 19349 10889 18623 14147 17891 c
17405 17153 19643 16505 20855 15953 c
22618 15143 23920 14111 24760 12863 c
25600 11615 26020 10175 26020 8555 c
26020 6948 25558 5424 24634 4002 c
23710 2574 22384 1464 20657 672 c
18929 -120 16979 -522 14819 -522 c
12077 -522 9773 -120 7925 678 c
6072 1476 4614 2682 3564 4284 c
2508 5892 1950 7709 1896 9731 C
1902 9737 L
@c
F
%CHAR: 28236 0 (e) @t
46055 7067 m
49894 6594 L
49295 4350 48167 2598 46529 1362 c
44891 126 42791 -498 40241 -498 c
37031 -498 34482 492 32604 2466 c
30726 4446 29784 7223 29784 10787 c
29784 14477 30738 17345 32634 19385 c
34536 21424 37007 22444 40037 22444 c
42971 22444 45371 21442 47231 19451 c
49091 17453 50020 14639 50020 11015 c
50020 10799 50008 10463 49996 10019 C
33630 10019 L
33762 7613 34446 5766 35669 4488 c
36893 3204 38429 2562 40265 2562 c
41627 2562 42797 2922 43757 3636 c
44717 4350 45485 5496 46049 7067 C
46055 7067 L
@c
33840 13085 m
46091 13079 L
45929 14927 45455 16313 44687 17237 c
43505 18665 41963 19385 40079 19385 c
38369 19385 36929 18809 35765 17669 c
34602 16529 33954 14993 33834 13079 C
33840 13085 L
@c
F
%CHAR: 51780 0 (r) @t
54528 0 m
54528 21946 L
57876 21946 L
57876 18623 L
58728 20177 59519 21208 60239 21700 c
60959 22192 61763 22444 62627 22444 c
63881 22444 65159 22042 66455 21244 C
65171 17795 L
64265 18329 63353 18599 62441 18599 c
61631 18599 60899 18353 60251 17867 c
59603 17381 59141 16697 58865 15833 c
58458 14513 58248 13061 58248 11489 c
58248 0 L
54528 0 L
@c
F
%CHAR: 65880 0 (v) @t
74765 0 m
66414 21946 L
70344 21946 L
75053 8801 l
75563 7385 76037 5904 76463 4380 C
76787 5532 77255 6930 77843 8555 c
82721 21946 L
86549 21946 L
78239 0 L
74765 0 L
@c
F
%CHAR: 87048 0 (e) @t
104867 7067 m
108706 6594 L
108107 4350 106979 2598 105341 1362 c
103703 126 101603 -498 99053 -498 c
95843 -498 93294 492 91416 2466 c
89538 4446 88596 7223 88596 10787 c
88596 14477 89550 17345 91446 19385 c
93348 21424 95819 22444 98849 22444 c
101783 22444 104183 21442 106043 19451 c
107903 17453 108832 14639 108832 11015 c
108832 10799 108820 10463 108808 10019 C
92442 10019 L
92574 7613 93258 5766 94481 4488 c
95705 3204 97241 2562 99077 2562 c
100439 2562 101609 2922 102569 3636 c
103529 4350 104297 5496 104861 7067 C
104867 7067 L
@c
92652 13085 m
104903 13079 L
104741 14927 104267 16313 103499 17237 c
102317 18665 100775 19385 98891 19385 c
97181 19385 95741 18809 94577 17669 c
93414 16529 92766 14993 92646 13079 C
92652 13085 L
@c
F
%CHAR: 110592 0 (r) @t
113340 0 m
113340 21946 L
116688 21946 L
116688 18623 L
117540 20177 118331 21208 119051 21700 c
119771 22192 120575 22444 121439 22444 c
122693 22444 123971 22042 125267 21244 C
123983 17795 L
123077 18329 122165 18599 121253 18599 c
120443 18599 119711 18353 119063 17867 c
118415 17381 117953 16697 117677 15833 c
117270 14513 117060 13061 117060 11489 c
117060 0 L
113340 0 L
@c
F
T
@rax %Note: Object
149.79118 690.81307 219.36331 690.81420 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.01600 2.01600 0.00000 @w
149.79118 690.81364 m
207.66671 690.81364 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.01600 2.01600 0 @w
219.36331 690.81364 m
207.02126 696.98268 L
207.02126 684.64063 L
219.36331 690.81364 L
f
@J

@rax %Note: Object
151.07556 679.57569 220.01953 679.57682 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.01600 2.01600 0.00000 @w
220.01953 679.57625 m
162.77216 679.57625 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.01600 2.01600 0 @w
151.07556 679.57625 m
163.41761 673.40721 L
163.41761 685.74926 L
151.07556 679.57625 L
f
@J

@rax 168.82498 695.69887 191.70539 704.44687 @E
[0.00028346 0.00000000 0.00000000 0.00028346 168.82497020 698.08476187] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 42333.00000 z
%CHAR: 0 0 (r) @t
2748 0 m
2748 21946 L
6096 21946 L
6096 18623 L
6948 20177 7739 21208 8459 21700 c
9179 22192 9983 22444 10847 22444 c
12101 22444 13379 22042 14675 21244 C
13391 17795 L
12485 18329 11573 18599 10661 18599 c
9851 18599 9119 18353 8471 17867 c
7823 17381 7361 16697 7085 15833 c
6678 14513 6468 13061 6468 11489 c
6468 0 L
2748 0 L
@c
F
%CHAR: 14100 0 (e) @t
31919 7067 m
35758 6594 L
35159 4350 34031 2598 32393 1362 c
30755 126 28655 -498 26105 -498 c
22895 -498 20346 492 18468 2466 c
16590 4446 15648 7223 15648 10787 c
15648 14477 16602 17345 18498 19385 c
20400 21424 22871 22444 25901 22444 c
28835 22444 31235 21442 33095 19451 c
34955 17453 35884 14639 35884 11015 c
35884 10799 35872 10463 35860 10019 C
19494 10019 L
19626 7613 20310 5766 21533 4488 c
22757 3204 24293 2562 26129 2562 c
27491 2562 28661 2922 29621 3636 c
30581 4350 31349 5496 31913 7067 C
31919 7067 L
@c
19704 13085 m
31955 13079 L
31793 14927 31319 16313 30551 17237 c
29369 18665 27827 19385 25943 19385 c
24233 19385 22793 18809 21629 17669 c
20466 16529 19818 14993 19698 13079 C
19704 13085 L
@c
F
%CHAR: 37644 0 (q) @t
54431 -8417 m
54425 2334 L
53849 1524 53033 846 51995 312 c
50957 -228 49847 -498 48677 -498 c
46073 -498 43830 546 41952 2622 c
40074 4698 39132 7553 39132 11177 c
39132 13385 39516 15365 40278 17111 c
41040 18863 42150 20189 43602 21089 c
45053 21988 46655 22444 48389 22444 c
51101 22444 53243 21298 54797 19013 C
54797 21946 L
58145 21946 L
58145 -8417 L
54431 -8417 L
@c
42954 11039 m
42954 8213 43548 6090 44729 4680 c
45917 3270 47339 2562 48989 2562 c
50573 2562 51941 3234 53081 4578 c
54221 5922 54797 7967 54797 10703 c
54797 13625 54191 15827 52991 17297 c
51785 18773 50363 19511 48743 19511 c
47135 19511 45761 18821 44640 17453 c
43518 16085 42954 13937 42954 11033 C
42954 11039 L
@c
F
%CHAR: 61188 0 (s) @t
62490 6552 m
66168 7127 L
66372 5652 66954 4518 67896 3738 c
68837 2958 70157 2562 71849 2562 c
73559 2562 74831 2910 75653 3606 c
76481 4302 76895 5118 76895 6054 c
76895 6894 76529 7559 75797 8039 c
75293 8363 74021 8789 71993 9299 c
69269 9983 67374 10583 66324 11087 c
65268 11591 64464 12287 63924 13175 c
63384 14063 63108 15047 63108 16121 c
63108 17093 63336 18005 63780 18833 c
64224 19667 64842 20363 65610 20915 c
66186 21340 66978 21706 67974 22000 c
68969 22294 70049 22444 71189 22444 c
72911 22444 74429 22192 75725 21700 c
77027 21208 77993 20531 78611 19685 c
79229 18839 79661 17699 79895 16283 C
76253 15791 L
76091 16919 75611 17801 74819 18431 c
74027 19067 72905 19385 71459 19385 c
69755 19385 68531 19103 67800 18539 c
67068 17975 66702 17309 66702 16553 c
66702 16073 66858 15635 67158 15251 c
67458 14855 67938 14519 68585 14261 c
68957 14123 70055 13799 71873 13307 c
74501 12611 76343 12029 77381 11585 c
78419 11141 79241 10481 79829 9629 c
80417 8777 80717 7709 80717 6444 c
80717 5208 80357 4038 79637 2946 c
78917 1854 77867 1002 76505 402 c
75137 -198 73589 -498 71873 -498 c
69023 -498 66846 96 65352 1278 c
63858 2460 62898 4224 62490 6552 C
@c
F
T
@rax 170.13770 664.63087 198.84841 673.37887 @E
[0.00028346 0.00000000 0.00000000 0.00028346 170.13769456 667.01676300] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 42333.00000 z
%CHAR: 0 0 (r) @t
2748 0 m
2748 21946 L
6096 21946 L
6096 18623 L
6948 20177 7739 21208 8459 21700 c
9179 22192 9983 22444 10847 22444 c
12101 22444 13379 22042 14675 21244 C
13391 17795 L
12485 18329 11573 18599 10661 18599 c
9851 18599 9119 18353 8471 17867 c
7823 17381 7361 16697 7085 15833 c
6678 14513 6468 13061 6468 11489 c
6468 0 L
2748 0 L
@c
F
%CHAR: 14100 0 (e) @t
31919 7067 m
35758 6594 L
35159 4350 34031 2598 32393 1362 c
30755 126 28655 -498 26105 -498 c
22895 -498 20346 492 18468 2466 c
16590 4446 15648 7223 15648 10787 c
15648 14477 16602 17345 18498 19385 c
20400 21424 22871 22444 25901 22444 c
28835 22444 31235 21442 33095 19451 c
34955 17453 35884 14639 35884 11015 c
35884 10799 35872 10463 35860 10019 C
19494 10019 L
19626 7613 20310 5766 21533 4488 c
22757 3204 24293 2562 26129 2562 c
27491 2562 28661 2922 29621 3636 c
30581 4350 31349 5496 31913 7067 C
31919 7067 L
@c
19704 13085 m
31955 13079 L
31793 14927 31319 16313 30551 17237 c
29369 18665 27827 19385 25943 19385 c
24233 19385 22793 18809 21629 17669 c
20466 16529 19818 14993 19698 13079 C
19704 13085 L
@c
F
%CHAR: 37644 0 (s) @t
38946 6552 m
42624 7127 L
42828 5652 43410 4518 44352 3738 c
45293 2958 46613 2562 48305 2562 c
50015 2562 51287 2910 52109 3606 c
52937 4302 53351 5118 53351 6054 c
53351 6894 52985 7559 52253 8039 c
51749 8363 50477 8789 48449 9299 c
45725 9983 43830 10583 42780 11087 c
41724 11591 40920 12287 40380 13175 c
39840 14063 39564 15047 39564 16121 c
39564 17093 39792 18005 40236 18833 c
40680 19667 41298 20363 42066 20915 c
42642 21340 43434 21706 44430 22000 c
45425 22294 46505 22444 47645 22444 c
49367 22444 50885 22192 52181 21700 c
53483 21208 54449 20531 55067 19685 c
55685 18839 56117 17699 56351 16283 C
52709 15791 L
52547 16919 52067 17801 51275 18431 c
50483 19067 49361 19385 47915 19385 c
46211 19385 44987 19103 44256 18539 c
43524 17975 43158 17309 43158 16553 c
43158 16073 43314 15635 43614 15251 c
43914 14855 44394 14519 45041 14261 c
45413 14123 46511 13799 48329 13307 c
50957 12611 52799 12029 53837 11585 c
54875 11141 55697 10481 56285 9629 c
56873 8777 57173 7709 57173 6444 c
57173 5208 56813 4038 56093 2946 c
55373 1854 54323 1002 52961 402 c
51593 -198 50045 -498 48329 -498 c
45479 -498 43302 96 41808 1278 c
40314 2460 39354 4224 38946 6552 C
@c
F
%CHAR: 58812 0 (p) @t
61602 -8417 m
61602 21946 L
64992 21946 L
64992 19097 L
65784 20213 66689 21053 67697 21604 c
68705 22162 69929 22444 71357 22444 c
73229 22444 74885 21958 76313 20999 c
77747 20039 78833 18671 79559 16919 c
80290 15161 80656 13229 80656 11141 c
80656 8897 80254 6870 79451 5076 c
78647 3276 77471 1896 75935 942 c
74399 -18 72779 -498 71087 -498 c
69851 -498 68735 -234 67751 288 c
66767 810 65951 1476 65322 2268 C
65322 -8417 L
61602 -8417 L
@c
64974 10853 m
64974 8027 65544 5934 66683 4590 c
67823 3240 69215 2562 70841 2562 c
72491 2562 73907 3264 75083 4656 c
76259 6054 76853 8225 76853 11159 c
76853 13955 76277 16049 75131 17441 c
73979 18833 72599 19529 71003 19529 c
69419 19529 68015 18785 66797 17309 c
65580 15833 64968 13673 64968 10847 C
64974 10853 L
@c
F
%CHAR: 81756 0 (s) @t
83058 6552 m
86736 7127 L
86940 5652 87522 4518 88464 3738 c
89405 2958 90725 2562 92417 2562 c
94127 2562 95399 2910 96221 3606 c
97049 4302 97463 5118 97463 6054 c
97463 6894 97097 7559 96365 8039 c
95861 8363 94589 8789 92561 9299 c
89837 9983 87942 10583 86892 11087 c
85836 11591 85032 12287 84492 13175 c
83952 14063 83676 15047 83676 16121 c
83676 17093 83904 18005 84348 18833 c
84792 19667 85410 20363 86178 20915 c
86754 21340 87546 21706 88542 22000 c
89537 22294 90617 22444 91757 22444 c
93479 22444 94997 22192 96293 21700 c
97595 21208 98561 20531 99179 19685 c
99797 18839 100229 17699 100463 16283 C
96821 15791 L
96659 16919 96179 17801 95387 18431 c
94595 19067 93473 19385 92027 19385 c
90323 19385 89099 19103 88368 18539 c
87636 17975 87270 17309 87270 16553 c
87270 16073 87426 15635 87726 15251 c
88026 14855 88506 14519 89153 14261 c
89525 14123 90623 13799 92441 13307 c
95069 12611 96911 12029 97949 11585 c
98987 11141 99809 10481 100397 9629 c
100985 8777 101285 7709 101285 6444 c
101285 5208 100925 4038 100205 2946 c
99485 1854 98435 1002 97073 402 c
95705 -198 94157 -498 92441 -498 c
89591 -498 87414 96 85920 1278 c
84426 2460 83466 4224 83058 6552 C
@c
F
T
@rax 97.28419 634.54365 112.53657 643.21540 @E
[0.00028346 0.00000000 0.00000000 0.00028346 97.28418542 634.62696891] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 42333.00000 z
%CHAR: 0 0 (i) @t
2814 26026 m
2808 30298 L
6528 30298 L
6528 26020 L
2814 26026 L
@c
2814 0 m
2808 21946 L
6528 21946 L
6528 0 L
2814 0 L
@c
F
%CHAR: 9408 0 (n) @t
12198 0 m
12198 21946 L
15546 21946 L
15546 18827 L
17153 21238 19487 22444 22529 22444 c
23849 22444 25073 22204 26177 21730 c
27287 21256 28121 20633 28667 19865 c
29219 19097 29609 18173 29825 17111 c
29963 16427 30035 15215 30035 13493 c
30035 0 L
26315 0 L
26315 13349 l
26315 14861 26171 16001 25883 16751 c
25595 17501 25073 18107 24341 18551 c
23603 18995 22733 19223 21743 19223 c
20159 19223 18791 18719 17645 17717 c
16493 16709 15918 14795 15918 11987 c
15918 0 L
12198 0 L
@c
F
%CHAR: 32952 0 (i) @t
35766 26026 m
35760 30298 L
39480 30298 L
39480 26020 L
35766 26026 L
@c
35766 0 m
35760 21946 L
39480 21946 L
39480 0 L
35766 0 L
@c
F
%CHAR: 42360 0 (t) @t
53273 3330 m
53807 36 L
52763 -180 51821 -294 50999 -294 c
49649 -294 48600 -78 47856 348 c
47112 774 46584 1338 46284 2034 c
45984 2730 45828 4194 45828 6426 c
45828 19055 L
43104 19055 L
43104 21946 L
45828 21946 L
45828 27388 L
49529 29620 L
49529 21946 L
53273 21946 L
53273 19055 L
49529 19055 L
49529 6222 l
49529 5160 49595 4476 49721 4176 c
49853 3876 50069 3630 50363 3450 c
50663 3270 51089 3180 51635 3180 c
52049 3180 52601 3228 53273 3324 C
53273 3330 L
@c
F
T
@rax %Note: Object
103.19046 647.84750 103.19159 672.30510 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 2.01600 2.01600 0.00000 @w
103.19102 647.84750 m
103.19102 660.60850 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.01600 2.01600 0 @w
103.19102 672.30510 m
97.02198 659.96306 L
109.36403 659.96306 L
103.19102 672.30510 L
f
@J

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel6Dict
%%EOF
